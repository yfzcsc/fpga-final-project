;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Top : 
  module GraphReader : 
    input clock : Clock
    input reset : Reset
    output io : {flip valid_in : UInt<1>, valid_out : UInt<1>, flip flag_job : UInt<1>, flip job : {big : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_ups_end : UInt<1>}, small : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, ano_bank_id : UInt<3>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_invalid_end : UInt<10>, cnt_ups_end : UInt<1>}[4]}, flip job_type : UInt<1>, to_banks : {addrs : {addr : UInt<10>, bank_id : UInt<3>}[5]}}
    
    io.valid_out <= UInt<1>("h00") @[read.scala 21:18]
    wire _io_to_banks_WIRE : {addrs : {addr : UInt<10>, bank_id : UInt<3>}[5]} @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[0].bank_id <= UInt<3>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[0].addr <= UInt<10>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[1].bank_id <= UInt<3>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[1].addr <= UInt<10>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[2].bank_id <= UInt<3>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[2].addr <= UInt<10>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[3].bank_id <= UInt<3>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[3].addr <= UInt<10>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[4].bank_id <= UInt<3>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[4].addr <= UInt<10>("h00") @[read.scala 22:32]
    io.to_banks.addrs[0].bank_id <= _io_to_banks_WIRE.addrs[0].bank_id @[read.scala 22:17]
    io.to_banks.addrs[0].addr <= _io_to_banks_WIRE.addrs[0].addr @[read.scala 22:17]
    io.to_banks.addrs[1].bank_id <= _io_to_banks_WIRE.addrs[1].bank_id @[read.scala 22:17]
    io.to_banks.addrs[1].addr <= _io_to_banks_WIRE.addrs[1].addr @[read.scala 22:17]
    io.to_banks.addrs[2].bank_id <= _io_to_banks_WIRE.addrs[2].bank_id @[read.scala 22:17]
    io.to_banks.addrs[2].addr <= _io_to_banks_WIRE.addrs[2].addr @[read.scala 22:17]
    io.to_banks.addrs[3].bank_id <= _io_to_banks_WIRE.addrs[3].bank_id @[read.scala 22:17]
    io.to_banks.addrs[3].addr <= _io_to_banks_WIRE.addrs[3].addr @[read.scala 22:17]
    io.to_banks.addrs[4].bank_id <= _io_to_banks_WIRE.addrs[4].bank_id @[read.scala 22:17]
    io.to_banks.addrs[4].addr <= _io_to_banks_WIRE.addrs[4].addr @[read.scala 22:17]
    reg job_type : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[read.scala 24:27]
    wire _gen_WIRE : {big : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_loop : {ccnt : UInt<10>, cend : UInt<10>}, cnt_ups : {ccnt : UInt<1>, cend : UInt<1>}, cnt_maxp : {ccnt : UInt<2>, cend : UInt<2>}, y_begin_addr : UInt<10>, ic_begin_addr : UInt<10>, flag_end : UInt<1>}, small : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, ano_bank_id : UInt<3>, cnt_invalid : {ccnt : UInt<10>, cend : UInt<10>}, cnt_maxp : {ccnt : UInt<2>, cend : UInt<2>}, cnt_ups : {ccnt : UInt<1>, cend : UInt<1>}, cnt_loop : {ccnt : UInt<10>, cend : UInt<10>}, cnt_swap : {ccnt : UInt<1>, cend : UInt<1>}, y_begin_addr : UInt<10>, ic_begin_addr : UInt<10>, start : UInt<1>}[4]} @[read.scala 26:35]
    _gen_WIRE.small[0].start <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].ic_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].y_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_swap.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_swap.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_loop.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_loop.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_ups.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_ups.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_maxp.cend <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_maxp.ccnt <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_invalid.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_invalid.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].ano_bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].column_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].block_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_y.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_y.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_x.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_x.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_ic.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_ic.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].now_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].min_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].max_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].start <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].ic_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].y_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_swap.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_swap.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_loop.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_loop.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_ups.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_ups.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_maxp.cend <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_maxp.ccnt <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_invalid.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_invalid.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].ano_bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].column_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].block_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_y.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_y.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_x.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_x.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_ic.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_ic.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].now_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].min_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].max_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].start <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].ic_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].y_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_swap.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_swap.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_loop.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_loop.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_ups.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_ups.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_maxp.cend <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_maxp.ccnt <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_invalid.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_invalid.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].ano_bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].column_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].block_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_y.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_y.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_x.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_x.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_ic.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_ic.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].now_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].min_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].max_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].start <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].ic_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].y_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_swap.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_swap.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_loop.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_loop.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_ups.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_ups.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_maxp.cend <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_maxp.ccnt <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_invalid.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_invalid.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].ano_bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].column_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].block_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_y.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_y.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_x.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_x.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_ic.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_ic.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].now_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].min_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].max_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.flag_end <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.big.ic_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.y_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_maxp.cend <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_maxp.ccnt <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_ups.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_ups.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_loop.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_loop.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.column_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.block_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_y.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_y.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_x.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_x.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_ic.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_ic.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.now_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.min_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.max_addr <= UInt<10>("h00") @[read.scala 26:35]
    reg gen : {big : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_loop : {ccnt : UInt<10>, cend : UInt<10>}, cnt_ups : {ccnt : UInt<1>, cend : UInt<1>}, cnt_maxp : {ccnt : UInt<2>, cend : UInt<2>}, y_begin_addr : UInt<10>, ic_begin_addr : UInt<10>, flag_end : UInt<1>}, small : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, ano_bank_id : UInt<3>, cnt_invalid : {ccnt : UInt<10>, cend : UInt<10>}, cnt_maxp : {ccnt : UInt<2>, cend : UInt<2>}, cnt_ups : {ccnt : UInt<1>, cend : UInt<1>}, cnt_loop : {ccnt : UInt<10>, cend : UInt<10>}, cnt_swap : {ccnt : UInt<1>, cend : UInt<1>}, y_begin_addr : UInt<10>, ic_begin_addr : UInt<10>, start : UInt<1>}[4]}, clock with : (reset => (reset, _gen_WIRE)) @[read.scala 26:22]
    when io.flag_job : @[read.scala 28:22]
      gen.big.max_addr <= io.job.big.max_addr @[gen_addr.scala 56:18]
      gen.big.min_addr <= io.job.big.min_addr @[gen_addr.scala 57:18]
      gen.big.now_addr <= io.job.big.begin_addr @[gen_addr.scala 58:18]
      gen.big.block_size <= io.job.big.block_size @[gen_addr.scala 59:20]
      gen.big.column_size <= io.job.big.column_size @[gen_addr.scala 60:21]
      gen.big.cnt_ic.cend <= io.job.big.cnt_ic_end @[utils.scala 22:14]
      gen.big.cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.big.cnt_x.cend <= io.job.big.cnt_x_end @[utils.scala 22:14]
      gen.big.cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.big.cnt_y.cend <= io.job.big.cnt_y_end @[utils.scala 22:14]
      gen.big.cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.big.bank_id <= io.job.big.bank_id @[gen_addr.scala 64:17]
      gen.big.cnt_loop.cend <= io.job.big.cnt_loop_end @[utils.scala 26:14]
      gen.big.cnt_loop.ccnt <= io.job.big.begin_loop @[utils.scala 27:14]
      gen.big.cnt_ups.cend <= io.job.big.cnt_ups_end @[utils.scala 22:14]
      gen.big.cnt_ups.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.big.cnt_maxp.cend <= UInt<2>("h03") @[utils.scala 22:14]
      gen.big.cnt_maxp.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.big.y_begin_addr <= io.job.big.begin_addr @[gen_addr.scala 147:22]
      gen.big.ic_begin_addr <= io.job.big.begin_addr @[gen_addr.scala 148:23]
      gen.small[0].max_addr <= io.job.small[0].max_addr @[gen_addr.scala 56:18]
      gen.small[0].min_addr <= io.job.small[0].min_addr @[gen_addr.scala 57:18]
      gen.small[0].now_addr <= io.job.small[0].begin_addr @[gen_addr.scala 58:18]
      gen.small[0].block_size <= io.job.small[0].block_size @[gen_addr.scala 59:20]
      gen.small[0].column_size <= io.job.small[0].column_size @[gen_addr.scala 60:21]
      gen.small[0].cnt_ic.cend <= io.job.small[0].cnt_ic_end @[utils.scala 22:14]
      gen.small[0].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].cnt_x.cend <= io.job.small[0].cnt_x_end @[utils.scala 22:14]
      gen.small[0].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].cnt_y.cend <= io.job.small[0].cnt_y_end @[utils.scala 22:14]
      gen.small[0].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].bank_id <= io.job.small[0].bank_id @[gen_addr.scala 64:17]
      gen.small[0].ano_bank_id <= io.job.small[0].ano_bank_id @[gen_addr.scala 228:21]
      gen.small[0].cnt_loop.cend <= io.job.small[0].cnt_loop_end @[utils.scala 26:14]
      gen.small[0].cnt_loop.ccnt <= io.job.small[0].begin_loop @[utils.scala 27:14]
      gen.small[0].cnt_invalid.cend <= io.job.small[0].cnt_invalid_end @[utils.scala 22:14]
      gen.small[0].cnt_invalid.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].cnt_ups.cend <= io.job.small[0].cnt_ups_end @[utils.scala 22:14]
      gen.small[0].cnt_ups.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].cnt_maxp.cend <= UInt<2>("h03") @[utils.scala 22:14]
      gen.small[0].cnt_maxp.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen.small[0].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].start <= UInt<1>("h00") @[gen_addr.scala 234:15]
      gen.small[0].y_begin_addr <= io.job.small[0].begin_addr @[gen_addr.scala 235:22]
      gen.small[0].ic_begin_addr <= io.job.small[0].begin_addr @[gen_addr.scala 236:23]
      gen.small[1].max_addr <= io.job.small[1].max_addr @[gen_addr.scala 56:18]
      gen.small[1].min_addr <= io.job.small[1].min_addr @[gen_addr.scala 57:18]
      gen.small[1].now_addr <= io.job.small[1].begin_addr @[gen_addr.scala 58:18]
      gen.small[1].block_size <= io.job.small[1].block_size @[gen_addr.scala 59:20]
      gen.small[1].column_size <= io.job.small[1].column_size @[gen_addr.scala 60:21]
      gen.small[1].cnt_ic.cend <= io.job.small[1].cnt_ic_end @[utils.scala 22:14]
      gen.small[1].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].cnt_x.cend <= io.job.small[1].cnt_x_end @[utils.scala 22:14]
      gen.small[1].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].cnt_y.cend <= io.job.small[1].cnt_y_end @[utils.scala 22:14]
      gen.small[1].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].bank_id <= io.job.small[1].bank_id @[gen_addr.scala 64:17]
      gen.small[1].ano_bank_id <= io.job.small[1].ano_bank_id @[gen_addr.scala 228:21]
      gen.small[1].cnt_loop.cend <= io.job.small[1].cnt_loop_end @[utils.scala 26:14]
      gen.small[1].cnt_loop.ccnt <= io.job.small[1].begin_loop @[utils.scala 27:14]
      gen.small[1].cnt_invalid.cend <= io.job.small[1].cnt_invalid_end @[utils.scala 22:14]
      gen.small[1].cnt_invalid.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].cnt_ups.cend <= io.job.small[1].cnt_ups_end @[utils.scala 22:14]
      gen.small[1].cnt_ups.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].cnt_maxp.cend <= UInt<2>("h03") @[utils.scala 22:14]
      gen.small[1].cnt_maxp.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen.small[1].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].start <= UInt<1>("h00") @[gen_addr.scala 234:15]
      gen.small[1].y_begin_addr <= io.job.small[1].begin_addr @[gen_addr.scala 235:22]
      gen.small[1].ic_begin_addr <= io.job.small[1].begin_addr @[gen_addr.scala 236:23]
      gen.small[2].max_addr <= io.job.small[2].max_addr @[gen_addr.scala 56:18]
      gen.small[2].min_addr <= io.job.small[2].min_addr @[gen_addr.scala 57:18]
      gen.small[2].now_addr <= io.job.small[2].begin_addr @[gen_addr.scala 58:18]
      gen.small[2].block_size <= io.job.small[2].block_size @[gen_addr.scala 59:20]
      gen.small[2].column_size <= io.job.small[2].column_size @[gen_addr.scala 60:21]
      gen.small[2].cnt_ic.cend <= io.job.small[2].cnt_ic_end @[utils.scala 22:14]
      gen.small[2].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].cnt_x.cend <= io.job.small[2].cnt_x_end @[utils.scala 22:14]
      gen.small[2].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].cnt_y.cend <= io.job.small[2].cnt_y_end @[utils.scala 22:14]
      gen.small[2].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].bank_id <= io.job.small[2].bank_id @[gen_addr.scala 64:17]
      gen.small[2].ano_bank_id <= io.job.small[2].ano_bank_id @[gen_addr.scala 228:21]
      gen.small[2].cnt_loop.cend <= io.job.small[2].cnt_loop_end @[utils.scala 26:14]
      gen.small[2].cnt_loop.ccnt <= io.job.small[2].begin_loop @[utils.scala 27:14]
      gen.small[2].cnt_invalid.cend <= io.job.small[2].cnt_invalid_end @[utils.scala 22:14]
      gen.small[2].cnt_invalid.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].cnt_ups.cend <= io.job.small[2].cnt_ups_end @[utils.scala 22:14]
      gen.small[2].cnt_ups.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].cnt_maxp.cend <= UInt<2>("h03") @[utils.scala 22:14]
      gen.small[2].cnt_maxp.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen.small[2].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].start <= UInt<1>("h00") @[gen_addr.scala 234:15]
      gen.small[2].y_begin_addr <= io.job.small[2].begin_addr @[gen_addr.scala 235:22]
      gen.small[2].ic_begin_addr <= io.job.small[2].begin_addr @[gen_addr.scala 236:23]
      gen.small[3].max_addr <= io.job.small[3].max_addr @[gen_addr.scala 56:18]
      gen.small[3].min_addr <= io.job.small[3].min_addr @[gen_addr.scala 57:18]
      gen.small[3].now_addr <= io.job.small[3].begin_addr @[gen_addr.scala 58:18]
      gen.small[3].block_size <= io.job.small[3].block_size @[gen_addr.scala 59:20]
      gen.small[3].column_size <= io.job.small[3].column_size @[gen_addr.scala 60:21]
      gen.small[3].cnt_ic.cend <= io.job.small[3].cnt_ic_end @[utils.scala 22:14]
      gen.small[3].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].cnt_x.cend <= io.job.small[3].cnt_x_end @[utils.scala 22:14]
      gen.small[3].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].cnt_y.cend <= io.job.small[3].cnt_y_end @[utils.scala 22:14]
      gen.small[3].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].bank_id <= io.job.small[3].bank_id @[gen_addr.scala 64:17]
      gen.small[3].ano_bank_id <= io.job.small[3].ano_bank_id @[gen_addr.scala 228:21]
      gen.small[3].cnt_loop.cend <= io.job.small[3].cnt_loop_end @[utils.scala 26:14]
      gen.small[3].cnt_loop.ccnt <= io.job.small[3].begin_loop @[utils.scala 27:14]
      gen.small[3].cnt_invalid.cend <= io.job.small[3].cnt_invalid_end @[utils.scala 22:14]
      gen.small[3].cnt_invalid.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].cnt_ups.cend <= io.job.small[3].cnt_ups_end @[utils.scala 22:14]
      gen.small[3].cnt_ups.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].cnt_maxp.cend <= UInt<2>("h03") @[utils.scala 22:14]
      gen.small[3].cnt_maxp.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen.small[3].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].start <= UInt<1>("h00") @[gen_addr.scala 234:15]
      gen.small[3].y_begin_addr <= io.job.small[3].begin_addr @[gen_addr.scala 235:22]
      gen.small[3].ic_begin_addr <= io.job.small[3].begin_addr @[gen_addr.scala 236:23]
      job_type <= io.job_type @[read.scala 30:18]
      skip @[read.scala 28:22]
    else : @[read.scala 31:28]
      when io.valid_in : @[read.scala 31:28]
        node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
        node _T_1 = asUInt(job_type) @[Conditional.scala 37:39]
        node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 40:58]
          wire nxt_addr : UInt<10> @[gen_addr.scala 79:28]
          nxt_addr <= UInt<1>("h00") @[gen_addr.scala 80:18]
          wire nxt : UInt<1> @[utils.scala 16:23]
          node _nxt_T = eq(gen.big.cnt_ic.ccnt, gen.big.cnt_ic.cend) @[utils.scala 17:20]
          nxt <= _nxt_T @[utils.scala 17:13]
          node _gen_big_cnt_ic_ccnt_T = add(gen.big.cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_big_cnt_ic_ccnt_T_1 = tail(_gen_big_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_big_cnt_ic_ccnt_T_2 = mux(nxt, UInt<1>("h00"), _gen_big_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
          gen.big.cnt_ic.ccnt <= _gen_big_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
          when nxt : @[gen_addr.scala 81:27]
            wire nxt_1 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_1 = eq(gen.big.cnt_loop.ccnt, gen.big.cnt_loop.cend) @[utils.scala 17:20]
            nxt_1 <= _nxt_T_1 @[utils.scala 17:13]
            node _gen_big_cnt_loop_ccnt_T = add(gen.big.cnt_loop.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_big_cnt_loop_ccnt_T_1 = tail(_gen_big_cnt_loop_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_big_cnt_loop_ccnt_T_2 = mux(nxt_1, UInt<1>("h00"), _gen_big_cnt_loop_ccnt_T_1) @[utils.scala 18:20]
            gen.big.cnt_loop.ccnt <= _gen_big_cnt_loop_ccnt_T_2 @[utils.scala 18:14]
            when nxt_1 : @[gen_addr.scala 82:33]
              wire nxt_2 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_2 = eq(gen.big.cnt_y.ccnt, gen.big.cnt_y.cend) @[utils.scala 17:20]
              nxt_2 <= _nxt_T_2 @[utils.scala 17:13]
              node _gen_big_cnt_y_ccnt_T = add(gen.big.cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_big_cnt_y_ccnt_T_1 = tail(_gen_big_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
              node _gen_big_cnt_y_ccnt_T_2 = mux(nxt_2, UInt<1>("h00"), _gen_big_cnt_y_ccnt_T_1) @[utils.scala 18:20]
              gen.big.cnt_y.ccnt <= _gen_big_cnt_y_ccnt_T_2 @[utils.scala 18:14]
              when nxt_2 : @[gen_addr.scala 83:34]
                wire nxt_3 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_3 = eq(gen.big.cnt_ups.ccnt, gen.big.cnt_ups.cend) @[utils.scala 17:20]
                nxt_3 <= _nxt_T_3 @[utils.scala 17:13]
                node _gen_big_cnt_ups_ccnt_T = add(gen.big.cnt_ups.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_big_cnt_ups_ccnt_T_1 = tail(_gen_big_cnt_ups_ccnt_T, 1) @[utils.scala 18:35]
                node _gen_big_cnt_ups_ccnt_T_2 = mux(nxt_3, UInt<1>("h00"), _gen_big_cnt_ups_ccnt_T_1) @[utils.scala 18:20]
                gen.big.cnt_ups.ccnt <= _gen_big_cnt_ups_ccnt_T_2 @[utils.scala 18:14]
                when nxt_3 : @[gen_addr.scala 84:40]
                  wire nxt_4 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_4 = eq(gen.big.cnt_x.ccnt, gen.big.cnt_x.cend) @[utils.scala 17:20]
                  nxt_4 <= _nxt_T_4 @[utils.scala 17:13]
                  node _gen_big_cnt_x_ccnt_T = add(gen.big.cnt_x.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_big_cnt_x_ccnt_T_1 = tail(_gen_big_cnt_x_ccnt_T, 1) @[utils.scala 18:35]
                  node _gen_big_cnt_x_ccnt_T_2 = mux(nxt_4, UInt<1>("h00"), _gen_big_cnt_x_ccnt_T_1) @[utils.scala 18:20]
                  gen.big.cnt_x.ccnt <= _gen_big_cnt_x_ccnt_T_2 @[utils.scala 18:14]
                  when nxt_4 : @[gen_addr.scala 85:42]
                    gen.big.flag_end <= UInt<1>("h01") @[gen_addr.scala 86:38]
                    skip @[gen_addr.scala 85:42]
                  else : @[gen_addr.scala 87:36]
                    node _nxt_addr_T = add(gen.big.now_addr, UInt<1>("h01")) @[gen_addr.scala 88:49]
                    node _nxt_addr_T_1 = tail(_nxt_addr_T, 1) @[gen_addr.scala 88:49]
                    nxt_addr <= _nxt_addr_T_1 @[gen_addr.scala 88:38]
                    skip @[gen_addr.scala 87:36]
                  wire gen_big_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                  node _gen_big_y_begin_addr_T = geq(nxt_addr, gen.big.max_addr) @[gen_addr.scala 48:18]
                  when _gen_big_y_begin_addr_T : @[gen_addr.scala 48:29]
                    node _gen_big_y_begin_addr_nxt_T = sub(nxt_addr, gen.big.max_addr) @[gen_addr.scala 49:24]
                    node _gen_big_y_begin_addr_nxt_T_1 = tail(_gen_big_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                    node _gen_big_y_begin_addr_nxt_T_2 = add(_gen_big_y_begin_addr_nxt_T_1, gen.big.min_addr) @[gen_addr.scala 49:33]
                    node _gen_big_y_begin_addr_nxt_T_3 = tail(_gen_big_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                    gen_big_y_begin_addr_nxt <= _gen_big_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                    skip @[gen_addr.scala 48:29]
                  else : @[gen_addr.scala 50:20]
                    gen_big_y_begin_addr_nxt <= nxt_addr @[gen_addr.scala 51:17]
                    skip @[gen_addr.scala 50:20]
                  gen.big.y_begin_addr <= gen_big_y_begin_addr_nxt @[gen_addr.scala 90:38]
                  skip @[gen_addr.scala 84:40]
                else : @[gen_addr.scala 91:32]
                  nxt_addr <= gen.big.y_begin_addr @[gen_addr.scala 92:34]
                  skip @[gen_addr.scala 91:32]
                skip @[gen_addr.scala 83:34]
              else : @[gen_addr.scala 94:28]
                node _nxt_addr_T_2 = add(gen.big.now_addr, UInt<1>("h01")) @[gen_addr.scala 95:41]
                node _nxt_addr_T_3 = tail(_nxt_addr_T_2, 1) @[gen_addr.scala 95:41]
                nxt_addr <= _nxt_addr_T_3 @[gen_addr.scala 95:30]
                skip @[gen_addr.scala 94:28]
              wire gen_big_ic_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
              node _gen_big_ic_begin_addr_T = geq(nxt_addr, gen.big.max_addr) @[gen_addr.scala 48:18]
              when _gen_big_ic_begin_addr_T : @[gen_addr.scala 48:29]
                node _gen_big_ic_begin_addr_nxt_T = sub(nxt_addr, gen.big.max_addr) @[gen_addr.scala 49:24]
                node _gen_big_ic_begin_addr_nxt_T_1 = tail(_gen_big_ic_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                node _gen_big_ic_begin_addr_nxt_T_2 = add(_gen_big_ic_begin_addr_nxt_T_1, gen.big.min_addr) @[gen_addr.scala 49:33]
                node _gen_big_ic_begin_addr_nxt_T_3 = tail(_gen_big_ic_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                gen_big_ic_begin_addr_nxt <= _gen_big_ic_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                skip @[gen_addr.scala 48:29]
              else : @[gen_addr.scala 50:20]
                gen_big_ic_begin_addr_nxt <= nxt_addr @[gen_addr.scala 51:17]
                skip @[gen_addr.scala 50:20]
              gen.big.ic_begin_addr <= gen_big_ic_begin_addr_nxt @[gen_addr.scala 97:31]
              skip @[gen_addr.scala 82:33]
            else : @[gen_addr.scala 98:24]
              nxt_addr <= gen.big.ic_begin_addr @[gen_addr.scala 99:26]
              skip @[gen_addr.scala 98:24]
            skip @[gen_addr.scala 81:27]
          else : @[gen_addr.scala 101:20]
            node _nxt_addr_T_4 = add(gen.big.now_addr, UInt<1>("h01")) @[gen_addr.scala 102:33]
            node _nxt_addr_T_5 = tail(_nxt_addr_T_4, 1) @[gen_addr.scala 102:33]
            nxt_addr <= _nxt_addr_T_5 @[gen_addr.scala 102:22]
            skip @[gen_addr.scala 101:20]
          wire gen_big_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
          node _gen_big_now_addr_T = geq(nxt_addr, gen.big.max_addr) @[gen_addr.scala 48:18]
          when _gen_big_now_addr_T : @[gen_addr.scala 48:29]
            node _gen_big_now_addr_nxt_T = sub(nxt_addr, gen.big.max_addr) @[gen_addr.scala 49:24]
            node _gen_big_now_addr_nxt_T_1 = tail(_gen_big_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
            node _gen_big_now_addr_nxt_T_2 = add(_gen_big_now_addr_nxt_T_1, gen.big.min_addr) @[gen_addr.scala 49:33]
            node _gen_big_now_addr_nxt_T_3 = tail(_gen_big_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
            gen_big_now_addr_nxt <= _gen_big_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
            skip @[gen_addr.scala 48:29]
          else : @[gen_addr.scala 50:20]
            gen_big_now_addr_nxt <= nxt_addr @[gen_addr.scala 51:17]
            skip @[gen_addr.scala 50:20]
          gen.big.now_addr <= gen_big_now_addr_nxt @[gen_addr.scala 104:18]
          wire nxt_addr_1 : UInt<10> @[gen_addr.scala 163:28]
          nxt_addr_1 <= UInt<1>("h00") @[gen_addr.scala 164:18]
          wire nxt_5 : UInt<1> @[utils.scala 16:23]
          node _nxt_T_5 = eq(gen.small[0].cnt_invalid.ccnt, gen.small[0].cnt_invalid.cend) @[utils.scala 17:20]
          nxt_5 <= _nxt_T_5 @[utils.scala 17:13]
          node _gen_small_0_cnt_invalid_ccnt_T = add(gen.small[0].cnt_invalid.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_small_0_cnt_invalid_ccnt_T_1 = tail(_gen_small_0_cnt_invalid_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_small_0_cnt_invalid_ccnt_T_2 = mux(nxt_5, UInt<1>("h00"), _gen_small_0_cnt_invalid_ccnt_T_1) @[utils.scala 18:20]
          gen.small[0].cnt_invalid.ccnt <= _gen_small_0_cnt_invalid_ccnt_T_2 @[utils.scala 18:14]
          node _T_3 = or(nxt_5, gen.small[0].start) @[gen_addr.scala 165:31]
          when _T_3 : @[gen_addr.scala 165:39]
            gen.small[0].start <= UInt<1>("h01") @[gen_addr.scala 166:19]
            wire nxt_6 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_6 = eq(gen.small[0].cnt_ic.ccnt, gen.small[0].cnt_ic.cend) @[utils.scala 17:20]
            nxt_6 <= _nxt_T_6 @[utils.scala 17:13]
            node _gen_small_0_cnt_ic_ccnt_T = add(gen.small[0].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_0_cnt_ic_ccnt_T_1 = tail(_gen_small_0_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_0_cnt_ic_ccnt_T_2 = mux(nxt_6, UInt<1>("h00"), _gen_small_0_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
            gen.small[0].cnt_ic.ccnt <= _gen_small_0_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
            when nxt_6 : @[gen_addr.scala 167:31]
              wire nxt_7 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_7 = eq(gen.small[0].cnt_loop.ccnt, gen.small[0].cnt_loop.cend) @[utils.scala 17:20]
              nxt_7 <= _nxt_T_7 @[utils.scala 17:13]
              node _gen_small_0_cnt_loop_ccnt_T = add(gen.small[0].cnt_loop.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_0_cnt_loop_ccnt_T_1 = tail(_gen_small_0_cnt_loop_ccnt_T, 1) @[utils.scala 18:35]
              node _gen_small_0_cnt_loop_ccnt_T_2 = mux(nxt_7, UInt<1>("h00"), _gen_small_0_cnt_loop_ccnt_T_1) @[utils.scala 18:20]
              gen.small[0].cnt_loop.ccnt <= _gen_small_0_cnt_loop_ccnt_T_2 @[utils.scala 18:14]
              when nxt_7 : @[gen_addr.scala 168:37]
                wire nxt_8 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_8 = eq(gen.small[0].cnt_y.ccnt, gen.small[0].cnt_y.cend) @[utils.scala 17:20]
                nxt_8 <= _nxt_T_8 @[utils.scala 17:13]
                node _gen_small_0_cnt_y_ccnt_T = add(gen.small[0].cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_small_0_cnt_y_ccnt_T_1 = tail(_gen_small_0_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
                node _gen_small_0_cnt_y_ccnt_T_2 = mux(nxt_8, UInt<1>("h00"), _gen_small_0_cnt_y_ccnt_T_1) @[utils.scala 18:20]
                gen.small[0].cnt_y.ccnt <= _gen_small_0_cnt_y_ccnt_T_2 @[utils.scala 18:14]
                when nxt_8 : @[gen_addr.scala 169:38]
                  wire nxt_9 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_9 = eq(gen.small[0].cnt_ups.ccnt, gen.small[0].cnt_ups.cend) @[utils.scala 17:20]
                  nxt_9 <= _nxt_T_9 @[utils.scala 17:13]
                  node _gen_small_0_cnt_ups_ccnt_T = add(gen.small[0].cnt_ups.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_small_0_cnt_ups_ccnt_T_1 = tail(_gen_small_0_cnt_ups_ccnt_T, 1) @[utils.scala 18:35]
                  node _gen_small_0_cnt_ups_ccnt_T_2 = mux(nxt_9, UInt<1>("h00"), _gen_small_0_cnt_ups_ccnt_T_1) @[utils.scala 18:20]
                  gen.small[0].cnt_ups.ccnt <= _gen_small_0_cnt_ups_ccnt_T_2 @[utils.scala 18:14]
                  when nxt_9 : @[gen_addr.scala 170:44]
                    wire nxt_10 : UInt<1> @[utils.scala 16:23]
                    node _nxt_T_10 = eq(gen.small[0].cnt_swap.ccnt, gen.small[0].cnt_swap.cend) @[utils.scala 17:20]
                    nxt_10 <= _nxt_T_10 @[utils.scala 17:13]
                    node _gen_small_0_cnt_swap_ccnt_T = add(gen.small[0].cnt_swap.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                    node _gen_small_0_cnt_swap_ccnt_T_1 = tail(_gen_small_0_cnt_swap_ccnt_T, 1) @[utils.scala 18:35]
                    node _gen_small_0_cnt_swap_ccnt_T_2 = mux(nxt_10, UInt<1>("h00"), _gen_small_0_cnt_swap_ccnt_T_1) @[utils.scala 18:20]
                    gen.small[0].cnt_swap.ccnt <= _gen_small_0_cnt_swap_ccnt_T_2 @[utils.scala 18:14]
                    when nxt_10 : @[gen_addr.scala 171:49]
                      node _nxt_addr_T_6 = add(gen.small[0].now_addr, UInt<1>("h01")) @[gen_addr.scala 172:53]
                      node _nxt_addr_T_7 = tail(_nxt_addr_T_6, 1) @[gen_addr.scala 172:53]
                      nxt_addr_1 <= _nxt_addr_T_7 @[gen_addr.scala 172:42]
                      wire gen_small_0_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                      node _gen_small_0_y_begin_addr_T = geq(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 48:18]
                      when _gen_small_0_y_begin_addr_T : @[gen_addr.scala 48:29]
                        node _gen_small_0_y_begin_addr_nxt_T = sub(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 49:24]
                        node _gen_small_0_y_begin_addr_nxt_T_1 = tail(_gen_small_0_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                        node _gen_small_0_y_begin_addr_nxt_T_2 = add(_gen_small_0_y_begin_addr_nxt_T_1, gen.small[0].min_addr) @[gen_addr.scala 49:33]
                        node _gen_small_0_y_begin_addr_nxt_T_3 = tail(_gen_small_0_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                        gen_small_0_y_begin_addr_nxt <= _gen_small_0_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                        skip @[gen_addr.scala 48:29]
                      else : @[gen_addr.scala 50:20]
                        gen_small_0_y_begin_addr_nxt <= nxt_addr_1 @[gen_addr.scala 51:17]
                        skip @[gen_addr.scala 50:20]
                      gen.small[0].y_begin_addr <= gen_small_0_y_begin_addr_nxt @[gen_addr.scala 173:46]
                      skip @[gen_addr.scala 171:49]
                    else : @[gen_addr.scala 174:40]
                      nxt_addr_1 <= gen.small[0].y_begin_addr @[gen_addr.scala 175:42]
                      skip @[gen_addr.scala 174:40]
                    gen.small[0].bank_id <= gen.small[0].ano_bank_id @[gen_addr.scala 177:37]
                    gen.small[0].ano_bank_id <= gen.small[0].bank_id @[gen_addr.scala 178:41]
                    skip @[gen_addr.scala 170:44]
                  else : @[gen_addr.scala 179:36]
                    nxt_addr_1 <= gen.small[0].y_begin_addr @[gen_addr.scala 180:38]
                    skip @[gen_addr.scala 179:36]
                  skip @[gen_addr.scala 169:38]
                else : @[gen_addr.scala 182:32]
                  node _nxt_addr_T_8 = add(gen.small[0].now_addr, UInt<1>("h01")) @[gen_addr.scala 183:45]
                  node _nxt_addr_T_9 = tail(_nxt_addr_T_8, 1) @[gen_addr.scala 183:45]
                  nxt_addr_1 <= _nxt_addr_T_9 @[gen_addr.scala 183:34]
                  skip @[gen_addr.scala 182:32]
                wire gen_small_0_ic_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                node _gen_small_0_ic_begin_addr_T = geq(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 48:18]
                when _gen_small_0_ic_begin_addr_T : @[gen_addr.scala 48:29]
                  node _gen_small_0_ic_begin_addr_nxt_T = sub(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 49:24]
                  node _gen_small_0_ic_begin_addr_nxt_T_1 = tail(_gen_small_0_ic_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                  node _gen_small_0_ic_begin_addr_nxt_T_2 = add(_gen_small_0_ic_begin_addr_nxt_T_1, gen.small[0].min_addr) @[gen_addr.scala 49:33]
                  node _gen_small_0_ic_begin_addr_nxt_T_3 = tail(_gen_small_0_ic_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                  gen_small_0_ic_begin_addr_nxt <= _gen_small_0_ic_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                  skip @[gen_addr.scala 48:29]
                else : @[gen_addr.scala 50:20]
                  gen_small_0_ic_begin_addr_nxt <= nxt_addr_1 @[gen_addr.scala 51:17]
                  skip @[gen_addr.scala 50:20]
                gen.small[0].ic_begin_addr <= gen_small_0_ic_begin_addr_nxt @[gen_addr.scala 185:35]
                skip @[gen_addr.scala 168:37]
              else : @[gen_addr.scala 186:28]
                nxt_addr_1 <= gen.small[0].ic_begin_addr @[gen_addr.scala 187:30]
                skip @[gen_addr.scala 186:28]
              skip @[gen_addr.scala 167:31]
            else : @[gen_addr.scala 189:24]
              node _nxt_addr_T_10 = add(gen.small[0].now_addr, UInt<1>("h01")) @[gen_addr.scala 190:37]
              node _nxt_addr_T_11 = tail(_nxt_addr_T_10, 1) @[gen_addr.scala 190:37]
              nxt_addr_1 <= _nxt_addr_T_11 @[gen_addr.scala 190:26]
              skip @[gen_addr.scala 189:24]
            wire gen_small_0_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_0_now_addr_T = geq(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_0_now_addr_T : @[gen_addr.scala 48:29]
              node _gen_small_0_now_addr_nxt_T = sub(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_0_now_addr_nxt_T_1 = tail(_gen_small_0_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
              node _gen_small_0_now_addr_nxt_T_2 = add(_gen_small_0_now_addr_nxt_T_1, gen.small[0].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_0_now_addr_nxt_T_3 = tail(_gen_small_0_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
              gen_small_0_now_addr_nxt <= _gen_small_0_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_0_now_addr_nxt <= nxt_addr_1 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[0].now_addr <= gen_small_0_now_addr_nxt @[gen_addr.scala 192:22]
            skip @[gen_addr.scala 165:39]
          wire nxt_addr_2 : UInt<10> @[gen_addr.scala 163:28]
          nxt_addr_2 <= UInt<1>("h00") @[gen_addr.scala 164:18]
          wire nxt_11 : UInt<1> @[utils.scala 16:23]
          node _nxt_T_11 = eq(gen.small[1].cnt_invalid.ccnt, gen.small[1].cnt_invalid.cend) @[utils.scala 17:20]
          nxt_11 <= _nxt_T_11 @[utils.scala 17:13]
          node _gen_small_1_cnt_invalid_ccnt_T = add(gen.small[1].cnt_invalid.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_small_1_cnt_invalid_ccnt_T_1 = tail(_gen_small_1_cnt_invalid_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_small_1_cnt_invalid_ccnt_T_2 = mux(nxt_11, UInt<1>("h00"), _gen_small_1_cnt_invalid_ccnt_T_1) @[utils.scala 18:20]
          gen.small[1].cnt_invalid.ccnt <= _gen_small_1_cnt_invalid_ccnt_T_2 @[utils.scala 18:14]
          node _T_4 = or(nxt_11, gen.small[1].start) @[gen_addr.scala 165:31]
          when _T_4 : @[gen_addr.scala 165:39]
            gen.small[1].start <= UInt<1>("h01") @[gen_addr.scala 166:19]
            wire nxt_12 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_12 = eq(gen.small[1].cnt_ic.ccnt, gen.small[1].cnt_ic.cend) @[utils.scala 17:20]
            nxt_12 <= _nxt_T_12 @[utils.scala 17:13]
            node _gen_small_1_cnt_ic_ccnt_T = add(gen.small[1].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_1_cnt_ic_ccnt_T_1 = tail(_gen_small_1_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_1_cnt_ic_ccnt_T_2 = mux(nxt_12, UInt<1>("h00"), _gen_small_1_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
            gen.small[1].cnt_ic.ccnt <= _gen_small_1_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
            when nxt_12 : @[gen_addr.scala 167:31]
              wire nxt_13 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_13 = eq(gen.small[1].cnt_loop.ccnt, gen.small[1].cnt_loop.cend) @[utils.scala 17:20]
              nxt_13 <= _nxt_T_13 @[utils.scala 17:13]
              node _gen_small_1_cnt_loop_ccnt_T = add(gen.small[1].cnt_loop.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_1_cnt_loop_ccnt_T_1 = tail(_gen_small_1_cnt_loop_ccnt_T, 1) @[utils.scala 18:35]
              node _gen_small_1_cnt_loop_ccnt_T_2 = mux(nxt_13, UInt<1>("h00"), _gen_small_1_cnt_loop_ccnt_T_1) @[utils.scala 18:20]
              gen.small[1].cnt_loop.ccnt <= _gen_small_1_cnt_loop_ccnt_T_2 @[utils.scala 18:14]
              when nxt_13 : @[gen_addr.scala 168:37]
                wire nxt_14 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_14 = eq(gen.small[1].cnt_y.ccnt, gen.small[1].cnt_y.cend) @[utils.scala 17:20]
                nxt_14 <= _nxt_T_14 @[utils.scala 17:13]
                node _gen_small_1_cnt_y_ccnt_T = add(gen.small[1].cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_small_1_cnt_y_ccnt_T_1 = tail(_gen_small_1_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
                node _gen_small_1_cnt_y_ccnt_T_2 = mux(nxt_14, UInt<1>("h00"), _gen_small_1_cnt_y_ccnt_T_1) @[utils.scala 18:20]
                gen.small[1].cnt_y.ccnt <= _gen_small_1_cnt_y_ccnt_T_2 @[utils.scala 18:14]
                when nxt_14 : @[gen_addr.scala 169:38]
                  wire nxt_15 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_15 = eq(gen.small[1].cnt_ups.ccnt, gen.small[1].cnt_ups.cend) @[utils.scala 17:20]
                  nxt_15 <= _nxt_T_15 @[utils.scala 17:13]
                  node _gen_small_1_cnt_ups_ccnt_T = add(gen.small[1].cnt_ups.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_small_1_cnt_ups_ccnt_T_1 = tail(_gen_small_1_cnt_ups_ccnt_T, 1) @[utils.scala 18:35]
                  node _gen_small_1_cnt_ups_ccnt_T_2 = mux(nxt_15, UInt<1>("h00"), _gen_small_1_cnt_ups_ccnt_T_1) @[utils.scala 18:20]
                  gen.small[1].cnt_ups.ccnt <= _gen_small_1_cnt_ups_ccnt_T_2 @[utils.scala 18:14]
                  when nxt_15 : @[gen_addr.scala 170:44]
                    wire nxt_16 : UInt<1> @[utils.scala 16:23]
                    node _nxt_T_16 = eq(gen.small[1].cnt_swap.ccnt, gen.small[1].cnt_swap.cend) @[utils.scala 17:20]
                    nxt_16 <= _nxt_T_16 @[utils.scala 17:13]
                    node _gen_small_1_cnt_swap_ccnt_T = add(gen.small[1].cnt_swap.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                    node _gen_small_1_cnt_swap_ccnt_T_1 = tail(_gen_small_1_cnt_swap_ccnt_T, 1) @[utils.scala 18:35]
                    node _gen_small_1_cnt_swap_ccnt_T_2 = mux(nxt_16, UInt<1>("h00"), _gen_small_1_cnt_swap_ccnt_T_1) @[utils.scala 18:20]
                    gen.small[1].cnt_swap.ccnt <= _gen_small_1_cnt_swap_ccnt_T_2 @[utils.scala 18:14]
                    when nxt_16 : @[gen_addr.scala 171:49]
                      node _nxt_addr_T_12 = add(gen.small[1].now_addr, UInt<1>("h01")) @[gen_addr.scala 172:53]
                      node _nxt_addr_T_13 = tail(_nxt_addr_T_12, 1) @[gen_addr.scala 172:53]
                      nxt_addr_2 <= _nxt_addr_T_13 @[gen_addr.scala 172:42]
                      wire gen_small_1_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                      node _gen_small_1_y_begin_addr_T = geq(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 48:18]
                      when _gen_small_1_y_begin_addr_T : @[gen_addr.scala 48:29]
                        node _gen_small_1_y_begin_addr_nxt_T = sub(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 49:24]
                        node _gen_small_1_y_begin_addr_nxt_T_1 = tail(_gen_small_1_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                        node _gen_small_1_y_begin_addr_nxt_T_2 = add(_gen_small_1_y_begin_addr_nxt_T_1, gen.small[1].min_addr) @[gen_addr.scala 49:33]
                        node _gen_small_1_y_begin_addr_nxt_T_3 = tail(_gen_small_1_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                        gen_small_1_y_begin_addr_nxt <= _gen_small_1_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                        skip @[gen_addr.scala 48:29]
                      else : @[gen_addr.scala 50:20]
                        gen_small_1_y_begin_addr_nxt <= nxt_addr_2 @[gen_addr.scala 51:17]
                        skip @[gen_addr.scala 50:20]
                      gen.small[1].y_begin_addr <= gen_small_1_y_begin_addr_nxt @[gen_addr.scala 173:46]
                      skip @[gen_addr.scala 171:49]
                    else : @[gen_addr.scala 174:40]
                      nxt_addr_2 <= gen.small[1].y_begin_addr @[gen_addr.scala 175:42]
                      skip @[gen_addr.scala 174:40]
                    gen.small[1].bank_id <= gen.small[1].ano_bank_id @[gen_addr.scala 177:37]
                    gen.small[1].ano_bank_id <= gen.small[1].bank_id @[gen_addr.scala 178:41]
                    skip @[gen_addr.scala 170:44]
                  else : @[gen_addr.scala 179:36]
                    nxt_addr_2 <= gen.small[1].y_begin_addr @[gen_addr.scala 180:38]
                    skip @[gen_addr.scala 179:36]
                  skip @[gen_addr.scala 169:38]
                else : @[gen_addr.scala 182:32]
                  node _nxt_addr_T_14 = add(gen.small[1].now_addr, UInt<1>("h01")) @[gen_addr.scala 183:45]
                  node _nxt_addr_T_15 = tail(_nxt_addr_T_14, 1) @[gen_addr.scala 183:45]
                  nxt_addr_2 <= _nxt_addr_T_15 @[gen_addr.scala 183:34]
                  skip @[gen_addr.scala 182:32]
                wire gen_small_1_ic_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                node _gen_small_1_ic_begin_addr_T = geq(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 48:18]
                when _gen_small_1_ic_begin_addr_T : @[gen_addr.scala 48:29]
                  node _gen_small_1_ic_begin_addr_nxt_T = sub(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 49:24]
                  node _gen_small_1_ic_begin_addr_nxt_T_1 = tail(_gen_small_1_ic_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                  node _gen_small_1_ic_begin_addr_nxt_T_2 = add(_gen_small_1_ic_begin_addr_nxt_T_1, gen.small[1].min_addr) @[gen_addr.scala 49:33]
                  node _gen_small_1_ic_begin_addr_nxt_T_3 = tail(_gen_small_1_ic_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                  gen_small_1_ic_begin_addr_nxt <= _gen_small_1_ic_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                  skip @[gen_addr.scala 48:29]
                else : @[gen_addr.scala 50:20]
                  gen_small_1_ic_begin_addr_nxt <= nxt_addr_2 @[gen_addr.scala 51:17]
                  skip @[gen_addr.scala 50:20]
                gen.small[1].ic_begin_addr <= gen_small_1_ic_begin_addr_nxt @[gen_addr.scala 185:35]
                skip @[gen_addr.scala 168:37]
              else : @[gen_addr.scala 186:28]
                nxt_addr_2 <= gen.small[1].ic_begin_addr @[gen_addr.scala 187:30]
                skip @[gen_addr.scala 186:28]
              skip @[gen_addr.scala 167:31]
            else : @[gen_addr.scala 189:24]
              node _nxt_addr_T_16 = add(gen.small[1].now_addr, UInt<1>("h01")) @[gen_addr.scala 190:37]
              node _nxt_addr_T_17 = tail(_nxt_addr_T_16, 1) @[gen_addr.scala 190:37]
              nxt_addr_2 <= _nxt_addr_T_17 @[gen_addr.scala 190:26]
              skip @[gen_addr.scala 189:24]
            wire gen_small_1_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_1_now_addr_T = geq(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_1_now_addr_T : @[gen_addr.scala 48:29]
              node _gen_small_1_now_addr_nxt_T = sub(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_1_now_addr_nxt_T_1 = tail(_gen_small_1_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
              node _gen_small_1_now_addr_nxt_T_2 = add(_gen_small_1_now_addr_nxt_T_1, gen.small[1].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_1_now_addr_nxt_T_3 = tail(_gen_small_1_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
              gen_small_1_now_addr_nxt <= _gen_small_1_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_1_now_addr_nxt <= nxt_addr_2 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[1].now_addr <= gen_small_1_now_addr_nxt @[gen_addr.scala 192:22]
            skip @[gen_addr.scala 165:39]
          wire nxt_addr_3 : UInt<10> @[gen_addr.scala 163:28]
          nxt_addr_3 <= UInt<1>("h00") @[gen_addr.scala 164:18]
          wire nxt_17 : UInt<1> @[utils.scala 16:23]
          node _nxt_T_17 = eq(gen.small[2].cnt_invalid.ccnt, gen.small[2].cnt_invalid.cend) @[utils.scala 17:20]
          nxt_17 <= _nxt_T_17 @[utils.scala 17:13]
          node _gen_small_2_cnt_invalid_ccnt_T = add(gen.small[2].cnt_invalid.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_small_2_cnt_invalid_ccnt_T_1 = tail(_gen_small_2_cnt_invalid_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_small_2_cnt_invalid_ccnt_T_2 = mux(nxt_17, UInt<1>("h00"), _gen_small_2_cnt_invalid_ccnt_T_1) @[utils.scala 18:20]
          gen.small[2].cnt_invalid.ccnt <= _gen_small_2_cnt_invalid_ccnt_T_2 @[utils.scala 18:14]
          node _T_5 = or(nxt_17, gen.small[2].start) @[gen_addr.scala 165:31]
          when _T_5 : @[gen_addr.scala 165:39]
            gen.small[2].start <= UInt<1>("h01") @[gen_addr.scala 166:19]
            wire nxt_18 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_18 = eq(gen.small[2].cnt_ic.ccnt, gen.small[2].cnt_ic.cend) @[utils.scala 17:20]
            nxt_18 <= _nxt_T_18 @[utils.scala 17:13]
            node _gen_small_2_cnt_ic_ccnt_T = add(gen.small[2].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_2_cnt_ic_ccnt_T_1 = tail(_gen_small_2_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_2_cnt_ic_ccnt_T_2 = mux(nxt_18, UInt<1>("h00"), _gen_small_2_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
            gen.small[2].cnt_ic.ccnt <= _gen_small_2_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
            when nxt_18 : @[gen_addr.scala 167:31]
              wire nxt_19 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_19 = eq(gen.small[2].cnt_loop.ccnt, gen.small[2].cnt_loop.cend) @[utils.scala 17:20]
              nxt_19 <= _nxt_T_19 @[utils.scala 17:13]
              node _gen_small_2_cnt_loop_ccnt_T = add(gen.small[2].cnt_loop.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_2_cnt_loop_ccnt_T_1 = tail(_gen_small_2_cnt_loop_ccnt_T, 1) @[utils.scala 18:35]
              node _gen_small_2_cnt_loop_ccnt_T_2 = mux(nxt_19, UInt<1>("h00"), _gen_small_2_cnt_loop_ccnt_T_1) @[utils.scala 18:20]
              gen.small[2].cnt_loop.ccnt <= _gen_small_2_cnt_loop_ccnt_T_2 @[utils.scala 18:14]
              when nxt_19 : @[gen_addr.scala 168:37]
                wire nxt_20 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_20 = eq(gen.small[2].cnt_y.ccnt, gen.small[2].cnt_y.cend) @[utils.scala 17:20]
                nxt_20 <= _nxt_T_20 @[utils.scala 17:13]
                node _gen_small_2_cnt_y_ccnt_T = add(gen.small[2].cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_small_2_cnt_y_ccnt_T_1 = tail(_gen_small_2_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
                node _gen_small_2_cnt_y_ccnt_T_2 = mux(nxt_20, UInt<1>("h00"), _gen_small_2_cnt_y_ccnt_T_1) @[utils.scala 18:20]
                gen.small[2].cnt_y.ccnt <= _gen_small_2_cnt_y_ccnt_T_2 @[utils.scala 18:14]
                when nxt_20 : @[gen_addr.scala 169:38]
                  wire nxt_21 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_21 = eq(gen.small[2].cnt_ups.ccnt, gen.small[2].cnt_ups.cend) @[utils.scala 17:20]
                  nxt_21 <= _nxt_T_21 @[utils.scala 17:13]
                  node _gen_small_2_cnt_ups_ccnt_T = add(gen.small[2].cnt_ups.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_small_2_cnt_ups_ccnt_T_1 = tail(_gen_small_2_cnt_ups_ccnt_T, 1) @[utils.scala 18:35]
                  node _gen_small_2_cnt_ups_ccnt_T_2 = mux(nxt_21, UInt<1>("h00"), _gen_small_2_cnt_ups_ccnt_T_1) @[utils.scala 18:20]
                  gen.small[2].cnt_ups.ccnt <= _gen_small_2_cnt_ups_ccnt_T_2 @[utils.scala 18:14]
                  when nxt_21 : @[gen_addr.scala 170:44]
                    wire nxt_22 : UInt<1> @[utils.scala 16:23]
                    node _nxt_T_22 = eq(gen.small[2].cnt_swap.ccnt, gen.small[2].cnt_swap.cend) @[utils.scala 17:20]
                    nxt_22 <= _nxt_T_22 @[utils.scala 17:13]
                    node _gen_small_2_cnt_swap_ccnt_T = add(gen.small[2].cnt_swap.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                    node _gen_small_2_cnt_swap_ccnt_T_1 = tail(_gen_small_2_cnt_swap_ccnt_T, 1) @[utils.scala 18:35]
                    node _gen_small_2_cnt_swap_ccnt_T_2 = mux(nxt_22, UInt<1>("h00"), _gen_small_2_cnt_swap_ccnt_T_1) @[utils.scala 18:20]
                    gen.small[2].cnt_swap.ccnt <= _gen_small_2_cnt_swap_ccnt_T_2 @[utils.scala 18:14]
                    when nxt_22 : @[gen_addr.scala 171:49]
                      node _nxt_addr_T_18 = add(gen.small[2].now_addr, UInt<1>("h01")) @[gen_addr.scala 172:53]
                      node _nxt_addr_T_19 = tail(_nxt_addr_T_18, 1) @[gen_addr.scala 172:53]
                      nxt_addr_3 <= _nxt_addr_T_19 @[gen_addr.scala 172:42]
                      wire gen_small_2_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                      node _gen_small_2_y_begin_addr_T = geq(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 48:18]
                      when _gen_small_2_y_begin_addr_T : @[gen_addr.scala 48:29]
                        node _gen_small_2_y_begin_addr_nxt_T = sub(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 49:24]
                        node _gen_small_2_y_begin_addr_nxt_T_1 = tail(_gen_small_2_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                        node _gen_small_2_y_begin_addr_nxt_T_2 = add(_gen_small_2_y_begin_addr_nxt_T_1, gen.small[2].min_addr) @[gen_addr.scala 49:33]
                        node _gen_small_2_y_begin_addr_nxt_T_3 = tail(_gen_small_2_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                        gen_small_2_y_begin_addr_nxt <= _gen_small_2_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                        skip @[gen_addr.scala 48:29]
                      else : @[gen_addr.scala 50:20]
                        gen_small_2_y_begin_addr_nxt <= nxt_addr_3 @[gen_addr.scala 51:17]
                        skip @[gen_addr.scala 50:20]
                      gen.small[2].y_begin_addr <= gen_small_2_y_begin_addr_nxt @[gen_addr.scala 173:46]
                      skip @[gen_addr.scala 171:49]
                    else : @[gen_addr.scala 174:40]
                      nxt_addr_3 <= gen.small[2].y_begin_addr @[gen_addr.scala 175:42]
                      skip @[gen_addr.scala 174:40]
                    gen.small[2].bank_id <= gen.small[2].ano_bank_id @[gen_addr.scala 177:37]
                    gen.small[2].ano_bank_id <= gen.small[2].bank_id @[gen_addr.scala 178:41]
                    skip @[gen_addr.scala 170:44]
                  else : @[gen_addr.scala 179:36]
                    nxt_addr_3 <= gen.small[2].y_begin_addr @[gen_addr.scala 180:38]
                    skip @[gen_addr.scala 179:36]
                  skip @[gen_addr.scala 169:38]
                else : @[gen_addr.scala 182:32]
                  node _nxt_addr_T_20 = add(gen.small[2].now_addr, UInt<1>("h01")) @[gen_addr.scala 183:45]
                  node _nxt_addr_T_21 = tail(_nxt_addr_T_20, 1) @[gen_addr.scala 183:45]
                  nxt_addr_3 <= _nxt_addr_T_21 @[gen_addr.scala 183:34]
                  skip @[gen_addr.scala 182:32]
                wire gen_small_2_ic_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                node _gen_small_2_ic_begin_addr_T = geq(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 48:18]
                when _gen_small_2_ic_begin_addr_T : @[gen_addr.scala 48:29]
                  node _gen_small_2_ic_begin_addr_nxt_T = sub(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 49:24]
                  node _gen_small_2_ic_begin_addr_nxt_T_1 = tail(_gen_small_2_ic_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                  node _gen_small_2_ic_begin_addr_nxt_T_2 = add(_gen_small_2_ic_begin_addr_nxt_T_1, gen.small[2].min_addr) @[gen_addr.scala 49:33]
                  node _gen_small_2_ic_begin_addr_nxt_T_3 = tail(_gen_small_2_ic_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                  gen_small_2_ic_begin_addr_nxt <= _gen_small_2_ic_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                  skip @[gen_addr.scala 48:29]
                else : @[gen_addr.scala 50:20]
                  gen_small_2_ic_begin_addr_nxt <= nxt_addr_3 @[gen_addr.scala 51:17]
                  skip @[gen_addr.scala 50:20]
                gen.small[2].ic_begin_addr <= gen_small_2_ic_begin_addr_nxt @[gen_addr.scala 185:35]
                skip @[gen_addr.scala 168:37]
              else : @[gen_addr.scala 186:28]
                nxt_addr_3 <= gen.small[2].ic_begin_addr @[gen_addr.scala 187:30]
                skip @[gen_addr.scala 186:28]
              skip @[gen_addr.scala 167:31]
            else : @[gen_addr.scala 189:24]
              node _nxt_addr_T_22 = add(gen.small[2].now_addr, UInt<1>("h01")) @[gen_addr.scala 190:37]
              node _nxt_addr_T_23 = tail(_nxt_addr_T_22, 1) @[gen_addr.scala 190:37]
              nxt_addr_3 <= _nxt_addr_T_23 @[gen_addr.scala 190:26]
              skip @[gen_addr.scala 189:24]
            wire gen_small_2_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_2_now_addr_T = geq(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_2_now_addr_T : @[gen_addr.scala 48:29]
              node _gen_small_2_now_addr_nxt_T = sub(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_2_now_addr_nxt_T_1 = tail(_gen_small_2_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
              node _gen_small_2_now_addr_nxt_T_2 = add(_gen_small_2_now_addr_nxt_T_1, gen.small[2].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_2_now_addr_nxt_T_3 = tail(_gen_small_2_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
              gen_small_2_now_addr_nxt <= _gen_small_2_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_2_now_addr_nxt <= nxt_addr_3 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[2].now_addr <= gen_small_2_now_addr_nxt @[gen_addr.scala 192:22]
            skip @[gen_addr.scala 165:39]
          wire nxt_addr_4 : UInt<10> @[gen_addr.scala 163:28]
          nxt_addr_4 <= UInt<1>("h00") @[gen_addr.scala 164:18]
          wire nxt_23 : UInt<1> @[utils.scala 16:23]
          node _nxt_T_23 = eq(gen.small[3].cnt_invalid.ccnt, gen.small[3].cnt_invalid.cend) @[utils.scala 17:20]
          nxt_23 <= _nxt_T_23 @[utils.scala 17:13]
          node _gen_small_3_cnt_invalid_ccnt_T = add(gen.small[3].cnt_invalid.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_small_3_cnt_invalid_ccnt_T_1 = tail(_gen_small_3_cnt_invalid_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_small_3_cnt_invalid_ccnt_T_2 = mux(nxt_23, UInt<1>("h00"), _gen_small_3_cnt_invalid_ccnt_T_1) @[utils.scala 18:20]
          gen.small[3].cnt_invalid.ccnt <= _gen_small_3_cnt_invalid_ccnt_T_2 @[utils.scala 18:14]
          node _T_6 = or(nxt_23, gen.small[3].start) @[gen_addr.scala 165:31]
          when _T_6 : @[gen_addr.scala 165:39]
            gen.small[3].start <= UInt<1>("h01") @[gen_addr.scala 166:19]
            wire nxt_24 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_24 = eq(gen.small[3].cnt_ic.ccnt, gen.small[3].cnt_ic.cend) @[utils.scala 17:20]
            nxt_24 <= _nxt_T_24 @[utils.scala 17:13]
            node _gen_small_3_cnt_ic_ccnt_T = add(gen.small[3].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_3_cnt_ic_ccnt_T_1 = tail(_gen_small_3_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_3_cnt_ic_ccnt_T_2 = mux(nxt_24, UInt<1>("h00"), _gen_small_3_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
            gen.small[3].cnt_ic.ccnt <= _gen_small_3_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
            when nxt_24 : @[gen_addr.scala 167:31]
              wire nxt_25 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_25 = eq(gen.small[3].cnt_loop.ccnt, gen.small[3].cnt_loop.cend) @[utils.scala 17:20]
              nxt_25 <= _nxt_T_25 @[utils.scala 17:13]
              node _gen_small_3_cnt_loop_ccnt_T = add(gen.small[3].cnt_loop.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_3_cnt_loop_ccnt_T_1 = tail(_gen_small_3_cnt_loop_ccnt_T, 1) @[utils.scala 18:35]
              node _gen_small_3_cnt_loop_ccnt_T_2 = mux(nxt_25, UInt<1>("h00"), _gen_small_3_cnt_loop_ccnt_T_1) @[utils.scala 18:20]
              gen.small[3].cnt_loop.ccnt <= _gen_small_3_cnt_loop_ccnt_T_2 @[utils.scala 18:14]
              when nxt_25 : @[gen_addr.scala 168:37]
                wire nxt_26 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_26 = eq(gen.small[3].cnt_y.ccnt, gen.small[3].cnt_y.cend) @[utils.scala 17:20]
                nxt_26 <= _nxt_T_26 @[utils.scala 17:13]
                node _gen_small_3_cnt_y_ccnt_T = add(gen.small[3].cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_small_3_cnt_y_ccnt_T_1 = tail(_gen_small_3_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
                node _gen_small_3_cnt_y_ccnt_T_2 = mux(nxt_26, UInt<1>("h00"), _gen_small_3_cnt_y_ccnt_T_1) @[utils.scala 18:20]
                gen.small[3].cnt_y.ccnt <= _gen_small_3_cnt_y_ccnt_T_2 @[utils.scala 18:14]
                when nxt_26 : @[gen_addr.scala 169:38]
                  wire nxt_27 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_27 = eq(gen.small[3].cnt_ups.ccnt, gen.small[3].cnt_ups.cend) @[utils.scala 17:20]
                  nxt_27 <= _nxt_T_27 @[utils.scala 17:13]
                  node _gen_small_3_cnt_ups_ccnt_T = add(gen.small[3].cnt_ups.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_small_3_cnt_ups_ccnt_T_1 = tail(_gen_small_3_cnt_ups_ccnt_T, 1) @[utils.scala 18:35]
                  node _gen_small_3_cnt_ups_ccnt_T_2 = mux(nxt_27, UInt<1>("h00"), _gen_small_3_cnt_ups_ccnt_T_1) @[utils.scala 18:20]
                  gen.small[3].cnt_ups.ccnt <= _gen_small_3_cnt_ups_ccnt_T_2 @[utils.scala 18:14]
                  when nxt_27 : @[gen_addr.scala 170:44]
                    wire nxt_28 : UInt<1> @[utils.scala 16:23]
                    node _nxt_T_28 = eq(gen.small[3].cnt_swap.ccnt, gen.small[3].cnt_swap.cend) @[utils.scala 17:20]
                    nxt_28 <= _nxt_T_28 @[utils.scala 17:13]
                    node _gen_small_3_cnt_swap_ccnt_T = add(gen.small[3].cnt_swap.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                    node _gen_small_3_cnt_swap_ccnt_T_1 = tail(_gen_small_3_cnt_swap_ccnt_T, 1) @[utils.scala 18:35]
                    node _gen_small_3_cnt_swap_ccnt_T_2 = mux(nxt_28, UInt<1>("h00"), _gen_small_3_cnt_swap_ccnt_T_1) @[utils.scala 18:20]
                    gen.small[3].cnt_swap.ccnt <= _gen_small_3_cnt_swap_ccnt_T_2 @[utils.scala 18:14]
                    when nxt_28 : @[gen_addr.scala 171:49]
                      node _nxt_addr_T_24 = add(gen.small[3].now_addr, UInt<1>("h01")) @[gen_addr.scala 172:53]
                      node _nxt_addr_T_25 = tail(_nxt_addr_T_24, 1) @[gen_addr.scala 172:53]
                      nxt_addr_4 <= _nxt_addr_T_25 @[gen_addr.scala 172:42]
                      wire gen_small_3_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                      node _gen_small_3_y_begin_addr_T = geq(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 48:18]
                      when _gen_small_3_y_begin_addr_T : @[gen_addr.scala 48:29]
                        node _gen_small_3_y_begin_addr_nxt_T = sub(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 49:24]
                        node _gen_small_3_y_begin_addr_nxt_T_1 = tail(_gen_small_3_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                        node _gen_small_3_y_begin_addr_nxt_T_2 = add(_gen_small_3_y_begin_addr_nxt_T_1, gen.small[3].min_addr) @[gen_addr.scala 49:33]
                        node _gen_small_3_y_begin_addr_nxt_T_3 = tail(_gen_small_3_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                        gen_small_3_y_begin_addr_nxt <= _gen_small_3_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                        skip @[gen_addr.scala 48:29]
                      else : @[gen_addr.scala 50:20]
                        gen_small_3_y_begin_addr_nxt <= nxt_addr_4 @[gen_addr.scala 51:17]
                        skip @[gen_addr.scala 50:20]
                      gen.small[3].y_begin_addr <= gen_small_3_y_begin_addr_nxt @[gen_addr.scala 173:46]
                      skip @[gen_addr.scala 171:49]
                    else : @[gen_addr.scala 174:40]
                      nxt_addr_4 <= gen.small[3].y_begin_addr @[gen_addr.scala 175:42]
                      skip @[gen_addr.scala 174:40]
                    gen.small[3].bank_id <= gen.small[3].ano_bank_id @[gen_addr.scala 177:37]
                    gen.small[3].ano_bank_id <= gen.small[3].bank_id @[gen_addr.scala 178:41]
                    skip @[gen_addr.scala 170:44]
                  else : @[gen_addr.scala 179:36]
                    nxt_addr_4 <= gen.small[3].y_begin_addr @[gen_addr.scala 180:38]
                    skip @[gen_addr.scala 179:36]
                  skip @[gen_addr.scala 169:38]
                else : @[gen_addr.scala 182:32]
                  node _nxt_addr_T_26 = add(gen.small[3].now_addr, UInt<1>("h01")) @[gen_addr.scala 183:45]
                  node _nxt_addr_T_27 = tail(_nxt_addr_T_26, 1) @[gen_addr.scala 183:45]
                  nxt_addr_4 <= _nxt_addr_T_27 @[gen_addr.scala 183:34]
                  skip @[gen_addr.scala 182:32]
                wire gen_small_3_ic_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                node _gen_small_3_ic_begin_addr_T = geq(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 48:18]
                when _gen_small_3_ic_begin_addr_T : @[gen_addr.scala 48:29]
                  node _gen_small_3_ic_begin_addr_nxt_T = sub(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 49:24]
                  node _gen_small_3_ic_begin_addr_nxt_T_1 = tail(_gen_small_3_ic_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                  node _gen_small_3_ic_begin_addr_nxt_T_2 = add(_gen_small_3_ic_begin_addr_nxt_T_1, gen.small[3].min_addr) @[gen_addr.scala 49:33]
                  node _gen_small_3_ic_begin_addr_nxt_T_3 = tail(_gen_small_3_ic_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                  gen_small_3_ic_begin_addr_nxt <= _gen_small_3_ic_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                  skip @[gen_addr.scala 48:29]
                else : @[gen_addr.scala 50:20]
                  gen_small_3_ic_begin_addr_nxt <= nxt_addr_4 @[gen_addr.scala 51:17]
                  skip @[gen_addr.scala 50:20]
                gen.small[3].ic_begin_addr <= gen_small_3_ic_begin_addr_nxt @[gen_addr.scala 185:35]
                skip @[gen_addr.scala 168:37]
              else : @[gen_addr.scala 186:28]
                nxt_addr_4 <= gen.small[3].ic_begin_addr @[gen_addr.scala 187:30]
                skip @[gen_addr.scala 186:28]
              skip @[gen_addr.scala 167:31]
            else : @[gen_addr.scala 189:24]
              node _nxt_addr_T_28 = add(gen.small[3].now_addr, UInt<1>("h01")) @[gen_addr.scala 190:37]
              node _nxt_addr_T_29 = tail(_nxt_addr_T_28, 1) @[gen_addr.scala 190:37]
              nxt_addr_4 <= _nxt_addr_T_29 @[gen_addr.scala 190:26]
              skip @[gen_addr.scala 189:24]
            wire gen_small_3_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_3_now_addr_T = geq(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_3_now_addr_T : @[gen_addr.scala 48:29]
              node _gen_small_3_now_addr_nxt_T = sub(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_3_now_addr_nxt_T_1 = tail(_gen_small_3_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
              node _gen_small_3_now_addr_nxt_T_2 = add(_gen_small_3_now_addr_nxt_T_1, gen.small[3].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_3_now_addr_nxt_T_3 = tail(_gen_small_3_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
              gen_small_3_now_addr_nxt <= _gen_small_3_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_3_now_addr_nxt <= nxt_addr_4 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[3].now_addr <= gen_small_3_now_addr_nxt @[gen_addr.scala 192:22]
            skip @[gen_addr.scala 165:39]
          skip @[Conditional.scala 40:58]
        else : @[Conditional.scala 39:67]
          node _T_7 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
          node _T_8 = asUInt(job_type) @[Conditional.scala 37:39]
          node _T_9 = eq(_T_7, _T_8) @[Conditional.scala 37:30]
          when _T_9 : @[Conditional.scala 39:67]
            wire nxt_addr_5 : UInt<10> @[gen_addr.scala 107:28]
            nxt_addr_5 <= UInt<1>("h00") @[gen_addr.scala 108:18]
            wire nxt_29 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_29 = eq(gen.big.cnt_maxp.ccnt, gen.big.cnt_maxp.cend) @[utils.scala 17:20]
            nxt_29 <= _nxt_T_29 @[utils.scala 17:13]
            node _gen_big_cnt_maxp_ccnt_T = add(gen.big.cnt_maxp.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_big_cnt_maxp_ccnt_T_1 = tail(_gen_big_cnt_maxp_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_big_cnt_maxp_ccnt_T_2 = mux(nxt_29, UInt<1>("h00"), _gen_big_cnt_maxp_ccnt_T_1) @[utils.scala 18:20]
            gen.big.cnt_maxp.ccnt <= _gen_big_cnt_maxp_ccnt_T_2 @[utils.scala 18:14]
            when nxt_29 : @[gen_addr.scala 109:29]
              wire nxt_30 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_30 = eq(gen.big.cnt_ic.ccnt, gen.big.cnt_ic.cend) @[utils.scala 17:20]
              nxt_30 <= _nxt_T_30 @[utils.scala 17:13]
              node _gen_big_cnt_ic_ccnt_T_3 = add(gen.big.cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_big_cnt_ic_ccnt_T_4 = tail(_gen_big_cnt_ic_ccnt_T_3, 1) @[utils.scala 18:35]
              node _gen_big_cnt_ic_ccnt_T_5 = mux(nxt_30, UInt<1>("h00"), _gen_big_cnt_ic_ccnt_T_4) @[utils.scala 18:20]
              gen.big.cnt_ic.ccnt <= _gen_big_cnt_ic_ccnt_T_5 @[utils.scala 18:14]
              when nxt_30 : @[gen_addr.scala 110:31]
                wire nxt_31 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_31 = eq(gen.big.cnt_y.ccnt, gen.big.cnt_y.cend) @[utils.scala 17:20]
                nxt_31 <= _nxt_T_31 @[utils.scala 17:13]
                node _gen_big_cnt_y_ccnt_T_3 = add(gen.big.cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_big_cnt_y_ccnt_T_4 = tail(_gen_big_cnt_y_ccnt_T_3, 1) @[utils.scala 18:35]
                node _gen_big_cnt_y_ccnt_T_5 = mux(nxt_31, UInt<1>("h00"), _gen_big_cnt_y_ccnt_T_4) @[utils.scala 18:20]
                gen.big.cnt_y.ccnt <= _gen_big_cnt_y_ccnt_T_5 @[utils.scala 18:14]
                when nxt_31 : @[gen_addr.scala 111:34]
                  wire nxt_32 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_32 = eq(gen.big.cnt_x.ccnt, gen.big.cnt_x.cend) @[utils.scala 17:20]
                  nxt_32 <= _nxt_T_32 @[utils.scala 17:13]
                  node _gen_big_cnt_x_ccnt_T_3 = add(gen.big.cnt_x.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_big_cnt_x_ccnt_T_4 = tail(_gen_big_cnt_x_ccnt_T_3, 1) @[utils.scala 18:35]
                  node _gen_big_cnt_x_ccnt_T_5 = mux(nxt_32, UInt<1>("h00"), _gen_big_cnt_x_ccnt_T_4) @[utils.scala 18:20]
                  gen.big.cnt_x.ccnt <= _gen_big_cnt_x_ccnt_T_5 @[utils.scala 18:14]
                  when nxt_32 : @[gen_addr.scala 112:38]
                    gen.big.flag_end <= UInt<1>("h01") @[gen_addr.scala 113:34]
                    skip @[gen_addr.scala 112:38]
                  else : @[gen_addr.scala 114:32]
                    node _nxt_addr_T_30 = add(gen.big.now_addr, UInt<1>("h01")) @[gen_addr.scala 115:45]
                    node _nxt_addr_T_31 = tail(_nxt_addr_T_30, 1) @[gen_addr.scala 115:45]
                    nxt_addr_5 <= _nxt_addr_T_31 @[gen_addr.scala 115:34]
                    skip @[gen_addr.scala 114:32]
                  skip @[gen_addr.scala 111:34]
                else : @[gen_addr.scala 117:28]
                  node _nxt_addr_T_32 = add(gen.big.y_begin_addr, gen.big.block_size) @[gen_addr.scala 118:45]
                  node _nxt_addr_T_33 = tail(_nxt_addr_T_32, 1) @[gen_addr.scala 118:45]
                  node _nxt_addr_T_34 = add(_nxt_addr_T_33, UInt<1>("h01")) @[gen_addr.scala 118:56]
                  node _nxt_addr_T_35 = tail(_nxt_addr_T_34, 1) @[gen_addr.scala 118:56]
                  nxt_addr_5 <= _nxt_addr_T_35 @[gen_addr.scala 118:30]
                  skip @[gen_addr.scala 117:28]
                skip @[gen_addr.scala 110:31]
              else : @[gen_addr.scala 120:24]
                node _nxt_addr_T_36 = add(gen.big.y_begin_addr, UInt<1>("h01")) @[gen_addr.scala 121:41]
                node _nxt_addr_T_37 = tail(_nxt_addr_T_36, 1) @[gen_addr.scala 121:41]
                nxt_addr_5 <= _nxt_addr_T_37 @[gen_addr.scala 121:26]
                skip @[gen_addr.scala 120:24]
              wire gen_big_y_begin_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
              node _gen_big_y_begin_addr_T_1 = geq(nxt_addr_5, gen.big.max_addr) @[gen_addr.scala 48:18]
              when _gen_big_y_begin_addr_T_1 : @[gen_addr.scala 48:29]
                node _gen_big_y_begin_addr_nxt_T_4 = sub(nxt_addr_5, gen.big.max_addr) @[gen_addr.scala 49:24]
                node _gen_big_y_begin_addr_nxt_T_5 = tail(_gen_big_y_begin_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
                node _gen_big_y_begin_addr_nxt_T_6 = add(_gen_big_y_begin_addr_nxt_T_5, gen.big.min_addr) @[gen_addr.scala 49:33]
                node _gen_big_y_begin_addr_nxt_T_7 = tail(_gen_big_y_begin_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
                gen_big_y_begin_addr_nxt_1 <= _gen_big_y_begin_addr_nxt_T_7 @[gen_addr.scala 49:17]
                skip @[gen_addr.scala 48:29]
              else : @[gen_addr.scala 50:20]
                gen_big_y_begin_addr_nxt_1 <= nxt_addr_5 @[gen_addr.scala 51:17]
                skip @[gen_addr.scala 50:20]
              gen.big.y_begin_addr <= gen_big_y_begin_addr_nxt_1 @[gen_addr.scala 123:26]
              skip @[gen_addr.scala 109:29]
            else : @[gen_addr.scala 124:20]
              node _T_10 = eq(UInt<1>("h00"), gen.big.cnt_maxp.ccnt) @[Conditional.scala 37:30]
              when _T_10 : @[Conditional.scala 40:58]
                node _nxt_addr_T_38 = add(gen.big.y_begin_addr, gen.big.block_size) @[gen_addr.scala 127:45]
                node _nxt_addr_T_39 = tail(_nxt_addr_T_38, 1) @[gen_addr.scala 127:45]
                nxt_addr_5 <= _nxt_addr_T_39 @[gen_addr.scala 127:30]
                skip @[Conditional.scala 40:58]
              else : @[Conditional.scala 39:67]
                node _T_11 = eq(UInt<1>("h01"), gen.big.cnt_maxp.ccnt) @[Conditional.scala 37:30]
                when _T_11 : @[Conditional.scala 39:67]
                  node _nxt_addr_T_40 = add(gen.big.y_begin_addr, gen.big.column_size) @[gen_addr.scala 130:45]
                  node _nxt_addr_T_41 = tail(_nxt_addr_T_40, 1) @[gen_addr.scala 130:45]
                  nxt_addr_5 <= _nxt_addr_T_41 @[gen_addr.scala 130:30]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_12 = eq(UInt<2>("h02"), gen.big.cnt_maxp.ccnt) @[Conditional.scala 37:30]
                  when _T_12 : @[Conditional.scala 39:67]
                    node _nxt_addr_T_42 = add(gen.big.y_begin_addr, gen.big.column_size) @[gen_addr.scala 133:45]
                    node _nxt_addr_T_43 = tail(_nxt_addr_T_42, 1) @[gen_addr.scala 133:45]
                    node _nxt_addr_T_44 = add(_nxt_addr_T_43, gen.big.block_size) @[gen_addr.scala 133:57]
                    node _nxt_addr_T_45 = tail(_nxt_addr_T_44, 1) @[gen_addr.scala 133:57]
                    nxt_addr_5 <= _nxt_addr_T_45 @[gen_addr.scala 133:30]
                    skip @[Conditional.scala 39:67]
              skip @[gen_addr.scala 124:20]
            wire gen_big_now_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
            node _gen_big_now_addr_T_1 = geq(nxt_addr_5, gen.big.max_addr) @[gen_addr.scala 48:18]
            when _gen_big_now_addr_T_1 : @[gen_addr.scala 48:29]
              node _gen_big_now_addr_nxt_T_4 = sub(nxt_addr_5, gen.big.max_addr) @[gen_addr.scala 49:24]
              node _gen_big_now_addr_nxt_T_5 = tail(_gen_big_now_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
              node _gen_big_now_addr_nxt_T_6 = add(_gen_big_now_addr_nxt_T_5, gen.big.min_addr) @[gen_addr.scala 49:33]
              node _gen_big_now_addr_nxt_T_7 = tail(_gen_big_now_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
              gen_big_now_addr_nxt_1 <= _gen_big_now_addr_nxt_T_7 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_big_now_addr_nxt_1 <= nxt_addr_5 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.big.now_addr <= gen_big_now_addr_nxt_1 @[gen_addr.scala 137:18]
            wire nxt_addr_6 : UInt<10> @[gen_addr.scala 196:28]
            nxt_addr_6 <= UInt<1>("h00") @[gen_addr.scala 197:18]
            wire nxt_33 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_33 = eq(gen.small[0].cnt_maxp.ccnt, gen.small[0].cnt_maxp.cend) @[utils.scala 17:20]
            nxt_33 <= _nxt_T_33 @[utils.scala 17:13]
            node _gen_small_0_cnt_maxp_ccnt_T = add(gen.small[0].cnt_maxp.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_0_cnt_maxp_ccnt_T_1 = tail(_gen_small_0_cnt_maxp_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_0_cnt_maxp_ccnt_T_2 = mux(nxt_33, UInt<1>("h00"), _gen_small_0_cnt_maxp_ccnt_T_1) @[utils.scala 18:20]
            gen.small[0].cnt_maxp.ccnt <= _gen_small_0_cnt_maxp_ccnt_T_2 @[utils.scala 18:14]
            when nxt_33 : @[gen_addr.scala 198:29]
              wire nxt_34 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_34 = eq(gen.small[0].cnt_ic.ccnt, gen.small[0].cnt_ic.cend) @[utils.scala 17:20]
              nxt_34 <= _nxt_T_34 @[utils.scala 17:13]
              node _gen_small_0_cnt_ic_ccnt_T_3 = add(gen.small[0].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_0_cnt_ic_ccnt_T_4 = tail(_gen_small_0_cnt_ic_ccnt_T_3, 1) @[utils.scala 18:35]
              node _gen_small_0_cnt_ic_ccnt_T_5 = mux(nxt_34, UInt<1>("h00"), _gen_small_0_cnt_ic_ccnt_T_4) @[utils.scala 18:20]
              gen.small[0].cnt_ic.ccnt <= _gen_small_0_cnt_ic_ccnt_T_5 @[utils.scala 18:14]
              when nxt_34 : @[gen_addr.scala 199:31]
                node _nxt_addr_T_46 = add(gen.small[0].now_addr, UInt<1>("h01")) @[gen_addr.scala 200:37]
                node _nxt_addr_T_47 = tail(_nxt_addr_T_46, 1) @[gen_addr.scala 200:37]
                nxt_addr_6 <= _nxt_addr_T_47 @[gen_addr.scala 200:26]
                gen.small[0].bank_id <= gen.small[0].ano_bank_id @[gen_addr.scala 201:25]
                gen.small[0].ano_bank_id <= gen.small[0].bank_id @[gen_addr.scala 202:29]
                skip @[gen_addr.scala 199:31]
              else : @[gen_addr.scala 203:24]
                node _nxt_addr_T_48 = add(gen.small[0].y_begin_addr, UInt<1>("h01")) @[gen_addr.scala 204:41]
                node _nxt_addr_T_49 = tail(_nxt_addr_T_48, 1) @[gen_addr.scala 204:41]
                nxt_addr_6 <= _nxt_addr_T_49 @[gen_addr.scala 204:26]
                gen.small[0].bank_id <= gen.small[0].ano_bank_id @[gen_addr.scala 205:25]
                gen.small[0].ano_bank_id <= gen.small[0].bank_id @[gen_addr.scala 206:29]
                skip @[gen_addr.scala 203:24]
              wire gen_small_0_y_begin_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
              node _gen_small_0_y_begin_addr_T_1 = geq(nxt_addr_6, gen.small[0].max_addr) @[gen_addr.scala 48:18]
              when _gen_small_0_y_begin_addr_T_1 : @[gen_addr.scala 48:29]
                node _gen_small_0_y_begin_addr_nxt_T_4 = sub(nxt_addr_6, gen.small[0].max_addr) @[gen_addr.scala 49:24]
                node _gen_small_0_y_begin_addr_nxt_T_5 = tail(_gen_small_0_y_begin_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
                node _gen_small_0_y_begin_addr_nxt_T_6 = add(_gen_small_0_y_begin_addr_nxt_T_5, gen.small[0].min_addr) @[gen_addr.scala 49:33]
                node _gen_small_0_y_begin_addr_nxt_T_7 = tail(_gen_small_0_y_begin_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
                gen_small_0_y_begin_addr_nxt_1 <= _gen_small_0_y_begin_addr_nxt_T_7 @[gen_addr.scala 49:17]
                skip @[gen_addr.scala 48:29]
              else : @[gen_addr.scala 50:20]
                gen_small_0_y_begin_addr_nxt_1 <= nxt_addr_6 @[gen_addr.scala 51:17]
                skip @[gen_addr.scala 50:20]
              gen.small[0].y_begin_addr <= gen_small_0_y_begin_addr_nxt_1 @[gen_addr.scala 208:26]
              skip @[gen_addr.scala 198:29]
            else : @[gen_addr.scala 209:20]
              node _T_13 = eq(UInt<1>("h00"), gen.small[0].cnt_maxp.ccnt) @[Conditional.scala 37:30]
              when _T_13 : @[Conditional.scala 40:58]
                node _nxt_addr_T_50 = add(gen.small[0].y_begin_addr, gen.small[0].block_size) @[gen_addr.scala 212:45]
                node _nxt_addr_T_51 = tail(_nxt_addr_T_50, 1) @[gen_addr.scala 212:45]
                nxt_addr_6 <= _nxt_addr_T_51 @[gen_addr.scala 212:30]
                skip @[Conditional.scala 40:58]
              else : @[Conditional.scala 39:67]
                node _T_14 = eq(UInt<1>("h01"), gen.small[0].cnt_maxp.ccnt) @[Conditional.scala 37:30]
                when _T_14 : @[Conditional.scala 39:67]
                  nxt_addr_6 <= gen.small[0].y_begin_addr @[gen_addr.scala 215:30]
                  gen.small[0].bank_id <= gen.small[0].ano_bank_id @[gen_addr.scala 216:29]
                  gen.small[0].ano_bank_id <= gen.small[0].bank_id @[gen_addr.scala 217:33]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_15 = eq(UInt<2>("h02"), gen.small[0].cnt_maxp.ccnt) @[Conditional.scala 37:30]
                  when _T_15 : @[Conditional.scala 39:67]
                    node _nxt_addr_T_52 = add(gen.small[0].y_begin_addr, gen.small[0].block_size) @[gen_addr.scala 220:45]
                    node _nxt_addr_T_53 = tail(_nxt_addr_T_52, 1) @[gen_addr.scala 220:45]
                    nxt_addr_6 <= _nxt_addr_T_53 @[gen_addr.scala 220:30]
                    skip @[Conditional.scala 39:67]
              skip @[gen_addr.scala 209:20]
            wire gen_small_0_now_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_0_now_addr_T_1 = geq(nxt_addr_6, gen.small[0].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_0_now_addr_T_1 : @[gen_addr.scala 48:29]
              node _gen_small_0_now_addr_nxt_T_4 = sub(nxt_addr_6, gen.small[0].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_0_now_addr_nxt_T_5 = tail(_gen_small_0_now_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
              node _gen_small_0_now_addr_nxt_T_6 = add(_gen_small_0_now_addr_nxt_T_5, gen.small[0].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_0_now_addr_nxt_T_7 = tail(_gen_small_0_now_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
              gen_small_0_now_addr_nxt_1 <= _gen_small_0_now_addr_nxt_T_7 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_0_now_addr_nxt_1 <= nxt_addr_6 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[0].now_addr <= gen_small_0_now_addr_nxt_1 @[gen_addr.scala 224:18]
            wire nxt_addr_7 : UInt<10> @[gen_addr.scala 196:28]
            nxt_addr_7 <= UInt<1>("h00") @[gen_addr.scala 197:18]
            wire nxt_35 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_35 = eq(gen.small[1].cnt_maxp.ccnt, gen.small[1].cnt_maxp.cend) @[utils.scala 17:20]
            nxt_35 <= _nxt_T_35 @[utils.scala 17:13]
            node _gen_small_1_cnt_maxp_ccnt_T = add(gen.small[1].cnt_maxp.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_1_cnt_maxp_ccnt_T_1 = tail(_gen_small_1_cnt_maxp_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_1_cnt_maxp_ccnt_T_2 = mux(nxt_35, UInt<1>("h00"), _gen_small_1_cnt_maxp_ccnt_T_1) @[utils.scala 18:20]
            gen.small[1].cnt_maxp.ccnt <= _gen_small_1_cnt_maxp_ccnt_T_2 @[utils.scala 18:14]
            when nxt_35 : @[gen_addr.scala 198:29]
              wire nxt_36 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_36 = eq(gen.small[1].cnt_ic.ccnt, gen.small[1].cnt_ic.cend) @[utils.scala 17:20]
              nxt_36 <= _nxt_T_36 @[utils.scala 17:13]
              node _gen_small_1_cnt_ic_ccnt_T_3 = add(gen.small[1].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_1_cnt_ic_ccnt_T_4 = tail(_gen_small_1_cnt_ic_ccnt_T_3, 1) @[utils.scala 18:35]
              node _gen_small_1_cnt_ic_ccnt_T_5 = mux(nxt_36, UInt<1>("h00"), _gen_small_1_cnt_ic_ccnt_T_4) @[utils.scala 18:20]
              gen.small[1].cnt_ic.ccnt <= _gen_small_1_cnt_ic_ccnt_T_5 @[utils.scala 18:14]
              when nxt_36 : @[gen_addr.scala 199:31]
                node _nxt_addr_T_54 = add(gen.small[1].now_addr, UInt<1>("h01")) @[gen_addr.scala 200:37]
                node _nxt_addr_T_55 = tail(_nxt_addr_T_54, 1) @[gen_addr.scala 200:37]
                nxt_addr_7 <= _nxt_addr_T_55 @[gen_addr.scala 200:26]
                gen.small[1].bank_id <= gen.small[1].ano_bank_id @[gen_addr.scala 201:25]
                gen.small[1].ano_bank_id <= gen.small[1].bank_id @[gen_addr.scala 202:29]
                skip @[gen_addr.scala 199:31]
              else : @[gen_addr.scala 203:24]
                node _nxt_addr_T_56 = add(gen.small[1].y_begin_addr, UInt<1>("h01")) @[gen_addr.scala 204:41]
                node _nxt_addr_T_57 = tail(_nxt_addr_T_56, 1) @[gen_addr.scala 204:41]
                nxt_addr_7 <= _nxt_addr_T_57 @[gen_addr.scala 204:26]
                gen.small[1].bank_id <= gen.small[1].ano_bank_id @[gen_addr.scala 205:25]
                gen.small[1].ano_bank_id <= gen.small[1].bank_id @[gen_addr.scala 206:29]
                skip @[gen_addr.scala 203:24]
              wire gen_small_1_y_begin_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
              node _gen_small_1_y_begin_addr_T_1 = geq(nxt_addr_7, gen.small[1].max_addr) @[gen_addr.scala 48:18]
              when _gen_small_1_y_begin_addr_T_1 : @[gen_addr.scala 48:29]
                node _gen_small_1_y_begin_addr_nxt_T_4 = sub(nxt_addr_7, gen.small[1].max_addr) @[gen_addr.scala 49:24]
                node _gen_small_1_y_begin_addr_nxt_T_5 = tail(_gen_small_1_y_begin_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
                node _gen_small_1_y_begin_addr_nxt_T_6 = add(_gen_small_1_y_begin_addr_nxt_T_5, gen.small[1].min_addr) @[gen_addr.scala 49:33]
                node _gen_small_1_y_begin_addr_nxt_T_7 = tail(_gen_small_1_y_begin_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
                gen_small_1_y_begin_addr_nxt_1 <= _gen_small_1_y_begin_addr_nxt_T_7 @[gen_addr.scala 49:17]
                skip @[gen_addr.scala 48:29]
              else : @[gen_addr.scala 50:20]
                gen_small_1_y_begin_addr_nxt_1 <= nxt_addr_7 @[gen_addr.scala 51:17]
                skip @[gen_addr.scala 50:20]
              gen.small[1].y_begin_addr <= gen_small_1_y_begin_addr_nxt_1 @[gen_addr.scala 208:26]
              skip @[gen_addr.scala 198:29]
            else : @[gen_addr.scala 209:20]
              node _T_16 = eq(UInt<1>("h00"), gen.small[1].cnt_maxp.ccnt) @[Conditional.scala 37:30]
              when _T_16 : @[Conditional.scala 40:58]
                node _nxt_addr_T_58 = add(gen.small[1].y_begin_addr, gen.small[1].block_size) @[gen_addr.scala 212:45]
                node _nxt_addr_T_59 = tail(_nxt_addr_T_58, 1) @[gen_addr.scala 212:45]
                nxt_addr_7 <= _nxt_addr_T_59 @[gen_addr.scala 212:30]
                skip @[Conditional.scala 40:58]
              else : @[Conditional.scala 39:67]
                node _T_17 = eq(UInt<1>("h01"), gen.small[1].cnt_maxp.ccnt) @[Conditional.scala 37:30]
                when _T_17 : @[Conditional.scala 39:67]
                  nxt_addr_7 <= gen.small[1].y_begin_addr @[gen_addr.scala 215:30]
                  gen.small[1].bank_id <= gen.small[1].ano_bank_id @[gen_addr.scala 216:29]
                  gen.small[1].ano_bank_id <= gen.small[1].bank_id @[gen_addr.scala 217:33]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_18 = eq(UInt<2>("h02"), gen.small[1].cnt_maxp.ccnt) @[Conditional.scala 37:30]
                  when _T_18 : @[Conditional.scala 39:67]
                    node _nxt_addr_T_60 = add(gen.small[1].y_begin_addr, gen.small[1].block_size) @[gen_addr.scala 220:45]
                    node _nxt_addr_T_61 = tail(_nxt_addr_T_60, 1) @[gen_addr.scala 220:45]
                    nxt_addr_7 <= _nxt_addr_T_61 @[gen_addr.scala 220:30]
                    skip @[Conditional.scala 39:67]
              skip @[gen_addr.scala 209:20]
            wire gen_small_1_now_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_1_now_addr_T_1 = geq(nxt_addr_7, gen.small[1].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_1_now_addr_T_1 : @[gen_addr.scala 48:29]
              node _gen_small_1_now_addr_nxt_T_4 = sub(nxt_addr_7, gen.small[1].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_1_now_addr_nxt_T_5 = tail(_gen_small_1_now_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
              node _gen_small_1_now_addr_nxt_T_6 = add(_gen_small_1_now_addr_nxt_T_5, gen.small[1].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_1_now_addr_nxt_T_7 = tail(_gen_small_1_now_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
              gen_small_1_now_addr_nxt_1 <= _gen_small_1_now_addr_nxt_T_7 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_1_now_addr_nxt_1 <= nxt_addr_7 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[1].now_addr <= gen_small_1_now_addr_nxt_1 @[gen_addr.scala 224:18]
            skip @[Conditional.scala 39:67]
        node _io_valid_out_T = not(gen.big.flag_end) @[read.scala 40:25]
        io.valid_out <= _io_valid_out_T @[read.scala 40:22]
        wire io_to_banks_ret : {addrs : {addr : UInt<10>, bank_id : UInt<3>}[5]} @[gen_addr.scala 317:23]
        wire io_to_banks_ret_addrs_0_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
        io_to_banks_ret_addrs_0_ret.addr <= gen.big.now_addr @[gen_addr.scala 15:18]
        io_to_banks_ret_addrs_0_ret.bank_id <= gen.big.bank_id @[gen_addr.scala 16:21]
        io_to_banks_ret.addrs[0].bank_id <= io_to_banks_ret_addrs_0_ret.bank_id @[gen_addr.scala 318:22]
        io_to_banks_ret.addrs[0].addr <= io_to_banks_ret_addrs_0_ret.addr @[gen_addr.scala 318:22]
        wire io_to_banks_ret_addrs_1_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
        io_to_banks_ret_addrs_1_ret.addr <= gen.small[0].now_addr @[gen_addr.scala 15:18]
        io_to_banks_ret_addrs_1_ret.bank_id <= gen.small[0].bank_id @[gen_addr.scala 16:21]
        io_to_banks_ret.addrs[1].bank_id <= io_to_banks_ret_addrs_1_ret.bank_id @[gen_addr.scala 320:28]
        io_to_banks_ret.addrs[1].addr <= io_to_banks_ret_addrs_1_ret.addr @[gen_addr.scala 320:28]
        wire io_to_banks_ret_addrs_2_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
        io_to_banks_ret_addrs_2_ret.addr <= gen.small[1].now_addr @[gen_addr.scala 15:18]
        io_to_banks_ret_addrs_2_ret.bank_id <= gen.small[1].bank_id @[gen_addr.scala 16:21]
        io_to_banks_ret.addrs[2].bank_id <= io_to_banks_ret_addrs_2_ret.bank_id @[gen_addr.scala 320:28]
        io_to_banks_ret.addrs[2].addr <= io_to_banks_ret_addrs_2_ret.addr @[gen_addr.scala 320:28]
        wire io_to_banks_ret_addrs_3_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
        io_to_banks_ret_addrs_3_ret.addr <= gen.small[2].now_addr @[gen_addr.scala 15:18]
        io_to_banks_ret_addrs_3_ret.bank_id <= gen.small[2].bank_id @[gen_addr.scala 16:21]
        io_to_banks_ret.addrs[3].bank_id <= io_to_banks_ret_addrs_3_ret.bank_id @[gen_addr.scala 320:28]
        io_to_banks_ret.addrs[3].addr <= io_to_banks_ret_addrs_3_ret.addr @[gen_addr.scala 320:28]
        wire io_to_banks_ret_addrs_4_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
        io_to_banks_ret_addrs_4_ret.addr <= gen.small[3].now_addr @[gen_addr.scala 15:18]
        io_to_banks_ret_addrs_4_ret.bank_id <= gen.small[3].bank_id @[gen_addr.scala 16:21]
        io_to_banks_ret.addrs[4].bank_id <= io_to_banks_ret_addrs_4_ret.bank_id @[gen_addr.scala 320:28]
        io_to_banks_ret.addrs[4].addr <= io_to_banks_ret_addrs_4_ret.addr @[gen_addr.scala 320:28]
        io.to_banks.addrs[0].bank_id <= io_to_banks_ret.addrs[0].bank_id @[read.scala 41:21]
        io.to_banks.addrs[0].addr <= io_to_banks_ret.addrs[0].addr @[read.scala 41:21]
        io.to_banks.addrs[1].bank_id <= io_to_banks_ret.addrs[1].bank_id @[read.scala 41:21]
        io.to_banks.addrs[1].addr <= io_to_banks_ret.addrs[1].addr @[read.scala 41:21]
        io.to_banks.addrs[2].bank_id <= io_to_banks_ret.addrs[2].bank_id @[read.scala 41:21]
        io.to_banks.addrs[2].addr <= io_to_banks_ret.addrs[2].addr @[read.scala 41:21]
        io.to_banks.addrs[3].bank_id <= io_to_banks_ret.addrs[3].bank_id @[read.scala 41:21]
        io.to_banks.addrs[3].addr <= io_to_banks_ret.addrs[3].addr @[read.scala 41:21]
        io.to_banks.addrs[4].bank_id <= io_to_banks_ret.addrs[4].bank_id @[read.scala 41:21]
        io.to_banks.addrs[4].addr <= io_to_banks_ret.addrs[4].addr @[read.scala 41:21]
        skip @[read.scala 31:28]
    
  module GraphReader_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip valid_in : UInt<1>, valid_out : UInt<1>, flip flag_job : UInt<1>, flip job : {big : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_ups_end : UInt<1>}, small : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, ano_bank_id : UInt<3>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_invalid_end : UInt<10>, cnt_ups_end : UInt<1>}[4]}, flip job_type : UInt<1>, to_banks : {addrs : {addr : UInt<10>, bank_id : UInt<3>}[5]}}
    
    io.valid_out <= UInt<1>("h00") @[read.scala 21:18]
    wire _io_to_banks_WIRE : {addrs : {addr : UInt<10>, bank_id : UInt<3>}[5]} @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[0].bank_id <= UInt<3>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[0].addr <= UInt<10>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[1].bank_id <= UInt<3>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[1].addr <= UInt<10>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[2].bank_id <= UInt<3>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[2].addr <= UInt<10>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[3].bank_id <= UInt<3>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[3].addr <= UInt<10>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[4].bank_id <= UInt<3>("h00") @[read.scala 22:32]
    _io_to_banks_WIRE.addrs[4].addr <= UInt<10>("h00") @[read.scala 22:32]
    io.to_banks.addrs[0].bank_id <= _io_to_banks_WIRE.addrs[0].bank_id @[read.scala 22:17]
    io.to_banks.addrs[0].addr <= _io_to_banks_WIRE.addrs[0].addr @[read.scala 22:17]
    io.to_banks.addrs[1].bank_id <= _io_to_banks_WIRE.addrs[1].bank_id @[read.scala 22:17]
    io.to_banks.addrs[1].addr <= _io_to_banks_WIRE.addrs[1].addr @[read.scala 22:17]
    io.to_banks.addrs[2].bank_id <= _io_to_banks_WIRE.addrs[2].bank_id @[read.scala 22:17]
    io.to_banks.addrs[2].addr <= _io_to_banks_WIRE.addrs[2].addr @[read.scala 22:17]
    io.to_banks.addrs[3].bank_id <= _io_to_banks_WIRE.addrs[3].bank_id @[read.scala 22:17]
    io.to_banks.addrs[3].addr <= _io_to_banks_WIRE.addrs[3].addr @[read.scala 22:17]
    io.to_banks.addrs[4].bank_id <= _io_to_banks_WIRE.addrs[4].bank_id @[read.scala 22:17]
    io.to_banks.addrs[4].addr <= _io_to_banks_WIRE.addrs[4].addr @[read.scala 22:17]
    reg job_type : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[read.scala 24:27]
    wire _gen_WIRE : {big : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_loop : {ccnt : UInt<10>, cend : UInt<10>}, cnt_ups : {ccnt : UInt<1>, cend : UInt<1>}, cnt_maxp : {ccnt : UInt<2>, cend : UInt<2>}, y_begin_addr : UInt<10>, ic_begin_addr : UInt<10>, flag_end : UInt<1>}, small : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, ano_bank_id : UInt<3>, cnt_invalid : {ccnt : UInt<10>, cend : UInt<10>}, cnt_maxp : {ccnt : UInt<2>, cend : UInt<2>}, cnt_ups : {ccnt : UInt<1>, cend : UInt<1>}, cnt_loop : {ccnt : UInt<10>, cend : UInt<10>}, cnt_swap : {ccnt : UInt<1>, cend : UInt<1>}, y_begin_addr : UInt<10>, ic_begin_addr : UInt<10>, start : UInt<1>}[4]} @[read.scala 26:35]
    _gen_WIRE.small[0].start <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].ic_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].y_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_swap.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_swap.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_loop.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_loop.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_ups.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_ups.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_maxp.cend <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_maxp.ccnt <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_invalid.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_invalid.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].ano_bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].column_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].block_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_y.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_y.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_x.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_x.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_ic.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].cnt_ic.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].now_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].min_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[0].max_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].start <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].ic_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].y_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_swap.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_swap.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_loop.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_loop.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_ups.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_ups.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_maxp.cend <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_maxp.ccnt <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_invalid.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_invalid.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].ano_bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].column_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].block_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_y.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_y.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_x.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_x.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_ic.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].cnt_ic.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].now_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].min_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[1].max_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].start <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].ic_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].y_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_swap.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_swap.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_loop.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_loop.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_ups.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_ups.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_maxp.cend <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_maxp.ccnt <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_invalid.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_invalid.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].ano_bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].column_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].block_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_y.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_y.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_x.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_x.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_ic.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].cnt_ic.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].now_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].min_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[2].max_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].start <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].ic_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].y_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_swap.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_swap.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_loop.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_loop.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_ups.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_ups.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_maxp.cend <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_maxp.ccnt <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_invalid.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_invalid.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].ano_bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].column_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].block_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_y.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_y.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_x.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_x.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_ic.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].cnt_ic.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].now_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].min_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.small[3].max_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.flag_end <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.big.ic_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.y_begin_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_maxp.cend <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_maxp.ccnt <= UInt<2>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_ups.cend <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_ups.ccnt <= UInt<1>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_loop.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_loop.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.column_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.block_size <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.bank_id <= UInt<3>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_y.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_y.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_x.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_x.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_ic.cend <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.cnt_ic.ccnt <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.now_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.min_addr <= UInt<10>("h00") @[read.scala 26:35]
    _gen_WIRE.big.max_addr <= UInt<10>("h00") @[read.scala 26:35]
    reg gen : {big : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_loop : {ccnt : UInt<10>, cend : UInt<10>}, cnt_ups : {ccnt : UInt<1>, cend : UInt<1>}, cnt_maxp : {ccnt : UInt<2>, cend : UInt<2>}, y_begin_addr : UInt<10>, ic_begin_addr : UInt<10>, flag_end : UInt<1>}, small : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, ano_bank_id : UInt<3>, cnt_invalid : {ccnt : UInt<10>, cend : UInt<10>}, cnt_maxp : {ccnt : UInt<2>, cend : UInt<2>}, cnt_ups : {ccnt : UInt<1>, cend : UInt<1>}, cnt_loop : {ccnt : UInt<10>, cend : UInt<10>}, cnt_swap : {ccnt : UInt<1>, cend : UInt<1>}, y_begin_addr : UInt<10>, ic_begin_addr : UInt<10>, start : UInt<1>}[4]}, clock with : (reset => (reset, _gen_WIRE)) @[read.scala 26:22]
    when io.flag_job : @[read.scala 28:22]
      gen.big.max_addr <= io.job.big.max_addr @[gen_addr.scala 56:18]
      gen.big.min_addr <= io.job.big.min_addr @[gen_addr.scala 57:18]
      gen.big.now_addr <= io.job.big.begin_addr @[gen_addr.scala 58:18]
      gen.big.block_size <= io.job.big.block_size @[gen_addr.scala 59:20]
      gen.big.column_size <= io.job.big.column_size @[gen_addr.scala 60:21]
      gen.big.cnt_ic.cend <= io.job.big.cnt_ic_end @[utils.scala 22:14]
      gen.big.cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.big.cnt_x.cend <= io.job.big.cnt_x_end @[utils.scala 22:14]
      gen.big.cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.big.cnt_y.cend <= io.job.big.cnt_y_end @[utils.scala 22:14]
      gen.big.cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.big.bank_id <= io.job.big.bank_id @[gen_addr.scala 64:17]
      gen.big.cnt_loop.cend <= io.job.big.cnt_loop_end @[utils.scala 26:14]
      gen.big.cnt_loop.ccnt <= io.job.big.begin_loop @[utils.scala 27:14]
      gen.big.cnt_ups.cend <= io.job.big.cnt_ups_end @[utils.scala 22:14]
      gen.big.cnt_ups.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.big.cnt_maxp.cend <= UInt<2>("h03") @[utils.scala 22:14]
      gen.big.cnt_maxp.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.big.y_begin_addr <= io.job.big.begin_addr @[gen_addr.scala 147:22]
      gen.big.ic_begin_addr <= io.job.big.begin_addr @[gen_addr.scala 148:23]
      gen.small[0].max_addr <= io.job.small[0].max_addr @[gen_addr.scala 56:18]
      gen.small[0].min_addr <= io.job.small[0].min_addr @[gen_addr.scala 57:18]
      gen.small[0].now_addr <= io.job.small[0].begin_addr @[gen_addr.scala 58:18]
      gen.small[0].block_size <= io.job.small[0].block_size @[gen_addr.scala 59:20]
      gen.small[0].column_size <= io.job.small[0].column_size @[gen_addr.scala 60:21]
      gen.small[0].cnt_ic.cend <= io.job.small[0].cnt_ic_end @[utils.scala 22:14]
      gen.small[0].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].cnt_x.cend <= io.job.small[0].cnt_x_end @[utils.scala 22:14]
      gen.small[0].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].cnt_y.cend <= io.job.small[0].cnt_y_end @[utils.scala 22:14]
      gen.small[0].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].bank_id <= io.job.small[0].bank_id @[gen_addr.scala 64:17]
      gen.small[0].ano_bank_id <= io.job.small[0].ano_bank_id @[gen_addr.scala 228:21]
      gen.small[0].cnt_loop.cend <= io.job.small[0].cnt_loop_end @[utils.scala 26:14]
      gen.small[0].cnt_loop.ccnt <= io.job.small[0].begin_loop @[utils.scala 27:14]
      gen.small[0].cnt_invalid.cend <= io.job.small[0].cnt_invalid_end @[utils.scala 22:14]
      gen.small[0].cnt_invalid.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].cnt_ups.cend <= io.job.small[0].cnt_ups_end @[utils.scala 22:14]
      gen.small[0].cnt_ups.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].cnt_maxp.cend <= UInt<2>("h03") @[utils.scala 22:14]
      gen.small[0].cnt_maxp.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen.small[0].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[0].start <= UInt<1>("h00") @[gen_addr.scala 234:15]
      gen.small[0].y_begin_addr <= io.job.small[0].begin_addr @[gen_addr.scala 235:22]
      gen.small[0].ic_begin_addr <= io.job.small[0].begin_addr @[gen_addr.scala 236:23]
      gen.small[1].max_addr <= io.job.small[1].max_addr @[gen_addr.scala 56:18]
      gen.small[1].min_addr <= io.job.small[1].min_addr @[gen_addr.scala 57:18]
      gen.small[1].now_addr <= io.job.small[1].begin_addr @[gen_addr.scala 58:18]
      gen.small[1].block_size <= io.job.small[1].block_size @[gen_addr.scala 59:20]
      gen.small[1].column_size <= io.job.small[1].column_size @[gen_addr.scala 60:21]
      gen.small[1].cnt_ic.cend <= io.job.small[1].cnt_ic_end @[utils.scala 22:14]
      gen.small[1].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].cnt_x.cend <= io.job.small[1].cnt_x_end @[utils.scala 22:14]
      gen.small[1].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].cnt_y.cend <= io.job.small[1].cnt_y_end @[utils.scala 22:14]
      gen.small[1].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].bank_id <= io.job.small[1].bank_id @[gen_addr.scala 64:17]
      gen.small[1].ano_bank_id <= io.job.small[1].ano_bank_id @[gen_addr.scala 228:21]
      gen.small[1].cnt_loop.cend <= io.job.small[1].cnt_loop_end @[utils.scala 26:14]
      gen.small[1].cnt_loop.ccnt <= io.job.small[1].begin_loop @[utils.scala 27:14]
      gen.small[1].cnt_invalid.cend <= io.job.small[1].cnt_invalid_end @[utils.scala 22:14]
      gen.small[1].cnt_invalid.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].cnt_ups.cend <= io.job.small[1].cnt_ups_end @[utils.scala 22:14]
      gen.small[1].cnt_ups.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].cnt_maxp.cend <= UInt<2>("h03") @[utils.scala 22:14]
      gen.small[1].cnt_maxp.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen.small[1].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[1].start <= UInt<1>("h00") @[gen_addr.scala 234:15]
      gen.small[1].y_begin_addr <= io.job.small[1].begin_addr @[gen_addr.scala 235:22]
      gen.small[1].ic_begin_addr <= io.job.small[1].begin_addr @[gen_addr.scala 236:23]
      gen.small[2].max_addr <= io.job.small[2].max_addr @[gen_addr.scala 56:18]
      gen.small[2].min_addr <= io.job.small[2].min_addr @[gen_addr.scala 57:18]
      gen.small[2].now_addr <= io.job.small[2].begin_addr @[gen_addr.scala 58:18]
      gen.small[2].block_size <= io.job.small[2].block_size @[gen_addr.scala 59:20]
      gen.small[2].column_size <= io.job.small[2].column_size @[gen_addr.scala 60:21]
      gen.small[2].cnt_ic.cend <= io.job.small[2].cnt_ic_end @[utils.scala 22:14]
      gen.small[2].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].cnt_x.cend <= io.job.small[2].cnt_x_end @[utils.scala 22:14]
      gen.small[2].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].cnt_y.cend <= io.job.small[2].cnt_y_end @[utils.scala 22:14]
      gen.small[2].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].bank_id <= io.job.small[2].bank_id @[gen_addr.scala 64:17]
      gen.small[2].ano_bank_id <= io.job.small[2].ano_bank_id @[gen_addr.scala 228:21]
      gen.small[2].cnt_loop.cend <= io.job.small[2].cnt_loop_end @[utils.scala 26:14]
      gen.small[2].cnt_loop.ccnt <= io.job.small[2].begin_loop @[utils.scala 27:14]
      gen.small[2].cnt_invalid.cend <= io.job.small[2].cnt_invalid_end @[utils.scala 22:14]
      gen.small[2].cnt_invalid.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].cnt_ups.cend <= io.job.small[2].cnt_ups_end @[utils.scala 22:14]
      gen.small[2].cnt_ups.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].cnt_maxp.cend <= UInt<2>("h03") @[utils.scala 22:14]
      gen.small[2].cnt_maxp.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen.small[2].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[2].start <= UInt<1>("h00") @[gen_addr.scala 234:15]
      gen.small[2].y_begin_addr <= io.job.small[2].begin_addr @[gen_addr.scala 235:22]
      gen.small[2].ic_begin_addr <= io.job.small[2].begin_addr @[gen_addr.scala 236:23]
      gen.small[3].max_addr <= io.job.small[3].max_addr @[gen_addr.scala 56:18]
      gen.small[3].min_addr <= io.job.small[3].min_addr @[gen_addr.scala 57:18]
      gen.small[3].now_addr <= io.job.small[3].begin_addr @[gen_addr.scala 58:18]
      gen.small[3].block_size <= io.job.small[3].block_size @[gen_addr.scala 59:20]
      gen.small[3].column_size <= io.job.small[3].column_size @[gen_addr.scala 60:21]
      gen.small[3].cnt_ic.cend <= io.job.small[3].cnt_ic_end @[utils.scala 22:14]
      gen.small[3].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].cnt_x.cend <= io.job.small[3].cnt_x_end @[utils.scala 22:14]
      gen.small[3].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].cnt_y.cend <= io.job.small[3].cnt_y_end @[utils.scala 22:14]
      gen.small[3].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].bank_id <= io.job.small[3].bank_id @[gen_addr.scala 64:17]
      gen.small[3].ano_bank_id <= io.job.small[3].ano_bank_id @[gen_addr.scala 228:21]
      gen.small[3].cnt_loop.cend <= io.job.small[3].cnt_loop_end @[utils.scala 26:14]
      gen.small[3].cnt_loop.ccnt <= io.job.small[3].begin_loop @[utils.scala 27:14]
      gen.small[3].cnt_invalid.cend <= io.job.small[3].cnt_invalid_end @[utils.scala 22:14]
      gen.small[3].cnt_invalid.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].cnt_ups.cend <= io.job.small[3].cnt_ups_end @[utils.scala 22:14]
      gen.small[3].cnt_ups.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].cnt_maxp.cend <= UInt<2>("h03") @[utils.scala 22:14]
      gen.small[3].cnt_maxp.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen.small[3].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen.small[3].start <= UInt<1>("h00") @[gen_addr.scala 234:15]
      gen.small[3].y_begin_addr <= io.job.small[3].begin_addr @[gen_addr.scala 235:22]
      gen.small[3].ic_begin_addr <= io.job.small[3].begin_addr @[gen_addr.scala 236:23]
      job_type <= io.job_type @[read.scala 30:18]
      skip @[read.scala 28:22]
    else : @[read.scala 31:28]
      when io.valid_in : @[read.scala 31:28]
        node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
        node _T_1 = asUInt(job_type) @[Conditional.scala 37:39]
        node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 40:58]
          wire nxt_addr : UInt<10> @[gen_addr.scala 79:28]
          nxt_addr <= UInt<1>("h00") @[gen_addr.scala 80:18]
          wire nxt : UInt<1> @[utils.scala 16:23]
          node _nxt_T = eq(gen.big.cnt_ic.ccnt, gen.big.cnt_ic.cend) @[utils.scala 17:20]
          nxt <= _nxt_T @[utils.scala 17:13]
          node _gen_big_cnt_ic_ccnt_T = add(gen.big.cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_big_cnt_ic_ccnt_T_1 = tail(_gen_big_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_big_cnt_ic_ccnt_T_2 = mux(nxt, UInt<1>("h00"), _gen_big_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
          gen.big.cnt_ic.ccnt <= _gen_big_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
          when nxt : @[gen_addr.scala 81:27]
            wire nxt_1 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_1 = eq(gen.big.cnt_loop.ccnt, gen.big.cnt_loop.cend) @[utils.scala 17:20]
            nxt_1 <= _nxt_T_1 @[utils.scala 17:13]
            node _gen_big_cnt_loop_ccnt_T = add(gen.big.cnt_loop.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_big_cnt_loop_ccnt_T_1 = tail(_gen_big_cnt_loop_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_big_cnt_loop_ccnt_T_2 = mux(nxt_1, UInt<1>("h00"), _gen_big_cnt_loop_ccnt_T_1) @[utils.scala 18:20]
            gen.big.cnt_loop.ccnt <= _gen_big_cnt_loop_ccnt_T_2 @[utils.scala 18:14]
            when nxt_1 : @[gen_addr.scala 82:33]
              wire nxt_2 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_2 = eq(gen.big.cnt_y.ccnt, gen.big.cnt_y.cend) @[utils.scala 17:20]
              nxt_2 <= _nxt_T_2 @[utils.scala 17:13]
              node _gen_big_cnt_y_ccnt_T = add(gen.big.cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_big_cnt_y_ccnt_T_1 = tail(_gen_big_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
              node _gen_big_cnt_y_ccnt_T_2 = mux(nxt_2, UInt<1>("h00"), _gen_big_cnt_y_ccnt_T_1) @[utils.scala 18:20]
              gen.big.cnt_y.ccnt <= _gen_big_cnt_y_ccnt_T_2 @[utils.scala 18:14]
              when nxt_2 : @[gen_addr.scala 83:34]
                wire nxt_3 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_3 = eq(gen.big.cnt_ups.ccnt, gen.big.cnt_ups.cend) @[utils.scala 17:20]
                nxt_3 <= _nxt_T_3 @[utils.scala 17:13]
                node _gen_big_cnt_ups_ccnt_T = add(gen.big.cnt_ups.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_big_cnt_ups_ccnt_T_1 = tail(_gen_big_cnt_ups_ccnt_T, 1) @[utils.scala 18:35]
                node _gen_big_cnt_ups_ccnt_T_2 = mux(nxt_3, UInt<1>("h00"), _gen_big_cnt_ups_ccnt_T_1) @[utils.scala 18:20]
                gen.big.cnt_ups.ccnt <= _gen_big_cnt_ups_ccnt_T_2 @[utils.scala 18:14]
                when nxt_3 : @[gen_addr.scala 84:40]
                  wire nxt_4 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_4 = eq(gen.big.cnt_x.ccnt, gen.big.cnt_x.cend) @[utils.scala 17:20]
                  nxt_4 <= _nxt_T_4 @[utils.scala 17:13]
                  node _gen_big_cnt_x_ccnt_T = add(gen.big.cnt_x.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_big_cnt_x_ccnt_T_1 = tail(_gen_big_cnt_x_ccnt_T, 1) @[utils.scala 18:35]
                  node _gen_big_cnt_x_ccnt_T_2 = mux(nxt_4, UInt<1>("h00"), _gen_big_cnt_x_ccnt_T_1) @[utils.scala 18:20]
                  gen.big.cnt_x.ccnt <= _gen_big_cnt_x_ccnt_T_2 @[utils.scala 18:14]
                  when nxt_4 : @[gen_addr.scala 85:42]
                    gen.big.flag_end <= UInt<1>("h01") @[gen_addr.scala 86:38]
                    skip @[gen_addr.scala 85:42]
                  else : @[gen_addr.scala 87:36]
                    node _nxt_addr_T = add(gen.big.now_addr, UInt<1>("h01")) @[gen_addr.scala 88:49]
                    node _nxt_addr_T_1 = tail(_nxt_addr_T, 1) @[gen_addr.scala 88:49]
                    nxt_addr <= _nxt_addr_T_1 @[gen_addr.scala 88:38]
                    skip @[gen_addr.scala 87:36]
                  wire gen_big_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                  node _gen_big_y_begin_addr_T = geq(nxt_addr, gen.big.max_addr) @[gen_addr.scala 48:18]
                  when _gen_big_y_begin_addr_T : @[gen_addr.scala 48:29]
                    node _gen_big_y_begin_addr_nxt_T = sub(nxt_addr, gen.big.max_addr) @[gen_addr.scala 49:24]
                    node _gen_big_y_begin_addr_nxt_T_1 = tail(_gen_big_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                    node _gen_big_y_begin_addr_nxt_T_2 = add(_gen_big_y_begin_addr_nxt_T_1, gen.big.min_addr) @[gen_addr.scala 49:33]
                    node _gen_big_y_begin_addr_nxt_T_3 = tail(_gen_big_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                    gen_big_y_begin_addr_nxt <= _gen_big_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                    skip @[gen_addr.scala 48:29]
                  else : @[gen_addr.scala 50:20]
                    gen_big_y_begin_addr_nxt <= nxt_addr @[gen_addr.scala 51:17]
                    skip @[gen_addr.scala 50:20]
                  gen.big.y_begin_addr <= gen_big_y_begin_addr_nxt @[gen_addr.scala 90:38]
                  skip @[gen_addr.scala 84:40]
                else : @[gen_addr.scala 91:32]
                  nxt_addr <= gen.big.y_begin_addr @[gen_addr.scala 92:34]
                  skip @[gen_addr.scala 91:32]
                skip @[gen_addr.scala 83:34]
              else : @[gen_addr.scala 94:28]
                node _nxt_addr_T_2 = add(gen.big.now_addr, UInt<1>("h01")) @[gen_addr.scala 95:41]
                node _nxt_addr_T_3 = tail(_nxt_addr_T_2, 1) @[gen_addr.scala 95:41]
                nxt_addr <= _nxt_addr_T_3 @[gen_addr.scala 95:30]
                skip @[gen_addr.scala 94:28]
              wire gen_big_ic_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
              node _gen_big_ic_begin_addr_T = geq(nxt_addr, gen.big.max_addr) @[gen_addr.scala 48:18]
              when _gen_big_ic_begin_addr_T : @[gen_addr.scala 48:29]
                node _gen_big_ic_begin_addr_nxt_T = sub(nxt_addr, gen.big.max_addr) @[gen_addr.scala 49:24]
                node _gen_big_ic_begin_addr_nxt_T_1 = tail(_gen_big_ic_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                node _gen_big_ic_begin_addr_nxt_T_2 = add(_gen_big_ic_begin_addr_nxt_T_1, gen.big.min_addr) @[gen_addr.scala 49:33]
                node _gen_big_ic_begin_addr_nxt_T_3 = tail(_gen_big_ic_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                gen_big_ic_begin_addr_nxt <= _gen_big_ic_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                skip @[gen_addr.scala 48:29]
              else : @[gen_addr.scala 50:20]
                gen_big_ic_begin_addr_nxt <= nxt_addr @[gen_addr.scala 51:17]
                skip @[gen_addr.scala 50:20]
              gen.big.ic_begin_addr <= gen_big_ic_begin_addr_nxt @[gen_addr.scala 97:31]
              skip @[gen_addr.scala 82:33]
            else : @[gen_addr.scala 98:24]
              nxt_addr <= gen.big.ic_begin_addr @[gen_addr.scala 99:26]
              skip @[gen_addr.scala 98:24]
            skip @[gen_addr.scala 81:27]
          else : @[gen_addr.scala 101:20]
            node _nxt_addr_T_4 = add(gen.big.now_addr, UInt<1>("h01")) @[gen_addr.scala 102:33]
            node _nxt_addr_T_5 = tail(_nxt_addr_T_4, 1) @[gen_addr.scala 102:33]
            nxt_addr <= _nxt_addr_T_5 @[gen_addr.scala 102:22]
            skip @[gen_addr.scala 101:20]
          wire gen_big_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
          node _gen_big_now_addr_T = geq(nxt_addr, gen.big.max_addr) @[gen_addr.scala 48:18]
          when _gen_big_now_addr_T : @[gen_addr.scala 48:29]
            node _gen_big_now_addr_nxt_T = sub(nxt_addr, gen.big.max_addr) @[gen_addr.scala 49:24]
            node _gen_big_now_addr_nxt_T_1 = tail(_gen_big_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
            node _gen_big_now_addr_nxt_T_2 = add(_gen_big_now_addr_nxt_T_1, gen.big.min_addr) @[gen_addr.scala 49:33]
            node _gen_big_now_addr_nxt_T_3 = tail(_gen_big_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
            gen_big_now_addr_nxt <= _gen_big_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
            skip @[gen_addr.scala 48:29]
          else : @[gen_addr.scala 50:20]
            gen_big_now_addr_nxt <= nxt_addr @[gen_addr.scala 51:17]
            skip @[gen_addr.scala 50:20]
          gen.big.now_addr <= gen_big_now_addr_nxt @[gen_addr.scala 104:18]
          wire nxt_addr_1 : UInt<10> @[gen_addr.scala 163:28]
          nxt_addr_1 <= UInt<1>("h00") @[gen_addr.scala 164:18]
          wire nxt_5 : UInt<1> @[utils.scala 16:23]
          node _nxt_T_5 = eq(gen.small[0].cnt_invalid.ccnt, gen.small[0].cnt_invalid.cend) @[utils.scala 17:20]
          nxt_5 <= _nxt_T_5 @[utils.scala 17:13]
          node _gen_small_0_cnt_invalid_ccnt_T = add(gen.small[0].cnt_invalid.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_small_0_cnt_invalid_ccnt_T_1 = tail(_gen_small_0_cnt_invalid_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_small_0_cnt_invalid_ccnt_T_2 = mux(nxt_5, UInt<1>("h00"), _gen_small_0_cnt_invalid_ccnt_T_1) @[utils.scala 18:20]
          gen.small[0].cnt_invalid.ccnt <= _gen_small_0_cnt_invalid_ccnt_T_2 @[utils.scala 18:14]
          node _T_3 = or(nxt_5, gen.small[0].start) @[gen_addr.scala 165:31]
          when _T_3 : @[gen_addr.scala 165:39]
            gen.small[0].start <= UInt<1>("h01") @[gen_addr.scala 166:19]
            wire nxt_6 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_6 = eq(gen.small[0].cnt_ic.ccnt, gen.small[0].cnt_ic.cend) @[utils.scala 17:20]
            nxt_6 <= _nxt_T_6 @[utils.scala 17:13]
            node _gen_small_0_cnt_ic_ccnt_T = add(gen.small[0].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_0_cnt_ic_ccnt_T_1 = tail(_gen_small_0_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_0_cnt_ic_ccnt_T_2 = mux(nxt_6, UInt<1>("h00"), _gen_small_0_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
            gen.small[0].cnt_ic.ccnt <= _gen_small_0_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
            when nxt_6 : @[gen_addr.scala 167:31]
              wire nxt_7 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_7 = eq(gen.small[0].cnt_loop.ccnt, gen.small[0].cnt_loop.cend) @[utils.scala 17:20]
              nxt_7 <= _nxt_T_7 @[utils.scala 17:13]
              node _gen_small_0_cnt_loop_ccnt_T = add(gen.small[0].cnt_loop.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_0_cnt_loop_ccnt_T_1 = tail(_gen_small_0_cnt_loop_ccnt_T, 1) @[utils.scala 18:35]
              node _gen_small_0_cnt_loop_ccnt_T_2 = mux(nxt_7, UInt<1>("h00"), _gen_small_0_cnt_loop_ccnt_T_1) @[utils.scala 18:20]
              gen.small[0].cnt_loop.ccnt <= _gen_small_0_cnt_loop_ccnt_T_2 @[utils.scala 18:14]
              when nxt_7 : @[gen_addr.scala 168:37]
                wire nxt_8 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_8 = eq(gen.small[0].cnt_y.ccnt, gen.small[0].cnt_y.cend) @[utils.scala 17:20]
                nxt_8 <= _nxt_T_8 @[utils.scala 17:13]
                node _gen_small_0_cnt_y_ccnt_T = add(gen.small[0].cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_small_0_cnt_y_ccnt_T_1 = tail(_gen_small_0_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
                node _gen_small_0_cnt_y_ccnt_T_2 = mux(nxt_8, UInt<1>("h00"), _gen_small_0_cnt_y_ccnt_T_1) @[utils.scala 18:20]
                gen.small[0].cnt_y.ccnt <= _gen_small_0_cnt_y_ccnt_T_2 @[utils.scala 18:14]
                when nxt_8 : @[gen_addr.scala 169:38]
                  wire nxt_9 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_9 = eq(gen.small[0].cnt_ups.ccnt, gen.small[0].cnt_ups.cend) @[utils.scala 17:20]
                  nxt_9 <= _nxt_T_9 @[utils.scala 17:13]
                  node _gen_small_0_cnt_ups_ccnt_T = add(gen.small[0].cnt_ups.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_small_0_cnt_ups_ccnt_T_1 = tail(_gen_small_0_cnt_ups_ccnt_T, 1) @[utils.scala 18:35]
                  node _gen_small_0_cnt_ups_ccnt_T_2 = mux(nxt_9, UInt<1>("h00"), _gen_small_0_cnt_ups_ccnt_T_1) @[utils.scala 18:20]
                  gen.small[0].cnt_ups.ccnt <= _gen_small_0_cnt_ups_ccnt_T_2 @[utils.scala 18:14]
                  when nxt_9 : @[gen_addr.scala 170:44]
                    wire nxt_10 : UInt<1> @[utils.scala 16:23]
                    node _nxt_T_10 = eq(gen.small[0].cnt_swap.ccnt, gen.small[0].cnt_swap.cend) @[utils.scala 17:20]
                    nxt_10 <= _nxt_T_10 @[utils.scala 17:13]
                    node _gen_small_0_cnt_swap_ccnt_T = add(gen.small[0].cnt_swap.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                    node _gen_small_0_cnt_swap_ccnt_T_1 = tail(_gen_small_0_cnt_swap_ccnt_T, 1) @[utils.scala 18:35]
                    node _gen_small_0_cnt_swap_ccnt_T_2 = mux(nxt_10, UInt<1>("h00"), _gen_small_0_cnt_swap_ccnt_T_1) @[utils.scala 18:20]
                    gen.small[0].cnt_swap.ccnt <= _gen_small_0_cnt_swap_ccnt_T_2 @[utils.scala 18:14]
                    when nxt_10 : @[gen_addr.scala 171:49]
                      node _nxt_addr_T_6 = add(gen.small[0].now_addr, UInt<1>("h01")) @[gen_addr.scala 172:53]
                      node _nxt_addr_T_7 = tail(_nxt_addr_T_6, 1) @[gen_addr.scala 172:53]
                      nxt_addr_1 <= _nxt_addr_T_7 @[gen_addr.scala 172:42]
                      wire gen_small_0_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                      node _gen_small_0_y_begin_addr_T = geq(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 48:18]
                      when _gen_small_0_y_begin_addr_T : @[gen_addr.scala 48:29]
                        node _gen_small_0_y_begin_addr_nxt_T = sub(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 49:24]
                        node _gen_small_0_y_begin_addr_nxt_T_1 = tail(_gen_small_0_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                        node _gen_small_0_y_begin_addr_nxt_T_2 = add(_gen_small_0_y_begin_addr_nxt_T_1, gen.small[0].min_addr) @[gen_addr.scala 49:33]
                        node _gen_small_0_y_begin_addr_nxt_T_3 = tail(_gen_small_0_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                        gen_small_0_y_begin_addr_nxt <= _gen_small_0_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                        skip @[gen_addr.scala 48:29]
                      else : @[gen_addr.scala 50:20]
                        gen_small_0_y_begin_addr_nxt <= nxt_addr_1 @[gen_addr.scala 51:17]
                        skip @[gen_addr.scala 50:20]
                      gen.small[0].y_begin_addr <= gen_small_0_y_begin_addr_nxt @[gen_addr.scala 173:46]
                      skip @[gen_addr.scala 171:49]
                    else : @[gen_addr.scala 174:40]
                      nxt_addr_1 <= gen.small[0].y_begin_addr @[gen_addr.scala 175:42]
                      skip @[gen_addr.scala 174:40]
                    gen.small[0].bank_id <= gen.small[0].ano_bank_id @[gen_addr.scala 177:37]
                    gen.small[0].ano_bank_id <= gen.small[0].bank_id @[gen_addr.scala 178:41]
                    skip @[gen_addr.scala 170:44]
                  else : @[gen_addr.scala 179:36]
                    nxt_addr_1 <= gen.small[0].y_begin_addr @[gen_addr.scala 180:38]
                    skip @[gen_addr.scala 179:36]
                  skip @[gen_addr.scala 169:38]
                else : @[gen_addr.scala 182:32]
                  node _nxt_addr_T_8 = add(gen.small[0].now_addr, UInt<1>("h01")) @[gen_addr.scala 183:45]
                  node _nxt_addr_T_9 = tail(_nxt_addr_T_8, 1) @[gen_addr.scala 183:45]
                  nxt_addr_1 <= _nxt_addr_T_9 @[gen_addr.scala 183:34]
                  skip @[gen_addr.scala 182:32]
                wire gen_small_0_ic_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                node _gen_small_0_ic_begin_addr_T = geq(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 48:18]
                when _gen_small_0_ic_begin_addr_T : @[gen_addr.scala 48:29]
                  node _gen_small_0_ic_begin_addr_nxt_T = sub(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 49:24]
                  node _gen_small_0_ic_begin_addr_nxt_T_1 = tail(_gen_small_0_ic_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                  node _gen_small_0_ic_begin_addr_nxt_T_2 = add(_gen_small_0_ic_begin_addr_nxt_T_1, gen.small[0].min_addr) @[gen_addr.scala 49:33]
                  node _gen_small_0_ic_begin_addr_nxt_T_3 = tail(_gen_small_0_ic_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                  gen_small_0_ic_begin_addr_nxt <= _gen_small_0_ic_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                  skip @[gen_addr.scala 48:29]
                else : @[gen_addr.scala 50:20]
                  gen_small_0_ic_begin_addr_nxt <= nxt_addr_1 @[gen_addr.scala 51:17]
                  skip @[gen_addr.scala 50:20]
                gen.small[0].ic_begin_addr <= gen_small_0_ic_begin_addr_nxt @[gen_addr.scala 185:35]
                skip @[gen_addr.scala 168:37]
              else : @[gen_addr.scala 186:28]
                nxt_addr_1 <= gen.small[0].ic_begin_addr @[gen_addr.scala 187:30]
                skip @[gen_addr.scala 186:28]
              skip @[gen_addr.scala 167:31]
            else : @[gen_addr.scala 189:24]
              node _nxt_addr_T_10 = add(gen.small[0].now_addr, UInt<1>("h01")) @[gen_addr.scala 190:37]
              node _nxt_addr_T_11 = tail(_nxt_addr_T_10, 1) @[gen_addr.scala 190:37]
              nxt_addr_1 <= _nxt_addr_T_11 @[gen_addr.scala 190:26]
              skip @[gen_addr.scala 189:24]
            wire gen_small_0_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_0_now_addr_T = geq(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_0_now_addr_T : @[gen_addr.scala 48:29]
              node _gen_small_0_now_addr_nxt_T = sub(nxt_addr_1, gen.small[0].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_0_now_addr_nxt_T_1 = tail(_gen_small_0_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
              node _gen_small_0_now_addr_nxt_T_2 = add(_gen_small_0_now_addr_nxt_T_1, gen.small[0].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_0_now_addr_nxt_T_3 = tail(_gen_small_0_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
              gen_small_0_now_addr_nxt <= _gen_small_0_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_0_now_addr_nxt <= nxt_addr_1 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[0].now_addr <= gen_small_0_now_addr_nxt @[gen_addr.scala 192:22]
            skip @[gen_addr.scala 165:39]
          wire nxt_addr_2 : UInt<10> @[gen_addr.scala 163:28]
          nxt_addr_2 <= UInt<1>("h00") @[gen_addr.scala 164:18]
          wire nxt_11 : UInt<1> @[utils.scala 16:23]
          node _nxt_T_11 = eq(gen.small[1].cnt_invalid.ccnt, gen.small[1].cnt_invalid.cend) @[utils.scala 17:20]
          nxt_11 <= _nxt_T_11 @[utils.scala 17:13]
          node _gen_small_1_cnt_invalid_ccnt_T = add(gen.small[1].cnt_invalid.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_small_1_cnt_invalid_ccnt_T_1 = tail(_gen_small_1_cnt_invalid_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_small_1_cnt_invalid_ccnt_T_2 = mux(nxt_11, UInt<1>("h00"), _gen_small_1_cnt_invalid_ccnt_T_1) @[utils.scala 18:20]
          gen.small[1].cnt_invalid.ccnt <= _gen_small_1_cnt_invalid_ccnt_T_2 @[utils.scala 18:14]
          node _T_4 = or(nxt_11, gen.small[1].start) @[gen_addr.scala 165:31]
          when _T_4 : @[gen_addr.scala 165:39]
            gen.small[1].start <= UInt<1>("h01") @[gen_addr.scala 166:19]
            wire nxt_12 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_12 = eq(gen.small[1].cnt_ic.ccnt, gen.small[1].cnt_ic.cend) @[utils.scala 17:20]
            nxt_12 <= _nxt_T_12 @[utils.scala 17:13]
            node _gen_small_1_cnt_ic_ccnt_T = add(gen.small[1].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_1_cnt_ic_ccnt_T_1 = tail(_gen_small_1_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_1_cnt_ic_ccnt_T_2 = mux(nxt_12, UInt<1>("h00"), _gen_small_1_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
            gen.small[1].cnt_ic.ccnt <= _gen_small_1_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
            when nxt_12 : @[gen_addr.scala 167:31]
              wire nxt_13 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_13 = eq(gen.small[1].cnt_loop.ccnt, gen.small[1].cnt_loop.cend) @[utils.scala 17:20]
              nxt_13 <= _nxt_T_13 @[utils.scala 17:13]
              node _gen_small_1_cnt_loop_ccnt_T = add(gen.small[1].cnt_loop.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_1_cnt_loop_ccnt_T_1 = tail(_gen_small_1_cnt_loop_ccnt_T, 1) @[utils.scala 18:35]
              node _gen_small_1_cnt_loop_ccnt_T_2 = mux(nxt_13, UInt<1>("h00"), _gen_small_1_cnt_loop_ccnt_T_1) @[utils.scala 18:20]
              gen.small[1].cnt_loop.ccnt <= _gen_small_1_cnt_loop_ccnt_T_2 @[utils.scala 18:14]
              when nxt_13 : @[gen_addr.scala 168:37]
                wire nxt_14 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_14 = eq(gen.small[1].cnt_y.ccnt, gen.small[1].cnt_y.cend) @[utils.scala 17:20]
                nxt_14 <= _nxt_T_14 @[utils.scala 17:13]
                node _gen_small_1_cnt_y_ccnt_T = add(gen.small[1].cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_small_1_cnt_y_ccnt_T_1 = tail(_gen_small_1_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
                node _gen_small_1_cnt_y_ccnt_T_2 = mux(nxt_14, UInt<1>("h00"), _gen_small_1_cnt_y_ccnt_T_1) @[utils.scala 18:20]
                gen.small[1].cnt_y.ccnt <= _gen_small_1_cnt_y_ccnt_T_2 @[utils.scala 18:14]
                when nxt_14 : @[gen_addr.scala 169:38]
                  wire nxt_15 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_15 = eq(gen.small[1].cnt_ups.ccnt, gen.small[1].cnt_ups.cend) @[utils.scala 17:20]
                  nxt_15 <= _nxt_T_15 @[utils.scala 17:13]
                  node _gen_small_1_cnt_ups_ccnt_T = add(gen.small[1].cnt_ups.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_small_1_cnt_ups_ccnt_T_1 = tail(_gen_small_1_cnt_ups_ccnt_T, 1) @[utils.scala 18:35]
                  node _gen_small_1_cnt_ups_ccnt_T_2 = mux(nxt_15, UInt<1>("h00"), _gen_small_1_cnt_ups_ccnt_T_1) @[utils.scala 18:20]
                  gen.small[1].cnt_ups.ccnt <= _gen_small_1_cnt_ups_ccnt_T_2 @[utils.scala 18:14]
                  when nxt_15 : @[gen_addr.scala 170:44]
                    wire nxt_16 : UInt<1> @[utils.scala 16:23]
                    node _nxt_T_16 = eq(gen.small[1].cnt_swap.ccnt, gen.small[1].cnt_swap.cend) @[utils.scala 17:20]
                    nxt_16 <= _nxt_T_16 @[utils.scala 17:13]
                    node _gen_small_1_cnt_swap_ccnt_T = add(gen.small[1].cnt_swap.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                    node _gen_small_1_cnt_swap_ccnt_T_1 = tail(_gen_small_1_cnt_swap_ccnt_T, 1) @[utils.scala 18:35]
                    node _gen_small_1_cnt_swap_ccnt_T_2 = mux(nxt_16, UInt<1>("h00"), _gen_small_1_cnt_swap_ccnt_T_1) @[utils.scala 18:20]
                    gen.small[1].cnt_swap.ccnt <= _gen_small_1_cnt_swap_ccnt_T_2 @[utils.scala 18:14]
                    when nxt_16 : @[gen_addr.scala 171:49]
                      node _nxt_addr_T_12 = add(gen.small[1].now_addr, UInt<1>("h01")) @[gen_addr.scala 172:53]
                      node _nxt_addr_T_13 = tail(_nxt_addr_T_12, 1) @[gen_addr.scala 172:53]
                      nxt_addr_2 <= _nxt_addr_T_13 @[gen_addr.scala 172:42]
                      wire gen_small_1_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                      node _gen_small_1_y_begin_addr_T = geq(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 48:18]
                      when _gen_small_1_y_begin_addr_T : @[gen_addr.scala 48:29]
                        node _gen_small_1_y_begin_addr_nxt_T = sub(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 49:24]
                        node _gen_small_1_y_begin_addr_nxt_T_1 = tail(_gen_small_1_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                        node _gen_small_1_y_begin_addr_nxt_T_2 = add(_gen_small_1_y_begin_addr_nxt_T_1, gen.small[1].min_addr) @[gen_addr.scala 49:33]
                        node _gen_small_1_y_begin_addr_nxt_T_3 = tail(_gen_small_1_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                        gen_small_1_y_begin_addr_nxt <= _gen_small_1_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                        skip @[gen_addr.scala 48:29]
                      else : @[gen_addr.scala 50:20]
                        gen_small_1_y_begin_addr_nxt <= nxt_addr_2 @[gen_addr.scala 51:17]
                        skip @[gen_addr.scala 50:20]
                      gen.small[1].y_begin_addr <= gen_small_1_y_begin_addr_nxt @[gen_addr.scala 173:46]
                      skip @[gen_addr.scala 171:49]
                    else : @[gen_addr.scala 174:40]
                      nxt_addr_2 <= gen.small[1].y_begin_addr @[gen_addr.scala 175:42]
                      skip @[gen_addr.scala 174:40]
                    gen.small[1].bank_id <= gen.small[1].ano_bank_id @[gen_addr.scala 177:37]
                    gen.small[1].ano_bank_id <= gen.small[1].bank_id @[gen_addr.scala 178:41]
                    skip @[gen_addr.scala 170:44]
                  else : @[gen_addr.scala 179:36]
                    nxt_addr_2 <= gen.small[1].y_begin_addr @[gen_addr.scala 180:38]
                    skip @[gen_addr.scala 179:36]
                  skip @[gen_addr.scala 169:38]
                else : @[gen_addr.scala 182:32]
                  node _nxt_addr_T_14 = add(gen.small[1].now_addr, UInt<1>("h01")) @[gen_addr.scala 183:45]
                  node _nxt_addr_T_15 = tail(_nxt_addr_T_14, 1) @[gen_addr.scala 183:45]
                  nxt_addr_2 <= _nxt_addr_T_15 @[gen_addr.scala 183:34]
                  skip @[gen_addr.scala 182:32]
                wire gen_small_1_ic_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                node _gen_small_1_ic_begin_addr_T = geq(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 48:18]
                when _gen_small_1_ic_begin_addr_T : @[gen_addr.scala 48:29]
                  node _gen_small_1_ic_begin_addr_nxt_T = sub(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 49:24]
                  node _gen_small_1_ic_begin_addr_nxt_T_1 = tail(_gen_small_1_ic_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                  node _gen_small_1_ic_begin_addr_nxt_T_2 = add(_gen_small_1_ic_begin_addr_nxt_T_1, gen.small[1].min_addr) @[gen_addr.scala 49:33]
                  node _gen_small_1_ic_begin_addr_nxt_T_3 = tail(_gen_small_1_ic_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                  gen_small_1_ic_begin_addr_nxt <= _gen_small_1_ic_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                  skip @[gen_addr.scala 48:29]
                else : @[gen_addr.scala 50:20]
                  gen_small_1_ic_begin_addr_nxt <= nxt_addr_2 @[gen_addr.scala 51:17]
                  skip @[gen_addr.scala 50:20]
                gen.small[1].ic_begin_addr <= gen_small_1_ic_begin_addr_nxt @[gen_addr.scala 185:35]
                skip @[gen_addr.scala 168:37]
              else : @[gen_addr.scala 186:28]
                nxt_addr_2 <= gen.small[1].ic_begin_addr @[gen_addr.scala 187:30]
                skip @[gen_addr.scala 186:28]
              skip @[gen_addr.scala 167:31]
            else : @[gen_addr.scala 189:24]
              node _nxt_addr_T_16 = add(gen.small[1].now_addr, UInt<1>("h01")) @[gen_addr.scala 190:37]
              node _nxt_addr_T_17 = tail(_nxt_addr_T_16, 1) @[gen_addr.scala 190:37]
              nxt_addr_2 <= _nxt_addr_T_17 @[gen_addr.scala 190:26]
              skip @[gen_addr.scala 189:24]
            wire gen_small_1_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_1_now_addr_T = geq(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_1_now_addr_T : @[gen_addr.scala 48:29]
              node _gen_small_1_now_addr_nxt_T = sub(nxt_addr_2, gen.small[1].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_1_now_addr_nxt_T_1 = tail(_gen_small_1_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
              node _gen_small_1_now_addr_nxt_T_2 = add(_gen_small_1_now_addr_nxt_T_1, gen.small[1].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_1_now_addr_nxt_T_3 = tail(_gen_small_1_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
              gen_small_1_now_addr_nxt <= _gen_small_1_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_1_now_addr_nxt <= nxt_addr_2 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[1].now_addr <= gen_small_1_now_addr_nxt @[gen_addr.scala 192:22]
            skip @[gen_addr.scala 165:39]
          wire nxt_addr_3 : UInt<10> @[gen_addr.scala 163:28]
          nxt_addr_3 <= UInt<1>("h00") @[gen_addr.scala 164:18]
          wire nxt_17 : UInt<1> @[utils.scala 16:23]
          node _nxt_T_17 = eq(gen.small[2].cnt_invalid.ccnt, gen.small[2].cnt_invalid.cend) @[utils.scala 17:20]
          nxt_17 <= _nxt_T_17 @[utils.scala 17:13]
          node _gen_small_2_cnt_invalid_ccnt_T = add(gen.small[2].cnt_invalid.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_small_2_cnt_invalid_ccnt_T_1 = tail(_gen_small_2_cnt_invalid_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_small_2_cnt_invalid_ccnt_T_2 = mux(nxt_17, UInt<1>("h00"), _gen_small_2_cnt_invalid_ccnt_T_1) @[utils.scala 18:20]
          gen.small[2].cnt_invalid.ccnt <= _gen_small_2_cnt_invalid_ccnt_T_2 @[utils.scala 18:14]
          node _T_5 = or(nxt_17, gen.small[2].start) @[gen_addr.scala 165:31]
          when _T_5 : @[gen_addr.scala 165:39]
            gen.small[2].start <= UInt<1>("h01") @[gen_addr.scala 166:19]
            wire nxt_18 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_18 = eq(gen.small[2].cnt_ic.ccnt, gen.small[2].cnt_ic.cend) @[utils.scala 17:20]
            nxt_18 <= _nxt_T_18 @[utils.scala 17:13]
            node _gen_small_2_cnt_ic_ccnt_T = add(gen.small[2].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_2_cnt_ic_ccnt_T_1 = tail(_gen_small_2_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_2_cnt_ic_ccnt_T_2 = mux(nxt_18, UInt<1>("h00"), _gen_small_2_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
            gen.small[2].cnt_ic.ccnt <= _gen_small_2_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
            when nxt_18 : @[gen_addr.scala 167:31]
              wire nxt_19 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_19 = eq(gen.small[2].cnt_loop.ccnt, gen.small[2].cnt_loop.cend) @[utils.scala 17:20]
              nxt_19 <= _nxt_T_19 @[utils.scala 17:13]
              node _gen_small_2_cnt_loop_ccnt_T = add(gen.small[2].cnt_loop.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_2_cnt_loop_ccnt_T_1 = tail(_gen_small_2_cnt_loop_ccnt_T, 1) @[utils.scala 18:35]
              node _gen_small_2_cnt_loop_ccnt_T_2 = mux(nxt_19, UInt<1>("h00"), _gen_small_2_cnt_loop_ccnt_T_1) @[utils.scala 18:20]
              gen.small[2].cnt_loop.ccnt <= _gen_small_2_cnt_loop_ccnt_T_2 @[utils.scala 18:14]
              when nxt_19 : @[gen_addr.scala 168:37]
                wire nxt_20 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_20 = eq(gen.small[2].cnt_y.ccnt, gen.small[2].cnt_y.cend) @[utils.scala 17:20]
                nxt_20 <= _nxt_T_20 @[utils.scala 17:13]
                node _gen_small_2_cnt_y_ccnt_T = add(gen.small[2].cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_small_2_cnt_y_ccnt_T_1 = tail(_gen_small_2_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
                node _gen_small_2_cnt_y_ccnt_T_2 = mux(nxt_20, UInt<1>("h00"), _gen_small_2_cnt_y_ccnt_T_1) @[utils.scala 18:20]
                gen.small[2].cnt_y.ccnt <= _gen_small_2_cnt_y_ccnt_T_2 @[utils.scala 18:14]
                when nxt_20 : @[gen_addr.scala 169:38]
                  wire nxt_21 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_21 = eq(gen.small[2].cnt_ups.ccnt, gen.small[2].cnt_ups.cend) @[utils.scala 17:20]
                  nxt_21 <= _nxt_T_21 @[utils.scala 17:13]
                  node _gen_small_2_cnt_ups_ccnt_T = add(gen.small[2].cnt_ups.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_small_2_cnt_ups_ccnt_T_1 = tail(_gen_small_2_cnt_ups_ccnt_T, 1) @[utils.scala 18:35]
                  node _gen_small_2_cnt_ups_ccnt_T_2 = mux(nxt_21, UInt<1>("h00"), _gen_small_2_cnt_ups_ccnt_T_1) @[utils.scala 18:20]
                  gen.small[2].cnt_ups.ccnt <= _gen_small_2_cnt_ups_ccnt_T_2 @[utils.scala 18:14]
                  when nxt_21 : @[gen_addr.scala 170:44]
                    wire nxt_22 : UInt<1> @[utils.scala 16:23]
                    node _nxt_T_22 = eq(gen.small[2].cnt_swap.ccnt, gen.small[2].cnt_swap.cend) @[utils.scala 17:20]
                    nxt_22 <= _nxt_T_22 @[utils.scala 17:13]
                    node _gen_small_2_cnt_swap_ccnt_T = add(gen.small[2].cnt_swap.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                    node _gen_small_2_cnt_swap_ccnt_T_1 = tail(_gen_small_2_cnt_swap_ccnt_T, 1) @[utils.scala 18:35]
                    node _gen_small_2_cnt_swap_ccnt_T_2 = mux(nxt_22, UInt<1>("h00"), _gen_small_2_cnt_swap_ccnt_T_1) @[utils.scala 18:20]
                    gen.small[2].cnt_swap.ccnt <= _gen_small_2_cnt_swap_ccnt_T_2 @[utils.scala 18:14]
                    when nxt_22 : @[gen_addr.scala 171:49]
                      node _nxt_addr_T_18 = add(gen.small[2].now_addr, UInt<1>("h01")) @[gen_addr.scala 172:53]
                      node _nxt_addr_T_19 = tail(_nxt_addr_T_18, 1) @[gen_addr.scala 172:53]
                      nxt_addr_3 <= _nxt_addr_T_19 @[gen_addr.scala 172:42]
                      wire gen_small_2_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                      node _gen_small_2_y_begin_addr_T = geq(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 48:18]
                      when _gen_small_2_y_begin_addr_T : @[gen_addr.scala 48:29]
                        node _gen_small_2_y_begin_addr_nxt_T = sub(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 49:24]
                        node _gen_small_2_y_begin_addr_nxt_T_1 = tail(_gen_small_2_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                        node _gen_small_2_y_begin_addr_nxt_T_2 = add(_gen_small_2_y_begin_addr_nxt_T_1, gen.small[2].min_addr) @[gen_addr.scala 49:33]
                        node _gen_small_2_y_begin_addr_nxt_T_3 = tail(_gen_small_2_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                        gen_small_2_y_begin_addr_nxt <= _gen_small_2_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                        skip @[gen_addr.scala 48:29]
                      else : @[gen_addr.scala 50:20]
                        gen_small_2_y_begin_addr_nxt <= nxt_addr_3 @[gen_addr.scala 51:17]
                        skip @[gen_addr.scala 50:20]
                      gen.small[2].y_begin_addr <= gen_small_2_y_begin_addr_nxt @[gen_addr.scala 173:46]
                      skip @[gen_addr.scala 171:49]
                    else : @[gen_addr.scala 174:40]
                      nxt_addr_3 <= gen.small[2].y_begin_addr @[gen_addr.scala 175:42]
                      skip @[gen_addr.scala 174:40]
                    gen.small[2].bank_id <= gen.small[2].ano_bank_id @[gen_addr.scala 177:37]
                    gen.small[2].ano_bank_id <= gen.small[2].bank_id @[gen_addr.scala 178:41]
                    skip @[gen_addr.scala 170:44]
                  else : @[gen_addr.scala 179:36]
                    nxt_addr_3 <= gen.small[2].y_begin_addr @[gen_addr.scala 180:38]
                    skip @[gen_addr.scala 179:36]
                  skip @[gen_addr.scala 169:38]
                else : @[gen_addr.scala 182:32]
                  node _nxt_addr_T_20 = add(gen.small[2].now_addr, UInt<1>("h01")) @[gen_addr.scala 183:45]
                  node _nxt_addr_T_21 = tail(_nxt_addr_T_20, 1) @[gen_addr.scala 183:45]
                  nxt_addr_3 <= _nxt_addr_T_21 @[gen_addr.scala 183:34]
                  skip @[gen_addr.scala 182:32]
                wire gen_small_2_ic_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                node _gen_small_2_ic_begin_addr_T = geq(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 48:18]
                when _gen_small_2_ic_begin_addr_T : @[gen_addr.scala 48:29]
                  node _gen_small_2_ic_begin_addr_nxt_T = sub(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 49:24]
                  node _gen_small_2_ic_begin_addr_nxt_T_1 = tail(_gen_small_2_ic_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                  node _gen_small_2_ic_begin_addr_nxt_T_2 = add(_gen_small_2_ic_begin_addr_nxt_T_1, gen.small[2].min_addr) @[gen_addr.scala 49:33]
                  node _gen_small_2_ic_begin_addr_nxt_T_3 = tail(_gen_small_2_ic_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                  gen_small_2_ic_begin_addr_nxt <= _gen_small_2_ic_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                  skip @[gen_addr.scala 48:29]
                else : @[gen_addr.scala 50:20]
                  gen_small_2_ic_begin_addr_nxt <= nxt_addr_3 @[gen_addr.scala 51:17]
                  skip @[gen_addr.scala 50:20]
                gen.small[2].ic_begin_addr <= gen_small_2_ic_begin_addr_nxt @[gen_addr.scala 185:35]
                skip @[gen_addr.scala 168:37]
              else : @[gen_addr.scala 186:28]
                nxt_addr_3 <= gen.small[2].ic_begin_addr @[gen_addr.scala 187:30]
                skip @[gen_addr.scala 186:28]
              skip @[gen_addr.scala 167:31]
            else : @[gen_addr.scala 189:24]
              node _nxt_addr_T_22 = add(gen.small[2].now_addr, UInt<1>("h01")) @[gen_addr.scala 190:37]
              node _nxt_addr_T_23 = tail(_nxt_addr_T_22, 1) @[gen_addr.scala 190:37]
              nxt_addr_3 <= _nxt_addr_T_23 @[gen_addr.scala 190:26]
              skip @[gen_addr.scala 189:24]
            wire gen_small_2_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_2_now_addr_T = geq(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_2_now_addr_T : @[gen_addr.scala 48:29]
              node _gen_small_2_now_addr_nxt_T = sub(nxt_addr_3, gen.small[2].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_2_now_addr_nxt_T_1 = tail(_gen_small_2_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
              node _gen_small_2_now_addr_nxt_T_2 = add(_gen_small_2_now_addr_nxt_T_1, gen.small[2].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_2_now_addr_nxt_T_3 = tail(_gen_small_2_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
              gen_small_2_now_addr_nxt <= _gen_small_2_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_2_now_addr_nxt <= nxt_addr_3 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[2].now_addr <= gen_small_2_now_addr_nxt @[gen_addr.scala 192:22]
            skip @[gen_addr.scala 165:39]
          wire nxt_addr_4 : UInt<10> @[gen_addr.scala 163:28]
          nxt_addr_4 <= UInt<1>("h00") @[gen_addr.scala 164:18]
          wire nxt_23 : UInt<1> @[utils.scala 16:23]
          node _nxt_T_23 = eq(gen.small[3].cnt_invalid.ccnt, gen.small[3].cnt_invalid.cend) @[utils.scala 17:20]
          nxt_23 <= _nxt_T_23 @[utils.scala 17:13]
          node _gen_small_3_cnt_invalid_ccnt_T = add(gen.small[3].cnt_invalid.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_small_3_cnt_invalid_ccnt_T_1 = tail(_gen_small_3_cnt_invalid_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_small_3_cnt_invalid_ccnt_T_2 = mux(nxt_23, UInt<1>("h00"), _gen_small_3_cnt_invalid_ccnt_T_1) @[utils.scala 18:20]
          gen.small[3].cnt_invalid.ccnt <= _gen_small_3_cnt_invalid_ccnt_T_2 @[utils.scala 18:14]
          node _T_6 = or(nxt_23, gen.small[3].start) @[gen_addr.scala 165:31]
          when _T_6 : @[gen_addr.scala 165:39]
            gen.small[3].start <= UInt<1>("h01") @[gen_addr.scala 166:19]
            wire nxt_24 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_24 = eq(gen.small[3].cnt_ic.ccnt, gen.small[3].cnt_ic.cend) @[utils.scala 17:20]
            nxt_24 <= _nxt_T_24 @[utils.scala 17:13]
            node _gen_small_3_cnt_ic_ccnt_T = add(gen.small[3].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_3_cnt_ic_ccnt_T_1 = tail(_gen_small_3_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_3_cnt_ic_ccnt_T_2 = mux(nxt_24, UInt<1>("h00"), _gen_small_3_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
            gen.small[3].cnt_ic.ccnt <= _gen_small_3_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
            when nxt_24 : @[gen_addr.scala 167:31]
              wire nxt_25 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_25 = eq(gen.small[3].cnt_loop.ccnt, gen.small[3].cnt_loop.cend) @[utils.scala 17:20]
              nxt_25 <= _nxt_T_25 @[utils.scala 17:13]
              node _gen_small_3_cnt_loop_ccnt_T = add(gen.small[3].cnt_loop.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_3_cnt_loop_ccnt_T_1 = tail(_gen_small_3_cnt_loop_ccnt_T, 1) @[utils.scala 18:35]
              node _gen_small_3_cnt_loop_ccnt_T_2 = mux(nxt_25, UInt<1>("h00"), _gen_small_3_cnt_loop_ccnt_T_1) @[utils.scala 18:20]
              gen.small[3].cnt_loop.ccnt <= _gen_small_3_cnt_loop_ccnt_T_2 @[utils.scala 18:14]
              when nxt_25 : @[gen_addr.scala 168:37]
                wire nxt_26 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_26 = eq(gen.small[3].cnt_y.ccnt, gen.small[3].cnt_y.cend) @[utils.scala 17:20]
                nxt_26 <= _nxt_T_26 @[utils.scala 17:13]
                node _gen_small_3_cnt_y_ccnt_T = add(gen.small[3].cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_small_3_cnt_y_ccnt_T_1 = tail(_gen_small_3_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
                node _gen_small_3_cnt_y_ccnt_T_2 = mux(nxt_26, UInt<1>("h00"), _gen_small_3_cnt_y_ccnt_T_1) @[utils.scala 18:20]
                gen.small[3].cnt_y.ccnt <= _gen_small_3_cnt_y_ccnt_T_2 @[utils.scala 18:14]
                when nxt_26 : @[gen_addr.scala 169:38]
                  wire nxt_27 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_27 = eq(gen.small[3].cnt_ups.ccnt, gen.small[3].cnt_ups.cend) @[utils.scala 17:20]
                  nxt_27 <= _nxt_T_27 @[utils.scala 17:13]
                  node _gen_small_3_cnt_ups_ccnt_T = add(gen.small[3].cnt_ups.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_small_3_cnt_ups_ccnt_T_1 = tail(_gen_small_3_cnt_ups_ccnt_T, 1) @[utils.scala 18:35]
                  node _gen_small_3_cnt_ups_ccnt_T_2 = mux(nxt_27, UInt<1>("h00"), _gen_small_3_cnt_ups_ccnt_T_1) @[utils.scala 18:20]
                  gen.small[3].cnt_ups.ccnt <= _gen_small_3_cnt_ups_ccnt_T_2 @[utils.scala 18:14]
                  when nxt_27 : @[gen_addr.scala 170:44]
                    wire nxt_28 : UInt<1> @[utils.scala 16:23]
                    node _nxt_T_28 = eq(gen.small[3].cnt_swap.ccnt, gen.small[3].cnt_swap.cend) @[utils.scala 17:20]
                    nxt_28 <= _nxt_T_28 @[utils.scala 17:13]
                    node _gen_small_3_cnt_swap_ccnt_T = add(gen.small[3].cnt_swap.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                    node _gen_small_3_cnt_swap_ccnt_T_1 = tail(_gen_small_3_cnt_swap_ccnt_T, 1) @[utils.scala 18:35]
                    node _gen_small_3_cnt_swap_ccnt_T_2 = mux(nxt_28, UInt<1>("h00"), _gen_small_3_cnt_swap_ccnt_T_1) @[utils.scala 18:20]
                    gen.small[3].cnt_swap.ccnt <= _gen_small_3_cnt_swap_ccnt_T_2 @[utils.scala 18:14]
                    when nxt_28 : @[gen_addr.scala 171:49]
                      node _nxt_addr_T_24 = add(gen.small[3].now_addr, UInt<1>("h01")) @[gen_addr.scala 172:53]
                      node _nxt_addr_T_25 = tail(_nxt_addr_T_24, 1) @[gen_addr.scala 172:53]
                      nxt_addr_4 <= _nxt_addr_T_25 @[gen_addr.scala 172:42]
                      wire gen_small_3_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                      node _gen_small_3_y_begin_addr_T = geq(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 48:18]
                      when _gen_small_3_y_begin_addr_T : @[gen_addr.scala 48:29]
                        node _gen_small_3_y_begin_addr_nxt_T = sub(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 49:24]
                        node _gen_small_3_y_begin_addr_nxt_T_1 = tail(_gen_small_3_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                        node _gen_small_3_y_begin_addr_nxt_T_2 = add(_gen_small_3_y_begin_addr_nxt_T_1, gen.small[3].min_addr) @[gen_addr.scala 49:33]
                        node _gen_small_3_y_begin_addr_nxt_T_3 = tail(_gen_small_3_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                        gen_small_3_y_begin_addr_nxt <= _gen_small_3_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                        skip @[gen_addr.scala 48:29]
                      else : @[gen_addr.scala 50:20]
                        gen_small_3_y_begin_addr_nxt <= nxt_addr_4 @[gen_addr.scala 51:17]
                        skip @[gen_addr.scala 50:20]
                      gen.small[3].y_begin_addr <= gen_small_3_y_begin_addr_nxt @[gen_addr.scala 173:46]
                      skip @[gen_addr.scala 171:49]
                    else : @[gen_addr.scala 174:40]
                      nxt_addr_4 <= gen.small[3].y_begin_addr @[gen_addr.scala 175:42]
                      skip @[gen_addr.scala 174:40]
                    gen.small[3].bank_id <= gen.small[3].ano_bank_id @[gen_addr.scala 177:37]
                    gen.small[3].ano_bank_id <= gen.small[3].bank_id @[gen_addr.scala 178:41]
                    skip @[gen_addr.scala 170:44]
                  else : @[gen_addr.scala 179:36]
                    nxt_addr_4 <= gen.small[3].y_begin_addr @[gen_addr.scala 180:38]
                    skip @[gen_addr.scala 179:36]
                  skip @[gen_addr.scala 169:38]
                else : @[gen_addr.scala 182:32]
                  node _nxt_addr_T_26 = add(gen.small[3].now_addr, UInt<1>("h01")) @[gen_addr.scala 183:45]
                  node _nxt_addr_T_27 = tail(_nxt_addr_T_26, 1) @[gen_addr.scala 183:45]
                  nxt_addr_4 <= _nxt_addr_T_27 @[gen_addr.scala 183:34]
                  skip @[gen_addr.scala 182:32]
                wire gen_small_3_ic_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
                node _gen_small_3_ic_begin_addr_T = geq(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 48:18]
                when _gen_small_3_ic_begin_addr_T : @[gen_addr.scala 48:29]
                  node _gen_small_3_ic_begin_addr_nxt_T = sub(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 49:24]
                  node _gen_small_3_ic_begin_addr_nxt_T_1 = tail(_gen_small_3_ic_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                  node _gen_small_3_ic_begin_addr_nxt_T_2 = add(_gen_small_3_ic_begin_addr_nxt_T_1, gen.small[3].min_addr) @[gen_addr.scala 49:33]
                  node _gen_small_3_ic_begin_addr_nxt_T_3 = tail(_gen_small_3_ic_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                  gen_small_3_ic_begin_addr_nxt <= _gen_small_3_ic_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                  skip @[gen_addr.scala 48:29]
                else : @[gen_addr.scala 50:20]
                  gen_small_3_ic_begin_addr_nxt <= nxt_addr_4 @[gen_addr.scala 51:17]
                  skip @[gen_addr.scala 50:20]
                gen.small[3].ic_begin_addr <= gen_small_3_ic_begin_addr_nxt @[gen_addr.scala 185:35]
                skip @[gen_addr.scala 168:37]
              else : @[gen_addr.scala 186:28]
                nxt_addr_4 <= gen.small[3].ic_begin_addr @[gen_addr.scala 187:30]
                skip @[gen_addr.scala 186:28]
              skip @[gen_addr.scala 167:31]
            else : @[gen_addr.scala 189:24]
              node _nxt_addr_T_28 = add(gen.small[3].now_addr, UInt<1>("h01")) @[gen_addr.scala 190:37]
              node _nxt_addr_T_29 = tail(_nxt_addr_T_28, 1) @[gen_addr.scala 190:37]
              nxt_addr_4 <= _nxt_addr_T_29 @[gen_addr.scala 190:26]
              skip @[gen_addr.scala 189:24]
            wire gen_small_3_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_3_now_addr_T = geq(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_3_now_addr_T : @[gen_addr.scala 48:29]
              node _gen_small_3_now_addr_nxt_T = sub(nxt_addr_4, gen.small[3].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_3_now_addr_nxt_T_1 = tail(_gen_small_3_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
              node _gen_small_3_now_addr_nxt_T_2 = add(_gen_small_3_now_addr_nxt_T_1, gen.small[3].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_3_now_addr_nxt_T_3 = tail(_gen_small_3_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
              gen_small_3_now_addr_nxt <= _gen_small_3_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_3_now_addr_nxt <= nxt_addr_4 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[3].now_addr <= gen_small_3_now_addr_nxt @[gen_addr.scala 192:22]
            skip @[gen_addr.scala 165:39]
          skip @[Conditional.scala 40:58]
        else : @[Conditional.scala 39:67]
          node _T_7 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
          node _T_8 = asUInt(job_type) @[Conditional.scala 37:39]
          node _T_9 = eq(_T_7, _T_8) @[Conditional.scala 37:30]
          when _T_9 : @[Conditional.scala 39:67]
            wire nxt_addr_5 : UInt<10> @[gen_addr.scala 107:28]
            nxt_addr_5 <= UInt<1>("h00") @[gen_addr.scala 108:18]
            wire nxt_29 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_29 = eq(gen.big.cnt_maxp.ccnt, gen.big.cnt_maxp.cend) @[utils.scala 17:20]
            nxt_29 <= _nxt_T_29 @[utils.scala 17:13]
            node _gen_big_cnt_maxp_ccnt_T = add(gen.big.cnt_maxp.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_big_cnt_maxp_ccnt_T_1 = tail(_gen_big_cnt_maxp_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_big_cnt_maxp_ccnt_T_2 = mux(nxt_29, UInt<1>("h00"), _gen_big_cnt_maxp_ccnt_T_1) @[utils.scala 18:20]
            gen.big.cnt_maxp.ccnt <= _gen_big_cnt_maxp_ccnt_T_2 @[utils.scala 18:14]
            when nxt_29 : @[gen_addr.scala 109:29]
              wire nxt_30 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_30 = eq(gen.big.cnt_ic.ccnt, gen.big.cnt_ic.cend) @[utils.scala 17:20]
              nxt_30 <= _nxt_T_30 @[utils.scala 17:13]
              node _gen_big_cnt_ic_ccnt_T_3 = add(gen.big.cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_big_cnt_ic_ccnt_T_4 = tail(_gen_big_cnt_ic_ccnt_T_3, 1) @[utils.scala 18:35]
              node _gen_big_cnt_ic_ccnt_T_5 = mux(nxt_30, UInt<1>("h00"), _gen_big_cnt_ic_ccnt_T_4) @[utils.scala 18:20]
              gen.big.cnt_ic.ccnt <= _gen_big_cnt_ic_ccnt_T_5 @[utils.scala 18:14]
              when nxt_30 : @[gen_addr.scala 110:31]
                wire nxt_31 : UInt<1> @[utils.scala 16:23]
                node _nxt_T_31 = eq(gen.big.cnt_y.ccnt, gen.big.cnt_y.cend) @[utils.scala 17:20]
                nxt_31 <= _nxt_T_31 @[utils.scala 17:13]
                node _gen_big_cnt_y_ccnt_T_3 = add(gen.big.cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                node _gen_big_cnt_y_ccnt_T_4 = tail(_gen_big_cnt_y_ccnt_T_3, 1) @[utils.scala 18:35]
                node _gen_big_cnt_y_ccnt_T_5 = mux(nxt_31, UInt<1>("h00"), _gen_big_cnt_y_ccnt_T_4) @[utils.scala 18:20]
                gen.big.cnt_y.ccnt <= _gen_big_cnt_y_ccnt_T_5 @[utils.scala 18:14]
                when nxt_31 : @[gen_addr.scala 111:34]
                  wire nxt_32 : UInt<1> @[utils.scala 16:23]
                  node _nxt_T_32 = eq(gen.big.cnt_x.ccnt, gen.big.cnt_x.cend) @[utils.scala 17:20]
                  nxt_32 <= _nxt_T_32 @[utils.scala 17:13]
                  node _gen_big_cnt_x_ccnt_T_3 = add(gen.big.cnt_x.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
                  node _gen_big_cnt_x_ccnt_T_4 = tail(_gen_big_cnt_x_ccnt_T_3, 1) @[utils.scala 18:35]
                  node _gen_big_cnt_x_ccnt_T_5 = mux(nxt_32, UInt<1>("h00"), _gen_big_cnt_x_ccnt_T_4) @[utils.scala 18:20]
                  gen.big.cnt_x.ccnt <= _gen_big_cnt_x_ccnt_T_5 @[utils.scala 18:14]
                  when nxt_32 : @[gen_addr.scala 112:38]
                    gen.big.flag_end <= UInt<1>("h01") @[gen_addr.scala 113:34]
                    skip @[gen_addr.scala 112:38]
                  else : @[gen_addr.scala 114:32]
                    node _nxt_addr_T_30 = add(gen.big.now_addr, UInt<1>("h01")) @[gen_addr.scala 115:45]
                    node _nxt_addr_T_31 = tail(_nxt_addr_T_30, 1) @[gen_addr.scala 115:45]
                    nxt_addr_5 <= _nxt_addr_T_31 @[gen_addr.scala 115:34]
                    skip @[gen_addr.scala 114:32]
                  skip @[gen_addr.scala 111:34]
                else : @[gen_addr.scala 117:28]
                  node _nxt_addr_T_32 = add(gen.big.y_begin_addr, gen.big.block_size) @[gen_addr.scala 118:45]
                  node _nxt_addr_T_33 = tail(_nxt_addr_T_32, 1) @[gen_addr.scala 118:45]
                  node _nxt_addr_T_34 = add(_nxt_addr_T_33, UInt<1>("h01")) @[gen_addr.scala 118:56]
                  node _nxt_addr_T_35 = tail(_nxt_addr_T_34, 1) @[gen_addr.scala 118:56]
                  nxt_addr_5 <= _nxt_addr_T_35 @[gen_addr.scala 118:30]
                  skip @[gen_addr.scala 117:28]
                skip @[gen_addr.scala 110:31]
              else : @[gen_addr.scala 120:24]
                node _nxt_addr_T_36 = add(gen.big.y_begin_addr, UInt<1>("h01")) @[gen_addr.scala 121:41]
                node _nxt_addr_T_37 = tail(_nxt_addr_T_36, 1) @[gen_addr.scala 121:41]
                nxt_addr_5 <= _nxt_addr_T_37 @[gen_addr.scala 121:26]
                skip @[gen_addr.scala 120:24]
              wire gen_big_y_begin_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
              node _gen_big_y_begin_addr_T_1 = geq(nxt_addr_5, gen.big.max_addr) @[gen_addr.scala 48:18]
              when _gen_big_y_begin_addr_T_1 : @[gen_addr.scala 48:29]
                node _gen_big_y_begin_addr_nxt_T_4 = sub(nxt_addr_5, gen.big.max_addr) @[gen_addr.scala 49:24]
                node _gen_big_y_begin_addr_nxt_T_5 = tail(_gen_big_y_begin_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
                node _gen_big_y_begin_addr_nxt_T_6 = add(_gen_big_y_begin_addr_nxt_T_5, gen.big.min_addr) @[gen_addr.scala 49:33]
                node _gen_big_y_begin_addr_nxt_T_7 = tail(_gen_big_y_begin_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
                gen_big_y_begin_addr_nxt_1 <= _gen_big_y_begin_addr_nxt_T_7 @[gen_addr.scala 49:17]
                skip @[gen_addr.scala 48:29]
              else : @[gen_addr.scala 50:20]
                gen_big_y_begin_addr_nxt_1 <= nxt_addr_5 @[gen_addr.scala 51:17]
                skip @[gen_addr.scala 50:20]
              gen.big.y_begin_addr <= gen_big_y_begin_addr_nxt_1 @[gen_addr.scala 123:26]
              skip @[gen_addr.scala 109:29]
            else : @[gen_addr.scala 124:20]
              node _T_10 = eq(UInt<1>("h00"), gen.big.cnt_maxp.ccnt) @[Conditional.scala 37:30]
              when _T_10 : @[Conditional.scala 40:58]
                node _nxt_addr_T_38 = add(gen.big.y_begin_addr, gen.big.block_size) @[gen_addr.scala 127:45]
                node _nxt_addr_T_39 = tail(_nxt_addr_T_38, 1) @[gen_addr.scala 127:45]
                nxt_addr_5 <= _nxt_addr_T_39 @[gen_addr.scala 127:30]
                skip @[Conditional.scala 40:58]
              else : @[Conditional.scala 39:67]
                node _T_11 = eq(UInt<1>("h01"), gen.big.cnt_maxp.ccnt) @[Conditional.scala 37:30]
                when _T_11 : @[Conditional.scala 39:67]
                  node _nxt_addr_T_40 = add(gen.big.y_begin_addr, gen.big.column_size) @[gen_addr.scala 130:45]
                  node _nxt_addr_T_41 = tail(_nxt_addr_T_40, 1) @[gen_addr.scala 130:45]
                  nxt_addr_5 <= _nxt_addr_T_41 @[gen_addr.scala 130:30]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_12 = eq(UInt<2>("h02"), gen.big.cnt_maxp.ccnt) @[Conditional.scala 37:30]
                  when _T_12 : @[Conditional.scala 39:67]
                    node _nxt_addr_T_42 = add(gen.big.y_begin_addr, gen.big.column_size) @[gen_addr.scala 133:45]
                    node _nxt_addr_T_43 = tail(_nxt_addr_T_42, 1) @[gen_addr.scala 133:45]
                    node _nxt_addr_T_44 = add(_nxt_addr_T_43, gen.big.block_size) @[gen_addr.scala 133:57]
                    node _nxt_addr_T_45 = tail(_nxt_addr_T_44, 1) @[gen_addr.scala 133:57]
                    nxt_addr_5 <= _nxt_addr_T_45 @[gen_addr.scala 133:30]
                    skip @[Conditional.scala 39:67]
              skip @[gen_addr.scala 124:20]
            wire gen_big_now_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
            node _gen_big_now_addr_T_1 = geq(nxt_addr_5, gen.big.max_addr) @[gen_addr.scala 48:18]
            when _gen_big_now_addr_T_1 : @[gen_addr.scala 48:29]
              node _gen_big_now_addr_nxt_T_4 = sub(nxt_addr_5, gen.big.max_addr) @[gen_addr.scala 49:24]
              node _gen_big_now_addr_nxt_T_5 = tail(_gen_big_now_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
              node _gen_big_now_addr_nxt_T_6 = add(_gen_big_now_addr_nxt_T_5, gen.big.min_addr) @[gen_addr.scala 49:33]
              node _gen_big_now_addr_nxt_T_7 = tail(_gen_big_now_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
              gen_big_now_addr_nxt_1 <= _gen_big_now_addr_nxt_T_7 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_big_now_addr_nxt_1 <= nxt_addr_5 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.big.now_addr <= gen_big_now_addr_nxt_1 @[gen_addr.scala 137:18]
            wire nxt_addr_6 : UInt<10> @[gen_addr.scala 196:28]
            nxt_addr_6 <= UInt<1>("h00") @[gen_addr.scala 197:18]
            wire nxt_33 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_33 = eq(gen.small[0].cnt_maxp.ccnt, gen.small[0].cnt_maxp.cend) @[utils.scala 17:20]
            nxt_33 <= _nxt_T_33 @[utils.scala 17:13]
            node _gen_small_0_cnt_maxp_ccnt_T = add(gen.small[0].cnt_maxp.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_0_cnt_maxp_ccnt_T_1 = tail(_gen_small_0_cnt_maxp_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_0_cnt_maxp_ccnt_T_2 = mux(nxt_33, UInt<1>("h00"), _gen_small_0_cnt_maxp_ccnt_T_1) @[utils.scala 18:20]
            gen.small[0].cnt_maxp.ccnt <= _gen_small_0_cnt_maxp_ccnt_T_2 @[utils.scala 18:14]
            when nxt_33 : @[gen_addr.scala 198:29]
              wire nxt_34 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_34 = eq(gen.small[0].cnt_ic.ccnt, gen.small[0].cnt_ic.cend) @[utils.scala 17:20]
              nxt_34 <= _nxt_T_34 @[utils.scala 17:13]
              node _gen_small_0_cnt_ic_ccnt_T_3 = add(gen.small[0].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_0_cnt_ic_ccnt_T_4 = tail(_gen_small_0_cnt_ic_ccnt_T_3, 1) @[utils.scala 18:35]
              node _gen_small_0_cnt_ic_ccnt_T_5 = mux(nxt_34, UInt<1>("h00"), _gen_small_0_cnt_ic_ccnt_T_4) @[utils.scala 18:20]
              gen.small[0].cnt_ic.ccnt <= _gen_small_0_cnt_ic_ccnt_T_5 @[utils.scala 18:14]
              when nxt_34 : @[gen_addr.scala 199:31]
                node _nxt_addr_T_46 = add(gen.small[0].now_addr, UInt<1>("h01")) @[gen_addr.scala 200:37]
                node _nxt_addr_T_47 = tail(_nxt_addr_T_46, 1) @[gen_addr.scala 200:37]
                nxt_addr_6 <= _nxt_addr_T_47 @[gen_addr.scala 200:26]
                gen.small[0].bank_id <= gen.small[0].ano_bank_id @[gen_addr.scala 201:25]
                gen.small[0].ano_bank_id <= gen.small[0].bank_id @[gen_addr.scala 202:29]
                skip @[gen_addr.scala 199:31]
              else : @[gen_addr.scala 203:24]
                node _nxt_addr_T_48 = add(gen.small[0].y_begin_addr, UInt<1>("h01")) @[gen_addr.scala 204:41]
                node _nxt_addr_T_49 = tail(_nxt_addr_T_48, 1) @[gen_addr.scala 204:41]
                nxt_addr_6 <= _nxt_addr_T_49 @[gen_addr.scala 204:26]
                gen.small[0].bank_id <= gen.small[0].ano_bank_id @[gen_addr.scala 205:25]
                gen.small[0].ano_bank_id <= gen.small[0].bank_id @[gen_addr.scala 206:29]
                skip @[gen_addr.scala 203:24]
              wire gen_small_0_y_begin_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
              node _gen_small_0_y_begin_addr_T_1 = geq(nxt_addr_6, gen.small[0].max_addr) @[gen_addr.scala 48:18]
              when _gen_small_0_y_begin_addr_T_1 : @[gen_addr.scala 48:29]
                node _gen_small_0_y_begin_addr_nxt_T_4 = sub(nxt_addr_6, gen.small[0].max_addr) @[gen_addr.scala 49:24]
                node _gen_small_0_y_begin_addr_nxt_T_5 = tail(_gen_small_0_y_begin_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
                node _gen_small_0_y_begin_addr_nxt_T_6 = add(_gen_small_0_y_begin_addr_nxt_T_5, gen.small[0].min_addr) @[gen_addr.scala 49:33]
                node _gen_small_0_y_begin_addr_nxt_T_7 = tail(_gen_small_0_y_begin_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
                gen_small_0_y_begin_addr_nxt_1 <= _gen_small_0_y_begin_addr_nxt_T_7 @[gen_addr.scala 49:17]
                skip @[gen_addr.scala 48:29]
              else : @[gen_addr.scala 50:20]
                gen_small_0_y_begin_addr_nxt_1 <= nxt_addr_6 @[gen_addr.scala 51:17]
                skip @[gen_addr.scala 50:20]
              gen.small[0].y_begin_addr <= gen_small_0_y_begin_addr_nxt_1 @[gen_addr.scala 208:26]
              skip @[gen_addr.scala 198:29]
            else : @[gen_addr.scala 209:20]
              node _T_13 = eq(UInt<1>("h00"), gen.small[0].cnt_maxp.ccnt) @[Conditional.scala 37:30]
              when _T_13 : @[Conditional.scala 40:58]
                node _nxt_addr_T_50 = add(gen.small[0].y_begin_addr, gen.small[0].block_size) @[gen_addr.scala 212:45]
                node _nxt_addr_T_51 = tail(_nxt_addr_T_50, 1) @[gen_addr.scala 212:45]
                nxt_addr_6 <= _nxt_addr_T_51 @[gen_addr.scala 212:30]
                skip @[Conditional.scala 40:58]
              else : @[Conditional.scala 39:67]
                node _T_14 = eq(UInt<1>("h01"), gen.small[0].cnt_maxp.ccnt) @[Conditional.scala 37:30]
                when _T_14 : @[Conditional.scala 39:67]
                  nxt_addr_6 <= gen.small[0].y_begin_addr @[gen_addr.scala 215:30]
                  gen.small[0].bank_id <= gen.small[0].ano_bank_id @[gen_addr.scala 216:29]
                  gen.small[0].ano_bank_id <= gen.small[0].bank_id @[gen_addr.scala 217:33]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_15 = eq(UInt<2>("h02"), gen.small[0].cnt_maxp.ccnt) @[Conditional.scala 37:30]
                  when _T_15 : @[Conditional.scala 39:67]
                    node _nxt_addr_T_52 = add(gen.small[0].y_begin_addr, gen.small[0].block_size) @[gen_addr.scala 220:45]
                    node _nxt_addr_T_53 = tail(_nxt_addr_T_52, 1) @[gen_addr.scala 220:45]
                    nxt_addr_6 <= _nxt_addr_T_53 @[gen_addr.scala 220:30]
                    skip @[Conditional.scala 39:67]
              skip @[gen_addr.scala 209:20]
            wire gen_small_0_now_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_0_now_addr_T_1 = geq(nxt_addr_6, gen.small[0].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_0_now_addr_T_1 : @[gen_addr.scala 48:29]
              node _gen_small_0_now_addr_nxt_T_4 = sub(nxt_addr_6, gen.small[0].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_0_now_addr_nxt_T_5 = tail(_gen_small_0_now_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
              node _gen_small_0_now_addr_nxt_T_6 = add(_gen_small_0_now_addr_nxt_T_5, gen.small[0].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_0_now_addr_nxt_T_7 = tail(_gen_small_0_now_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
              gen_small_0_now_addr_nxt_1 <= _gen_small_0_now_addr_nxt_T_7 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_0_now_addr_nxt_1 <= nxt_addr_6 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[0].now_addr <= gen_small_0_now_addr_nxt_1 @[gen_addr.scala 224:18]
            wire nxt_addr_7 : UInt<10> @[gen_addr.scala 196:28]
            nxt_addr_7 <= UInt<1>("h00") @[gen_addr.scala 197:18]
            wire nxt_35 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_35 = eq(gen.small[1].cnt_maxp.ccnt, gen.small[1].cnt_maxp.cend) @[utils.scala 17:20]
            nxt_35 <= _nxt_T_35 @[utils.scala 17:13]
            node _gen_small_1_cnt_maxp_ccnt_T = add(gen.small[1].cnt_maxp.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_1_cnt_maxp_ccnt_T_1 = tail(_gen_small_1_cnt_maxp_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_1_cnt_maxp_ccnt_T_2 = mux(nxt_35, UInt<1>("h00"), _gen_small_1_cnt_maxp_ccnt_T_1) @[utils.scala 18:20]
            gen.small[1].cnt_maxp.ccnt <= _gen_small_1_cnt_maxp_ccnt_T_2 @[utils.scala 18:14]
            when nxt_35 : @[gen_addr.scala 198:29]
              wire nxt_36 : UInt<1> @[utils.scala 16:23]
              node _nxt_T_36 = eq(gen.small[1].cnt_ic.ccnt, gen.small[1].cnt_ic.cend) @[utils.scala 17:20]
              nxt_36 <= _nxt_T_36 @[utils.scala 17:13]
              node _gen_small_1_cnt_ic_ccnt_T_3 = add(gen.small[1].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _gen_small_1_cnt_ic_ccnt_T_4 = tail(_gen_small_1_cnt_ic_ccnt_T_3, 1) @[utils.scala 18:35]
              node _gen_small_1_cnt_ic_ccnt_T_5 = mux(nxt_36, UInt<1>("h00"), _gen_small_1_cnt_ic_ccnt_T_4) @[utils.scala 18:20]
              gen.small[1].cnt_ic.ccnt <= _gen_small_1_cnt_ic_ccnt_T_5 @[utils.scala 18:14]
              when nxt_36 : @[gen_addr.scala 199:31]
                node _nxt_addr_T_54 = add(gen.small[1].now_addr, UInt<1>("h01")) @[gen_addr.scala 200:37]
                node _nxt_addr_T_55 = tail(_nxt_addr_T_54, 1) @[gen_addr.scala 200:37]
                nxt_addr_7 <= _nxt_addr_T_55 @[gen_addr.scala 200:26]
                gen.small[1].bank_id <= gen.small[1].ano_bank_id @[gen_addr.scala 201:25]
                gen.small[1].ano_bank_id <= gen.small[1].bank_id @[gen_addr.scala 202:29]
                skip @[gen_addr.scala 199:31]
              else : @[gen_addr.scala 203:24]
                node _nxt_addr_T_56 = add(gen.small[1].y_begin_addr, UInt<1>("h01")) @[gen_addr.scala 204:41]
                node _nxt_addr_T_57 = tail(_nxt_addr_T_56, 1) @[gen_addr.scala 204:41]
                nxt_addr_7 <= _nxt_addr_T_57 @[gen_addr.scala 204:26]
                gen.small[1].bank_id <= gen.small[1].ano_bank_id @[gen_addr.scala 205:25]
                gen.small[1].ano_bank_id <= gen.small[1].bank_id @[gen_addr.scala 206:29]
                skip @[gen_addr.scala 203:24]
              wire gen_small_1_y_begin_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
              node _gen_small_1_y_begin_addr_T_1 = geq(nxt_addr_7, gen.small[1].max_addr) @[gen_addr.scala 48:18]
              when _gen_small_1_y_begin_addr_T_1 : @[gen_addr.scala 48:29]
                node _gen_small_1_y_begin_addr_nxt_T_4 = sub(nxt_addr_7, gen.small[1].max_addr) @[gen_addr.scala 49:24]
                node _gen_small_1_y_begin_addr_nxt_T_5 = tail(_gen_small_1_y_begin_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
                node _gen_small_1_y_begin_addr_nxt_T_6 = add(_gen_small_1_y_begin_addr_nxt_T_5, gen.small[1].min_addr) @[gen_addr.scala 49:33]
                node _gen_small_1_y_begin_addr_nxt_T_7 = tail(_gen_small_1_y_begin_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
                gen_small_1_y_begin_addr_nxt_1 <= _gen_small_1_y_begin_addr_nxt_T_7 @[gen_addr.scala 49:17]
                skip @[gen_addr.scala 48:29]
              else : @[gen_addr.scala 50:20]
                gen_small_1_y_begin_addr_nxt_1 <= nxt_addr_7 @[gen_addr.scala 51:17]
                skip @[gen_addr.scala 50:20]
              gen.small[1].y_begin_addr <= gen_small_1_y_begin_addr_nxt_1 @[gen_addr.scala 208:26]
              skip @[gen_addr.scala 198:29]
            else : @[gen_addr.scala 209:20]
              node _T_16 = eq(UInt<1>("h00"), gen.small[1].cnt_maxp.ccnt) @[Conditional.scala 37:30]
              when _T_16 : @[Conditional.scala 40:58]
                node _nxt_addr_T_58 = add(gen.small[1].y_begin_addr, gen.small[1].block_size) @[gen_addr.scala 212:45]
                node _nxt_addr_T_59 = tail(_nxt_addr_T_58, 1) @[gen_addr.scala 212:45]
                nxt_addr_7 <= _nxt_addr_T_59 @[gen_addr.scala 212:30]
                skip @[Conditional.scala 40:58]
              else : @[Conditional.scala 39:67]
                node _T_17 = eq(UInt<1>("h01"), gen.small[1].cnt_maxp.ccnt) @[Conditional.scala 37:30]
                when _T_17 : @[Conditional.scala 39:67]
                  nxt_addr_7 <= gen.small[1].y_begin_addr @[gen_addr.scala 215:30]
                  gen.small[1].bank_id <= gen.small[1].ano_bank_id @[gen_addr.scala 216:29]
                  gen.small[1].ano_bank_id <= gen.small[1].bank_id @[gen_addr.scala 217:33]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_18 = eq(UInt<2>("h02"), gen.small[1].cnt_maxp.ccnt) @[Conditional.scala 37:30]
                  when _T_18 : @[Conditional.scala 39:67]
                    node _nxt_addr_T_60 = add(gen.small[1].y_begin_addr, gen.small[1].block_size) @[gen_addr.scala 220:45]
                    node _nxt_addr_T_61 = tail(_nxt_addr_T_60, 1) @[gen_addr.scala 220:45]
                    nxt_addr_7 <= _nxt_addr_T_61 @[gen_addr.scala 220:30]
                    skip @[Conditional.scala 39:67]
              skip @[gen_addr.scala 209:20]
            wire gen_small_1_now_addr_nxt_1 : UInt<10> @[gen_addr.scala 47:23]
            node _gen_small_1_now_addr_T_1 = geq(nxt_addr_7, gen.small[1].max_addr) @[gen_addr.scala 48:18]
            when _gen_small_1_now_addr_T_1 : @[gen_addr.scala 48:29]
              node _gen_small_1_now_addr_nxt_T_4 = sub(nxt_addr_7, gen.small[1].max_addr) @[gen_addr.scala 49:24]
              node _gen_small_1_now_addr_nxt_T_5 = tail(_gen_small_1_now_addr_nxt_T_4, 1) @[gen_addr.scala 49:24]
              node _gen_small_1_now_addr_nxt_T_6 = add(_gen_small_1_now_addr_nxt_T_5, gen.small[1].min_addr) @[gen_addr.scala 49:33]
              node _gen_small_1_now_addr_nxt_T_7 = tail(_gen_small_1_now_addr_nxt_T_6, 1) @[gen_addr.scala 49:33]
              gen_small_1_now_addr_nxt_1 <= _gen_small_1_now_addr_nxt_T_7 @[gen_addr.scala 49:17]
              skip @[gen_addr.scala 48:29]
            else : @[gen_addr.scala 50:20]
              gen_small_1_now_addr_nxt_1 <= nxt_addr_7 @[gen_addr.scala 51:17]
              skip @[gen_addr.scala 50:20]
            gen.small[1].now_addr <= gen_small_1_now_addr_nxt_1 @[gen_addr.scala 224:18]
            skip @[Conditional.scala 39:67]
        node _io_valid_out_T = not(gen.big.flag_end) @[read.scala 40:25]
        io.valid_out <= _io_valid_out_T @[read.scala 40:22]
        wire io_to_banks_ret : {addrs : {addr : UInt<10>, bank_id : UInt<3>}[5]} @[gen_addr.scala 317:23]
        wire io_to_banks_ret_addrs_0_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
        io_to_banks_ret_addrs_0_ret.addr <= gen.big.now_addr @[gen_addr.scala 15:18]
        io_to_banks_ret_addrs_0_ret.bank_id <= gen.big.bank_id @[gen_addr.scala 16:21]
        io_to_banks_ret.addrs[0].bank_id <= io_to_banks_ret_addrs_0_ret.bank_id @[gen_addr.scala 318:22]
        io_to_banks_ret.addrs[0].addr <= io_to_banks_ret_addrs_0_ret.addr @[gen_addr.scala 318:22]
        wire io_to_banks_ret_addrs_1_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
        io_to_banks_ret_addrs_1_ret.addr <= gen.small[0].now_addr @[gen_addr.scala 15:18]
        io_to_banks_ret_addrs_1_ret.bank_id <= gen.small[0].bank_id @[gen_addr.scala 16:21]
        io_to_banks_ret.addrs[1].bank_id <= io_to_banks_ret_addrs_1_ret.bank_id @[gen_addr.scala 320:28]
        io_to_banks_ret.addrs[1].addr <= io_to_banks_ret_addrs_1_ret.addr @[gen_addr.scala 320:28]
        wire io_to_banks_ret_addrs_2_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
        io_to_banks_ret_addrs_2_ret.addr <= gen.small[1].now_addr @[gen_addr.scala 15:18]
        io_to_banks_ret_addrs_2_ret.bank_id <= gen.small[1].bank_id @[gen_addr.scala 16:21]
        io_to_banks_ret.addrs[2].bank_id <= io_to_banks_ret_addrs_2_ret.bank_id @[gen_addr.scala 320:28]
        io_to_banks_ret.addrs[2].addr <= io_to_banks_ret_addrs_2_ret.addr @[gen_addr.scala 320:28]
        wire io_to_banks_ret_addrs_3_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
        io_to_banks_ret_addrs_3_ret.addr <= gen.small[2].now_addr @[gen_addr.scala 15:18]
        io_to_banks_ret_addrs_3_ret.bank_id <= gen.small[2].bank_id @[gen_addr.scala 16:21]
        io_to_banks_ret.addrs[3].bank_id <= io_to_banks_ret_addrs_3_ret.bank_id @[gen_addr.scala 320:28]
        io_to_banks_ret.addrs[3].addr <= io_to_banks_ret_addrs_3_ret.addr @[gen_addr.scala 320:28]
        wire io_to_banks_ret_addrs_4_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
        io_to_banks_ret_addrs_4_ret.addr <= gen.small[3].now_addr @[gen_addr.scala 15:18]
        io_to_banks_ret_addrs_4_ret.bank_id <= gen.small[3].bank_id @[gen_addr.scala 16:21]
        io_to_banks_ret.addrs[4].bank_id <= io_to_banks_ret_addrs_4_ret.bank_id @[gen_addr.scala 320:28]
        io_to_banks_ret.addrs[4].addr <= io_to_banks_ret_addrs_4_ret.addr @[gen_addr.scala 320:28]
        io.to_banks.addrs[0].bank_id <= io_to_banks_ret.addrs[0].bank_id @[read.scala 41:21]
        io.to_banks.addrs[0].addr <= io_to_banks_ret.addrs[0].addr @[read.scala 41:21]
        io.to_banks.addrs[1].bank_id <= io_to_banks_ret.addrs[1].bank_id @[read.scala 41:21]
        io.to_banks.addrs[1].addr <= io_to_banks_ret.addrs[1].addr @[read.scala 41:21]
        io.to_banks.addrs[2].bank_id <= io_to_banks_ret.addrs[2].bank_id @[read.scala 41:21]
        io.to_banks.addrs[2].addr <= io_to_banks_ret.addrs[2].addr @[read.scala 41:21]
        io.to_banks.addrs[3].bank_id <= io_to_banks_ret.addrs[3].bank_id @[read.scala 41:21]
        io.to_banks.addrs[3].addr <= io_to_banks_ret.addrs[3].addr @[read.scala 41:21]
        io.to_banks.addrs[4].bank_id <= io_to_banks_ret.addrs[4].bank_id @[read.scala 41:21]
        io.to_banks.addrs[4].addr <= io_to_banks_ret.addrs[4].addr @[read.scala 41:21]
        skip @[read.scala 31:28]
    
  module PackReadData : 
    input clock : Clock
    input reset : Reset
    output io : {flip valid_in : UInt<1>, valid_out : UInt<1>, flip flag_job : UInt<1>, flip job : {cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, in_chan : UInt<10>}, flip from_big : {data : SInt<16>[48]}[2], flip from_small : {data : SInt<16>[8]}[4][2], output : {mat : SInt<16>[64], up : SInt<16>[10], down : SInt<16>[10], left : SInt<16>[8], right : SInt<16>[8]}}
    
    wire _cache_WIRE : SInt<16>[10][64] @[read_pack.scala 23:37]
    node _cache_T = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[0][0] <= _cache_T @[read_pack.scala 23:37]
    node _cache_T_1 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[0][1] <= _cache_T_1 @[read_pack.scala 23:37]
    node _cache_T_2 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[0][2] <= _cache_T_2 @[read_pack.scala 23:37]
    node _cache_T_3 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[0][3] <= _cache_T_3 @[read_pack.scala 23:37]
    node _cache_T_4 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[0][4] <= _cache_T_4 @[read_pack.scala 23:37]
    node _cache_T_5 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[0][5] <= _cache_T_5 @[read_pack.scala 23:37]
    node _cache_T_6 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[0][6] <= _cache_T_6 @[read_pack.scala 23:37]
    node _cache_T_7 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[0][7] <= _cache_T_7 @[read_pack.scala 23:37]
    node _cache_T_8 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[0][8] <= _cache_T_8 @[read_pack.scala 23:37]
    node _cache_T_9 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[0][9] <= _cache_T_9 @[read_pack.scala 23:37]
    node _cache_T_10 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[1][0] <= _cache_T_10 @[read_pack.scala 23:37]
    node _cache_T_11 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[1][1] <= _cache_T_11 @[read_pack.scala 23:37]
    node _cache_T_12 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[1][2] <= _cache_T_12 @[read_pack.scala 23:37]
    node _cache_T_13 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[1][3] <= _cache_T_13 @[read_pack.scala 23:37]
    node _cache_T_14 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[1][4] <= _cache_T_14 @[read_pack.scala 23:37]
    node _cache_T_15 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[1][5] <= _cache_T_15 @[read_pack.scala 23:37]
    node _cache_T_16 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[1][6] <= _cache_T_16 @[read_pack.scala 23:37]
    node _cache_T_17 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[1][7] <= _cache_T_17 @[read_pack.scala 23:37]
    node _cache_T_18 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[1][8] <= _cache_T_18 @[read_pack.scala 23:37]
    node _cache_T_19 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[1][9] <= _cache_T_19 @[read_pack.scala 23:37]
    node _cache_T_20 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[2][0] <= _cache_T_20 @[read_pack.scala 23:37]
    node _cache_T_21 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[2][1] <= _cache_T_21 @[read_pack.scala 23:37]
    node _cache_T_22 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[2][2] <= _cache_T_22 @[read_pack.scala 23:37]
    node _cache_T_23 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[2][3] <= _cache_T_23 @[read_pack.scala 23:37]
    node _cache_T_24 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[2][4] <= _cache_T_24 @[read_pack.scala 23:37]
    node _cache_T_25 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[2][5] <= _cache_T_25 @[read_pack.scala 23:37]
    node _cache_T_26 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[2][6] <= _cache_T_26 @[read_pack.scala 23:37]
    node _cache_T_27 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[2][7] <= _cache_T_27 @[read_pack.scala 23:37]
    node _cache_T_28 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[2][8] <= _cache_T_28 @[read_pack.scala 23:37]
    node _cache_T_29 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[2][9] <= _cache_T_29 @[read_pack.scala 23:37]
    node _cache_T_30 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[3][0] <= _cache_T_30 @[read_pack.scala 23:37]
    node _cache_T_31 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[3][1] <= _cache_T_31 @[read_pack.scala 23:37]
    node _cache_T_32 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[3][2] <= _cache_T_32 @[read_pack.scala 23:37]
    node _cache_T_33 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[3][3] <= _cache_T_33 @[read_pack.scala 23:37]
    node _cache_T_34 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[3][4] <= _cache_T_34 @[read_pack.scala 23:37]
    node _cache_T_35 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[3][5] <= _cache_T_35 @[read_pack.scala 23:37]
    node _cache_T_36 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[3][6] <= _cache_T_36 @[read_pack.scala 23:37]
    node _cache_T_37 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[3][7] <= _cache_T_37 @[read_pack.scala 23:37]
    node _cache_T_38 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[3][8] <= _cache_T_38 @[read_pack.scala 23:37]
    node _cache_T_39 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[3][9] <= _cache_T_39 @[read_pack.scala 23:37]
    node _cache_T_40 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[4][0] <= _cache_T_40 @[read_pack.scala 23:37]
    node _cache_T_41 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[4][1] <= _cache_T_41 @[read_pack.scala 23:37]
    node _cache_T_42 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[4][2] <= _cache_T_42 @[read_pack.scala 23:37]
    node _cache_T_43 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[4][3] <= _cache_T_43 @[read_pack.scala 23:37]
    node _cache_T_44 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[4][4] <= _cache_T_44 @[read_pack.scala 23:37]
    node _cache_T_45 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[4][5] <= _cache_T_45 @[read_pack.scala 23:37]
    node _cache_T_46 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[4][6] <= _cache_T_46 @[read_pack.scala 23:37]
    node _cache_T_47 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[4][7] <= _cache_T_47 @[read_pack.scala 23:37]
    node _cache_T_48 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[4][8] <= _cache_T_48 @[read_pack.scala 23:37]
    node _cache_T_49 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[4][9] <= _cache_T_49 @[read_pack.scala 23:37]
    node _cache_T_50 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[5][0] <= _cache_T_50 @[read_pack.scala 23:37]
    node _cache_T_51 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[5][1] <= _cache_T_51 @[read_pack.scala 23:37]
    node _cache_T_52 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[5][2] <= _cache_T_52 @[read_pack.scala 23:37]
    node _cache_T_53 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[5][3] <= _cache_T_53 @[read_pack.scala 23:37]
    node _cache_T_54 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[5][4] <= _cache_T_54 @[read_pack.scala 23:37]
    node _cache_T_55 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[5][5] <= _cache_T_55 @[read_pack.scala 23:37]
    node _cache_T_56 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[5][6] <= _cache_T_56 @[read_pack.scala 23:37]
    node _cache_T_57 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[5][7] <= _cache_T_57 @[read_pack.scala 23:37]
    node _cache_T_58 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[5][8] <= _cache_T_58 @[read_pack.scala 23:37]
    node _cache_T_59 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[5][9] <= _cache_T_59 @[read_pack.scala 23:37]
    node _cache_T_60 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[6][0] <= _cache_T_60 @[read_pack.scala 23:37]
    node _cache_T_61 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[6][1] <= _cache_T_61 @[read_pack.scala 23:37]
    node _cache_T_62 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[6][2] <= _cache_T_62 @[read_pack.scala 23:37]
    node _cache_T_63 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[6][3] <= _cache_T_63 @[read_pack.scala 23:37]
    node _cache_T_64 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[6][4] <= _cache_T_64 @[read_pack.scala 23:37]
    node _cache_T_65 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[6][5] <= _cache_T_65 @[read_pack.scala 23:37]
    node _cache_T_66 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[6][6] <= _cache_T_66 @[read_pack.scala 23:37]
    node _cache_T_67 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[6][7] <= _cache_T_67 @[read_pack.scala 23:37]
    node _cache_T_68 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[6][8] <= _cache_T_68 @[read_pack.scala 23:37]
    node _cache_T_69 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[6][9] <= _cache_T_69 @[read_pack.scala 23:37]
    node _cache_T_70 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[7][0] <= _cache_T_70 @[read_pack.scala 23:37]
    node _cache_T_71 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[7][1] <= _cache_T_71 @[read_pack.scala 23:37]
    node _cache_T_72 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[7][2] <= _cache_T_72 @[read_pack.scala 23:37]
    node _cache_T_73 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[7][3] <= _cache_T_73 @[read_pack.scala 23:37]
    node _cache_T_74 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[7][4] <= _cache_T_74 @[read_pack.scala 23:37]
    node _cache_T_75 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[7][5] <= _cache_T_75 @[read_pack.scala 23:37]
    node _cache_T_76 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[7][6] <= _cache_T_76 @[read_pack.scala 23:37]
    node _cache_T_77 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[7][7] <= _cache_T_77 @[read_pack.scala 23:37]
    node _cache_T_78 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[7][8] <= _cache_T_78 @[read_pack.scala 23:37]
    node _cache_T_79 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[7][9] <= _cache_T_79 @[read_pack.scala 23:37]
    node _cache_T_80 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[8][0] <= _cache_T_80 @[read_pack.scala 23:37]
    node _cache_T_81 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[8][1] <= _cache_T_81 @[read_pack.scala 23:37]
    node _cache_T_82 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[8][2] <= _cache_T_82 @[read_pack.scala 23:37]
    node _cache_T_83 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[8][3] <= _cache_T_83 @[read_pack.scala 23:37]
    node _cache_T_84 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[8][4] <= _cache_T_84 @[read_pack.scala 23:37]
    node _cache_T_85 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[8][5] <= _cache_T_85 @[read_pack.scala 23:37]
    node _cache_T_86 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[8][6] <= _cache_T_86 @[read_pack.scala 23:37]
    node _cache_T_87 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[8][7] <= _cache_T_87 @[read_pack.scala 23:37]
    node _cache_T_88 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[8][8] <= _cache_T_88 @[read_pack.scala 23:37]
    node _cache_T_89 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[8][9] <= _cache_T_89 @[read_pack.scala 23:37]
    node _cache_T_90 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[9][0] <= _cache_T_90 @[read_pack.scala 23:37]
    node _cache_T_91 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[9][1] <= _cache_T_91 @[read_pack.scala 23:37]
    node _cache_T_92 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[9][2] <= _cache_T_92 @[read_pack.scala 23:37]
    node _cache_T_93 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[9][3] <= _cache_T_93 @[read_pack.scala 23:37]
    node _cache_T_94 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[9][4] <= _cache_T_94 @[read_pack.scala 23:37]
    node _cache_T_95 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[9][5] <= _cache_T_95 @[read_pack.scala 23:37]
    node _cache_T_96 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[9][6] <= _cache_T_96 @[read_pack.scala 23:37]
    node _cache_T_97 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[9][7] <= _cache_T_97 @[read_pack.scala 23:37]
    node _cache_T_98 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[9][8] <= _cache_T_98 @[read_pack.scala 23:37]
    node _cache_T_99 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[9][9] <= _cache_T_99 @[read_pack.scala 23:37]
    node _cache_T_100 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[10][0] <= _cache_T_100 @[read_pack.scala 23:37]
    node _cache_T_101 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[10][1] <= _cache_T_101 @[read_pack.scala 23:37]
    node _cache_T_102 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[10][2] <= _cache_T_102 @[read_pack.scala 23:37]
    node _cache_T_103 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[10][3] <= _cache_T_103 @[read_pack.scala 23:37]
    node _cache_T_104 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[10][4] <= _cache_T_104 @[read_pack.scala 23:37]
    node _cache_T_105 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[10][5] <= _cache_T_105 @[read_pack.scala 23:37]
    node _cache_T_106 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[10][6] <= _cache_T_106 @[read_pack.scala 23:37]
    node _cache_T_107 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[10][7] <= _cache_T_107 @[read_pack.scala 23:37]
    node _cache_T_108 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[10][8] <= _cache_T_108 @[read_pack.scala 23:37]
    node _cache_T_109 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[10][9] <= _cache_T_109 @[read_pack.scala 23:37]
    node _cache_T_110 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[11][0] <= _cache_T_110 @[read_pack.scala 23:37]
    node _cache_T_111 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[11][1] <= _cache_T_111 @[read_pack.scala 23:37]
    node _cache_T_112 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[11][2] <= _cache_T_112 @[read_pack.scala 23:37]
    node _cache_T_113 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[11][3] <= _cache_T_113 @[read_pack.scala 23:37]
    node _cache_T_114 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[11][4] <= _cache_T_114 @[read_pack.scala 23:37]
    node _cache_T_115 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[11][5] <= _cache_T_115 @[read_pack.scala 23:37]
    node _cache_T_116 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[11][6] <= _cache_T_116 @[read_pack.scala 23:37]
    node _cache_T_117 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[11][7] <= _cache_T_117 @[read_pack.scala 23:37]
    node _cache_T_118 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[11][8] <= _cache_T_118 @[read_pack.scala 23:37]
    node _cache_T_119 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[11][9] <= _cache_T_119 @[read_pack.scala 23:37]
    node _cache_T_120 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[12][0] <= _cache_T_120 @[read_pack.scala 23:37]
    node _cache_T_121 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[12][1] <= _cache_T_121 @[read_pack.scala 23:37]
    node _cache_T_122 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[12][2] <= _cache_T_122 @[read_pack.scala 23:37]
    node _cache_T_123 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[12][3] <= _cache_T_123 @[read_pack.scala 23:37]
    node _cache_T_124 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[12][4] <= _cache_T_124 @[read_pack.scala 23:37]
    node _cache_T_125 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[12][5] <= _cache_T_125 @[read_pack.scala 23:37]
    node _cache_T_126 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[12][6] <= _cache_T_126 @[read_pack.scala 23:37]
    node _cache_T_127 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[12][7] <= _cache_T_127 @[read_pack.scala 23:37]
    node _cache_T_128 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[12][8] <= _cache_T_128 @[read_pack.scala 23:37]
    node _cache_T_129 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[12][9] <= _cache_T_129 @[read_pack.scala 23:37]
    node _cache_T_130 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[13][0] <= _cache_T_130 @[read_pack.scala 23:37]
    node _cache_T_131 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[13][1] <= _cache_T_131 @[read_pack.scala 23:37]
    node _cache_T_132 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[13][2] <= _cache_T_132 @[read_pack.scala 23:37]
    node _cache_T_133 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[13][3] <= _cache_T_133 @[read_pack.scala 23:37]
    node _cache_T_134 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[13][4] <= _cache_T_134 @[read_pack.scala 23:37]
    node _cache_T_135 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[13][5] <= _cache_T_135 @[read_pack.scala 23:37]
    node _cache_T_136 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[13][6] <= _cache_T_136 @[read_pack.scala 23:37]
    node _cache_T_137 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[13][7] <= _cache_T_137 @[read_pack.scala 23:37]
    node _cache_T_138 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[13][8] <= _cache_T_138 @[read_pack.scala 23:37]
    node _cache_T_139 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[13][9] <= _cache_T_139 @[read_pack.scala 23:37]
    node _cache_T_140 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[14][0] <= _cache_T_140 @[read_pack.scala 23:37]
    node _cache_T_141 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[14][1] <= _cache_T_141 @[read_pack.scala 23:37]
    node _cache_T_142 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[14][2] <= _cache_T_142 @[read_pack.scala 23:37]
    node _cache_T_143 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[14][3] <= _cache_T_143 @[read_pack.scala 23:37]
    node _cache_T_144 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[14][4] <= _cache_T_144 @[read_pack.scala 23:37]
    node _cache_T_145 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[14][5] <= _cache_T_145 @[read_pack.scala 23:37]
    node _cache_T_146 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[14][6] <= _cache_T_146 @[read_pack.scala 23:37]
    node _cache_T_147 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[14][7] <= _cache_T_147 @[read_pack.scala 23:37]
    node _cache_T_148 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[14][8] <= _cache_T_148 @[read_pack.scala 23:37]
    node _cache_T_149 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[14][9] <= _cache_T_149 @[read_pack.scala 23:37]
    node _cache_T_150 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[15][0] <= _cache_T_150 @[read_pack.scala 23:37]
    node _cache_T_151 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[15][1] <= _cache_T_151 @[read_pack.scala 23:37]
    node _cache_T_152 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[15][2] <= _cache_T_152 @[read_pack.scala 23:37]
    node _cache_T_153 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[15][3] <= _cache_T_153 @[read_pack.scala 23:37]
    node _cache_T_154 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[15][4] <= _cache_T_154 @[read_pack.scala 23:37]
    node _cache_T_155 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[15][5] <= _cache_T_155 @[read_pack.scala 23:37]
    node _cache_T_156 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[15][6] <= _cache_T_156 @[read_pack.scala 23:37]
    node _cache_T_157 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[15][7] <= _cache_T_157 @[read_pack.scala 23:37]
    node _cache_T_158 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[15][8] <= _cache_T_158 @[read_pack.scala 23:37]
    node _cache_T_159 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[15][9] <= _cache_T_159 @[read_pack.scala 23:37]
    node _cache_T_160 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[16][0] <= _cache_T_160 @[read_pack.scala 23:37]
    node _cache_T_161 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[16][1] <= _cache_T_161 @[read_pack.scala 23:37]
    node _cache_T_162 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[16][2] <= _cache_T_162 @[read_pack.scala 23:37]
    node _cache_T_163 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[16][3] <= _cache_T_163 @[read_pack.scala 23:37]
    node _cache_T_164 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[16][4] <= _cache_T_164 @[read_pack.scala 23:37]
    node _cache_T_165 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[16][5] <= _cache_T_165 @[read_pack.scala 23:37]
    node _cache_T_166 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[16][6] <= _cache_T_166 @[read_pack.scala 23:37]
    node _cache_T_167 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[16][7] <= _cache_T_167 @[read_pack.scala 23:37]
    node _cache_T_168 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[16][8] <= _cache_T_168 @[read_pack.scala 23:37]
    node _cache_T_169 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[16][9] <= _cache_T_169 @[read_pack.scala 23:37]
    node _cache_T_170 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[17][0] <= _cache_T_170 @[read_pack.scala 23:37]
    node _cache_T_171 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[17][1] <= _cache_T_171 @[read_pack.scala 23:37]
    node _cache_T_172 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[17][2] <= _cache_T_172 @[read_pack.scala 23:37]
    node _cache_T_173 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[17][3] <= _cache_T_173 @[read_pack.scala 23:37]
    node _cache_T_174 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[17][4] <= _cache_T_174 @[read_pack.scala 23:37]
    node _cache_T_175 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[17][5] <= _cache_T_175 @[read_pack.scala 23:37]
    node _cache_T_176 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[17][6] <= _cache_T_176 @[read_pack.scala 23:37]
    node _cache_T_177 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[17][7] <= _cache_T_177 @[read_pack.scala 23:37]
    node _cache_T_178 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[17][8] <= _cache_T_178 @[read_pack.scala 23:37]
    node _cache_T_179 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[17][9] <= _cache_T_179 @[read_pack.scala 23:37]
    node _cache_T_180 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[18][0] <= _cache_T_180 @[read_pack.scala 23:37]
    node _cache_T_181 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[18][1] <= _cache_T_181 @[read_pack.scala 23:37]
    node _cache_T_182 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[18][2] <= _cache_T_182 @[read_pack.scala 23:37]
    node _cache_T_183 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[18][3] <= _cache_T_183 @[read_pack.scala 23:37]
    node _cache_T_184 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[18][4] <= _cache_T_184 @[read_pack.scala 23:37]
    node _cache_T_185 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[18][5] <= _cache_T_185 @[read_pack.scala 23:37]
    node _cache_T_186 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[18][6] <= _cache_T_186 @[read_pack.scala 23:37]
    node _cache_T_187 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[18][7] <= _cache_T_187 @[read_pack.scala 23:37]
    node _cache_T_188 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[18][8] <= _cache_T_188 @[read_pack.scala 23:37]
    node _cache_T_189 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[18][9] <= _cache_T_189 @[read_pack.scala 23:37]
    node _cache_T_190 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[19][0] <= _cache_T_190 @[read_pack.scala 23:37]
    node _cache_T_191 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[19][1] <= _cache_T_191 @[read_pack.scala 23:37]
    node _cache_T_192 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[19][2] <= _cache_T_192 @[read_pack.scala 23:37]
    node _cache_T_193 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[19][3] <= _cache_T_193 @[read_pack.scala 23:37]
    node _cache_T_194 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[19][4] <= _cache_T_194 @[read_pack.scala 23:37]
    node _cache_T_195 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[19][5] <= _cache_T_195 @[read_pack.scala 23:37]
    node _cache_T_196 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[19][6] <= _cache_T_196 @[read_pack.scala 23:37]
    node _cache_T_197 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[19][7] <= _cache_T_197 @[read_pack.scala 23:37]
    node _cache_T_198 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[19][8] <= _cache_T_198 @[read_pack.scala 23:37]
    node _cache_T_199 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[19][9] <= _cache_T_199 @[read_pack.scala 23:37]
    node _cache_T_200 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[20][0] <= _cache_T_200 @[read_pack.scala 23:37]
    node _cache_T_201 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[20][1] <= _cache_T_201 @[read_pack.scala 23:37]
    node _cache_T_202 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[20][2] <= _cache_T_202 @[read_pack.scala 23:37]
    node _cache_T_203 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[20][3] <= _cache_T_203 @[read_pack.scala 23:37]
    node _cache_T_204 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[20][4] <= _cache_T_204 @[read_pack.scala 23:37]
    node _cache_T_205 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[20][5] <= _cache_T_205 @[read_pack.scala 23:37]
    node _cache_T_206 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[20][6] <= _cache_T_206 @[read_pack.scala 23:37]
    node _cache_T_207 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[20][7] <= _cache_T_207 @[read_pack.scala 23:37]
    node _cache_T_208 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[20][8] <= _cache_T_208 @[read_pack.scala 23:37]
    node _cache_T_209 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[20][9] <= _cache_T_209 @[read_pack.scala 23:37]
    node _cache_T_210 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[21][0] <= _cache_T_210 @[read_pack.scala 23:37]
    node _cache_T_211 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[21][1] <= _cache_T_211 @[read_pack.scala 23:37]
    node _cache_T_212 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[21][2] <= _cache_T_212 @[read_pack.scala 23:37]
    node _cache_T_213 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[21][3] <= _cache_T_213 @[read_pack.scala 23:37]
    node _cache_T_214 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[21][4] <= _cache_T_214 @[read_pack.scala 23:37]
    node _cache_T_215 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[21][5] <= _cache_T_215 @[read_pack.scala 23:37]
    node _cache_T_216 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[21][6] <= _cache_T_216 @[read_pack.scala 23:37]
    node _cache_T_217 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[21][7] <= _cache_T_217 @[read_pack.scala 23:37]
    node _cache_T_218 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[21][8] <= _cache_T_218 @[read_pack.scala 23:37]
    node _cache_T_219 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[21][9] <= _cache_T_219 @[read_pack.scala 23:37]
    node _cache_T_220 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[22][0] <= _cache_T_220 @[read_pack.scala 23:37]
    node _cache_T_221 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[22][1] <= _cache_T_221 @[read_pack.scala 23:37]
    node _cache_T_222 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[22][2] <= _cache_T_222 @[read_pack.scala 23:37]
    node _cache_T_223 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[22][3] <= _cache_T_223 @[read_pack.scala 23:37]
    node _cache_T_224 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[22][4] <= _cache_T_224 @[read_pack.scala 23:37]
    node _cache_T_225 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[22][5] <= _cache_T_225 @[read_pack.scala 23:37]
    node _cache_T_226 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[22][6] <= _cache_T_226 @[read_pack.scala 23:37]
    node _cache_T_227 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[22][7] <= _cache_T_227 @[read_pack.scala 23:37]
    node _cache_T_228 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[22][8] <= _cache_T_228 @[read_pack.scala 23:37]
    node _cache_T_229 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[22][9] <= _cache_T_229 @[read_pack.scala 23:37]
    node _cache_T_230 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[23][0] <= _cache_T_230 @[read_pack.scala 23:37]
    node _cache_T_231 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[23][1] <= _cache_T_231 @[read_pack.scala 23:37]
    node _cache_T_232 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[23][2] <= _cache_T_232 @[read_pack.scala 23:37]
    node _cache_T_233 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[23][3] <= _cache_T_233 @[read_pack.scala 23:37]
    node _cache_T_234 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[23][4] <= _cache_T_234 @[read_pack.scala 23:37]
    node _cache_T_235 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[23][5] <= _cache_T_235 @[read_pack.scala 23:37]
    node _cache_T_236 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[23][6] <= _cache_T_236 @[read_pack.scala 23:37]
    node _cache_T_237 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[23][7] <= _cache_T_237 @[read_pack.scala 23:37]
    node _cache_T_238 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[23][8] <= _cache_T_238 @[read_pack.scala 23:37]
    node _cache_T_239 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[23][9] <= _cache_T_239 @[read_pack.scala 23:37]
    node _cache_T_240 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[24][0] <= _cache_T_240 @[read_pack.scala 23:37]
    node _cache_T_241 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[24][1] <= _cache_T_241 @[read_pack.scala 23:37]
    node _cache_T_242 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[24][2] <= _cache_T_242 @[read_pack.scala 23:37]
    node _cache_T_243 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[24][3] <= _cache_T_243 @[read_pack.scala 23:37]
    node _cache_T_244 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[24][4] <= _cache_T_244 @[read_pack.scala 23:37]
    node _cache_T_245 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[24][5] <= _cache_T_245 @[read_pack.scala 23:37]
    node _cache_T_246 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[24][6] <= _cache_T_246 @[read_pack.scala 23:37]
    node _cache_T_247 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[24][7] <= _cache_T_247 @[read_pack.scala 23:37]
    node _cache_T_248 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[24][8] <= _cache_T_248 @[read_pack.scala 23:37]
    node _cache_T_249 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[24][9] <= _cache_T_249 @[read_pack.scala 23:37]
    node _cache_T_250 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[25][0] <= _cache_T_250 @[read_pack.scala 23:37]
    node _cache_T_251 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[25][1] <= _cache_T_251 @[read_pack.scala 23:37]
    node _cache_T_252 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[25][2] <= _cache_T_252 @[read_pack.scala 23:37]
    node _cache_T_253 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[25][3] <= _cache_T_253 @[read_pack.scala 23:37]
    node _cache_T_254 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[25][4] <= _cache_T_254 @[read_pack.scala 23:37]
    node _cache_T_255 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[25][5] <= _cache_T_255 @[read_pack.scala 23:37]
    node _cache_T_256 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[25][6] <= _cache_T_256 @[read_pack.scala 23:37]
    node _cache_T_257 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[25][7] <= _cache_T_257 @[read_pack.scala 23:37]
    node _cache_T_258 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[25][8] <= _cache_T_258 @[read_pack.scala 23:37]
    node _cache_T_259 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[25][9] <= _cache_T_259 @[read_pack.scala 23:37]
    node _cache_T_260 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[26][0] <= _cache_T_260 @[read_pack.scala 23:37]
    node _cache_T_261 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[26][1] <= _cache_T_261 @[read_pack.scala 23:37]
    node _cache_T_262 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[26][2] <= _cache_T_262 @[read_pack.scala 23:37]
    node _cache_T_263 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[26][3] <= _cache_T_263 @[read_pack.scala 23:37]
    node _cache_T_264 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[26][4] <= _cache_T_264 @[read_pack.scala 23:37]
    node _cache_T_265 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[26][5] <= _cache_T_265 @[read_pack.scala 23:37]
    node _cache_T_266 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[26][6] <= _cache_T_266 @[read_pack.scala 23:37]
    node _cache_T_267 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[26][7] <= _cache_T_267 @[read_pack.scala 23:37]
    node _cache_T_268 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[26][8] <= _cache_T_268 @[read_pack.scala 23:37]
    node _cache_T_269 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[26][9] <= _cache_T_269 @[read_pack.scala 23:37]
    node _cache_T_270 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[27][0] <= _cache_T_270 @[read_pack.scala 23:37]
    node _cache_T_271 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[27][1] <= _cache_T_271 @[read_pack.scala 23:37]
    node _cache_T_272 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[27][2] <= _cache_T_272 @[read_pack.scala 23:37]
    node _cache_T_273 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[27][3] <= _cache_T_273 @[read_pack.scala 23:37]
    node _cache_T_274 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[27][4] <= _cache_T_274 @[read_pack.scala 23:37]
    node _cache_T_275 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[27][5] <= _cache_T_275 @[read_pack.scala 23:37]
    node _cache_T_276 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[27][6] <= _cache_T_276 @[read_pack.scala 23:37]
    node _cache_T_277 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[27][7] <= _cache_T_277 @[read_pack.scala 23:37]
    node _cache_T_278 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[27][8] <= _cache_T_278 @[read_pack.scala 23:37]
    node _cache_T_279 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[27][9] <= _cache_T_279 @[read_pack.scala 23:37]
    node _cache_T_280 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[28][0] <= _cache_T_280 @[read_pack.scala 23:37]
    node _cache_T_281 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[28][1] <= _cache_T_281 @[read_pack.scala 23:37]
    node _cache_T_282 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[28][2] <= _cache_T_282 @[read_pack.scala 23:37]
    node _cache_T_283 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[28][3] <= _cache_T_283 @[read_pack.scala 23:37]
    node _cache_T_284 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[28][4] <= _cache_T_284 @[read_pack.scala 23:37]
    node _cache_T_285 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[28][5] <= _cache_T_285 @[read_pack.scala 23:37]
    node _cache_T_286 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[28][6] <= _cache_T_286 @[read_pack.scala 23:37]
    node _cache_T_287 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[28][7] <= _cache_T_287 @[read_pack.scala 23:37]
    node _cache_T_288 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[28][8] <= _cache_T_288 @[read_pack.scala 23:37]
    node _cache_T_289 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[28][9] <= _cache_T_289 @[read_pack.scala 23:37]
    node _cache_T_290 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[29][0] <= _cache_T_290 @[read_pack.scala 23:37]
    node _cache_T_291 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[29][1] <= _cache_T_291 @[read_pack.scala 23:37]
    node _cache_T_292 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[29][2] <= _cache_T_292 @[read_pack.scala 23:37]
    node _cache_T_293 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[29][3] <= _cache_T_293 @[read_pack.scala 23:37]
    node _cache_T_294 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[29][4] <= _cache_T_294 @[read_pack.scala 23:37]
    node _cache_T_295 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[29][5] <= _cache_T_295 @[read_pack.scala 23:37]
    node _cache_T_296 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[29][6] <= _cache_T_296 @[read_pack.scala 23:37]
    node _cache_T_297 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[29][7] <= _cache_T_297 @[read_pack.scala 23:37]
    node _cache_T_298 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[29][8] <= _cache_T_298 @[read_pack.scala 23:37]
    node _cache_T_299 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[29][9] <= _cache_T_299 @[read_pack.scala 23:37]
    node _cache_T_300 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[30][0] <= _cache_T_300 @[read_pack.scala 23:37]
    node _cache_T_301 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[30][1] <= _cache_T_301 @[read_pack.scala 23:37]
    node _cache_T_302 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[30][2] <= _cache_T_302 @[read_pack.scala 23:37]
    node _cache_T_303 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[30][3] <= _cache_T_303 @[read_pack.scala 23:37]
    node _cache_T_304 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[30][4] <= _cache_T_304 @[read_pack.scala 23:37]
    node _cache_T_305 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[30][5] <= _cache_T_305 @[read_pack.scala 23:37]
    node _cache_T_306 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[30][6] <= _cache_T_306 @[read_pack.scala 23:37]
    node _cache_T_307 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[30][7] <= _cache_T_307 @[read_pack.scala 23:37]
    node _cache_T_308 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[30][8] <= _cache_T_308 @[read_pack.scala 23:37]
    node _cache_T_309 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[30][9] <= _cache_T_309 @[read_pack.scala 23:37]
    node _cache_T_310 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[31][0] <= _cache_T_310 @[read_pack.scala 23:37]
    node _cache_T_311 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[31][1] <= _cache_T_311 @[read_pack.scala 23:37]
    node _cache_T_312 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[31][2] <= _cache_T_312 @[read_pack.scala 23:37]
    node _cache_T_313 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[31][3] <= _cache_T_313 @[read_pack.scala 23:37]
    node _cache_T_314 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[31][4] <= _cache_T_314 @[read_pack.scala 23:37]
    node _cache_T_315 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[31][5] <= _cache_T_315 @[read_pack.scala 23:37]
    node _cache_T_316 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[31][6] <= _cache_T_316 @[read_pack.scala 23:37]
    node _cache_T_317 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[31][7] <= _cache_T_317 @[read_pack.scala 23:37]
    node _cache_T_318 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[31][8] <= _cache_T_318 @[read_pack.scala 23:37]
    node _cache_T_319 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[31][9] <= _cache_T_319 @[read_pack.scala 23:37]
    node _cache_T_320 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[32][0] <= _cache_T_320 @[read_pack.scala 23:37]
    node _cache_T_321 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[32][1] <= _cache_T_321 @[read_pack.scala 23:37]
    node _cache_T_322 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[32][2] <= _cache_T_322 @[read_pack.scala 23:37]
    node _cache_T_323 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[32][3] <= _cache_T_323 @[read_pack.scala 23:37]
    node _cache_T_324 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[32][4] <= _cache_T_324 @[read_pack.scala 23:37]
    node _cache_T_325 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[32][5] <= _cache_T_325 @[read_pack.scala 23:37]
    node _cache_T_326 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[32][6] <= _cache_T_326 @[read_pack.scala 23:37]
    node _cache_T_327 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[32][7] <= _cache_T_327 @[read_pack.scala 23:37]
    node _cache_T_328 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[32][8] <= _cache_T_328 @[read_pack.scala 23:37]
    node _cache_T_329 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[32][9] <= _cache_T_329 @[read_pack.scala 23:37]
    node _cache_T_330 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[33][0] <= _cache_T_330 @[read_pack.scala 23:37]
    node _cache_T_331 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[33][1] <= _cache_T_331 @[read_pack.scala 23:37]
    node _cache_T_332 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[33][2] <= _cache_T_332 @[read_pack.scala 23:37]
    node _cache_T_333 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[33][3] <= _cache_T_333 @[read_pack.scala 23:37]
    node _cache_T_334 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[33][4] <= _cache_T_334 @[read_pack.scala 23:37]
    node _cache_T_335 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[33][5] <= _cache_T_335 @[read_pack.scala 23:37]
    node _cache_T_336 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[33][6] <= _cache_T_336 @[read_pack.scala 23:37]
    node _cache_T_337 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[33][7] <= _cache_T_337 @[read_pack.scala 23:37]
    node _cache_T_338 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[33][8] <= _cache_T_338 @[read_pack.scala 23:37]
    node _cache_T_339 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[33][9] <= _cache_T_339 @[read_pack.scala 23:37]
    node _cache_T_340 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[34][0] <= _cache_T_340 @[read_pack.scala 23:37]
    node _cache_T_341 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[34][1] <= _cache_T_341 @[read_pack.scala 23:37]
    node _cache_T_342 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[34][2] <= _cache_T_342 @[read_pack.scala 23:37]
    node _cache_T_343 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[34][3] <= _cache_T_343 @[read_pack.scala 23:37]
    node _cache_T_344 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[34][4] <= _cache_T_344 @[read_pack.scala 23:37]
    node _cache_T_345 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[34][5] <= _cache_T_345 @[read_pack.scala 23:37]
    node _cache_T_346 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[34][6] <= _cache_T_346 @[read_pack.scala 23:37]
    node _cache_T_347 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[34][7] <= _cache_T_347 @[read_pack.scala 23:37]
    node _cache_T_348 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[34][8] <= _cache_T_348 @[read_pack.scala 23:37]
    node _cache_T_349 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[34][9] <= _cache_T_349 @[read_pack.scala 23:37]
    node _cache_T_350 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[35][0] <= _cache_T_350 @[read_pack.scala 23:37]
    node _cache_T_351 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[35][1] <= _cache_T_351 @[read_pack.scala 23:37]
    node _cache_T_352 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[35][2] <= _cache_T_352 @[read_pack.scala 23:37]
    node _cache_T_353 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[35][3] <= _cache_T_353 @[read_pack.scala 23:37]
    node _cache_T_354 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[35][4] <= _cache_T_354 @[read_pack.scala 23:37]
    node _cache_T_355 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[35][5] <= _cache_T_355 @[read_pack.scala 23:37]
    node _cache_T_356 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[35][6] <= _cache_T_356 @[read_pack.scala 23:37]
    node _cache_T_357 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[35][7] <= _cache_T_357 @[read_pack.scala 23:37]
    node _cache_T_358 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[35][8] <= _cache_T_358 @[read_pack.scala 23:37]
    node _cache_T_359 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[35][9] <= _cache_T_359 @[read_pack.scala 23:37]
    node _cache_T_360 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[36][0] <= _cache_T_360 @[read_pack.scala 23:37]
    node _cache_T_361 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[36][1] <= _cache_T_361 @[read_pack.scala 23:37]
    node _cache_T_362 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[36][2] <= _cache_T_362 @[read_pack.scala 23:37]
    node _cache_T_363 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[36][3] <= _cache_T_363 @[read_pack.scala 23:37]
    node _cache_T_364 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[36][4] <= _cache_T_364 @[read_pack.scala 23:37]
    node _cache_T_365 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[36][5] <= _cache_T_365 @[read_pack.scala 23:37]
    node _cache_T_366 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[36][6] <= _cache_T_366 @[read_pack.scala 23:37]
    node _cache_T_367 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[36][7] <= _cache_T_367 @[read_pack.scala 23:37]
    node _cache_T_368 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[36][8] <= _cache_T_368 @[read_pack.scala 23:37]
    node _cache_T_369 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[36][9] <= _cache_T_369 @[read_pack.scala 23:37]
    node _cache_T_370 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[37][0] <= _cache_T_370 @[read_pack.scala 23:37]
    node _cache_T_371 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[37][1] <= _cache_T_371 @[read_pack.scala 23:37]
    node _cache_T_372 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[37][2] <= _cache_T_372 @[read_pack.scala 23:37]
    node _cache_T_373 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[37][3] <= _cache_T_373 @[read_pack.scala 23:37]
    node _cache_T_374 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[37][4] <= _cache_T_374 @[read_pack.scala 23:37]
    node _cache_T_375 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[37][5] <= _cache_T_375 @[read_pack.scala 23:37]
    node _cache_T_376 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[37][6] <= _cache_T_376 @[read_pack.scala 23:37]
    node _cache_T_377 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[37][7] <= _cache_T_377 @[read_pack.scala 23:37]
    node _cache_T_378 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[37][8] <= _cache_T_378 @[read_pack.scala 23:37]
    node _cache_T_379 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[37][9] <= _cache_T_379 @[read_pack.scala 23:37]
    node _cache_T_380 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[38][0] <= _cache_T_380 @[read_pack.scala 23:37]
    node _cache_T_381 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[38][1] <= _cache_T_381 @[read_pack.scala 23:37]
    node _cache_T_382 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[38][2] <= _cache_T_382 @[read_pack.scala 23:37]
    node _cache_T_383 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[38][3] <= _cache_T_383 @[read_pack.scala 23:37]
    node _cache_T_384 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[38][4] <= _cache_T_384 @[read_pack.scala 23:37]
    node _cache_T_385 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[38][5] <= _cache_T_385 @[read_pack.scala 23:37]
    node _cache_T_386 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[38][6] <= _cache_T_386 @[read_pack.scala 23:37]
    node _cache_T_387 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[38][7] <= _cache_T_387 @[read_pack.scala 23:37]
    node _cache_T_388 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[38][8] <= _cache_T_388 @[read_pack.scala 23:37]
    node _cache_T_389 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[38][9] <= _cache_T_389 @[read_pack.scala 23:37]
    node _cache_T_390 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[39][0] <= _cache_T_390 @[read_pack.scala 23:37]
    node _cache_T_391 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[39][1] <= _cache_T_391 @[read_pack.scala 23:37]
    node _cache_T_392 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[39][2] <= _cache_T_392 @[read_pack.scala 23:37]
    node _cache_T_393 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[39][3] <= _cache_T_393 @[read_pack.scala 23:37]
    node _cache_T_394 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[39][4] <= _cache_T_394 @[read_pack.scala 23:37]
    node _cache_T_395 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[39][5] <= _cache_T_395 @[read_pack.scala 23:37]
    node _cache_T_396 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[39][6] <= _cache_T_396 @[read_pack.scala 23:37]
    node _cache_T_397 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[39][7] <= _cache_T_397 @[read_pack.scala 23:37]
    node _cache_T_398 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[39][8] <= _cache_T_398 @[read_pack.scala 23:37]
    node _cache_T_399 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[39][9] <= _cache_T_399 @[read_pack.scala 23:37]
    node _cache_T_400 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[40][0] <= _cache_T_400 @[read_pack.scala 23:37]
    node _cache_T_401 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[40][1] <= _cache_T_401 @[read_pack.scala 23:37]
    node _cache_T_402 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[40][2] <= _cache_T_402 @[read_pack.scala 23:37]
    node _cache_T_403 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[40][3] <= _cache_T_403 @[read_pack.scala 23:37]
    node _cache_T_404 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[40][4] <= _cache_T_404 @[read_pack.scala 23:37]
    node _cache_T_405 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[40][5] <= _cache_T_405 @[read_pack.scala 23:37]
    node _cache_T_406 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[40][6] <= _cache_T_406 @[read_pack.scala 23:37]
    node _cache_T_407 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[40][7] <= _cache_T_407 @[read_pack.scala 23:37]
    node _cache_T_408 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[40][8] <= _cache_T_408 @[read_pack.scala 23:37]
    node _cache_T_409 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[40][9] <= _cache_T_409 @[read_pack.scala 23:37]
    node _cache_T_410 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[41][0] <= _cache_T_410 @[read_pack.scala 23:37]
    node _cache_T_411 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[41][1] <= _cache_T_411 @[read_pack.scala 23:37]
    node _cache_T_412 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[41][2] <= _cache_T_412 @[read_pack.scala 23:37]
    node _cache_T_413 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[41][3] <= _cache_T_413 @[read_pack.scala 23:37]
    node _cache_T_414 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[41][4] <= _cache_T_414 @[read_pack.scala 23:37]
    node _cache_T_415 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[41][5] <= _cache_T_415 @[read_pack.scala 23:37]
    node _cache_T_416 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[41][6] <= _cache_T_416 @[read_pack.scala 23:37]
    node _cache_T_417 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[41][7] <= _cache_T_417 @[read_pack.scala 23:37]
    node _cache_T_418 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[41][8] <= _cache_T_418 @[read_pack.scala 23:37]
    node _cache_T_419 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[41][9] <= _cache_T_419 @[read_pack.scala 23:37]
    node _cache_T_420 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[42][0] <= _cache_T_420 @[read_pack.scala 23:37]
    node _cache_T_421 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[42][1] <= _cache_T_421 @[read_pack.scala 23:37]
    node _cache_T_422 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[42][2] <= _cache_T_422 @[read_pack.scala 23:37]
    node _cache_T_423 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[42][3] <= _cache_T_423 @[read_pack.scala 23:37]
    node _cache_T_424 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[42][4] <= _cache_T_424 @[read_pack.scala 23:37]
    node _cache_T_425 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[42][5] <= _cache_T_425 @[read_pack.scala 23:37]
    node _cache_T_426 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[42][6] <= _cache_T_426 @[read_pack.scala 23:37]
    node _cache_T_427 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[42][7] <= _cache_T_427 @[read_pack.scala 23:37]
    node _cache_T_428 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[42][8] <= _cache_T_428 @[read_pack.scala 23:37]
    node _cache_T_429 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[42][9] <= _cache_T_429 @[read_pack.scala 23:37]
    node _cache_T_430 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[43][0] <= _cache_T_430 @[read_pack.scala 23:37]
    node _cache_T_431 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[43][1] <= _cache_T_431 @[read_pack.scala 23:37]
    node _cache_T_432 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[43][2] <= _cache_T_432 @[read_pack.scala 23:37]
    node _cache_T_433 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[43][3] <= _cache_T_433 @[read_pack.scala 23:37]
    node _cache_T_434 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[43][4] <= _cache_T_434 @[read_pack.scala 23:37]
    node _cache_T_435 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[43][5] <= _cache_T_435 @[read_pack.scala 23:37]
    node _cache_T_436 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[43][6] <= _cache_T_436 @[read_pack.scala 23:37]
    node _cache_T_437 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[43][7] <= _cache_T_437 @[read_pack.scala 23:37]
    node _cache_T_438 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[43][8] <= _cache_T_438 @[read_pack.scala 23:37]
    node _cache_T_439 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[43][9] <= _cache_T_439 @[read_pack.scala 23:37]
    node _cache_T_440 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[44][0] <= _cache_T_440 @[read_pack.scala 23:37]
    node _cache_T_441 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[44][1] <= _cache_T_441 @[read_pack.scala 23:37]
    node _cache_T_442 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[44][2] <= _cache_T_442 @[read_pack.scala 23:37]
    node _cache_T_443 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[44][3] <= _cache_T_443 @[read_pack.scala 23:37]
    node _cache_T_444 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[44][4] <= _cache_T_444 @[read_pack.scala 23:37]
    node _cache_T_445 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[44][5] <= _cache_T_445 @[read_pack.scala 23:37]
    node _cache_T_446 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[44][6] <= _cache_T_446 @[read_pack.scala 23:37]
    node _cache_T_447 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[44][7] <= _cache_T_447 @[read_pack.scala 23:37]
    node _cache_T_448 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[44][8] <= _cache_T_448 @[read_pack.scala 23:37]
    node _cache_T_449 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[44][9] <= _cache_T_449 @[read_pack.scala 23:37]
    node _cache_T_450 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[45][0] <= _cache_T_450 @[read_pack.scala 23:37]
    node _cache_T_451 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[45][1] <= _cache_T_451 @[read_pack.scala 23:37]
    node _cache_T_452 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[45][2] <= _cache_T_452 @[read_pack.scala 23:37]
    node _cache_T_453 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[45][3] <= _cache_T_453 @[read_pack.scala 23:37]
    node _cache_T_454 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[45][4] <= _cache_T_454 @[read_pack.scala 23:37]
    node _cache_T_455 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[45][5] <= _cache_T_455 @[read_pack.scala 23:37]
    node _cache_T_456 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[45][6] <= _cache_T_456 @[read_pack.scala 23:37]
    node _cache_T_457 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[45][7] <= _cache_T_457 @[read_pack.scala 23:37]
    node _cache_T_458 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[45][8] <= _cache_T_458 @[read_pack.scala 23:37]
    node _cache_T_459 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[45][9] <= _cache_T_459 @[read_pack.scala 23:37]
    node _cache_T_460 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[46][0] <= _cache_T_460 @[read_pack.scala 23:37]
    node _cache_T_461 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[46][1] <= _cache_T_461 @[read_pack.scala 23:37]
    node _cache_T_462 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[46][2] <= _cache_T_462 @[read_pack.scala 23:37]
    node _cache_T_463 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[46][3] <= _cache_T_463 @[read_pack.scala 23:37]
    node _cache_T_464 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[46][4] <= _cache_T_464 @[read_pack.scala 23:37]
    node _cache_T_465 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[46][5] <= _cache_T_465 @[read_pack.scala 23:37]
    node _cache_T_466 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[46][6] <= _cache_T_466 @[read_pack.scala 23:37]
    node _cache_T_467 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[46][7] <= _cache_T_467 @[read_pack.scala 23:37]
    node _cache_T_468 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[46][8] <= _cache_T_468 @[read_pack.scala 23:37]
    node _cache_T_469 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[46][9] <= _cache_T_469 @[read_pack.scala 23:37]
    node _cache_T_470 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[47][0] <= _cache_T_470 @[read_pack.scala 23:37]
    node _cache_T_471 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[47][1] <= _cache_T_471 @[read_pack.scala 23:37]
    node _cache_T_472 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[47][2] <= _cache_T_472 @[read_pack.scala 23:37]
    node _cache_T_473 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[47][3] <= _cache_T_473 @[read_pack.scala 23:37]
    node _cache_T_474 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[47][4] <= _cache_T_474 @[read_pack.scala 23:37]
    node _cache_T_475 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[47][5] <= _cache_T_475 @[read_pack.scala 23:37]
    node _cache_T_476 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[47][6] <= _cache_T_476 @[read_pack.scala 23:37]
    node _cache_T_477 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[47][7] <= _cache_T_477 @[read_pack.scala 23:37]
    node _cache_T_478 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[47][8] <= _cache_T_478 @[read_pack.scala 23:37]
    node _cache_T_479 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[47][9] <= _cache_T_479 @[read_pack.scala 23:37]
    node _cache_T_480 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[48][0] <= _cache_T_480 @[read_pack.scala 23:37]
    node _cache_T_481 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[48][1] <= _cache_T_481 @[read_pack.scala 23:37]
    node _cache_T_482 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[48][2] <= _cache_T_482 @[read_pack.scala 23:37]
    node _cache_T_483 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[48][3] <= _cache_T_483 @[read_pack.scala 23:37]
    node _cache_T_484 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[48][4] <= _cache_T_484 @[read_pack.scala 23:37]
    node _cache_T_485 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[48][5] <= _cache_T_485 @[read_pack.scala 23:37]
    node _cache_T_486 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[48][6] <= _cache_T_486 @[read_pack.scala 23:37]
    node _cache_T_487 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[48][7] <= _cache_T_487 @[read_pack.scala 23:37]
    node _cache_T_488 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[48][8] <= _cache_T_488 @[read_pack.scala 23:37]
    node _cache_T_489 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[48][9] <= _cache_T_489 @[read_pack.scala 23:37]
    node _cache_T_490 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[49][0] <= _cache_T_490 @[read_pack.scala 23:37]
    node _cache_T_491 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[49][1] <= _cache_T_491 @[read_pack.scala 23:37]
    node _cache_T_492 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[49][2] <= _cache_T_492 @[read_pack.scala 23:37]
    node _cache_T_493 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[49][3] <= _cache_T_493 @[read_pack.scala 23:37]
    node _cache_T_494 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[49][4] <= _cache_T_494 @[read_pack.scala 23:37]
    node _cache_T_495 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[49][5] <= _cache_T_495 @[read_pack.scala 23:37]
    node _cache_T_496 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[49][6] <= _cache_T_496 @[read_pack.scala 23:37]
    node _cache_T_497 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[49][7] <= _cache_T_497 @[read_pack.scala 23:37]
    node _cache_T_498 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[49][8] <= _cache_T_498 @[read_pack.scala 23:37]
    node _cache_T_499 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[49][9] <= _cache_T_499 @[read_pack.scala 23:37]
    node _cache_T_500 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[50][0] <= _cache_T_500 @[read_pack.scala 23:37]
    node _cache_T_501 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[50][1] <= _cache_T_501 @[read_pack.scala 23:37]
    node _cache_T_502 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[50][2] <= _cache_T_502 @[read_pack.scala 23:37]
    node _cache_T_503 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[50][3] <= _cache_T_503 @[read_pack.scala 23:37]
    node _cache_T_504 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[50][4] <= _cache_T_504 @[read_pack.scala 23:37]
    node _cache_T_505 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[50][5] <= _cache_T_505 @[read_pack.scala 23:37]
    node _cache_T_506 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[50][6] <= _cache_T_506 @[read_pack.scala 23:37]
    node _cache_T_507 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[50][7] <= _cache_T_507 @[read_pack.scala 23:37]
    node _cache_T_508 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[50][8] <= _cache_T_508 @[read_pack.scala 23:37]
    node _cache_T_509 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[50][9] <= _cache_T_509 @[read_pack.scala 23:37]
    node _cache_T_510 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[51][0] <= _cache_T_510 @[read_pack.scala 23:37]
    node _cache_T_511 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[51][1] <= _cache_T_511 @[read_pack.scala 23:37]
    node _cache_T_512 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[51][2] <= _cache_T_512 @[read_pack.scala 23:37]
    node _cache_T_513 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[51][3] <= _cache_T_513 @[read_pack.scala 23:37]
    node _cache_T_514 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[51][4] <= _cache_T_514 @[read_pack.scala 23:37]
    node _cache_T_515 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[51][5] <= _cache_T_515 @[read_pack.scala 23:37]
    node _cache_T_516 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[51][6] <= _cache_T_516 @[read_pack.scala 23:37]
    node _cache_T_517 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[51][7] <= _cache_T_517 @[read_pack.scala 23:37]
    node _cache_T_518 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[51][8] <= _cache_T_518 @[read_pack.scala 23:37]
    node _cache_T_519 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[51][9] <= _cache_T_519 @[read_pack.scala 23:37]
    node _cache_T_520 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[52][0] <= _cache_T_520 @[read_pack.scala 23:37]
    node _cache_T_521 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[52][1] <= _cache_T_521 @[read_pack.scala 23:37]
    node _cache_T_522 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[52][2] <= _cache_T_522 @[read_pack.scala 23:37]
    node _cache_T_523 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[52][3] <= _cache_T_523 @[read_pack.scala 23:37]
    node _cache_T_524 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[52][4] <= _cache_T_524 @[read_pack.scala 23:37]
    node _cache_T_525 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[52][5] <= _cache_T_525 @[read_pack.scala 23:37]
    node _cache_T_526 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[52][6] <= _cache_T_526 @[read_pack.scala 23:37]
    node _cache_T_527 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[52][7] <= _cache_T_527 @[read_pack.scala 23:37]
    node _cache_T_528 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[52][8] <= _cache_T_528 @[read_pack.scala 23:37]
    node _cache_T_529 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[52][9] <= _cache_T_529 @[read_pack.scala 23:37]
    node _cache_T_530 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[53][0] <= _cache_T_530 @[read_pack.scala 23:37]
    node _cache_T_531 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[53][1] <= _cache_T_531 @[read_pack.scala 23:37]
    node _cache_T_532 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[53][2] <= _cache_T_532 @[read_pack.scala 23:37]
    node _cache_T_533 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[53][3] <= _cache_T_533 @[read_pack.scala 23:37]
    node _cache_T_534 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[53][4] <= _cache_T_534 @[read_pack.scala 23:37]
    node _cache_T_535 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[53][5] <= _cache_T_535 @[read_pack.scala 23:37]
    node _cache_T_536 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[53][6] <= _cache_T_536 @[read_pack.scala 23:37]
    node _cache_T_537 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[53][7] <= _cache_T_537 @[read_pack.scala 23:37]
    node _cache_T_538 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[53][8] <= _cache_T_538 @[read_pack.scala 23:37]
    node _cache_T_539 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[53][9] <= _cache_T_539 @[read_pack.scala 23:37]
    node _cache_T_540 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[54][0] <= _cache_T_540 @[read_pack.scala 23:37]
    node _cache_T_541 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[54][1] <= _cache_T_541 @[read_pack.scala 23:37]
    node _cache_T_542 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[54][2] <= _cache_T_542 @[read_pack.scala 23:37]
    node _cache_T_543 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[54][3] <= _cache_T_543 @[read_pack.scala 23:37]
    node _cache_T_544 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[54][4] <= _cache_T_544 @[read_pack.scala 23:37]
    node _cache_T_545 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[54][5] <= _cache_T_545 @[read_pack.scala 23:37]
    node _cache_T_546 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[54][6] <= _cache_T_546 @[read_pack.scala 23:37]
    node _cache_T_547 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[54][7] <= _cache_T_547 @[read_pack.scala 23:37]
    node _cache_T_548 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[54][8] <= _cache_T_548 @[read_pack.scala 23:37]
    node _cache_T_549 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[54][9] <= _cache_T_549 @[read_pack.scala 23:37]
    node _cache_T_550 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[55][0] <= _cache_T_550 @[read_pack.scala 23:37]
    node _cache_T_551 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[55][1] <= _cache_T_551 @[read_pack.scala 23:37]
    node _cache_T_552 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[55][2] <= _cache_T_552 @[read_pack.scala 23:37]
    node _cache_T_553 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[55][3] <= _cache_T_553 @[read_pack.scala 23:37]
    node _cache_T_554 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[55][4] <= _cache_T_554 @[read_pack.scala 23:37]
    node _cache_T_555 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[55][5] <= _cache_T_555 @[read_pack.scala 23:37]
    node _cache_T_556 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[55][6] <= _cache_T_556 @[read_pack.scala 23:37]
    node _cache_T_557 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[55][7] <= _cache_T_557 @[read_pack.scala 23:37]
    node _cache_T_558 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[55][8] <= _cache_T_558 @[read_pack.scala 23:37]
    node _cache_T_559 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[55][9] <= _cache_T_559 @[read_pack.scala 23:37]
    node _cache_T_560 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[56][0] <= _cache_T_560 @[read_pack.scala 23:37]
    node _cache_T_561 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[56][1] <= _cache_T_561 @[read_pack.scala 23:37]
    node _cache_T_562 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[56][2] <= _cache_T_562 @[read_pack.scala 23:37]
    node _cache_T_563 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[56][3] <= _cache_T_563 @[read_pack.scala 23:37]
    node _cache_T_564 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[56][4] <= _cache_T_564 @[read_pack.scala 23:37]
    node _cache_T_565 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[56][5] <= _cache_T_565 @[read_pack.scala 23:37]
    node _cache_T_566 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[56][6] <= _cache_T_566 @[read_pack.scala 23:37]
    node _cache_T_567 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[56][7] <= _cache_T_567 @[read_pack.scala 23:37]
    node _cache_T_568 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[56][8] <= _cache_T_568 @[read_pack.scala 23:37]
    node _cache_T_569 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[56][9] <= _cache_T_569 @[read_pack.scala 23:37]
    node _cache_T_570 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[57][0] <= _cache_T_570 @[read_pack.scala 23:37]
    node _cache_T_571 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[57][1] <= _cache_T_571 @[read_pack.scala 23:37]
    node _cache_T_572 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[57][2] <= _cache_T_572 @[read_pack.scala 23:37]
    node _cache_T_573 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[57][3] <= _cache_T_573 @[read_pack.scala 23:37]
    node _cache_T_574 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[57][4] <= _cache_T_574 @[read_pack.scala 23:37]
    node _cache_T_575 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[57][5] <= _cache_T_575 @[read_pack.scala 23:37]
    node _cache_T_576 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[57][6] <= _cache_T_576 @[read_pack.scala 23:37]
    node _cache_T_577 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[57][7] <= _cache_T_577 @[read_pack.scala 23:37]
    node _cache_T_578 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[57][8] <= _cache_T_578 @[read_pack.scala 23:37]
    node _cache_T_579 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[57][9] <= _cache_T_579 @[read_pack.scala 23:37]
    node _cache_T_580 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[58][0] <= _cache_T_580 @[read_pack.scala 23:37]
    node _cache_T_581 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[58][1] <= _cache_T_581 @[read_pack.scala 23:37]
    node _cache_T_582 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[58][2] <= _cache_T_582 @[read_pack.scala 23:37]
    node _cache_T_583 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[58][3] <= _cache_T_583 @[read_pack.scala 23:37]
    node _cache_T_584 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[58][4] <= _cache_T_584 @[read_pack.scala 23:37]
    node _cache_T_585 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[58][5] <= _cache_T_585 @[read_pack.scala 23:37]
    node _cache_T_586 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[58][6] <= _cache_T_586 @[read_pack.scala 23:37]
    node _cache_T_587 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[58][7] <= _cache_T_587 @[read_pack.scala 23:37]
    node _cache_T_588 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[58][8] <= _cache_T_588 @[read_pack.scala 23:37]
    node _cache_T_589 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[58][9] <= _cache_T_589 @[read_pack.scala 23:37]
    node _cache_T_590 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[59][0] <= _cache_T_590 @[read_pack.scala 23:37]
    node _cache_T_591 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[59][1] <= _cache_T_591 @[read_pack.scala 23:37]
    node _cache_T_592 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[59][2] <= _cache_T_592 @[read_pack.scala 23:37]
    node _cache_T_593 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[59][3] <= _cache_T_593 @[read_pack.scala 23:37]
    node _cache_T_594 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[59][4] <= _cache_T_594 @[read_pack.scala 23:37]
    node _cache_T_595 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[59][5] <= _cache_T_595 @[read_pack.scala 23:37]
    node _cache_T_596 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[59][6] <= _cache_T_596 @[read_pack.scala 23:37]
    node _cache_T_597 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[59][7] <= _cache_T_597 @[read_pack.scala 23:37]
    node _cache_T_598 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[59][8] <= _cache_T_598 @[read_pack.scala 23:37]
    node _cache_T_599 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[59][9] <= _cache_T_599 @[read_pack.scala 23:37]
    node _cache_T_600 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[60][0] <= _cache_T_600 @[read_pack.scala 23:37]
    node _cache_T_601 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[60][1] <= _cache_T_601 @[read_pack.scala 23:37]
    node _cache_T_602 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[60][2] <= _cache_T_602 @[read_pack.scala 23:37]
    node _cache_T_603 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[60][3] <= _cache_T_603 @[read_pack.scala 23:37]
    node _cache_T_604 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[60][4] <= _cache_T_604 @[read_pack.scala 23:37]
    node _cache_T_605 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[60][5] <= _cache_T_605 @[read_pack.scala 23:37]
    node _cache_T_606 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[60][6] <= _cache_T_606 @[read_pack.scala 23:37]
    node _cache_T_607 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[60][7] <= _cache_T_607 @[read_pack.scala 23:37]
    node _cache_T_608 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[60][8] <= _cache_T_608 @[read_pack.scala 23:37]
    node _cache_T_609 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[60][9] <= _cache_T_609 @[read_pack.scala 23:37]
    node _cache_T_610 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[61][0] <= _cache_T_610 @[read_pack.scala 23:37]
    node _cache_T_611 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[61][1] <= _cache_T_611 @[read_pack.scala 23:37]
    node _cache_T_612 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[61][2] <= _cache_T_612 @[read_pack.scala 23:37]
    node _cache_T_613 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[61][3] <= _cache_T_613 @[read_pack.scala 23:37]
    node _cache_T_614 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[61][4] <= _cache_T_614 @[read_pack.scala 23:37]
    node _cache_T_615 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[61][5] <= _cache_T_615 @[read_pack.scala 23:37]
    node _cache_T_616 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[61][6] <= _cache_T_616 @[read_pack.scala 23:37]
    node _cache_T_617 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[61][7] <= _cache_T_617 @[read_pack.scala 23:37]
    node _cache_T_618 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[61][8] <= _cache_T_618 @[read_pack.scala 23:37]
    node _cache_T_619 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[61][9] <= _cache_T_619 @[read_pack.scala 23:37]
    node _cache_T_620 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[62][0] <= _cache_T_620 @[read_pack.scala 23:37]
    node _cache_T_621 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[62][1] <= _cache_T_621 @[read_pack.scala 23:37]
    node _cache_T_622 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[62][2] <= _cache_T_622 @[read_pack.scala 23:37]
    node _cache_T_623 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[62][3] <= _cache_T_623 @[read_pack.scala 23:37]
    node _cache_T_624 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[62][4] <= _cache_T_624 @[read_pack.scala 23:37]
    node _cache_T_625 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[62][5] <= _cache_T_625 @[read_pack.scala 23:37]
    node _cache_T_626 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[62][6] <= _cache_T_626 @[read_pack.scala 23:37]
    node _cache_T_627 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[62][7] <= _cache_T_627 @[read_pack.scala 23:37]
    node _cache_T_628 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[62][8] <= _cache_T_628 @[read_pack.scala 23:37]
    node _cache_T_629 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[62][9] <= _cache_T_629 @[read_pack.scala 23:37]
    node _cache_T_630 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[63][0] <= _cache_T_630 @[read_pack.scala 23:37]
    node _cache_T_631 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[63][1] <= _cache_T_631 @[read_pack.scala 23:37]
    node _cache_T_632 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[63][2] <= _cache_T_632 @[read_pack.scala 23:37]
    node _cache_T_633 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[63][3] <= _cache_T_633 @[read_pack.scala 23:37]
    node _cache_T_634 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[63][4] <= _cache_T_634 @[read_pack.scala 23:37]
    node _cache_T_635 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[63][5] <= _cache_T_635 @[read_pack.scala 23:37]
    node _cache_T_636 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[63][6] <= _cache_T_636 @[read_pack.scala 23:37]
    node _cache_T_637 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[63][7] <= _cache_T_637 @[read_pack.scala 23:37]
    node _cache_T_638 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[63][8] <= _cache_T_638 @[read_pack.scala 23:37]
    node _cache_T_639 = asSInt(UInt<16>("h00")) @[read_pack.scala 23:37]
    _cache_WIRE[63][9] <= _cache_T_639 @[read_pack.scala 23:37]
    reg cache : SInt<16>[10][64], clock with : (reset => (reset, _cache_WIRE)) @[read_pack.scala 23:24]
    wire _cnt_ic_WIRE : {ccnt : UInt<10>, cend : UInt<10>} @[read_pack.scala 25:38]
    _cnt_ic_WIRE.cend <= UInt<10>("h00") @[read_pack.scala 25:38]
    _cnt_ic_WIRE.ccnt <= UInt<10>("h00") @[read_pack.scala 25:38]
    reg cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, clock with : (reset => (reset, _cnt_ic_WIRE)) @[read_pack.scala 25:25]
    wire _cnt_x_WIRE : {ccnt : UInt<10>, cend : UInt<10>} @[read_pack.scala 26:37]
    _cnt_x_WIRE.cend <= UInt<10>("h00") @[read_pack.scala 26:37]
    _cnt_x_WIRE.ccnt <= UInt<10>("h00") @[read_pack.scala 26:37]
    reg cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, clock with : (reset => (reset, _cnt_x_WIRE)) @[read_pack.scala 26:24]
    wire _cnt_y_WIRE : {ccnt : UInt<10>, cend : UInt<10>} @[read_pack.scala 27:37]
    _cnt_y_WIRE.cend <= UInt<10>("h00") @[read_pack.scala 27:37]
    _cnt_y_WIRE.ccnt <= UInt<10>("h00") @[read_pack.scala 27:37]
    reg cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, clock with : (reset => (reset, _cnt_y_WIRE)) @[read_pack.scala 27:24]
    io.valid_out <= UInt<1>("h00") @[read_pack.scala 29:18]
    wire _io_output_WIRE : {mat : SInt<16>[64], up : SInt<16>[10], down : SInt<16>[10], left : SInt<16>[8], right : SInt<16>[8]} @[read_pack.scala 30:30]
    node _io_output_T = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.right[0] <= _io_output_T @[read_pack.scala 30:30]
    node _io_output_T_1 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.right[1] <= _io_output_T_1 @[read_pack.scala 30:30]
    node _io_output_T_2 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.right[2] <= _io_output_T_2 @[read_pack.scala 30:30]
    node _io_output_T_3 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.right[3] <= _io_output_T_3 @[read_pack.scala 30:30]
    node _io_output_T_4 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.right[4] <= _io_output_T_4 @[read_pack.scala 30:30]
    node _io_output_T_5 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.right[5] <= _io_output_T_5 @[read_pack.scala 30:30]
    node _io_output_T_6 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.right[6] <= _io_output_T_6 @[read_pack.scala 30:30]
    node _io_output_T_7 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.right[7] <= _io_output_T_7 @[read_pack.scala 30:30]
    node _io_output_T_8 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.left[0] <= _io_output_T_8 @[read_pack.scala 30:30]
    node _io_output_T_9 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.left[1] <= _io_output_T_9 @[read_pack.scala 30:30]
    node _io_output_T_10 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.left[2] <= _io_output_T_10 @[read_pack.scala 30:30]
    node _io_output_T_11 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.left[3] <= _io_output_T_11 @[read_pack.scala 30:30]
    node _io_output_T_12 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.left[4] <= _io_output_T_12 @[read_pack.scala 30:30]
    node _io_output_T_13 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.left[5] <= _io_output_T_13 @[read_pack.scala 30:30]
    node _io_output_T_14 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.left[6] <= _io_output_T_14 @[read_pack.scala 30:30]
    node _io_output_T_15 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.left[7] <= _io_output_T_15 @[read_pack.scala 30:30]
    node _io_output_T_16 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.down[0] <= _io_output_T_16 @[read_pack.scala 30:30]
    node _io_output_T_17 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.down[1] <= _io_output_T_17 @[read_pack.scala 30:30]
    node _io_output_T_18 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.down[2] <= _io_output_T_18 @[read_pack.scala 30:30]
    node _io_output_T_19 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.down[3] <= _io_output_T_19 @[read_pack.scala 30:30]
    node _io_output_T_20 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.down[4] <= _io_output_T_20 @[read_pack.scala 30:30]
    node _io_output_T_21 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.down[5] <= _io_output_T_21 @[read_pack.scala 30:30]
    node _io_output_T_22 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.down[6] <= _io_output_T_22 @[read_pack.scala 30:30]
    node _io_output_T_23 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.down[7] <= _io_output_T_23 @[read_pack.scala 30:30]
    node _io_output_T_24 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.down[8] <= _io_output_T_24 @[read_pack.scala 30:30]
    node _io_output_T_25 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.down[9] <= _io_output_T_25 @[read_pack.scala 30:30]
    node _io_output_T_26 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.up[0] <= _io_output_T_26 @[read_pack.scala 30:30]
    node _io_output_T_27 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.up[1] <= _io_output_T_27 @[read_pack.scala 30:30]
    node _io_output_T_28 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.up[2] <= _io_output_T_28 @[read_pack.scala 30:30]
    node _io_output_T_29 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.up[3] <= _io_output_T_29 @[read_pack.scala 30:30]
    node _io_output_T_30 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.up[4] <= _io_output_T_30 @[read_pack.scala 30:30]
    node _io_output_T_31 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.up[5] <= _io_output_T_31 @[read_pack.scala 30:30]
    node _io_output_T_32 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.up[6] <= _io_output_T_32 @[read_pack.scala 30:30]
    node _io_output_T_33 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.up[7] <= _io_output_T_33 @[read_pack.scala 30:30]
    node _io_output_T_34 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.up[8] <= _io_output_T_34 @[read_pack.scala 30:30]
    node _io_output_T_35 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.up[9] <= _io_output_T_35 @[read_pack.scala 30:30]
    node _io_output_T_36 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[0] <= _io_output_T_36 @[read_pack.scala 30:30]
    node _io_output_T_37 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[1] <= _io_output_T_37 @[read_pack.scala 30:30]
    node _io_output_T_38 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[2] <= _io_output_T_38 @[read_pack.scala 30:30]
    node _io_output_T_39 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[3] <= _io_output_T_39 @[read_pack.scala 30:30]
    node _io_output_T_40 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[4] <= _io_output_T_40 @[read_pack.scala 30:30]
    node _io_output_T_41 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[5] <= _io_output_T_41 @[read_pack.scala 30:30]
    node _io_output_T_42 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[6] <= _io_output_T_42 @[read_pack.scala 30:30]
    node _io_output_T_43 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[7] <= _io_output_T_43 @[read_pack.scala 30:30]
    node _io_output_T_44 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[8] <= _io_output_T_44 @[read_pack.scala 30:30]
    node _io_output_T_45 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[9] <= _io_output_T_45 @[read_pack.scala 30:30]
    node _io_output_T_46 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[10] <= _io_output_T_46 @[read_pack.scala 30:30]
    node _io_output_T_47 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[11] <= _io_output_T_47 @[read_pack.scala 30:30]
    node _io_output_T_48 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[12] <= _io_output_T_48 @[read_pack.scala 30:30]
    node _io_output_T_49 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[13] <= _io_output_T_49 @[read_pack.scala 30:30]
    node _io_output_T_50 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[14] <= _io_output_T_50 @[read_pack.scala 30:30]
    node _io_output_T_51 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[15] <= _io_output_T_51 @[read_pack.scala 30:30]
    node _io_output_T_52 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[16] <= _io_output_T_52 @[read_pack.scala 30:30]
    node _io_output_T_53 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[17] <= _io_output_T_53 @[read_pack.scala 30:30]
    node _io_output_T_54 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[18] <= _io_output_T_54 @[read_pack.scala 30:30]
    node _io_output_T_55 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[19] <= _io_output_T_55 @[read_pack.scala 30:30]
    node _io_output_T_56 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[20] <= _io_output_T_56 @[read_pack.scala 30:30]
    node _io_output_T_57 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[21] <= _io_output_T_57 @[read_pack.scala 30:30]
    node _io_output_T_58 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[22] <= _io_output_T_58 @[read_pack.scala 30:30]
    node _io_output_T_59 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[23] <= _io_output_T_59 @[read_pack.scala 30:30]
    node _io_output_T_60 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[24] <= _io_output_T_60 @[read_pack.scala 30:30]
    node _io_output_T_61 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[25] <= _io_output_T_61 @[read_pack.scala 30:30]
    node _io_output_T_62 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[26] <= _io_output_T_62 @[read_pack.scala 30:30]
    node _io_output_T_63 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[27] <= _io_output_T_63 @[read_pack.scala 30:30]
    node _io_output_T_64 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[28] <= _io_output_T_64 @[read_pack.scala 30:30]
    node _io_output_T_65 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[29] <= _io_output_T_65 @[read_pack.scala 30:30]
    node _io_output_T_66 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[30] <= _io_output_T_66 @[read_pack.scala 30:30]
    node _io_output_T_67 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[31] <= _io_output_T_67 @[read_pack.scala 30:30]
    node _io_output_T_68 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[32] <= _io_output_T_68 @[read_pack.scala 30:30]
    node _io_output_T_69 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[33] <= _io_output_T_69 @[read_pack.scala 30:30]
    node _io_output_T_70 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[34] <= _io_output_T_70 @[read_pack.scala 30:30]
    node _io_output_T_71 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[35] <= _io_output_T_71 @[read_pack.scala 30:30]
    node _io_output_T_72 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[36] <= _io_output_T_72 @[read_pack.scala 30:30]
    node _io_output_T_73 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[37] <= _io_output_T_73 @[read_pack.scala 30:30]
    node _io_output_T_74 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[38] <= _io_output_T_74 @[read_pack.scala 30:30]
    node _io_output_T_75 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[39] <= _io_output_T_75 @[read_pack.scala 30:30]
    node _io_output_T_76 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[40] <= _io_output_T_76 @[read_pack.scala 30:30]
    node _io_output_T_77 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[41] <= _io_output_T_77 @[read_pack.scala 30:30]
    node _io_output_T_78 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[42] <= _io_output_T_78 @[read_pack.scala 30:30]
    node _io_output_T_79 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[43] <= _io_output_T_79 @[read_pack.scala 30:30]
    node _io_output_T_80 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[44] <= _io_output_T_80 @[read_pack.scala 30:30]
    node _io_output_T_81 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[45] <= _io_output_T_81 @[read_pack.scala 30:30]
    node _io_output_T_82 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[46] <= _io_output_T_82 @[read_pack.scala 30:30]
    node _io_output_T_83 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[47] <= _io_output_T_83 @[read_pack.scala 30:30]
    node _io_output_T_84 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[48] <= _io_output_T_84 @[read_pack.scala 30:30]
    node _io_output_T_85 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[49] <= _io_output_T_85 @[read_pack.scala 30:30]
    node _io_output_T_86 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[50] <= _io_output_T_86 @[read_pack.scala 30:30]
    node _io_output_T_87 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[51] <= _io_output_T_87 @[read_pack.scala 30:30]
    node _io_output_T_88 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[52] <= _io_output_T_88 @[read_pack.scala 30:30]
    node _io_output_T_89 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[53] <= _io_output_T_89 @[read_pack.scala 30:30]
    node _io_output_T_90 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[54] <= _io_output_T_90 @[read_pack.scala 30:30]
    node _io_output_T_91 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[55] <= _io_output_T_91 @[read_pack.scala 30:30]
    node _io_output_T_92 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[56] <= _io_output_T_92 @[read_pack.scala 30:30]
    node _io_output_T_93 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[57] <= _io_output_T_93 @[read_pack.scala 30:30]
    node _io_output_T_94 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[58] <= _io_output_T_94 @[read_pack.scala 30:30]
    node _io_output_T_95 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[59] <= _io_output_T_95 @[read_pack.scala 30:30]
    node _io_output_T_96 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[60] <= _io_output_T_96 @[read_pack.scala 30:30]
    node _io_output_T_97 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[61] <= _io_output_T_97 @[read_pack.scala 30:30]
    node _io_output_T_98 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[62] <= _io_output_T_98 @[read_pack.scala 30:30]
    node _io_output_T_99 = asSInt(UInt<16>("h00")) @[read_pack.scala 30:30]
    _io_output_WIRE.mat[63] <= _io_output_T_99 @[read_pack.scala 30:30]
    io.output.right[0] <= _io_output_WIRE.right[0] @[read_pack.scala 30:15]
    io.output.right[1] <= _io_output_WIRE.right[1] @[read_pack.scala 30:15]
    io.output.right[2] <= _io_output_WIRE.right[2] @[read_pack.scala 30:15]
    io.output.right[3] <= _io_output_WIRE.right[3] @[read_pack.scala 30:15]
    io.output.right[4] <= _io_output_WIRE.right[4] @[read_pack.scala 30:15]
    io.output.right[5] <= _io_output_WIRE.right[5] @[read_pack.scala 30:15]
    io.output.right[6] <= _io_output_WIRE.right[6] @[read_pack.scala 30:15]
    io.output.right[7] <= _io_output_WIRE.right[7] @[read_pack.scala 30:15]
    io.output.left[0] <= _io_output_WIRE.left[0] @[read_pack.scala 30:15]
    io.output.left[1] <= _io_output_WIRE.left[1] @[read_pack.scala 30:15]
    io.output.left[2] <= _io_output_WIRE.left[2] @[read_pack.scala 30:15]
    io.output.left[3] <= _io_output_WIRE.left[3] @[read_pack.scala 30:15]
    io.output.left[4] <= _io_output_WIRE.left[4] @[read_pack.scala 30:15]
    io.output.left[5] <= _io_output_WIRE.left[5] @[read_pack.scala 30:15]
    io.output.left[6] <= _io_output_WIRE.left[6] @[read_pack.scala 30:15]
    io.output.left[7] <= _io_output_WIRE.left[7] @[read_pack.scala 30:15]
    io.output.down[0] <= _io_output_WIRE.down[0] @[read_pack.scala 30:15]
    io.output.down[1] <= _io_output_WIRE.down[1] @[read_pack.scala 30:15]
    io.output.down[2] <= _io_output_WIRE.down[2] @[read_pack.scala 30:15]
    io.output.down[3] <= _io_output_WIRE.down[3] @[read_pack.scala 30:15]
    io.output.down[4] <= _io_output_WIRE.down[4] @[read_pack.scala 30:15]
    io.output.down[5] <= _io_output_WIRE.down[5] @[read_pack.scala 30:15]
    io.output.down[6] <= _io_output_WIRE.down[6] @[read_pack.scala 30:15]
    io.output.down[7] <= _io_output_WIRE.down[7] @[read_pack.scala 30:15]
    io.output.down[8] <= _io_output_WIRE.down[8] @[read_pack.scala 30:15]
    io.output.down[9] <= _io_output_WIRE.down[9] @[read_pack.scala 30:15]
    io.output.up[0] <= _io_output_WIRE.up[0] @[read_pack.scala 30:15]
    io.output.up[1] <= _io_output_WIRE.up[1] @[read_pack.scala 30:15]
    io.output.up[2] <= _io_output_WIRE.up[2] @[read_pack.scala 30:15]
    io.output.up[3] <= _io_output_WIRE.up[3] @[read_pack.scala 30:15]
    io.output.up[4] <= _io_output_WIRE.up[4] @[read_pack.scala 30:15]
    io.output.up[5] <= _io_output_WIRE.up[5] @[read_pack.scala 30:15]
    io.output.up[6] <= _io_output_WIRE.up[6] @[read_pack.scala 30:15]
    io.output.up[7] <= _io_output_WIRE.up[7] @[read_pack.scala 30:15]
    io.output.up[8] <= _io_output_WIRE.up[8] @[read_pack.scala 30:15]
    io.output.up[9] <= _io_output_WIRE.up[9] @[read_pack.scala 30:15]
    io.output.mat[0] <= _io_output_WIRE.mat[0] @[read_pack.scala 30:15]
    io.output.mat[1] <= _io_output_WIRE.mat[1] @[read_pack.scala 30:15]
    io.output.mat[2] <= _io_output_WIRE.mat[2] @[read_pack.scala 30:15]
    io.output.mat[3] <= _io_output_WIRE.mat[3] @[read_pack.scala 30:15]
    io.output.mat[4] <= _io_output_WIRE.mat[4] @[read_pack.scala 30:15]
    io.output.mat[5] <= _io_output_WIRE.mat[5] @[read_pack.scala 30:15]
    io.output.mat[6] <= _io_output_WIRE.mat[6] @[read_pack.scala 30:15]
    io.output.mat[7] <= _io_output_WIRE.mat[7] @[read_pack.scala 30:15]
    io.output.mat[8] <= _io_output_WIRE.mat[8] @[read_pack.scala 30:15]
    io.output.mat[9] <= _io_output_WIRE.mat[9] @[read_pack.scala 30:15]
    io.output.mat[10] <= _io_output_WIRE.mat[10] @[read_pack.scala 30:15]
    io.output.mat[11] <= _io_output_WIRE.mat[11] @[read_pack.scala 30:15]
    io.output.mat[12] <= _io_output_WIRE.mat[12] @[read_pack.scala 30:15]
    io.output.mat[13] <= _io_output_WIRE.mat[13] @[read_pack.scala 30:15]
    io.output.mat[14] <= _io_output_WIRE.mat[14] @[read_pack.scala 30:15]
    io.output.mat[15] <= _io_output_WIRE.mat[15] @[read_pack.scala 30:15]
    io.output.mat[16] <= _io_output_WIRE.mat[16] @[read_pack.scala 30:15]
    io.output.mat[17] <= _io_output_WIRE.mat[17] @[read_pack.scala 30:15]
    io.output.mat[18] <= _io_output_WIRE.mat[18] @[read_pack.scala 30:15]
    io.output.mat[19] <= _io_output_WIRE.mat[19] @[read_pack.scala 30:15]
    io.output.mat[20] <= _io_output_WIRE.mat[20] @[read_pack.scala 30:15]
    io.output.mat[21] <= _io_output_WIRE.mat[21] @[read_pack.scala 30:15]
    io.output.mat[22] <= _io_output_WIRE.mat[22] @[read_pack.scala 30:15]
    io.output.mat[23] <= _io_output_WIRE.mat[23] @[read_pack.scala 30:15]
    io.output.mat[24] <= _io_output_WIRE.mat[24] @[read_pack.scala 30:15]
    io.output.mat[25] <= _io_output_WIRE.mat[25] @[read_pack.scala 30:15]
    io.output.mat[26] <= _io_output_WIRE.mat[26] @[read_pack.scala 30:15]
    io.output.mat[27] <= _io_output_WIRE.mat[27] @[read_pack.scala 30:15]
    io.output.mat[28] <= _io_output_WIRE.mat[28] @[read_pack.scala 30:15]
    io.output.mat[29] <= _io_output_WIRE.mat[29] @[read_pack.scala 30:15]
    io.output.mat[30] <= _io_output_WIRE.mat[30] @[read_pack.scala 30:15]
    io.output.mat[31] <= _io_output_WIRE.mat[31] @[read_pack.scala 30:15]
    io.output.mat[32] <= _io_output_WIRE.mat[32] @[read_pack.scala 30:15]
    io.output.mat[33] <= _io_output_WIRE.mat[33] @[read_pack.scala 30:15]
    io.output.mat[34] <= _io_output_WIRE.mat[34] @[read_pack.scala 30:15]
    io.output.mat[35] <= _io_output_WIRE.mat[35] @[read_pack.scala 30:15]
    io.output.mat[36] <= _io_output_WIRE.mat[36] @[read_pack.scala 30:15]
    io.output.mat[37] <= _io_output_WIRE.mat[37] @[read_pack.scala 30:15]
    io.output.mat[38] <= _io_output_WIRE.mat[38] @[read_pack.scala 30:15]
    io.output.mat[39] <= _io_output_WIRE.mat[39] @[read_pack.scala 30:15]
    io.output.mat[40] <= _io_output_WIRE.mat[40] @[read_pack.scala 30:15]
    io.output.mat[41] <= _io_output_WIRE.mat[41] @[read_pack.scala 30:15]
    io.output.mat[42] <= _io_output_WIRE.mat[42] @[read_pack.scala 30:15]
    io.output.mat[43] <= _io_output_WIRE.mat[43] @[read_pack.scala 30:15]
    io.output.mat[44] <= _io_output_WIRE.mat[44] @[read_pack.scala 30:15]
    io.output.mat[45] <= _io_output_WIRE.mat[45] @[read_pack.scala 30:15]
    io.output.mat[46] <= _io_output_WIRE.mat[46] @[read_pack.scala 30:15]
    io.output.mat[47] <= _io_output_WIRE.mat[47] @[read_pack.scala 30:15]
    io.output.mat[48] <= _io_output_WIRE.mat[48] @[read_pack.scala 30:15]
    io.output.mat[49] <= _io_output_WIRE.mat[49] @[read_pack.scala 30:15]
    io.output.mat[50] <= _io_output_WIRE.mat[50] @[read_pack.scala 30:15]
    io.output.mat[51] <= _io_output_WIRE.mat[51] @[read_pack.scala 30:15]
    io.output.mat[52] <= _io_output_WIRE.mat[52] @[read_pack.scala 30:15]
    io.output.mat[53] <= _io_output_WIRE.mat[53] @[read_pack.scala 30:15]
    io.output.mat[54] <= _io_output_WIRE.mat[54] @[read_pack.scala 30:15]
    io.output.mat[55] <= _io_output_WIRE.mat[55] @[read_pack.scala 30:15]
    io.output.mat[56] <= _io_output_WIRE.mat[56] @[read_pack.scala 30:15]
    io.output.mat[57] <= _io_output_WIRE.mat[57] @[read_pack.scala 30:15]
    io.output.mat[58] <= _io_output_WIRE.mat[58] @[read_pack.scala 30:15]
    io.output.mat[59] <= _io_output_WIRE.mat[59] @[read_pack.scala 30:15]
    io.output.mat[60] <= _io_output_WIRE.mat[60] @[read_pack.scala 30:15]
    io.output.mat[61] <= _io_output_WIRE.mat[61] @[read_pack.scala 30:15]
    io.output.mat[62] <= _io_output_WIRE.mat[62] @[read_pack.scala 30:15]
    io.output.mat[63] <= _io_output_WIRE.mat[63] @[read_pack.scala 30:15]
    reg state : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[read_pack.scala 33:24]
    when io.flag_job : @[read_pack.scala 43:22]
      cnt_x.cend <= io.job.cnt_x_end @[utils.scala 22:14]
      cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      cnt_y.cend <= io.job.cnt_y_end @[utils.scala 22:14]
      cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      cnt_ic.cend <= io.job.in_chan @[utils.scala 22:14]
      cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      state <= UInt<1>("h00") @[read_pack.scala 47:15]
      skip @[read_pack.scala 43:22]
    else : @[read_pack.scala 48:28]
      when io.valid_in : @[read_pack.scala 48:28]
        io.valid_out <= UInt<1>("h01") @[read_pack.scala 49:22]
        wire nxt : UInt<1> @[utils.scala 16:23]
        node _nxt_T = eq(cnt_ic.ccnt, cnt_ic.cend) @[utils.scala 17:20]
        nxt <= _nxt_T @[utils.scala 17:13]
        node _cnt_ic_ccnt_T = add(cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
        node _cnt_ic_ccnt_T_1 = tail(_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
        node _cnt_ic_ccnt_T_2 = mux(nxt, UInt<1>("h00"), _cnt_ic_ccnt_T_1) @[utils.scala 18:20]
        cnt_ic.ccnt <= _cnt_ic_ccnt_T_2 @[utils.scala 18:14]
        when nxt : @[read_pack.scala 50:27]
          node _state_T = not(state) @[read_pack.scala 51:22]
          state <= _state_T @[read_pack.scala 51:19]
          wire nxt_1 : UInt<1> @[utils.scala 16:23]
          node _nxt_T_1 = eq(cnt_y.ccnt, cnt_y.cend) @[utils.scala 17:20]
          nxt_1 <= _nxt_T_1 @[utils.scala 17:13]
          node _cnt_y_ccnt_T = add(cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _cnt_y_ccnt_T_1 = tail(_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
          node _cnt_y_ccnt_T_2 = mux(nxt_1, UInt<1>("h00"), _cnt_y_ccnt_T_1) @[utils.scala 18:20]
          cnt_y.ccnt <= _cnt_y_ccnt_T_2 @[utils.scala 18:14]
          when nxt_1 : @[read_pack.scala 52:30]
            wire nxt_2 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_2 = eq(cnt_x.ccnt, cnt_x.cend) @[utils.scala 17:20]
            nxt_2 <= _nxt_T_2 @[utils.scala 17:13]
            node _cnt_x_ccnt_T = add(cnt_x.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _cnt_x_ccnt_T_1 = tail(_cnt_x_ccnt_T, 1) @[utils.scala 18:35]
            node _cnt_x_ccnt_T_2 = mux(nxt_2, UInt<1>("h00"), _cnt_x_ccnt_T_1) @[utils.scala 18:20]
            cnt_x.ccnt <= _cnt_x_ccnt_T_2 @[utils.scala 18:14]
            skip @[read_pack.scala 52:30]
          skip @[read_pack.scala 50:27]
        io.output.mat[1] <= io.from_big[state].data[0] @[read_pack.scala 38:38]
        io.output.mat[2] <= io.from_big[state].data[1] @[read_pack.scala 38:38]
        io.output.mat[3] <= io.from_big[state].data[2] @[read_pack.scala 38:38]
        io.output.mat[4] <= io.from_big[state].data[3] @[read_pack.scala 38:38]
        io.output.mat[5] <= io.from_big[state].data[4] @[read_pack.scala 38:38]
        io.output.mat[6] <= io.from_big[state].data[5] @[read_pack.scala 38:38]
        io.output.mat[0] <= io.from_small[state][1].data[0] @[read_pack.scala 39:34]
        io.output.mat[7] <= io.from_small[state][2].data[0] @[read_pack.scala 40:34]
        io.output.mat[9] <= io.from_big[state].data[6] @[read_pack.scala 38:38]
        io.output.mat[10] <= io.from_big[state].data[7] @[read_pack.scala 38:38]
        io.output.mat[11] <= io.from_big[state].data[8] @[read_pack.scala 38:38]
        io.output.mat[12] <= io.from_big[state].data[9] @[read_pack.scala 38:38]
        io.output.mat[13] <= io.from_big[state].data[10] @[read_pack.scala 38:38]
        io.output.mat[14] <= io.from_big[state].data[11] @[read_pack.scala 38:38]
        io.output.mat[8] <= io.from_small[state][1].data[1] @[read_pack.scala 39:34]
        io.output.mat[15] <= io.from_small[state][2].data[1] @[read_pack.scala 40:34]
        io.output.mat[17] <= io.from_big[state].data[12] @[read_pack.scala 38:38]
        io.output.mat[18] <= io.from_big[state].data[13] @[read_pack.scala 38:38]
        io.output.mat[19] <= io.from_big[state].data[14] @[read_pack.scala 38:38]
        io.output.mat[20] <= io.from_big[state].data[15] @[read_pack.scala 38:38]
        io.output.mat[21] <= io.from_big[state].data[16] @[read_pack.scala 38:38]
        io.output.mat[22] <= io.from_big[state].data[17] @[read_pack.scala 38:38]
        io.output.mat[16] <= io.from_small[state][1].data[2] @[read_pack.scala 39:34]
        io.output.mat[23] <= io.from_small[state][2].data[2] @[read_pack.scala 40:34]
        io.output.mat[25] <= io.from_big[state].data[18] @[read_pack.scala 38:38]
        io.output.mat[26] <= io.from_big[state].data[19] @[read_pack.scala 38:38]
        io.output.mat[27] <= io.from_big[state].data[20] @[read_pack.scala 38:38]
        io.output.mat[28] <= io.from_big[state].data[21] @[read_pack.scala 38:38]
        io.output.mat[29] <= io.from_big[state].data[22] @[read_pack.scala 38:38]
        io.output.mat[30] <= io.from_big[state].data[23] @[read_pack.scala 38:38]
        io.output.mat[24] <= io.from_small[state][1].data[3] @[read_pack.scala 39:34]
        io.output.mat[31] <= io.from_small[state][2].data[3] @[read_pack.scala 40:34]
        io.output.mat[33] <= io.from_big[state].data[24] @[read_pack.scala 38:38]
        io.output.mat[34] <= io.from_big[state].data[25] @[read_pack.scala 38:38]
        io.output.mat[35] <= io.from_big[state].data[26] @[read_pack.scala 38:38]
        io.output.mat[36] <= io.from_big[state].data[27] @[read_pack.scala 38:38]
        io.output.mat[37] <= io.from_big[state].data[28] @[read_pack.scala 38:38]
        io.output.mat[38] <= io.from_big[state].data[29] @[read_pack.scala 38:38]
        io.output.mat[32] <= io.from_small[state][1].data[4] @[read_pack.scala 39:34]
        io.output.mat[39] <= io.from_small[state][2].data[4] @[read_pack.scala 40:34]
        io.output.mat[41] <= io.from_big[state].data[30] @[read_pack.scala 38:38]
        io.output.mat[42] <= io.from_big[state].data[31] @[read_pack.scala 38:38]
        io.output.mat[43] <= io.from_big[state].data[32] @[read_pack.scala 38:38]
        io.output.mat[44] <= io.from_big[state].data[33] @[read_pack.scala 38:38]
        io.output.mat[45] <= io.from_big[state].data[34] @[read_pack.scala 38:38]
        io.output.mat[46] <= io.from_big[state].data[35] @[read_pack.scala 38:38]
        io.output.mat[40] <= io.from_small[state][1].data[5] @[read_pack.scala 39:34]
        io.output.mat[47] <= io.from_small[state][2].data[5] @[read_pack.scala 40:34]
        io.output.mat[49] <= io.from_big[state].data[36] @[read_pack.scala 38:38]
        io.output.mat[50] <= io.from_big[state].data[37] @[read_pack.scala 38:38]
        io.output.mat[51] <= io.from_big[state].data[38] @[read_pack.scala 38:38]
        io.output.mat[52] <= io.from_big[state].data[39] @[read_pack.scala 38:38]
        io.output.mat[53] <= io.from_big[state].data[40] @[read_pack.scala 38:38]
        io.output.mat[54] <= io.from_big[state].data[41] @[read_pack.scala 38:38]
        io.output.mat[48] <= io.from_small[state][1].data[6] @[read_pack.scala 39:34]
        io.output.mat[55] <= io.from_small[state][2].data[6] @[read_pack.scala 40:34]
        io.output.mat[57] <= io.from_big[state].data[42] @[read_pack.scala 38:38]
        io.output.mat[58] <= io.from_big[state].data[43] @[read_pack.scala 38:38]
        io.output.mat[59] <= io.from_big[state].data[44] @[read_pack.scala 38:38]
        io.output.mat[60] <= io.from_big[state].data[45] @[read_pack.scala 38:38]
        io.output.mat[61] <= io.from_big[state].data[46] @[read_pack.scala 38:38]
        io.output.mat[62] <= io.from_big[state].data[47] @[read_pack.scala 38:38]
        io.output.mat[56] <= io.from_small[state][1].data[7] @[read_pack.scala 39:34]
        io.output.mat[63] <= io.from_small[state][2].data[7] @[read_pack.scala 40:34]
        node _T = eq(cnt_y.ccnt, UInt<1>("h00")) @[read_pack.scala 57:24]
        when _T : @[read_pack.scala 57:31]
          io.output.up[2] <= io.from_big[state].data[6] @[read_pack.scala 59:33]
          io.output.up[3] <= io.from_big[state].data[7] @[read_pack.scala 59:33]
          io.output.up[4] <= io.from_big[state].data[8] @[read_pack.scala 59:33]
          io.output.up[5] <= io.from_big[state].data[9] @[read_pack.scala 59:33]
          io.output.up[6] <= io.from_big[state].data[10] @[read_pack.scala 59:33]
          io.output.up[7] <= io.from_big[state].data[11] @[read_pack.scala 59:33]
          io.output.up[1] <= io.from_small[state][1].data[1] @[read_pack.scala 60:29]
          io.output.up[8] <= io.from_small[state][2].data[1] @[read_pack.scala 61:29]
          node _T_1 = eq(cnt_x.ccnt, UInt<1>("h00")) @[read_pack.scala 62:28]
          when _T_1 : @[read_pack.scala 62:35]
            io.output.up[0] <= io.from_big[state].data[6] @[read_pack.scala 63:33]
            skip @[read_pack.scala 62:35]
          else : @[read_pack.scala 64:24]
            io.output.up[0] <= io.from_small[state][0].data[1] @[read_pack.scala 65:33]
            skip @[read_pack.scala 64:24]
          node _T_2 = eq(cnt_x.ccnt, cnt_x.cend) @[read_pack.scala 67:28]
          when _T_2 : @[read_pack.scala 67:42]
            io.output.up[9] <= io.from_big[state].data[11] @[read_pack.scala 68:33]
            skip @[read_pack.scala 67:42]
          else : @[read_pack.scala 69:24]
            io.output.up[9] <= io.from_small[state][3].data[1] @[read_pack.scala 70:33]
            skip @[read_pack.scala 69:24]
          skip @[read_pack.scala 57:31]
        else : @[read_pack.scala 72:20]
          node _T_3 = bits(cnt_ic.ccnt, 5, 0)
          io.output.up[0] <= cache[_T_3][0] @[read_pack.scala 73:26]
          io.output.up[1] <= cache[_T_3][1] @[read_pack.scala 73:26]
          io.output.up[2] <= cache[_T_3][2] @[read_pack.scala 73:26]
          io.output.up[3] <= cache[_T_3][3] @[read_pack.scala 73:26]
          io.output.up[4] <= cache[_T_3][4] @[read_pack.scala 73:26]
          io.output.up[5] <= cache[_T_3][5] @[read_pack.scala 73:26]
          io.output.up[6] <= cache[_T_3][6] @[read_pack.scala 73:26]
          io.output.up[7] <= cache[_T_3][7] @[read_pack.scala 73:26]
          io.output.up[8] <= cache[_T_3][8] @[read_pack.scala 73:26]
          io.output.up[9] <= cache[_T_3][9] @[read_pack.scala 73:26]
          skip @[read_pack.scala 72:20]
        node _T_4 = eq(cnt_y.ccnt, cnt_y.cend) @[read_pack.scala 76:24]
        when _T_4 : @[read_pack.scala 76:38]
          io.output.down[2] <= io.from_big[state].data[36] @[read_pack.scala 78:35]
          io.output.down[3] <= io.from_big[state].data[37] @[read_pack.scala 78:35]
          io.output.down[4] <= io.from_big[state].data[38] @[read_pack.scala 78:35]
          io.output.down[5] <= io.from_big[state].data[39] @[read_pack.scala 78:35]
          io.output.down[6] <= io.from_big[state].data[40] @[read_pack.scala 78:35]
          io.output.down[7] <= io.from_big[state].data[41] @[read_pack.scala 78:35]
          io.output.down[1] <= io.from_small[state][1].data[6] @[read_pack.scala 79:31]
          io.output.down[8] <= io.from_small[state][2].data[6] @[read_pack.scala 80:31]
          node _T_5 = eq(cnt_x.ccnt, UInt<1>("h00")) @[read_pack.scala 81:28]
          when _T_5 : @[read_pack.scala 81:35]
            io.output.down[0] <= io.from_big[state].data[36] @[read_pack.scala 82:35]
            skip @[read_pack.scala 81:35]
          else : @[read_pack.scala 83:24]
            io.output.down[0] <= io.from_small[state][0].data[6] @[read_pack.scala 84:35]
            skip @[read_pack.scala 83:24]
          node _T_6 = eq(cnt_x.ccnt, cnt_x.cend) @[read_pack.scala 86:28]
          when _T_6 : @[read_pack.scala 86:42]
            io.output.down[9] <= io.from_big[state].data[41] @[read_pack.scala 87:35]
            skip @[read_pack.scala 86:42]
          else : @[read_pack.scala 88:24]
            io.output.down[9] <= io.from_small[state][3].data[6] @[read_pack.scala 89:35]
            skip @[read_pack.scala 88:24]
          skip @[read_pack.scala 76:38]
        else : @[read_pack.scala 91:20]
          node _io_output_down_2_T = not(state) @[read_pack.scala 93:50]
          io.output.down[2] <= io.from_big[_io_output_down_2_T].data[0] @[read_pack.scala 93:35]
          node _io_output_down_3_T = not(state) @[read_pack.scala 93:50]
          io.output.down[3] <= io.from_big[_io_output_down_3_T].data[1] @[read_pack.scala 93:35]
          node _io_output_down_4_T = not(state) @[read_pack.scala 93:50]
          io.output.down[4] <= io.from_big[_io_output_down_4_T].data[2] @[read_pack.scala 93:35]
          node _io_output_down_5_T = not(state) @[read_pack.scala 93:50]
          io.output.down[5] <= io.from_big[_io_output_down_5_T].data[3] @[read_pack.scala 93:35]
          node _io_output_down_6_T = not(state) @[read_pack.scala 93:50]
          io.output.down[6] <= io.from_big[_io_output_down_6_T].data[4] @[read_pack.scala 93:35]
          node _io_output_down_7_T = not(state) @[read_pack.scala 93:50]
          io.output.down[7] <= io.from_big[_io_output_down_7_T].data[5] @[read_pack.scala 93:35]
          node _io_output_down_1_T = not(state) @[read_pack.scala 94:48]
          io.output.down[1] <= io.from_small[_io_output_down_1_T][1].data[0] @[read_pack.scala 94:31]
          node _io_output_down_8_T = not(state) @[read_pack.scala 95:48]
          io.output.down[8] <= io.from_small[_io_output_down_8_T][2].data[0] @[read_pack.scala 95:31]
          node _T_7 = eq(cnt_x.ccnt, UInt<1>("h00")) @[read_pack.scala 96:28]
          when _T_7 : @[read_pack.scala 96:35]
            node _io_output_down_0_T = not(state) @[read_pack.scala 97:50]
            io.output.down[0] <= io.from_big[_io_output_down_0_T].data[0] @[read_pack.scala 97:35]
            skip @[read_pack.scala 96:35]
          else : @[read_pack.scala 98:24]
            node _io_output_down_0_T_1 = not(state) @[read_pack.scala 99:52]
            io.output.down[0] <= io.from_small[_io_output_down_0_T_1][0].data[0] @[read_pack.scala 99:35]
            skip @[read_pack.scala 98:24]
          node _T_8 = eq(cnt_x.ccnt, cnt_x.cend) @[read_pack.scala 101:28]
          when _T_8 : @[read_pack.scala 101:42]
            node _io_output_down_9_T = not(state) @[read_pack.scala 102:50]
            io.output.down[9] <= io.from_big[_io_output_down_9_T].data[5] @[read_pack.scala 102:35]
            skip @[read_pack.scala 101:42]
          else : @[read_pack.scala 103:24]
            node _io_output_down_9_T_1 = not(state) @[read_pack.scala 104:52]
            io.output.down[9] <= io.from_small[_io_output_down_9_T_1][3].data[0] @[read_pack.scala 104:35]
            skip @[read_pack.scala 103:24]
          skip @[read_pack.scala 91:20]
        node _T_9 = eq(cnt_x.ccnt, UInt<1>("h00")) @[read_pack.scala 108:24]
        when _T_9 : @[read_pack.scala 108:31]
          io.output.left[0] <= io.from_big[state].data[0] @[read_pack.scala 110:35]
          io.output.left[1] <= io.from_big[state].data[6] @[read_pack.scala 110:35]
          io.output.left[2] <= io.from_big[state].data[12] @[read_pack.scala 110:35]
          io.output.left[3] <= io.from_big[state].data[18] @[read_pack.scala 110:35]
          io.output.left[4] <= io.from_big[state].data[24] @[read_pack.scala 110:35]
          io.output.left[5] <= io.from_big[state].data[30] @[read_pack.scala 110:35]
          io.output.left[6] <= io.from_big[state].data[36] @[read_pack.scala 110:35]
          io.output.left[7] <= io.from_big[state].data[42] @[read_pack.scala 110:35]
          skip @[read_pack.scala 108:31]
        else : @[read_pack.scala 111:20]
          io.output.left[0] <= io.from_small[state][0].data[0] @[read_pack.scala 112:28]
          io.output.left[1] <= io.from_small[state][0].data[1] @[read_pack.scala 112:28]
          io.output.left[2] <= io.from_small[state][0].data[2] @[read_pack.scala 112:28]
          io.output.left[3] <= io.from_small[state][0].data[3] @[read_pack.scala 112:28]
          io.output.left[4] <= io.from_small[state][0].data[4] @[read_pack.scala 112:28]
          io.output.left[5] <= io.from_small[state][0].data[5] @[read_pack.scala 112:28]
          io.output.left[6] <= io.from_small[state][0].data[6] @[read_pack.scala 112:28]
          io.output.left[7] <= io.from_small[state][0].data[7] @[read_pack.scala 112:28]
          skip @[read_pack.scala 111:20]
        node _T_10 = eq(cnt_x.ccnt, cnt_x.cend) @[read_pack.scala 114:24]
        when _T_10 : @[read_pack.scala 114:38]
          io.output.right[0] <= io.from_big[state].data[5] @[read_pack.scala 116:36]
          io.output.right[1] <= io.from_big[state].data[11] @[read_pack.scala 116:36]
          io.output.right[2] <= io.from_big[state].data[17] @[read_pack.scala 116:36]
          io.output.right[3] <= io.from_big[state].data[23] @[read_pack.scala 116:36]
          io.output.right[4] <= io.from_big[state].data[29] @[read_pack.scala 116:36]
          io.output.right[5] <= io.from_big[state].data[35] @[read_pack.scala 116:36]
          io.output.right[6] <= io.from_big[state].data[41] @[read_pack.scala 116:36]
          io.output.right[7] <= io.from_big[state].data[47] @[read_pack.scala 116:36]
          skip @[read_pack.scala 114:38]
        else : @[read_pack.scala 117:20]
          io.output.right[0] <= io.from_small[state][3].data[0] @[read_pack.scala 118:29]
          io.output.right[1] <= io.from_small[state][3].data[1] @[read_pack.scala 118:29]
          io.output.right[2] <= io.from_small[state][3].data[2] @[read_pack.scala 118:29]
          io.output.right[3] <= io.from_small[state][3].data[3] @[read_pack.scala 118:29]
          io.output.right[4] <= io.from_small[state][3].data[4] @[read_pack.scala 118:29]
          io.output.right[5] <= io.from_small[state][3].data[5] @[read_pack.scala 118:29]
          io.output.right[6] <= io.from_small[state][3].data[6] @[read_pack.scala 118:29]
          io.output.right[7] <= io.from_small[state][3].data[7] @[read_pack.scala 118:29]
          skip @[read_pack.scala 117:20]
        wire nxt_up : SInt<16>[10] @[read_pack.scala 121:26]
        nxt_up[2] <= io.from_big[state].data[42] @[read_pack.scala 123:23]
        nxt_up[3] <= io.from_big[state].data[43] @[read_pack.scala 123:23]
        nxt_up[4] <= io.from_big[state].data[44] @[read_pack.scala 123:23]
        nxt_up[5] <= io.from_big[state].data[45] @[read_pack.scala 123:23]
        nxt_up[6] <= io.from_big[state].data[46] @[read_pack.scala 123:23]
        nxt_up[7] <= io.from_big[state].data[47] @[read_pack.scala 123:23]
        nxt_up[1] <= io.from_small[state][1].data[7] @[read_pack.scala 124:19]
        nxt_up[8] <= io.from_small[state][2].data[7] @[read_pack.scala 125:19]
        node _T_11 = eq(cnt_x.ccnt, UInt<1>("h00")) @[read_pack.scala 126:24]
        when _T_11 : @[read_pack.scala 126:31]
          nxt_up[0] <= io.from_big[state].data[42] @[read_pack.scala 127:23]
          skip @[read_pack.scala 126:31]
        else : @[read_pack.scala 128:20]
          nxt_up[0] <= io.from_small[state][0].data[7] @[read_pack.scala 129:23]
          skip @[read_pack.scala 128:20]
        node _T_12 = eq(cnt_x.ccnt, cnt_x.cend) @[read_pack.scala 131:24]
        when _T_12 : @[read_pack.scala 131:38]
          nxt_up[9] <= io.from_big[state].data[47] @[read_pack.scala 132:23]
          skip @[read_pack.scala 131:38]
        else : @[read_pack.scala 133:20]
          nxt_up[9] <= io.from_small[state][3].data[7] @[read_pack.scala 134:23]
          skip @[read_pack.scala 133:20]
        node _T_13 = bits(cnt_ic.ccnt, 5, 0)
        cache[_T_13][0] <= nxt_up[0] @[read_pack.scala 136:28]
        cache[_T_13][1] <= nxt_up[1] @[read_pack.scala 136:28]
        cache[_T_13][2] <= nxt_up[2] @[read_pack.scala 136:28]
        cache[_T_13][3] <= nxt_up[3] @[read_pack.scala 136:28]
        cache[_T_13][4] <= nxt_up[4] @[read_pack.scala 136:28]
        cache[_T_13][5] <= nxt_up[5] @[read_pack.scala 136:28]
        cache[_T_13][6] <= nxt_up[6] @[read_pack.scala 136:28]
        cache[_T_13][7] <= nxt_up[7] @[read_pack.scala 136:28]
        cache[_T_13][8] <= nxt_up[8] @[read_pack.scala 136:28]
        cache[_T_13][9] <= nxt_up[9] @[read_pack.scala 136:28]
        skip @[read_pack.scala 48:28]
    
  module ReadSwitch : 
    input clock : Clock
    input reset : Reset
    output io : {flip flag_job : UInt<1>, flip job : UInt<2>, flip valid_in : UInt<1>, valid_out_calc8x8 : UInt<1>, valid_out_copy : UInt<1>, flip from : {mat : SInt<16>[64], up : SInt<16>[10], down : SInt<16>[10], left : SInt<16>[8], right : SInt<16>[8]}, flip from_weight : SInt<16>[9], to_calc8x8 : {mat : SInt<16>[64], up : SInt<16>[10], down : SInt<16>[10], left : SInt<16>[8], right : SInt<16>[8]}, to_copy : {mat : SInt<16>[64]}, to_weight : {real : SInt<16>[16]}[4]}
    
    wire _job_type_WIRE : UInt<2> @[switch.scala 28:40]
    _job_type_WIRE <= UInt<1>("h00") @[switch.scala 28:40]
    reg job_type : UInt<2>, clock with : (reset => (reset, _job_type_WIRE)) @[switch.scala 28:27]
    wire _cache_WIRE : SInt<16>[64] @[switch.scala 30:32]
    _cache_WIRE[0] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[1] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[2] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[3] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[4] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[5] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[6] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[7] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[8] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[9] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[10] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[11] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[12] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[13] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[14] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[15] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[16] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[17] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[18] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[19] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[20] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[21] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[22] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[23] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[24] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[25] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[26] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[27] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[28] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[29] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[30] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[31] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[32] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[33] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[34] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[35] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[36] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[37] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[38] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[39] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[40] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[41] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[42] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[43] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[44] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[45] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[46] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[47] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[48] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[49] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[50] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[51] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[52] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[53] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[54] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[55] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[56] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[57] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[58] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[59] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[60] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[61] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[62] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    _cache_WIRE[63] <= asSInt(UInt<16>("h00")) @[switch.scala 30:32]
    reg cache : SInt<16>[64], clock with : (reset => (reset, _cache_WIRE)) @[switch.scala 30:24]
    wire _state_WIRE : {ccnt : UInt<1>, cend : UInt<1>} @[switch.scala 31:37]
    _state_WIRE.cend <= UInt<1>("h00") @[switch.scala 31:37]
    _state_WIRE.ccnt <= UInt<1>("h00") @[switch.scala 31:37]
    reg state : {ccnt : UInt<1>, cend : UInt<1>}, clock with : (reset => (reset, _state_WIRE)) @[switch.scala 31:24]
    io.valid_out_calc8x8 <= UInt<1>("h00") @[switch.scala 33:26]
    io.valid_out_copy <= UInt<1>("h00") @[switch.scala 34:23]
    wire _io_to_calc8x8_WIRE : {mat : SInt<16>[64], up : SInt<16>[10], down : SInt<16>[10], left : SInt<16>[8], right : SInt<16>[8]} @[switch.scala 35:34]
    node _io_to_calc8x8_T = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.right[0] <= _io_to_calc8x8_T @[switch.scala 35:34]
    node _io_to_calc8x8_T_1 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.right[1] <= _io_to_calc8x8_T_1 @[switch.scala 35:34]
    node _io_to_calc8x8_T_2 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.right[2] <= _io_to_calc8x8_T_2 @[switch.scala 35:34]
    node _io_to_calc8x8_T_3 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.right[3] <= _io_to_calc8x8_T_3 @[switch.scala 35:34]
    node _io_to_calc8x8_T_4 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.right[4] <= _io_to_calc8x8_T_4 @[switch.scala 35:34]
    node _io_to_calc8x8_T_5 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.right[5] <= _io_to_calc8x8_T_5 @[switch.scala 35:34]
    node _io_to_calc8x8_T_6 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.right[6] <= _io_to_calc8x8_T_6 @[switch.scala 35:34]
    node _io_to_calc8x8_T_7 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.right[7] <= _io_to_calc8x8_T_7 @[switch.scala 35:34]
    node _io_to_calc8x8_T_8 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.left[0] <= _io_to_calc8x8_T_8 @[switch.scala 35:34]
    node _io_to_calc8x8_T_9 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.left[1] <= _io_to_calc8x8_T_9 @[switch.scala 35:34]
    node _io_to_calc8x8_T_10 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.left[2] <= _io_to_calc8x8_T_10 @[switch.scala 35:34]
    node _io_to_calc8x8_T_11 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.left[3] <= _io_to_calc8x8_T_11 @[switch.scala 35:34]
    node _io_to_calc8x8_T_12 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.left[4] <= _io_to_calc8x8_T_12 @[switch.scala 35:34]
    node _io_to_calc8x8_T_13 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.left[5] <= _io_to_calc8x8_T_13 @[switch.scala 35:34]
    node _io_to_calc8x8_T_14 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.left[6] <= _io_to_calc8x8_T_14 @[switch.scala 35:34]
    node _io_to_calc8x8_T_15 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.left[7] <= _io_to_calc8x8_T_15 @[switch.scala 35:34]
    node _io_to_calc8x8_T_16 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.down[0] <= _io_to_calc8x8_T_16 @[switch.scala 35:34]
    node _io_to_calc8x8_T_17 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.down[1] <= _io_to_calc8x8_T_17 @[switch.scala 35:34]
    node _io_to_calc8x8_T_18 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.down[2] <= _io_to_calc8x8_T_18 @[switch.scala 35:34]
    node _io_to_calc8x8_T_19 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.down[3] <= _io_to_calc8x8_T_19 @[switch.scala 35:34]
    node _io_to_calc8x8_T_20 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.down[4] <= _io_to_calc8x8_T_20 @[switch.scala 35:34]
    node _io_to_calc8x8_T_21 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.down[5] <= _io_to_calc8x8_T_21 @[switch.scala 35:34]
    node _io_to_calc8x8_T_22 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.down[6] <= _io_to_calc8x8_T_22 @[switch.scala 35:34]
    node _io_to_calc8x8_T_23 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.down[7] <= _io_to_calc8x8_T_23 @[switch.scala 35:34]
    node _io_to_calc8x8_T_24 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.down[8] <= _io_to_calc8x8_T_24 @[switch.scala 35:34]
    node _io_to_calc8x8_T_25 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.down[9] <= _io_to_calc8x8_T_25 @[switch.scala 35:34]
    node _io_to_calc8x8_T_26 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.up[0] <= _io_to_calc8x8_T_26 @[switch.scala 35:34]
    node _io_to_calc8x8_T_27 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.up[1] <= _io_to_calc8x8_T_27 @[switch.scala 35:34]
    node _io_to_calc8x8_T_28 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.up[2] <= _io_to_calc8x8_T_28 @[switch.scala 35:34]
    node _io_to_calc8x8_T_29 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.up[3] <= _io_to_calc8x8_T_29 @[switch.scala 35:34]
    node _io_to_calc8x8_T_30 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.up[4] <= _io_to_calc8x8_T_30 @[switch.scala 35:34]
    node _io_to_calc8x8_T_31 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.up[5] <= _io_to_calc8x8_T_31 @[switch.scala 35:34]
    node _io_to_calc8x8_T_32 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.up[6] <= _io_to_calc8x8_T_32 @[switch.scala 35:34]
    node _io_to_calc8x8_T_33 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.up[7] <= _io_to_calc8x8_T_33 @[switch.scala 35:34]
    node _io_to_calc8x8_T_34 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.up[8] <= _io_to_calc8x8_T_34 @[switch.scala 35:34]
    node _io_to_calc8x8_T_35 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.up[9] <= _io_to_calc8x8_T_35 @[switch.scala 35:34]
    node _io_to_calc8x8_T_36 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[0] <= _io_to_calc8x8_T_36 @[switch.scala 35:34]
    node _io_to_calc8x8_T_37 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[1] <= _io_to_calc8x8_T_37 @[switch.scala 35:34]
    node _io_to_calc8x8_T_38 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[2] <= _io_to_calc8x8_T_38 @[switch.scala 35:34]
    node _io_to_calc8x8_T_39 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[3] <= _io_to_calc8x8_T_39 @[switch.scala 35:34]
    node _io_to_calc8x8_T_40 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[4] <= _io_to_calc8x8_T_40 @[switch.scala 35:34]
    node _io_to_calc8x8_T_41 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[5] <= _io_to_calc8x8_T_41 @[switch.scala 35:34]
    node _io_to_calc8x8_T_42 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[6] <= _io_to_calc8x8_T_42 @[switch.scala 35:34]
    node _io_to_calc8x8_T_43 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[7] <= _io_to_calc8x8_T_43 @[switch.scala 35:34]
    node _io_to_calc8x8_T_44 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[8] <= _io_to_calc8x8_T_44 @[switch.scala 35:34]
    node _io_to_calc8x8_T_45 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[9] <= _io_to_calc8x8_T_45 @[switch.scala 35:34]
    node _io_to_calc8x8_T_46 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[10] <= _io_to_calc8x8_T_46 @[switch.scala 35:34]
    node _io_to_calc8x8_T_47 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[11] <= _io_to_calc8x8_T_47 @[switch.scala 35:34]
    node _io_to_calc8x8_T_48 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[12] <= _io_to_calc8x8_T_48 @[switch.scala 35:34]
    node _io_to_calc8x8_T_49 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[13] <= _io_to_calc8x8_T_49 @[switch.scala 35:34]
    node _io_to_calc8x8_T_50 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[14] <= _io_to_calc8x8_T_50 @[switch.scala 35:34]
    node _io_to_calc8x8_T_51 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[15] <= _io_to_calc8x8_T_51 @[switch.scala 35:34]
    node _io_to_calc8x8_T_52 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[16] <= _io_to_calc8x8_T_52 @[switch.scala 35:34]
    node _io_to_calc8x8_T_53 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[17] <= _io_to_calc8x8_T_53 @[switch.scala 35:34]
    node _io_to_calc8x8_T_54 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[18] <= _io_to_calc8x8_T_54 @[switch.scala 35:34]
    node _io_to_calc8x8_T_55 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[19] <= _io_to_calc8x8_T_55 @[switch.scala 35:34]
    node _io_to_calc8x8_T_56 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[20] <= _io_to_calc8x8_T_56 @[switch.scala 35:34]
    node _io_to_calc8x8_T_57 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[21] <= _io_to_calc8x8_T_57 @[switch.scala 35:34]
    node _io_to_calc8x8_T_58 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[22] <= _io_to_calc8x8_T_58 @[switch.scala 35:34]
    node _io_to_calc8x8_T_59 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[23] <= _io_to_calc8x8_T_59 @[switch.scala 35:34]
    node _io_to_calc8x8_T_60 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[24] <= _io_to_calc8x8_T_60 @[switch.scala 35:34]
    node _io_to_calc8x8_T_61 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[25] <= _io_to_calc8x8_T_61 @[switch.scala 35:34]
    node _io_to_calc8x8_T_62 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[26] <= _io_to_calc8x8_T_62 @[switch.scala 35:34]
    node _io_to_calc8x8_T_63 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[27] <= _io_to_calc8x8_T_63 @[switch.scala 35:34]
    node _io_to_calc8x8_T_64 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[28] <= _io_to_calc8x8_T_64 @[switch.scala 35:34]
    node _io_to_calc8x8_T_65 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[29] <= _io_to_calc8x8_T_65 @[switch.scala 35:34]
    node _io_to_calc8x8_T_66 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[30] <= _io_to_calc8x8_T_66 @[switch.scala 35:34]
    node _io_to_calc8x8_T_67 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[31] <= _io_to_calc8x8_T_67 @[switch.scala 35:34]
    node _io_to_calc8x8_T_68 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[32] <= _io_to_calc8x8_T_68 @[switch.scala 35:34]
    node _io_to_calc8x8_T_69 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[33] <= _io_to_calc8x8_T_69 @[switch.scala 35:34]
    node _io_to_calc8x8_T_70 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[34] <= _io_to_calc8x8_T_70 @[switch.scala 35:34]
    node _io_to_calc8x8_T_71 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[35] <= _io_to_calc8x8_T_71 @[switch.scala 35:34]
    node _io_to_calc8x8_T_72 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[36] <= _io_to_calc8x8_T_72 @[switch.scala 35:34]
    node _io_to_calc8x8_T_73 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[37] <= _io_to_calc8x8_T_73 @[switch.scala 35:34]
    node _io_to_calc8x8_T_74 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[38] <= _io_to_calc8x8_T_74 @[switch.scala 35:34]
    node _io_to_calc8x8_T_75 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[39] <= _io_to_calc8x8_T_75 @[switch.scala 35:34]
    node _io_to_calc8x8_T_76 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[40] <= _io_to_calc8x8_T_76 @[switch.scala 35:34]
    node _io_to_calc8x8_T_77 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[41] <= _io_to_calc8x8_T_77 @[switch.scala 35:34]
    node _io_to_calc8x8_T_78 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[42] <= _io_to_calc8x8_T_78 @[switch.scala 35:34]
    node _io_to_calc8x8_T_79 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[43] <= _io_to_calc8x8_T_79 @[switch.scala 35:34]
    node _io_to_calc8x8_T_80 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[44] <= _io_to_calc8x8_T_80 @[switch.scala 35:34]
    node _io_to_calc8x8_T_81 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[45] <= _io_to_calc8x8_T_81 @[switch.scala 35:34]
    node _io_to_calc8x8_T_82 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[46] <= _io_to_calc8x8_T_82 @[switch.scala 35:34]
    node _io_to_calc8x8_T_83 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[47] <= _io_to_calc8x8_T_83 @[switch.scala 35:34]
    node _io_to_calc8x8_T_84 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[48] <= _io_to_calc8x8_T_84 @[switch.scala 35:34]
    node _io_to_calc8x8_T_85 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[49] <= _io_to_calc8x8_T_85 @[switch.scala 35:34]
    node _io_to_calc8x8_T_86 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[50] <= _io_to_calc8x8_T_86 @[switch.scala 35:34]
    node _io_to_calc8x8_T_87 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[51] <= _io_to_calc8x8_T_87 @[switch.scala 35:34]
    node _io_to_calc8x8_T_88 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[52] <= _io_to_calc8x8_T_88 @[switch.scala 35:34]
    node _io_to_calc8x8_T_89 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[53] <= _io_to_calc8x8_T_89 @[switch.scala 35:34]
    node _io_to_calc8x8_T_90 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[54] <= _io_to_calc8x8_T_90 @[switch.scala 35:34]
    node _io_to_calc8x8_T_91 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[55] <= _io_to_calc8x8_T_91 @[switch.scala 35:34]
    node _io_to_calc8x8_T_92 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[56] <= _io_to_calc8x8_T_92 @[switch.scala 35:34]
    node _io_to_calc8x8_T_93 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[57] <= _io_to_calc8x8_T_93 @[switch.scala 35:34]
    node _io_to_calc8x8_T_94 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[58] <= _io_to_calc8x8_T_94 @[switch.scala 35:34]
    node _io_to_calc8x8_T_95 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[59] <= _io_to_calc8x8_T_95 @[switch.scala 35:34]
    node _io_to_calc8x8_T_96 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[60] <= _io_to_calc8x8_T_96 @[switch.scala 35:34]
    node _io_to_calc8x8_T_97 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[61] <= _io_to_calc8x8_T_97 @[switch.scala 35:34]
    node _io_to_calc8x8_T_98 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[62] <= _io_to_calc8x8_T_98 @[switch.scala 35:34]
    node _io_to_calc8x8_T_99 = asSInt(UInt<16>("h00")) @[switch.scala 35:34]
    _io_to_calc8x8_WIRE.mat[63] <= _io_to_calc8x8_T_99 @[switch.scala 35:34]
    io.to_calc8x8.right[0] <= _io_to_calc8x8_WIRE.right[0] @[switch.scala 35:19]
    io.to_calc8x8.right[1] <= _io_to_calc8x8_WIRE.right[1] @[switch.scala 35:19]
    io.to_calc8x8.right[2] <= _io_to_calc8x8_WIRE.right[2] @[switch.scala 35:19]
    io.to_calc8x8.right[3] <= _io_to_calc8x8_WIRE.right[3] @[switch.scala 35:19]
    io.to_calc8x8.right[4] <= _io_to_calc8x8_WIRE.right[4] @[switch.scala 35:19]
    io.to_calc8x8.right[5] <= _io_to_calc8x8_WIRE.right[5] @[switch.scala 35:19]
    io.to_calc8x8.right[6] <= _io_to_calc8x8_WIRE.right[6] @[switch.scala 35:19]
    io.to_calc8x8.right[7] <= _io_to_calc8x8_WIRE.right[7] @[switch.scala 35:19]
    io.to_calc8x8.left[0] <= _io_to_calc8x8_WIRE.left[0] @[switch.scala 35:19]
    io.to_calc8x8.left[1] <= _io_to_calc8x8_WIRE.left[1] @[switch.scala 35:19]
    io.to_calc8x8.left[2] <= _io_to_calc8x8_WIRE.left[2] @[switch.scala 35:19]
    io.to_calc8x8.left[3] <= _io_to_calc8x8_WIRE.left[3] @[switch.scala 35:19]
    io.to_calc8x8.left[4] <= _io_to_calc8x8_WIRE.left[4] @[switch.scala 35:19]
    io.to_calc8x8.left[5] <= _io_to_calc8x8_WIRE.left[5] @[switch.scala 35:19]
    io.to_calc8x8.left[6] <= _io_to_calc8x8_WIRE.left[6] @[switch.scala 35:19]
    io.to_calc8x8.left[7] <= _io_to_calc8x8_WIRE.left[7] @[switch.scala 35:19]
    io.to_calc8x8.down[0] <= _io_to_calc8x8_WIRE.down[0] @[switch.scala 35:19]
    io.to_calc8x8.down[1] <= _io_to_calc8x8_WIRE.down[1] @[switch.scala 35:19]
    io.to_calc8x8.down[2] <= _io_to_calc8x8_WIRE.down[2] @[switch.scala 35:19]
    io.to_calc8x8.down[3] <= _io_to_calc8x8_WIRE.down[3] @[switch.scala 35:19]
    io.to_calc8x8.down[4] <= _io_to_calc8x8_WIRE.down[4] @[switch.scala 35:19]
    io.to_calc8x8.down[5] <= _io_to_calc8x8_WIRE.down[5] @[switch.scala 35:19]
    io.to_calc8x8.down[6] <= _io_to_calc8x8_WIRE.down[6] @[switch.scala 35:19]
    io.to_calc8x8.down[7] <= _io_to_calc8x8_WIRE.down[7] @[switch.scala 35:19]
    io.to_calc8x8.down[8] <= _io_to_calc8x8_WIRE.down[8] @[switch.scala 35:19]
    io.to_calc8x8.down[9] <= _io_to_calc8x8_WIRE.down[9] @[switch.scala 35:19]
    io.to_calc8x8.up[0] <= _io_to_calc8x8_WIRE.up[0] @[switch.scala 35:19]
    io.to_calc8x8.up[1] <= _io_to_calc8x8_WIRE.up[1] @[switch.scala 35:19]
    io.to_calc8x8.up[2] <= _io_to_calc8x8_WIRE.up[2] @[switch.scala 35:19]
    io.to_calc8x8.up[3] <= _io_to_calc8x8_WIRE.up[3] @[switch.scala 35:19]
    io.to_calc8x8.up[4] <= _io_to_calc8x8_WIRE.up[4] @[switch.scala 35:19]
    io.to_calc8x8.up[5] <= _io_to_calc8x8_WIRE.up[5] @[switch.scala 35:19]
    io.to_calc8x8.up[6] <= _io_to_calc8x8_WIRE.up[6] @[switch.scala 35:19]
    io.to_calc8x8.up[7] <= _io_to_calc8x8_WIRE.up[7] @[switch.scala 35:19]
    io.to_calc8x8.up[8] <= _io_to_calc8x8_WIRE.up[8] @[switch.scala 35:19]
    io.to_calc8x8.up[9] <= _io_to_calc8x8_WIRE.up[9] @[switch.scala 35:19]
    io.to_calc8x8.mat[0] <= _io_to_calc8x8_WIRE.mat[0] @[switch.scala 35:19]
    io.to_calc8x8.mat[1] <= _io_to_calc8x8_WIRE.mat[1] @[switch.scala 35:19]
    io.to_calc8x8.mat[2] <= _io_to_calc8x8_WIRE.mat[2] @[switch.scala 35:19]
    io.to_calc8x8.mat[3] <= _io_to_calc8x8_WIRE.mat[3] @[switch.scala 35:19]
    io.to_calc8x8.mat[4] <= _io_to_calc8x8_WIRE.mat[4] @[switch.scala 35:19]
    io.to_calc8x8.mat[5] <= _io_to_calc8x8_WIRE.mat[5] @[switch.scala 35:19]
    io.to_calc8x8.mat[6] <= _io_to_calc8x8_WIRE.mat[6] @[switch.scala 35:19]
    io.to_calc8x8.mat[7] <= _io_to_calc8x8_WIRE.mat[7] @[switch.scala 35:19]
    io.to_calc8x8.mat[8] <= _io_to_calc8x8_WIRE.mat[8] @[switch.scala 35:19]
    io.to_calc8x8.mat[9] <= _io_to_calc8x8_WIRE.mat[9] @[switch.scala 35:19]
    io.to_calc8x8.mat[10] <= _io_to_calc8x8_WIRE.mat[10] @[switch.scala 35:19]
    io.to_calc8x8.mat[11] <= _io_to_calc8x8_WIRE.mat[11] @[switch.scala 35:19]
    io.to_calc8x8.mat[12] <= _io_to_calc8x8_WIRE.mat[12] @[switch.scala 35:19]
    io.to_calc8x8.mat[13] <= _io_to_calc8x8_WIRE.mat[13] @[switch.scala 35:19]
    io.to_calc8x8.mat[14] <= _io_to_calc8x8_WIRE.mat[14] @[switch.scala 35:19]
    io.to_calc8x8.mat[15] <= _io_to_calc8x8_WIRE.mat[15] @[switch.scala 35:19]
    io.to_calc8x8.mat[16] <= _io_to_calc8x8_WIRE.mat[16] @[switch.scala 35:19]
    io.to_calc8x8.mat[17] <= _io_to_calc8x8_WIRE.mat[17] @[switch.scala 35:19]
    io.to_calc8x8.mat[18] <= _io_to_calc8x8_WIRE.mat[18] @[switch.scala 35:19]
    io.to_calc8x8.mat[19] <= _io_to_calc8x8_WIRE.mat[19] @[switch.scala 35:19]
    io.to_calc8x8.mat[20] <= _io_to_calc8x8_WIRE.mat[20] @[switch.scala 35:19]
    io.to_calc8x8.mat[21] <= _io_to_calc8x8_WIRE.mat[21] @[switch.scala 35:19]
    io.to_calc8x8.mat[22] <= _io_to_calc8x8_WIRE.mat[22] @[switch.scala 35:19]
    io.to_calc8x8.mat[23] <= _io_to_calc8x8_WIRE.mat[23] @[switch.scala 35:19]
    io.to_calc8x8.mat[24] <= _io_to_calc8x8_WIRE.mat[24] @[switch.scala 35:19]
    io.to_calc8x8.mat[25] <= _io_to_calc8x8_WIRE.mat[25] @[switch.scala 35:19]
    io.to_calc8x8.mat[26] <= _io_to_calc8x8_WIRE.mat[26] @[switch.scala 35:19]
    io.to_calc8x8.mat[27] <= _io_to_calc8x8_WIRE.mat[27] @[switch.scala 35:19]
    io.to_calc8x8.mat[28] <= _io_to_calc8x8_WIRE.mat[28] @[switch.scala 35:19]
    io.to_calc8x8.mat[29] <= _io_to_calc8x8_WIRE.mat[29] @[switch.scala 35:19]
    io.to_calc8x8.mat[30] <= _io_to_calc8x8_WIRE.mat[30] @[switch.scala 35:19]
    io.to_calc8x8.mat[31] <= _io_to_calc8x8_WIRE.mat[31] @[switch.scala 35:19]
    io.to_calc8x8.mat[32] <= _io_to_calc8x8_WIRE.mat[32] @[switch.scala 35:19]
    io.to_calc8x8.mat[33] <= _io_to_calc8x8_WIRE.mat[33] @[switch.scala 35:19]
    io.to_calc8x8.mat[34] <= _io_to_calc8x8_WIRE.mat[34] @[switch.scala 35:19]
    io.to_calc8x8.mat[35] <= _io_to_calc8x8_WIRE.mat[35] @[switch.scala 35:19]
    io.to_calc8x8.mat[36] <= _io_to_calc8x8_WIRE.mat[36] @[switch.scala 35:19]
    io.to_calc8x8.mat[37] <= _io_to_calc8x8_WIRE.mat[37] @[switch.scala 35:19]
    io.to_calc8x8.mat[38] <= _io_to_calc8x8_WIRE.mat[38] @[switch.scala 35:19]
    io.to_calc8x8.mat[39] <= _io_to_calc8x8_WIRE.mat[39] @[switch.scala 35:19]
    io.to_calc8x8.mat[40] <= _io_to_calc8x8_WIRE.mat[40] @[switch.scala 35:19]
    io.to_calc8x8.mat[41] <= _io_to_calc8x8_WIRE.mat[41] @[switch.scala 35:19]
    io.to_calc8x8.mat[42] <= _io_to_calc8x8_WIRE.mat[42] @[switch.scala 35:19]
    io.to_calc8x8.mat[43] <= _io_to_calc8x8_WIRE.mat[43] @[switch.scala 35:19]
    io.to_calc8x8.mat[44] <= _io_to_calc8x8_WIRE.mat[44] @[switch.scala 35:19]
    io.to_calc8x8.mat[45] <= _io_to_calc8x8_WIRE.mat[45] @[switch.scala 35:19]
    io.to_calc8x8.mat[46] <= _io_to_calc8x8_WIRE.mat[46] @[switch.scala 35:19]
    io.to_calc8x8.mat[47] <= _io_to_calc8x8_WIRE.mat[47] @[switch.scala 35:19]
    io.to_calc8x8.mat[48] <= _io_to_calc8x8_WIRE.mat[48] @[switch.scala 35:19]
    io.to_calc8x8.mat[49] <= _io_to_calc8x8_WIRE.mat[49] @[switch.scala 35:19]
    io.to_calc8x8.mat[50] <= _io_to_calc8x8_WIRE.mat[50] @[switch.scala 35:19]
    io.to_calc8x8.mat[51] <= _io_to_calc8x8_WIRE.mat[51] @[switch.scala 35:19]
    io.to_calc8x8.mat[52] <= _io_to_calc8x8_WIRE.mat[52] @[switch.scala 35:19]
    io.to_calc8x8.mat[53] <= _io_to_calc8x8_WIRE.mat[53] @[switch.scala 35:19]
    io.to_calc8x8.mat[54] <= _io_to_calc8x8_WIRE.mat[54] @[switch.scala 35:19]
    io.to_calc8x8.mat[55] <= _io_to_calc8x8_WIRE.mat[55] @[switch.scala 35:19]
    io.to_calc8x8.mat[56] <= _io_to_calc8x8_WIRE.mat[56] @[switch.scala 35:19]
    io.to_calc8x8.mat[57] <= _io_to_calc8x8_WIRE.mat[57] @[switch.scala 35:19]
    io.to_calc8x8.mat[58] <= _io_to_calc8x8_WIRE.mat[58] @[switch.scala 35:19]
    io.to_calc8x8.mat[59] <= _io_to_calc8x8_WIRE.mat[59] @[switch.scala 35:19]
    io.to_calc8x8.mat[60] <= _io_to_calc8x8_WIRE.mat[60] @[switch.scala 35:19]
    io.to_calc8x8.mat[61] <= _io_to_calc8x8_WIRE.mat[61] @[switch.scala 35:19]
    io.to_calc8x8.mat[62] <= _io_to_calc8x8_WIRE.mat[62] @[switch.scala 35:19]
    io.to_calc8x8.mat[63] <= _io_to_calc8x8_WIRE.mat[63] @[switch.scala 35:19]
    wire _WIRE : {real : SInt<16>[16]}[4] @[switch.scala 36:33]
    node _T = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[0] <= _T @[switch.scala 36:33]
    node _T_1 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[1] <= _T_1 @[switch.scala 36:33]
    node _T_2 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[2] <= _T_2 @[switch.scala 36:33]
    node _T_3 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[3] <= _T_3 @[switch.scala 36:33]
    node _T_4 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[4] <= _T_4 @[switch.scala 36:33]
    node _T_5 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[5] <= _T_5 @[switch.scala 36:33]
    node _T_6 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[6] <= _T_6 @[switch.scala 36:33]
    node _T_7 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[7] <= _T_7 @[switch.scala 36:33]
    node _T_8 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[8] <= _T_8 @[switch.scala 36:33]
    node _T_9 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[9] <= _T_9 @[switch.scala 36:33]
    node _T_10 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[10] <= _T_10 @[switch.scala 36:33]
    node _T_11 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[11] <= _T_11 @[switch.scala 36:33]
    node _T_12 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[12] <= _T_12 @[switch.scala 36:33]
    node _T_13 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[13] <= _T_13 @[switch.scala 36:33]
    node _T_14 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[14] <= _T_14 @[switch.scala 36:33]
    node _T_15 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[0].real[15] <= _T_15 @[switch.scala 36:33]
    node _T_16 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[0] <= _T_16 @[switch.scala 36:33]
    node _T_17 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[1] <= _T_17 @[switch.scala 36:33]
    node _T_18 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[2] <= _T_18 @[switch.scala 36:33]
    node _T_19 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[3] <= _T_19 @[switch.scala 36:33]
    node _T_20 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[4] <= _T_20 @[switch.scala 36:33]
    node _T_21 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[5] <= _T_21 @[switch.scala 36:33]
    node _T_22 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[6] <= _T_22 @[switch.scala 36:33]
    node _T_23 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[7] <= _T_23 @[switch.scala 36:33]
    node _T_24 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[8] <= _T_24 @[switch.scala 36:33]
    node _T_25 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[9] <= _T_25 @[switch.scala 36:33]
    node _T_26 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[10] <= _T_26 @[switch.scala 36:33]
    node _T_27 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[11] <= _T_27 @[switch.scala 36:33]
    node _T_28 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[12] <= _T_28 @[switch.scala 36:33]
    node _T_29 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[13] <= _T_29 @[switch.scala 36:33]
    node _T_30 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[14] <= _T_30 @[switch.scala 36:33]
    node _T_31 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[1].real[15] <= _T_31 @[switch.scala 36:33]
    node _T_32 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[0] <= _T_32 @[switch.scala 36:33]
    node _T_33 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[1] <= _T_33 @[switch.scala 36:33]
    node _T_34 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[2] <= _T_34 @[switch.scala 36:33]
    node _T_35 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[3] <= _T_35 @[switch.scala 36:33]
    node _T_36 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[4] <= _T_36 @[switch.scala 36:33]
    node _T_37 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[5] <= _T_37 @[switch.scala 36:33]
    node _T_38 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[6] <= _T_38 @[switch.scala 36:33]
    node _T_39 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[7] <= _T_39 @[switch.scala 36:33]
    node _T_40 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[8] <= _T_40 @[switch.scala 36:33]
    node _T_41 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[9] <= _T_41 @[switch.scala 36:33]
    node _T_42 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[10] <= _T_42 @[switch.scala 36:33]
    node _T_43 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[11] <= _T_43 @[switch.scala 36:33]
    node _T_44 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[12] <= _T_44 @[switch.scala 36:33]
    node _T_45 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[13] <= _T_45 @[switch.scala 36:33]
    node _T_46 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[14] <= _T_46 @[switch.scala 36:33]
    node _T_47 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[2].real[15] <= _T_47 @[switch.scala 36:33]
    node _T_48 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[0] <= _T_48 @[switch.scala 36:33]
    node _T_49 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[1] <= _T_49 @[switch.scala 36:33]
    node _T_50 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[2] <= _T_50 @[switch.scala 36:33]
    node _T_51 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[3] <= _T_51 @[switch.scala 36:33]
    node _T_52 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[4] <= _T_52 @[switch.scala 36:33]
    node _T_53 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[5] <= _T_53 @[switch.scala 36:33]
    node _T_54 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[6] <= _T_54 @[switch.scala 36:33]
    node _T_55 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[7] <= _T_55 @[switch.scala 36:33]
    node _T_56 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[8] <= _T_56 @[switch.scala 36:33]
    node _T_57 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[9] <= _T_57 @[switch.scala 36:33]
    node _T_58 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[10] <= _T_58 @[switch.scala 36:33]
    node _T_59 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[11] <= _T_59 @[switch.scala 36:33]
    node _T_60 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[12] <= _T_60 @[switch.scala 36:33]
    node _T_61 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[13] <= _T_61 @[switch.scala 36:33]
    node _T_62 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[14] <= _T_62 @[switch.scala 36:33]
    node _T_63 = asSInt(UInt<16>("h00")) @[switch.scala 36:33]
    _WIRE[3].real[15] <= _T_63 @[switch.scala 36:33]
    io.to_weight[0].real[0] <= _WIRE[0].real[0] @[switch.scala 36:18]
    io.to_weight[0].real[1] <= _WIRE[0].real[1] @[switch.scala 36:18]
    io.to_weight[0].real[2] <= _WIRE[0].real[2] @[switch.scala 36:18]
    io.to_weight[0].real[3] <= _WIRE[0].real[3] @[switch.scala 36:18]
    io.to_weight[0].real[4] <= _WIRE[0].real[4] @[switch.scala 36:18]
    io.to_weight[0].real[5] <= _WIRE[0].real[5] @[switch.scala 36:18]
    io.to_weight[0].real[6] <= _WIRE[0].real[6] @[switch.scala 36:18]
    io.to_weight[0].real[7] <= _WIRE[0].real[7] @[switch.scala 36:18]
    io.to_weight[0].real[8] <= _WIRE[0].real[8] @[switch.scala 36:18]
    io.to_weight[0].real[9] <= _WIRE[0].real[9] @[switch.scala 36:18]
    io.to_weight[0].real[10] <= _WIRE[0].real[10] @[switch.scala 36:18]
    io.to_weight[0].real[11] <= _WIRE[0].real[11] @[switch.scala 36:18]
    io.to_weight[0].real[12] <= _WIRE[0].real[12] @[switch.scala 36:18]
    io.to_weight[0].real[13] <= _WIRE[0].real[13] @[switch.scala 36:18]
    io.to_weight[0].real[14] <= _WIRE[0].real[14] @[switch.scala 36:18]
    io.to_weight[0].real[15] <= _WIRE[0].real[15] @[switch.scala 36:18]
    io.to_weight[1].real[0] <= _WIRE[1].real[0] @[switch.scala 36:18]
    io.to_weight[1].real[1] <= _WIRE[1].real[1] @[switch.scala 36:18]
    io.to_weight[1].real[2] <= _WIRE[1].real[2] @[switch.scala 36:18]
    io.to_weight[1].real[3] <= _WIRE[1].real[3] @[switch.scala 36:18]
    io.to_weight[1].real[4] <= _WIRE[1].real[4] @[switch.scala 36:18]
    io.to_weight[1].real[5] <= _WIRE[1].real[5] @[switch.scala 36:18]
    io.to_weight[1].real[6] <= _WIRE[1].real[6] @[switch.scala 36:18]
    io.to_weight[1].real[7] <= _WIRE[1].real[7] @[switch.scala 36:18]
    io.to_weight[1].real[8] <= _WIRE[1].real[8] @[switch.scala 36:18]
    io.to_weight[1].real[9] <= _WIRE[1].real[9] @[switch.scala 36:18]
    io.to_weight[1].real[10] <= _WIRE[1].real[10] @[switch.scala 36:18]
    io.to_weight[1].real[11] <= _WIRE[1].real[11] @[switch.scala 36:18]
    io.to_weight[1].real[12] <= _WIRE[1].real[12] @[switch.scala 36:18]
    io.to_weight[1].real[13] <= _WIRE[1].real[13] @[switch.scala 36:18]
    io.to_weight[1].real[14] <= _WIRE[1].real[14] @[switch.scala 36:18]
    io.to_weight[1].real[15] <= _WIRE[1].real[15] @[switch.scala 36:18]
    io.to_weight[2].real[0] <= _WIRE[2].real[0] @[switch.scala 36:18]
    io.to_weight[2].real[1] <= _WIRE[2].real[1] @[switch.scala 36:18]
    io.to_weight[2].real[2] <= _WIRE[2].real[2] @[switch.scala 36:18]
    io.to_weight[2].real[3] <= _WIRE[2].real[3] @[switch.scala 36:18]
    io.to_weight[2].real[4] <= _WIRE[2].real[4] @[switch.scala 36:18]
    io.to_weight[2].real[5] <= _WIRE[2].real[5] @[switch.scala 36:18]
    io.to_weight[2].real[6] <= _WIRE[2].real[6] @[switch.scala 36:18]
    io.to_weight[2].real[7] <= _WIRE[2].real[7] @[switch.scala 36:18]
    io.to_weight[2].real[8] <= _WIRE[2].real[8] @[switch.scala 36:18]
    io.to_weight[2].real[9] <= _WIRE[2].real[9] @[switch.scala 36:18]
    io.to_weight[2].real[10] <= _WIRE[2].real[10] @[switch.scala 36:18]
    io.to_weight[2].real[11] <= _WIRE[2].real[11] @[switch.scala 36:18]
    io.to_weight[2].real[12] <= _WIRE[2].real[12] @[switch.scala 36:18]
    io.to_weight[2].real[13] <= _WIRE[2].real[13] @[switch.scala 36:18]
    io.to_weight[2].real[14] <= _WIRE[2].real[14] @[switch.scala 36:18]
    io.to_weight[2].real[15] <= _WIRE[2].real[15] @[switch.scala 36:18]
    io.to_weight[3].real[0] <= _WIRE[3].real[0] @[switch.scala 36:18]
    io.to_weight[3].real[1] <= _WIRE[3].real[1] @[switch.scala 36:18]
    io.to_weight[3].real[2] <= _WIRE[3].real[2] @[switch.scala 36:18]
    io.to_weight[3].real[3] <= _WIRE[3].real[3] @[switch.scala 36:18]
    io.to_weight[3].real[4] <= _WIRE[3].real[4] @[switch.scala 36:18]
    io.to_weight[3].real[5] <= _WIRE[3].real[5] @[switch.scala 36:18]
    io.to_weight[3].real[6] <= _WIRE[3].real[6] @[switch.scala 36:18]
    io.to_weight[3].real[7] <= _WIRE[3].real[7] @[switch.scala 36:18]
    io.to_weight[3].real[8] <= _WIRE[3].real[8] @[switch.scala 36:18]
    io.to_weight[3].real[9] <= _WIRE[3].real[9] @[switch.scala 36:18]
    io.to_weight[3].real[10] <= _WIRE[3].real[10] @[switch.scala 36:18]
    io.to_weight[3].real[11] <= _WIRE[3].real[11] @[switch.scala 36:18]
    io.to_weight[3].real[12] <= _WIRE[3].real[12] @[switch.scala 36:18]
    io.to_weight[3].real[13] <= _WIRE[3].real[13] @[switch.scala 36:18]
    io.to_weight[3].real[14] <= _WIRE[3].real[14] @[switch.scala 36:18]
    io.to_weight[3].real[15] <= _WIRE[3].real[15] @[switch.scala 36:18]
    wire _io_to_copy_WIRE : {mat : SInt<16>[64]} @[switch.scala 37:31]
    node _io_to_copy_T = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[0] <= _io_to_copy_T @[switch.scala 37:31]
    node _io_to_copy_T_1 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[1] <= _io_to_copy_T_1 @[switch.scala 37:31]
    node _io_to_copy_T_2 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[2] <= _io_to_copy_T_2 @[switch.scala 37:31]
    node _io_to_copy_T_3 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[3] <= _io_to_copy_T_3 @[switch.scala 37:31]
    node _io_to_copy_T_4 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[4] <= _io_to_copy_T_4 @[switch.scala 37:31]
    node _io_to_copy_T_5 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[5] <= _io_to_copy_T_5 @[switch.scala 37:31]
    node _io_to_copy_T_6 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[6] <= _io_to_copy_T_6 @[switch.scala 37:31]
    node _io_to_copy_T_7 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[7] <= _io_to_copy_T_7 @[switch.scala 37:31]
    node _io_to_copy_T_8 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[8] <= _io_to_copy_T_8 @[switch.scala 37:31]
    node _io_to_copy_T_9 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[9] <= _io_to_copy_T_9 @[switch.scala 37:31]
    node _io_to_copy_T_10 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[10] <= _io_to_copy_T_10 @[switch.scala 37:31]
    node _io_to_copy_T_11 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[11] <= _io_to_copy_T_11 @[switch.scala 37:31]
    node _io_to_copy_T_12 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[12] <= _io_to_copy_T_12 @[switch.scala 37:31]
    node _io_to_copy_T_13 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[13] <= _io_to_copy_T_13 @[switch.scala 37:31]
    node _io_to_copy_T_14 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[14] <= _io_to_copy_T_14 @[switch.scala 37:31]
    node _io_to_copy_T_15 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[15] <= _io_to_copy_T_15 @[switch.scala 37:31]
    node _io_to_copy_T_16 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[16] <= _io_to_copy_T_16 @[switch.scala 37:31]
    node _io_to_copy_T_17 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[17] <= _io_to_copy_T_17 @[switch.scala 37:31]
    node _io_to_copy_T_18 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[18] <= _io_to_copy_T_18 @[switch.scala 37:31]
    node _io_to_copy_T_19 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[19] <= _io_to_copy_T_19 @[switch.scala 37:31]
    node _io_to_copy_T_20 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[20] <= _io_to_copy_T_20 @[switch.scala 37:31]
    node _io_to_copy_T_21 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[21] <= _io_to_copy_T_21 @[switch.scala 37:31]
    node _io_to_copy_T_22 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[22] <= _io_to_copy_T_22 @[switch.scala 37:31]
    node _io_to_copy_T_23 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[23] <= _io_to_copy_T_23 @[switch.scala 37:31]
    node _io_to_copy_T_24 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[24] <= _io_to_copy_T_24 @[switch.scala 37:31]
    node _io_to_copy_T_25 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[25] <= _io_to_copy_T_25 @[switch.scala 37:31]
    node _io_to_copy_T_26 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[26] <= _io_to_copy_T_26 @[switch.scala 37:31]
    node _io_to_copy_T_27 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[27] <= _io_to_copy_T_27 @[switch.scala 37:31]
    node _io_to_copy_T_28 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[28] <= _io_to_copy_T_28 @[switch.scala 37:31]
    node _io_to_copy_T_29 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[29] <= _io_to_copy_T_29 @[switch.scala 37:31]
    node _io_to_copy_T_30 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[30] <= _io_to_copy_T_30 @[switch.scala 37:31]
    node _io_to_copy_T_31 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[31] <= _io_to_copy_T_31 @[switch.scala 37:31]
    node _io_to_copy_T_32 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[32] <= _io_to_copy_T_32 @[switch.scala 37:31]
    node _io_to_copy_T_33 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[33] <= _io_to_copy_T_33 @[switch.scala 37:31]
    node _io_to_copy_T_34 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[34] <= _io_to_copy_T_34 @[switch.scala 37:31]
    node _io_to_copy_T_35 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[35] <= _io_to_copy_T_35 @[switch.scala 37:31]
    node _io_to_copy_T_36 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[36] <= _io_to_copy_T_36 @[switch.scala 37:31]
    node _io_to_copy_T_37 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[37] <= _io_to_copy_T_37 @[switch.scala 37:31]
    node _io_to_copy_T_38 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[38] <= _io_to_copy_T_38 @[switch.scala 37:31]
    node _io_to_copy_T_39 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[39] <= _io_to_copy_T_39 @[switch.scala 37:31]
    node _io_to_copy_T_40 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[40] <= _io_to_copy_T_40 @[switch.scala 37:31]
    node _io_to_copy_T_41 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[41] <= _io_to_copy_T_41 @[switch.scala 37:31]
    node _io_to_copy_T_42 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[42] <= _io_to_copy_T_42 @[switch.scala 37:31]
    node _io_to_copy_T_43 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[43] <= _io_to_copy_T_43 @[switch.scala 37:31]
    node _io_to_copy_T_44 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[44] <= _io_to_copy_T_44 @[switch.scala 37:31]
    node _io_to_copy_T_45 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[45] <= _io_to_copy_T_45 @[switch.scala 37:31]
    node _io_to_copy_T_46 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[46] <= _io_to_copy_T_46 @[switch.scala 37:31]
    node _io_to_copy_T_47 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[47] <= _io_to_copy_T_47 @[switch.scala 37:31]
    node _io_to_copy_T_48 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[48] <= _io_to_copy_T_48 @[switch.scala 37:31]
    node _io_to_copy_T_49 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[49] <= _io_to_copy_T_49 @[switch.scala 37:31]
    node _io_to_copy_T_50 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[50] <= _io_to_copy_T_50 @[switch.scala 37:31]
    node _io_to_copy_T_51 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[51] <= _io_to_copy_T_51 @[switch.scala 37:31]
    node _io_to_copy_T_52 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[52] <= _io_to_copy_T_52 @[switch.scala 37:31]
    node _io_to_copy_T_53 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[53] <= _io_to_copy_T_53 @[switch.scala 37:31]
    node _io_to_copy_T_54 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[54] <= _io_to_copy_T_54 @[switch.scala 37:31]
    node _io_to_copy_T_55 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[55] <= _io_to_copy_T_55 @[switch.scala 37:31]
    node _io_to_copy_T_56 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[56] <= _io_to_copy_T_56 @[switch.scala 37:31]
    node _io_to_copy_T_57 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[57] <= _io_to_copy_T_57 @[switch.scala 37:31]
    node _io_to_copy_T_58 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[58] <= _io_to_copy_T_58 @[switch.scala 37:31]
    node _io_to_copy_T_59 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[59] <= _io_to_copy_T_59 @[switch.scala 37:31]
    node _io_to_copy_T_60 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[60] <= _io_to_copy_T_60 @[switch.scala 37:31]
    node _io_to_copy_T_61 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[61] <= _io_to_copy_T_61 @[switch.scala 37:31]
    node _io_to_copy_T_62 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[62] <= _io_to_copy_T_62 @[switch.scala 37:31]
    node _io_to_copy_T_63 = asSInt(UInt<16>("h00")) @[switch.scala 37:31]
    _io_to_copy_WIRE.mat[63] <= _io_to_copy_T_63 @[switch.scala 37:31]
    io.to_copy.mat[0] <= _io_to_copy_WIRE.mat[0] @[switch.scala 37:16]
    io.to_copy.mat[1] <= _io_to_copy_WIRE.mat[1] @[switch.scala 37:16]
    io.to_copy.mat[2] <= _io_to_copy_WIRE.mat[2] @[switch.scala 37:16]
    io.to_copy.mat[3] <= _io_to_copy_WIRE.mat[3] @[switch.scala 37:16]
    io.to_copy.mat[4] <= _io_to_copy_WIRE.mat[4] @[switch.scala 37:16]
    io.to_copy.mat[5] <= _io_to_copy_WIRE.mat[5] @[switch.scala 37:16]
    io.to_copy.mat[6] <= _io_to_copy_WIRE.mat[6] @[switch.scala 37:16]
    io.to_copy.mat[7] <= _io_to_copy_WIRE.mat[7] @[switch.scala 37:16]
    io.to_copy.mat[8] <= _io_to_copy_WIRE.mat[8] @[switch.scala 37:16]
    io.to_copy.mat[9] <= _io_to_copy_WIRE.mat[9] @[switch.scala 37:16]
    io.to_copy.mat[10] <= _io_to_copy_WIRE.mat[10] @[switch.scala 37:16]
    io.to_copy.mat[11] <= _io_to_copy_WIRE.mat[11] @[switch.scala 37:16]
    io.to_copy.mat[12] <= _io_to_copy_WIRE.mat[12] @[switch.scala 37:16]
    io.to_copy.mat[13] <= _io_to_copy_WIRE.mat[13] @[switch.scala 37:16]
    io.to_copy.mat[14] <= _io_to_copy_WIRE.mat[14] @[switch.scala 37:16]
    io.to_copy.mat[15] <= _io_to_copy_WIRE.mat[15] @[switch.scala 37:16]
    io.to_copy.mat[16] <= _io_to_copy_WIRE.mat[16] @[switch.scala 37:16]
    io.to_copy.mat[17] <= _io_to_copy_WIRE.mat[17] @[switch.scala 37:16]
    io.to_copy.mat[18] <= _io_to_copy_WIRE.mat[18] @[switch.scala 37:16]
    io.to_copy.mat[19] <= _io_to_copy_WIRE.mat[19] @[switch.scala 37:16]
    io.to_copy.mat[20] <= _io_to_copy_WIRE.mat[20] @[switch.scala 37:16]
    io.to_copy.mat[21] <= _io_to_copy_WIRE.mat[21] @[switch.scala 37:16]
    io.to_copy.mat[22] <= _io_to_copy_WIRE.mat[22] @[switch.scala 37:16]
    io.to_copy.mat[23] <= _io_to_copy_WIRE.mat[23] @[switch.scala 37:16]
    io.to_copy.mat[24] <= _io_to_copy_WIRE.mat[24] @[switch.scala 37:16]
    io.to_copy.mat[25] <= _io_to_copy_WIRE.mat[25] @[switch.scala 37:16]
    io.to_copy.mat[26] <= _io_to_copy_WIRE.mat[26] @[switch.scala 37:16]
    io.to_copy.mat[27] <= _io_to_copy_WIRE.mat[27] @[switch.scala 37:16]
    io.to_copy.mat[28] <= _io_to_copy_WIRE.mat[28] @[switch.scala 37:16]
    io.to_copy.mat[29] <= _io_to_copy_WIRE.mat[29] @[switch.scala 37:16]
    io.to_copy.mat[30] <= _io_to_copy_WIRE.mat[30] @[switch.scala 37:16]
    io.to_copy.mat[31] <= _io_to_copy_WIRE.mat[31] @[switch.scala 37:16]
    io.to_copy.mat[32] <= _io_to_copy_WIRE.mat[32] @[switch.scala 37:16]
    io.to_copy.mat[33] <= _io_to_copy_WIRE.mat[33] @[switch.scala 37:16]
    io.to_copy.mat[34] <= _io_to_copy_WIRE.mat[34] @[switch.scala 37:16]
    io.to_copy.mat[35] <= _io_to_copy_WIRE.mat[35] @[switch.scala 37:16]
    io.to_copy.mat[36] <= _io_to_copy_WIRE.mat[36] @[switch.scala 37:16]
    io.to_copy.mat[37] <= _io_to_copy_WIRE.mat[37] @[switch.scala 37:16]
    io.to_copy.mat[38] <= _io_to_copy_WIRE.mat[38] @[switch.scala 37:16]
    io.to_copy.mat[39] <= _io_to_copy_WIRE.mat[39] @[switch.scala 37:16]
    io.to_copy.mat[40] <= _io_to_copy_WIRE.mat[40] @[switch.scala 37:16]
    io.to_copy.mat[41] <= _io_to_copy_WIRE.mat[41] @[switch.scala 37:16]
    io.to_copy.mat[42] <= _io_to_copy_WIRE.mat[42] @[switch.scala 37:16]
    io.to_copy.mat[43] <= _io_to_copy_WIRE.mat[43] @[switch.scala 37:16]
    io.to_copy.mat[44] <= _io_to_copy_WIRE.mat[44] @[switch.scala 37:16]
    io.to_copy.mat[45] <= _io_to_copy_WIRE.mat[45] @[switch.scala 37:16]
    io.to_copy.mat[46] <= _io_to_copy_WIRE.mat[46] @[switch.scala 37:16]
    io.to_copy.mat[47] <= _io_to_copy_WIRE.mat[47] @[switch.scala 37:16]
    io.to_copy.mat[48] <= _io_to_copy_WIRE.mat[48] @[switch.scala 37:16]
    io.to_copy.mat[49] <= _io_to_copy_WIRE.mat[49] @[switch.scala 37:16]
    io.to_copy.mat[50] <= _io_to_copy_WIRE.mat[50] @[switch.scala 37:16]
    io.to_copy.mat[51] <= _io_to_copy_WIRE.mat[51] @[switch.scala 37:16]
    io.to_copy.mat[52] <= _io_to_copy_WIRE.mat[52] @[switch.scala 37:16]
    io.to_copy.mat[53] <= _io_to_copy_WIRE.mat[53] @[switch.scala 37:16]
    io.to_copy.mat[54] <= _io_to_copy_WIRE.mat[54] @[switch.scala 37:16]
    io.to_copy.mat[55] <= _io_to_copy_WIRE.mat[55] @[switch.scala 37:16]
    io.to_copy.mat[56] <= _io_to_copy_WIRE.mat[56] @[switch.scala 37:16]
    io.to_copy.mat[57] <= _io_to_copy_WIRE.mat[57] @[switch.scala 37:16]
    io.to_copy.mat[58] <= _io_to_copy_WIRE.mat[58] @[switch.scala 37:16]
    io.to_copy.mat[59] <= _io_to_copy_WIRE.mat[59] @[switch.scala 37:16]
    io.to_copy.mat[60] <= _io_to_copy_WIRE.mat[60] @[switch.scala 37:16]
    io.to_copy.mat[61] <= _io_to_copy_WIRE.mat[61] @[switch.scala 37:16]
    io.to_copy.mat[62] <= _io_to_copy_WIRE.mat[62] @[switch.scala 37:16]
    io.to_copy.mat[63] <= _io_to_copy_WIRE.mat[63] @[switch.scala 37:16]
    when io.flag_job : @[switch.scala 39:22]
      job_type <= io.job @[switch.scala 40:18]
      state.cend <= UInt<1>("h01") @[utils.scala 22:14]
      state.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      skip @[switch.scala 39:22]
    else : @[switch.scala 42:28]
      when io.valid_in : @[switch.scala 42:28]
        node _T_64 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
        node _T_65 = asUInt(job_type) @[Conditional.scala 37:39]
        node _T_66 = eq(_T_64, _T_65) @[Conditional.scala 37:30]
        when _T_66 : @[Conditional.scala 40:58]
          io.to_calc8x8.right[0] <= io.from.right[0] @[switch.scala 45:31]
          io.to_calc8x8.right[1] <= io.from.right[1] @[switch.scala 45:31]
          io.to_calc8x8.right[2] <= io.from.right[2] @[switch.scala 45:31]
          io.to_calc8x8.right[3] <= io.from.right[3] @[switch.scala 45:31]
          io.to_calc8x8.right[4] <= io.from.right[4] @[switch.scala 45:31]
          io.to_calc8x8.right[5] <= io.from.right[5] @[switch.scala 45:31]
          io.to_calc8x8.right[6] <= io.from.right[6] @[switch.scala 45:31]
          io.to_calc8x8.right[7] <= io.from.right[7] @[switch.scala 45:31]
          io.to_calc8x8.left[0] <= io.from.left[0] @[switch.scala 45:31]
          io.to_calc8x8.left[1] <= io.from.left[1] @[switch.scala 45:31]
          io.to_calc8x8.left[2] <= io.from.left[2] @[switch.scala 45:31]
          io.to_calc8x8.left[3] <= io.from.left[3] @[switch.scala 45:31]
          io.to_calc8x8.left[4] <= io.from.left[4] @[switch.scala 45:31]
          io.to_calc8x8.left[5] <= io.from.left[5] @[switch.scala 45:31]
          io.to_calc8x8.left[6] <= io.from.left[6] @[switch.scala 45:31]
          io.to_calc8x8.left[7] <= io.from.left[7] @[switch.scala 45:31]
          io.to_calc8x8.down[0] <= io.from.down[0] @[switch.scala 45:31]
          io.to_calc8x8.down[1] <= io.from.down[1] @[switch.scala 45:31]
          io.to_calc8x8.down[2] <= io.from.down[2] @[switch.scala 45:31]
          io.to_calc8x8.down[3] <= io.from.down[3] @[switch.scala 45:31]
          io.to_calc8x8.down[4] <= io.from.down[4] @[switch.scala 45:31]
          io.to_calc8x8.down[5] <= io.from.down[5] @[switch.scala 45:31]
          io.to_calc8x8.down[6] <= io.from.down[6] @[switch.scala 45:31]
          io.to_calc8x8.down[7] <= io.from.down[7] @[switch.scala 45:31]
          io.to_calc8x8.down[8] <= io.from.down[8] @[switch.scala 45:31]
          io.to_calc8x8.down[9] <= io.from.down[9] @[switch.scala 45:31]
          io.to_calc8x8.up[0] <= io.from.up[0] @[switch.scala 45:31]
          io.to_calc8x8.up[1] <= io.from.up[1] @[switch.scala 45:31]
          io.to_calc8x8.up[2] <= io.from.up[2] @[switch.scala 45:31]
          io.to_calc8x8.up[3] <= io.from.up[3] @[switch.scala 45:31]
          io.to_calc8x8.up[4] <= io.from.up[4] @[switch.scala 45:31]
          io.to_calc8x8.up[5] <= io.from.up[5] @[switch.scala 45:31]
          io.to_calc8x8.up[6] <= io.from.up[6] @[switch.scala 45:31]
          io.to_calc8x8.up[7] <= io.from.up[7] @[switch.scala 45:31]
          io.to_calc8x8.up[8] <= io.from.up[8] @[switch.scala 45:31]
          io.to_calc8x8.up[9] <= io.from.up[9] @[switch.scala 45:31]
          io.to_calc8x8.mat[0] <= io.from.mat[0] @[switch.scala 45:31]
          io.to_calc8x8.mat[1] <= io.from.mat[1] @[switch.scala 45:31]
          io.to_calc8x8.mat[2] <= io.from.mat[2] @[switch.scala 45:31]
          io.to_calc8x8.mat[3] <= io.from.mat[3] @[switch.scala 45:31]
          io.to_calc8x8.mat[4] <= io.from.mat[4] @[switch.scala 45:31]
          io.to_calc8x8.mat[5] <= io.from.mat[5] @[switch.scala 45:31]
          io.to_calc8x8.mat[6] <= io.from.mat[6] @[switch.scala 45:31]
          io.to_calc8x8.mat[7] <= io.from.mat[7] @[switch.scala 45:31]
          io.to_calc8x8.mat[8] <= io.from.mat[8] @[switch.scala 45:31]
          io.to_calc8x8.mat[9] <= io.from.mat[9] @[switch.scala 45:31]
          io.to_calc8x8.mat[10] <= io.from.mat[10] @[switch.scala 45:31]
          io.to_calc8x8.mat[11] <= io.from.mat[11] @[switch.scala 45:31]
          io.to_calc8x8.mat[12] <= io.from.mat[12] @[switch.scala 45:31]
          io.to_calc8x8.mat[13] <= io.from.mat[13] @[switch.scala 45:31]
          io.to_calc8x8.mat[14] <= io.from.mat[14] @[switch.scala 45:31]
          io.to_calc8x8.mat[15] <= io.from.mat[15] @[switch.scala 45:31]
          io.to_calc8x8.mat[16] <= io.from.mat[16] @[switch.scala 45:31]
          io.to_calc8x8.mat[17] <= io.from.mat[17] @[switch.scala 45:31]
          io.to_calc8x8.mat[18] <= io.from.mat[18] @[switch.scala 45:31]
          io.to_calc8x8.mat[19] <= io.from.mat[19] @[switch.scala 45:31]
          io.to_calc8x8.mat[20] <= io.from.mat[20] @[switch.scala 45:31]
          io.to_calc8x8.mat[21] <= io.from.mat[21] @[switch.scala 45:31]
          io.to_calc8x8.mat[22] <= io.from.mat[22] @[switch.scala 45:31]
          io.to_calc8x8.mat[23] <= io.from.mat[23] @[switch.scala 45:31]
          io.to_calc8x8.mat[24] <= io.from.mat[24] @[switch.scala 45:31]
          io.to_calc8x8.mat[25] <= io.from.mat[25] @[switch.scala 45:31]
          io.to_calc8x8.mat[26] <= io.from.mat[26] @[switch.scala 45:31]
          io.to_calc8x8.mat[27] <= io.from.mat[27] @[switch.scala 45:31]
          io.to_calc8x8.mat[28] <= io.from.mat[28] @[switch.scala 45:31]
          io.to_calc8x8.mat[29] <= io.from.mat[29] @[switch.scala 45:31]
          io.to_calc8x8.mat[30] <= io.from.mat[30] @[switch.scala 45:31]
          io.to_calc8x8.mat[31] <= io.from.mat[31] @[switch.scala 45:31]
          io.to_calc8x8.mat[32] <= io.from.mat[32] @[switch.scala 45:31]
          io.to_calc8x8.mat[33] <= io.from.mat[33] @[switch.scala 45:31]
          io.to_calc8x8.mat[34] <= io.from.mat[34] @[switch.scala 45:31]
          io.to_calc8x8.mat[35] <= io.from.mat[35] @[switch.scala 45:31]
          io.to_calc8x8.mat[36] <= io.from.mat[36] @[switch.scala 45:31]
          io.to_calc8x8.mat[37] <= io.from.mat[37] @[switch.scala 45:31]
          io.to_calc8x8.mat[38] <= io.from.mat[38] @[switch.scala 45:31]
          io.to_calc8x8.mat[39] <= io.from.mat[39] @[switch.scala 45:31]
          io.to_calc8x8.mat[40] <= io.from.mat[40] @[switch.scala 45:31]
          io.to_calc8x8.mat[41] <= io.from.mat[41] @[switch.scala 45:31]
          io.to_calc8x8.mat[42] <= io.from.mat[42] @[switch.scala 45:31]
          io.to_calc8x8.mat[43] <= io.from.mat[43] @[switch.scala 45:31]
          io.to_calc8x8.mat[44] <= io.from.mat[44] @[switch.scala 45:31]
          io.to_calc8x8.mat[45] <= io.from.mat[45] @[switch.scala 45:31]
          io.to_calc8x8.mat[46] <= io.from.mat[46] @[switch.scala 45:31]
          io.to_calc8x8.mat[47] <= io.from.mat[47] @[switch.scala 45:31]
          io.to_calc8x8.mat[48] <= io.from.mat[48] @[switch.scala 45:31]
          io.to_calc8x8.mat[49] <= io.from.mat[49] @[switch.scala 45:31]
          io.to_calc8x8.mat[50] <= io.from.mat[50] @[switch.scala 45:31]
          io.to_calc8x8.mat[51] <= io.from.mat[51] @[switch.scala 45:31]
          io.to_calc8x8.mat[52] <= io.from.mat[52] @[switch.scala 45:31]
          io.to_calc8x8.mat[53] <= io.from.mat[53] @[switch.scala 45:31]
          io.to_calc8x8.mat[54] <= io.from.mat[54] @[switch.scala 45:31]
          io.to_calc8x8.mat[55] <= io.from.mat[55] @[switch.scala 45:31]
          io.to_calc8x8.mat[56] <= io.from.mat[56] @[switch.scala 45:31]
          io.to_calc8x8.mat[57] <= io.from.mat[57] @[switch.scala 45:31]
          io.to_calc8x8.mat[58] <= io.from.mat[58] @[switch.scala 45:31]
          io.to_calc8x8.mat[59] <= io.from.mat[59] @[switch.scala 45:31]
          io.to_calc8x8.mat[60] <= io.from.mat[60] @[switch.scala 45:31]
          io.to_calc8x8.mat[61] <= io.from.mat[61] @[switch.scala 45:31]
          io.to_calc8x8.mat[62] <= io.from.mat[62] @[switch.scala 45:31]
          io.to_calc8x8.mat[63] <= io.from.mat[63] @[switch.scala 45:31]
          io.to_weight[0].real[0] <= io.from_weight[0] @[switch.scala 47:45]
          io.to_weight[0].real[1] <= io.from_weight[1] @[switch.scala 47:45]
          io.to_weight[0].real[2] <= io.from_weight[2] @[switch.scala 47:45]
          io.to_weight[0].real[3] <= io.from_weight[3] @[switch.scala 47:45]
          io.to_weight[0].real[4] <= io.from_weight[4] @[switch.scala 47:45]
          io.to_weight[0].real[5] <= io.from_weight[5] @[switch.scala 47:45]
          io.to_weight[0].real[6] <= io.from_weight[6] @[switch.scala 47:45]
          io.to_weight[0].real[7] <= io.from_weight[7] @[switch.scala 47:45]
          io.to_weight[0].real[8] <= io.from_weight[8] @[switch.scala 47:45]
          io.valid_out_calc8x8 <= UInt<1>("h01") @[switch.scala 48:38]
          skip @[Conditional.scala 40:58]
        else : @[Conditional.scala 39:67]
          node _T_67 = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
          node _T_68 = asUInt(job_type) @[Conditional.scala 37:39]
          node _T_69 = eq(_T_67, _T_68) @[Conditional.scala 37:30]
          when _T_69 : @[Conditional.scala 39:67]
            io.to_copy.mat[0] <= io.from.mat[0] @[switch.scala 51:32]
            io.to_copy.mat[1] <= io.from.mat[1] @[switch.scala 51:32]
            io.to_copy.mat[2] <= io.from.mat[2] @[switch.scala 51:32]
            io.to_copy.mat[3] <= io.from.mat[3] @[switch.scala 51:32]
            io.to_copy.mat[4] <= io.from.mat[4] @[switch.scala 51:32]
            io.to_copy.mat[5] <= io.from.mat[5] @[switch.scala 51:32]
            io.to_copy.mat[6] <= io.from.mat[6] @[switch.scala 51:32]
            io.to_copy.mat[7] <= io.from.mat[7] @[switch.scala 51:32]
            io.to_copy.mat[8] <= io.from.mat[8] @[switch.scala 51:32]
            io.to_copy.mat[9] <= io.from.mat[9] @[switch.scala 51:32]
            io.to_copy.mat[10] <= io.from.mat[10] @[switch.scala 51:32]
            io.to_copy.mat[11] <= io.from.mat[11] @[switch.scala 51:32]
            io.to_copy.mat[12] <= io.from.mat[12] @[switch.scala 51:32]
            io.to_copy.mat[13] <= io.from.mat[13] @[switch.scala 51:32]
            io.to_copy.mat[14] <= io.from.mat[14] @[switch.scala 51:32]
            io.to_copy.mat[15] <= io.from.mat[15] @[switch.scala 51:32]
            io.to_copy.mat[16] <= io.from.mat[16] @[switch.scala 51:32]
            io.to_copy.mat[17] <= io.from.mat[17] @[switch.scala 51:32]
            io.to_copy.mat[18] <= io.from.mat[18] @[switch.scala 51:32]
            io.to_copy.mat[19] <= io.from.mat[19] @[switch.scala 51:32]
            io.to_copy.mat[20] <= io.from.mat[20] @[switch.scala 51:32]
            io.to_copy.mat[21] <= io.from.mat[21] @[switch.scala 51:32]
            io.to_copy.mat[22] <= io.from.mat[22] @[switch.scala 51:32]
            io.to_copy.mat[23] <= io.from.mat[23] @[switch.scala 51:32]
            io.to_copy.mat[24] <= io.from.mat[24] @[switch.scala 51:32]
            io.to_copy.mat[25] <= io.from.mat[25] @[switch.scala 51:32]
            io.to_copy.mat[26] <= io.from.mat[26] @[switch.scala 51:32]
            io.to_copy.mat[27] <= io.from.mat[27] @[switch.scala 51:32]
            io.to_copy.mat[28] <= io.from.mat[28] @[switch.scala 51:32]
            io.to_copy.mat[29] <= io.from.mat[29] @[switch.scala 51:32]
            io.to_copy.mat[30] <= io.from.mat[30] @[switch.scala 51:32]
            io.to_copy.mat[31] <= io.from.mat[31] @[switch.scala 51:32]
            io.to_copy.mat[32] <= io.from.mat[32] @[switch.scala 51:32]
            io.to_copy.mat[33] <= io.from.mat[33] @[switch.scala 51:32]
            io.to_copy.mat[34] <= io.from.mat[34] @[switch.scala 51:32]
            io.to_copy.mat[35] <= io.from.mat[35] @[switch.scala 51:32]
            io.to_copy.mat[36] <= io.from.mat[36] @[switch.scala 51:32]
            io.to_copy.mat[37] <= io.from.mat[37] @[switch.scala 51:32]
            io.to_copy.mat[38] <= io.from.mat[38] @[switch.scala 51:32]
            io.to_copy.mat[39] <= io.from.mat[39] @[switch.scala 51:32]
            io.to_copy.mat[40] <= io.from.mat[40] @[switch.scala 51:32]
            io.to_copy.mat[41] <= io.from.mat[41] @[switch.scala 51:32]
            io.to_copy.mat[42] <= io.from.mat[42] @[switch.scala 51:32]
            io.to_copy.mat[43] <= io.from.mat[43] @[switch.scala 51:32]
            io.to_copy.mat[44] <= io.from.mat[44] @[switch.scala 51:32]
            io.to_copy.mat[45] <= io.from.mat[45] @[switch.scala 51:32]
            io.to_copy.mat[46] <= io.from.mat[46] @[switch.scala 51:32]
            io.to_copy.mat[47] <= io.from.mat[47] @[switch.scala 51:32]
            io.to_copy.mat[48] <= io.from.mat[48] @[switch.scala 51:32]
            io.to_copy.mat[49] <= io.from.mat[49] @[switch.scala 51:32]
            io.to_copy.mat[50] <= io.from.mat[50] @[switch.scala 51:32]
            io.to_copy.mat[51] <= io.from.mat[51] @[switch.scala 51:32]
            io.to_copy.mat[52] <= io.from.mat[52] @[switch.scala 51:32]
            io.to_copy.mat[53] <= io.from.mat[53] @[switch.scala 51:32]
            io.to_copy.mat[54] <= io.from.mat[54] @[switch.scala 51:32]
            io.to_copy.mat[55] <= io.from.mat[55] @[switch.scala 51:32]
            io.to_copy.mat[56] <= io.from.mat[56] @[switch.scala 51:32]
            io.to_copy.mat[57] <= io.from.mat[57] @[switch.scala 51:32]
            io.to_copy.mat[58] <= io.from.mat[58] @[switch.scala 51:32]
            io.to_copy.mat[59] <= io.from.mat[59] @[switch.scala 51:32]
            io.to_copy.mat[60] <= io.from.mat[60] @[switch.scala 51:32]
            io.to_copy.mat[61] <= io.from.mat[61] @[switch.scala 51:32]
            io.to_copy.mat[62] <= io.from.mat[62] @[switch.scala 51:32]
            io.to_copy.mat[63] <= io.from.mat[63] @[switch.scala 51:32]
            io.valid_out_copy <= UInt<1>("h01") @[switch.scala 52:35]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_70 = asUInt(UInt<2>("h02")) @[Conditional.scala 37:23]
            node _T_71 = asUInt(job_type) @[Conditional.scala 37:39]
            node _T_72 = eq(_T_70, _T_71) @[Conditional.scala 37:30]
            when _T_72 : @[Conditional.scala 39:67]
              wire nxt : UInt<1> @[utils.scala 16:23]
              node _nxt_T = eq(state.ccnt, state.cend) @[utils.scala 17:20]
              nxt <= _nxt_T @[utils.scala 17:13]
              node _state_ccnt_T = add(state.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
              node _state_ccnt_T_1 = tail(_state_ccnt_T, 1) @[utils.scala 18:35]
              node _state_ccnt_T_2 = mux(nxt, UInt<1>("h00"), _state_ccnt_T_1) @[utils.scala 18:20]
              state.ccnt <= _state_ccnt_T_2 @[utils.scala 18:14]
              when nxt : @[switch.scala 55:34]
                io.valid_out_calc8x8 <= UInt<1>("h01") @[switch.scala 56:42]
                io.to_calc8x8.right[0] <= io.from.right[0] @[switch.scala 57:35]
                io.to_calc8x8.right[1] <= io.from.right[1] @[switch.scala 57:35]
                io.to_calc8x8.right[2] <= io.from.right[2] @[switch.scala 57:35]
                io.to_calc8x8.right[3] <= io.from.right[3] @[switch.scala 57:35]
                io.to_calc8x8.right[4] <= io.from.right[4] @[switch.scala 57:35]
                io.to_calc8x8.right[5] <= io.from.right[5] @[switch.scala 57:35]
                io.to_calc8x8.right[6] <= io.from.right[6] @[switch.scala 57:35]
                io.to_calc8x8.right[7] <= io.from.right[7] @[switch.scala 57:35]
                io.to_calc8x8.left[0] <= io.from.left[0] @[switch.scala 57:35]
                io.to_calc8x8.left[1] <= io.from.left[1] @[switch.scala 57:35]
                io.to_calc8x8.left[2] <= io.from.left[2] @[switch.scala 57:35]
                io.to_calc8x8.left[3] <= io.from.left[3] @[switch.scala 57:35]
                io.to_calc8x8.left[4] <= io.from.left[4] @[switch.scala 57:35]
                io.to_calc8x8.left[5] <= io.from.left[5] @[switch.scala 57:35]
                io.to_calc8x8.left[6] <= io.from.left[6] @[switch.scala 57:35]
                io.to_calc8x8.left[7] <= io.from.left[7] @[switch.scala 57:35]
                io.to_calc8x8.down[0] <= io.from.down[0] @[switch.scala 57:35]
                io.to_calc8x8.down[1] <= io.from.down[1] @[switch.scala 57:35]
                io.to_calc8x8.down[2] <= io.from.down[2] @[switch.scala 57:35]
                io.to_calc8x8.down[3] <= io.from.down[3] @[switch.scala 57:35]
                io.to_calc8x8.down[4] <= io.from.down[4] @[switch.scala 57:35]
                io.to_calc8x8.down[5] <= io.from.down[5] @[switch.scala 57:35]
                io.to_calc8x8.down[6] <= io.from.down[6] @[switch.scala 57:35]
                io.to_calc8x8.down[7] <= io.from.down[7] @[switch.scala 57:35]
                io.to_calc8x8.down[8] <= io.from.down[8] @[switch.scala 57:35]
                io.to_calc8x8.down[9] <= io.from.down[9] @[switch.scala 57:35]
                io.to_calc8x8.up[0] <= io.from.up[0] @[switch.scala 57:35]
                io.to_calc8x8.up[1] <= io.from.up[1] @[switch.scala 57:35]
                io.to_calc8x8.up[2] <= io.from.up[2] @[switch.scala 57:35]
                io.to_calc8x8.up[3] <= io.from.up[3] @[switch.scala 57:35]
                io.to_calc8x8.up[4] <= io.from.up[4] @[switch.scala 57:35]
                io.to_calc8x8.up[5] <= io.from.up[5] @[switch.scala 57:35]
                io.to_calc8x8.up[6] <= io.from.up[6] @[switch.scala 57:35]
                io.to_calc8x8.up[7] <= io.from.up[7] @[switch.scala 57:35]
                io.to_calc8x8.up[8] <= io.from.up[8] @[switch.scala 57:35]
                io.to_calc8x8.up[9] <= io.from.up[9] @[switch.scala 57:35]
                io.to_calc8x8.mat[0] <= io.from.mat[0] @[switch.scala 57:35]
                io.to_calc8x8.mat[1] <= io.from.mat[1] @[switch.scala 57:35]
                io.to_calc8x8.mat[2] <= io.from.mat[2] @[switch.scala 57:35]
                io.to_calc8x8.mat[3] <= io.from.mat[3] @[switch.scala 57:35]
                io.to_calc8x8.mat[4] <= io.from.mat[4] @[switch.scala 57:35]
                io.to_calc8x8.mat[5] <= io.from.mat[5] @[switch.scala 57:35]
                io.to_calc8x8.mat[6] <= io.from.mat[6] @[switch.scala 57:35]
                io.to_calc8x8.mat[7] <= io.from.mat[7] @[switch.scala 57:35]
                io.to_calc8x8.mat[8] <= io.from.mat[8] @[switch.scala 57:35]
                io.to_calc8x8.mat[9] <= io.from.mat[9] @[switch.scala 57:35]
                io.to_calc8x8.mat[10] <= io.from.mat[10] @[switch.scala 57:35]
                io.to_calc8x8.mat[11] <= io.from.mat[11] @[switch.scala 57:35]
                io.to_calc8x8.mat[12] <= io.from.mat[12] @[switch.scala 57:35]
                io.to_calc8x8.mat[13] <= io.from.mat[13] @[switch.scala 57:35]
                io.to_calc8x8.mat[14] <= io.from.mat[14] @[switch.scala 57:35]
                io.to_calc8x8.mat[15] <= io.from.mat[15] @[switch.scala 57:35]
                io.to_calc8x8.mat[16] <= io.from.mat[16] @[switch.scala 57:35]
                io.to_calc8x8.mat[17] <= io.from.mat[17] @[switch.scala 57:35]
                io.to_calc8x8.mat[18] <= io.from.mat[18] @[switch.scala 57:35]
                io.to_calc8x8.mat[19] <= io.from.mat[19] @[switch.scala 57:35]
                io.to_calc8x8.mat[20] <= io.from.mat[20] @[switch.scala 57:35]
                io.to_calc8x8.mat[21] <= io.from.mat[21] @[switch.scala 57:35]
                io.to_calc8x8.mat[22] <= io.from.mat[22] @[switch.scala 57:35]
                io.to_calc8x8.mat[23] <= io.from.mat[23] @[switch.scala 57:35]
                io.to_calc8x8.mat[24] <= io.from.mat[24] @[switch.scala 57:35]
                io.to_calc8x8.mat[25] <= io.from.mat[25] @[switch.scala 57:35]
                io.to_calc8x8.mat[26] <= io.from.mat[26] @[switch.scala 57:35]
                io.to_calc8x8.mat[27] <= io.from.mat[27] @[switch.scala 57:35]
                io.to_calc8x8.mat[28] <= io.from.mat[28] @[switch.scala 57:35]
                io.to_calc8x8.mat[29] <= io.from.mat[29] @[switch.scala 57:35]
                io.to_calc8x8.mat[30] <= io.from.mat[30] @[switch.scala 57:35]
                io.to_calc8x8.mat[31] <= io.from.mat[31] @[switch.scala 57:35]
                io.to_calc8x8.mat[32] <= io.from.mat[32] @[switch.scala 57:35]
                io.to_calc8x8.mat[33] <= io.from.mat[33] @[switch.scala 57:35]
                io.to_calc8x8.mat[34] <= io.from.mat[34] @[switch.scala 57:35]
                io.to_calc8x8.mat[35] <= io.from.mat[35] @[switch.scala 57:35]
                io.to_calc8x8.mat[36] <= io.from.mat[36] @[switch.scala 57:35]
                io.to_calc8x8.mat[37] <= io.from.mat[37] @[switch.scala 57:35]
                io.to_calc8x8.mat[38] <= io.from.mat[38] @[switch.scala 57:35]
                io.to_calc8x8.mat[39] <= io.from.mat[39] @[switch.scala 57:35]
                io.to_calc8x8.mat[40] <= io.from.mat[40] @[switch.scala 57:35]
                io.to_calc8x8.mat[41] <= io.from.mat[41] @[switch.scala 57:35]
                io.to_calc8x8.mat[42] <= io.from.mat[42] @[switch.scala 57:35]
                io.to_calc8x8.mat[43] <= io.from.mat[43] @[switch.scala 57:35]
                io.to_calc8x8.mat[44] <= io.from.mat[44] @[switch.scala 57:35]
                io.to_calc8x8.mat[45] <= io.from.mat[45] @[switch.scala 57:35]
                io.to_calc8x8.mat[46] <= io.from.mat[46] @[switch.scala 57:35]
                io.to_calc8x8.mat[47] <= io.from.mat[47] @[switch.scala 57:35]
                io.to_calc8x8.mat[48] <= io.from.mat[48] @[switch.scala 57:35]
                io.to_calc8x8.mat[49] <= io.from.mat[49] @[switch.scala 57:35]
                io.to_calc8x8.mat[50] <= io.from.mat[50] @[switch.scala 57:35]
                io.to_calc8x8.mat[51] <= io.from.mat[51] @[switch.scala 57:35]
                io.to_calc8x8.mat[52] <= io.from.mat[52] @[switch.scala 57:35]
                io.to_calc8x8.mat[53] <= io.from.mat[53] @[switch.scala 57:35]
                io.to_calc8x8.mat[54] <= io.from.mat[54] @[switch.scala 57:35]
                io.to_calc8x8.mat[55] <= io.from.mat[55] @[switch.scala 57:35]
                io.to_calc8x8.mat[56] <= io.from.mat[56] @[switch.scala 57:35]
                io.to_calc8x8.mat[57] <= io.from.mat[57] @[switch.scala 57:35]
                io.to_calc8x8.mat[58] <= io.from.mat[58] @[switch.scala 57:35]
                io.to_calc8x8.mat[59] <= io.from.mat[59] @[switch.scala 57:35]
                io.to_calc8x8.mat[60] <= io.from.mat[60] @[switch.scala 57:35]
                io.to_calc8x8.mat[61] <= io.from.mat[61] @[switch.scala 57:35]
                io.to_calc8x8.mat[62] <= io.from.mat[62] @[switch.scala 57:35]
                io.to_calc8x8.mat[63] <= io.from.mat[63] @[switch.scala 57:35]
                io.to_weight[0].real[0] <= cache[0] @[switch.scala 62:71]
                io.to_weight[0].real[1] <= cache[1] @[switch.scala 62:71]
                io.to_weight[0].real[2] <= cache[2] @[switch.scala 62:71]
                io.to_weight[0].real[3] <= cache[3] @[switch.scala 62:71]
                io.to_weight[0].real[4] <= cache[8] @[switch.scala 62:71]
                io.to_weight[0].real[5] <= cache[9] @[switch.scala 62:71]
                io.to_weight[0].real[6] <= cache[10] @[switch.scala 62:71]
                io.to_weight[0].real[7] <= cache[11] @[switch.scala 62:71]
                io.to_weight[0].real[8] <= cache[16] @[switch.scala 62:71]
                io.to_weight[0].real[9] <= cache[17] @[switch.scala 62:71]
                io.to_weight[0].real[10] <= cache[18] @[switch.scala 62:71]
                io.to_weight[0].real[11] <= cache[19] @[switch.scala 62:71]
                io.to_weight[0].real[12] <= cache[24] @[switch.scala 62:71]
                io.to_weight[0].real[13] <= cache[25] @[switch.scala 62:71]
                io.to_weight[0].real[14] <= cache[26] @[switch.scala 62:71]
                io.to_weight[0].real[15] <= cache[27] @[switch.scala 62:71]
                io.to_weight[1].real[0] <= cache[4] @[switch.scala 62:71]
                io.to_weight[1].real[1] <= cache[5] @[switch.scala 62:71]
                io.to_weight[1].real[2] <= cache[6] @[switch.scala 62:71]
                io.to_weight[1].real[3] <= cache[7] @[switch.scala 62:71]
                io.to_weight[1].real[4] <= cache[12] @[switch.scala 62:71]
                io.to_weight[1].real[5] <= cache[13] @[switch.scala 62:71]
                io.to_weight[1].real[6] <= cache[14] @[switch.scala 62:71]
                io.to_weight[1].real[7] <= cache[15] @[switch.scala 62:71]
                io.to_weight[1].real[8] <= cache[20] @[switch.scala 62:71]
                io.to_weight[1].real[9] <= cache[21] @[switch.scala 62:71]
                io.to_weight[1].real[10] <= cache[22] @[switch.scala 62:71]
                io.to_weight[1].real[11] <= cache[23] @[switch.scala 62:71]
                io.to_weight[1].real[12] <= cache[28] @[switch.scala 62:71]
                io.to_weight[1].real[13] <= cache[29] @[switch.scala 62:71]
                io.to_weight[1].real[14] <= cache[30] @[switch.scala 62:71]
                io.to_weight[1].real[15] <= cache[31] @[switch.scala 62:71]
                io.to_weight[2].real[0] <= cache[32] @[switch.scala 62:71]
                io.to_weight[2].real[1] <= cache[33] @[switch.scala 62:71]
                io.to_weight[2].real[2] <= cache[34] @[switch.scala 62:71]
                io.to_weight[2].real[3] <= cache[35] @[switch.scala 62:71]
                io.to_weight[2].real[4] <= cache[40] @[switch.scala 62:71]
                io.to_weight[2].real[5] <= cache[41] @[switch.scala 62:71]
                io.to_weight[2].real[6] <= cache[42] @[switch.scala 62:71]
                io.to_weight[2].real[7] <= cache[43] @[switch.scala 62:71]
                io.to_weight[2].real[8] <= cache[48] @[switch.scala 62:71]
                io.to_weight[2].real[9] <= cache[49] @[switch.scala 62:71]
                io.to_weight[2].real[10] <= cache[50] @[switch.scala 62:71]
                io.to_weight[2].real[11] <= cache[51] @[switch.scala 62:71]
                io.to_weight[2].real[12] <= cache[56] @[switch.scala 62:71]
                io.to_weight[2].real[13] <= cache[57] @[switch.scala 62:71]
                io.to_weight[2].real[14] <= cache[58] @[switch.scala 62:71]
                io.to_weight[2].real[15] <= cache[59] @[switch.scala 62:71]
                io.to_weight[3].real[0] <= cache[36] @[switch.scala 62:71]
                io.to_weight[3].real[1] <= cache[37] @[switch.scala 62:71]
                io.to_weight[3].real[2] <= cache[38] @[switch.scala 62:71]
                io.to_weight[3].real[3] <= cache[39] @[switch.scala 62:71]
                io.to_weight[3].real[4] <= cache[44] @[switch.scala 62:71]
                io.to_weight[3].real[5] <= cache[45] @[switch.scala 62:71]
                io.to_weight[3].real[6] <= cache[46] @[switch.scala 62:71]
                io.to_weight[3].real[7] <= cache[47] @[switch.scala 62:71]
                io.to_weight[3].real[8] <= cache[52] @[switch.scala 62:71]
                io.to_weight[3].real[9] <= cache[53] @[switch.scala 62:71]
                io.to_weight[3].real[10] <= cache[54] @[switch.scala 62:71]
                io.to_weight[3].real[11] <= cache[55] @[switch.scala 62:71]
                io.to_weight[3].real[12] <= cache[60] @[switch.scala 62:71]
                io.to_weight[3].real[13] <= cache[61] @[switch.scala 62:71]
                io.to_weight[3].real[14] <= cache[62] @[switch.scala 62:71]
                io.to_weight[3].real[15] <= cache[63] @[switch.scala 62:71]
                skip @[switch.scala 55:34]
              else : @[switch.scala 63:28]
                cache[0] <= io.from.mat[0] @[switch.scala 64:27]
                cache[1] <= io.from.mat[1] @[switch.scala 64:27]
                cache[2] <= io.from.mat[2] @[switch.scala 64:27]
                cache[3] <= io.from.mat[3] @[switch.scala 64:27]
                cache[4] <= io.from.mat[4] @[switch.scala 64:27]
                cache[5] <= io.from.mat[5] @[switch.scala 64:27]
                cache[6] <= io.from.mat[6] @[switch.scala 64:27]
                cache[7] <= io.from.mat[7] @[switch.scala 64:27]
                cache[8] <= io.from.mat[8] @[switch.scala 64:27]
                cache[9] <= io.from.mat[9] @[switch.scala 64:27]
                cache[10] <= io.from.mat[10] @[switch.scala 64:27]
                cache[11] <= io.from.mat[11] @[switch.scala 64:27]
                cache[12] <= io.from.mat[12] @[switch.scala 64:27]
                cache[13] <= io.from.mat[13] @[switch.scala 64:27]
                cache[14] <= io.from.mat[14] @[switch.scala 64:27]
                cache[15] <= io.from.mat[15] @[switch.scala 64:27]
                cache[16] <= io.from.mat[16] @[switch.scala 64:27]
                cache[17] <= io.from.mat[17] @[switch.scala 64:27]
                cache[18] <= io.from.mat[18] @[switch.scala 64:27]
                cache[19] <= io.from.mat[19] @[switch.scala 64:27]
                cache[20] <= io.from.mat[20] @[switch.scala 64:27]
                cache[21] <= io.from.mat[21] @[switch.scala 64:27]
                cache[22] <= io.from.mat[22] @[switch.scala 64:27]
                cache[23] <= io.from.mat[23] @[switch.scala 64:27]
                cache[24] <= io.from.mat[24] @[switch.scala 64:27]
                cache[25] <= io.from.mat[25] @[switch.scala 64:27]
                cache[26] <= io.from.mat[26] @[switch.scala 64:27]
                cache[27] <= io.from.mat[27] @[switch.scala 64:27]
                cache[28] <= io.from.mat[28] @[switch.scala 64:27]
                cache[29] <= io.from.mat[29] @[switch.scala 64:27]
                cache[30] <= io.from.mat[30] @[switch.scala 64:27]
                cache[31] <= io.from.mat[31] @[switch.scala 64:27]
                cache[32] <= io.from.mat[32] @[switch.scala 64:27]
                cache[33] <= io.from.mat[33] @[switch.scala 64:27]
                cache[34] <= io.from.mat[34] @[switch.scala 64:27]
                cache[35] <= io.from.mat[35] @[switch.scala 64:27]
                cache[36] <= io.from.mat[36] @[switch.scala 64:27]
                cache[37] <= io.from.mat[37] @[switch.scala 64:27]
                cache[38] <= io.from.mat[38] @[switch.scala 64:27]
                cache[39] <= io.from.mat[39] @[switch.scala 64:27]
                cache[40] <= io.from.mat[40] @[switch.scala 64:27]
                cache[41] <= io.from.mat[41] @[switch.scala 64:27]
                cache[42] <= io.from.mat[42] @[switch.scala 64:27]
                cache[43] <= io.from.mat[43] @[switch.scala 64:27]
                cache[44] <= io.from.mat[44] @[switch.scala 64:27]
                cache[45] <= io.from.mat[45] @[switch.scala 64:27]
                cache[46] <= io.from.mat[46] @[switch.scala 64:27]
                cache[47] <= io.from.mat[47] @[switch.scala 64:27]
                cache[48] <= io.from.mat[48] @[switch.scala 64:27]
                cache[49] <= io.from.mat[49] @[switch.scala 64:27]
                cache[50] <= io.from.mat[50] @[switch.scala 64:27]
                cache[51] <= io.from.mat[51] @[switch.scala 64:27]
                cache[52] <= io.from.mat[52] @[switch.scala 64:27]
                cache[53] <= io.from.mat[53] @[switch.scala 64:27]
                cache[54] <= io.from.mat[54] @[switch.scala 64:27]
                cache[55] <= io.from.mat[55] @[switch.scala 64:27]
                cache[56] <= io.from.mat[56] @[switch.scala 64:27]
                cache[57] <= io.from.mat[57] @[switch.scala 64:27]
                cache[58] <= io.from.mat[58] @[switch.scala 64:27]
                cache[59] <= io.from.mat[59] @[switch.scala 64:27]
                cache[60] <= io.from.mat[60] @[switch.scala 64:27]
                cache[61] <= io.from.mat[61] @[switch.scala 64:27]
                cache[62] <= io.from.mat[62] @[switch.scala 64:27]
                cache[63] <= io.from.mat[63] @[switch.scala 64:27]
                skip @[switch.scala 63:28]
              skip @[Conditional.scala 39:67]
        skip @[switch.scala 42:28]
    
  module WeightReader : 
    input clock : Clock
    input reset : Reset
    output io : {flip valid_in : UInt<1>, valid_out : UInt<1>, flip flag_job : UInt<1>, flip addr_end : UInt<14>, flip begin_addr : UInt<14>, addr : UInt<14>}
    
    wire _now_addr_WIRE : {ccnt : UInt<14>, cend : UInt<14>} @[read_weight.scala 15:40]
    _now_addr_WIRE.cend <= UInt<14>("h00") @[read_weight.scala 15:40]
    _now_addr_WIRE.ccnt <= UInt<14>("h00") @[read_weight.scala 15:40]
    reg now_addr : {ccnt : UInt<14>, cend : UInt<14>}, clock with : (reset => (reset, _now_addr_WIRE)) @[read_weight.scala 15:27]
    io.addr <= now_addr.ccnt @[read_weight.scala 16:13]
    io.valid_out <= UInt<1>("h00") @[read_weight.scala 17:18]
    when io.flag_job : @[read_weight.scala 18:22]
      now_addr.cend <= io.addr_end @[utils.scala 26:14]
      now_addr.ccnt <= io.begin_addr @[utils.scala 27:14]
      skip @[read_weight.scala 18:22]
    else : @[read_weight.scala 20:28]
      when io.valid_in : @[read_weight.scala 20:28]
        wire nxt : UInt<1> @[utils.scala 16:23]
        node _nxt_T = eq(now_addr.ccnt, now_addr.cend) @[utils.scala 17:20]
        nxt <= _nxt_T @[utils.scala 17:13]
        node _now_addr_ccnt_T = add(now_addr.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
        node _now_addr_ccnt_T_1 = tail(_now_addr_ccnt_T, 1) @[utils.scala 18:35]
        node _now_addr_ccnt_T_2 = mux(nxt, UInt<1>("h00"), _now_addr_ccnt_T_1) @[utils.scala 18:20]
        now_addr.ccnt <= _now_addr_ccnt_T_2 @[utils.scala 18:14]
        skip @[read_weight.scala 20:28]
    
  module DSP48 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_1 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_2 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_3 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_4 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_5 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_6 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_6 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_6 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_7 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_7 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_7 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_8 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_8 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_8 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_9 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_9 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_9 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_10 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_10 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_10 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_11 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_11 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_11 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_12 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_12 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_12 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_13 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_13 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_13 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_14 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_14 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_14 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_15 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_15 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_15 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_16 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_16 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_16 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_17 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_17 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_17 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_18 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_18 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_18 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_19 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_19 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_19 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_20 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_20 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_20 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_21 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_21 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_21 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_22 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_22 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_22 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_23 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_23 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_23 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_24 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_24 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_24 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_25 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_25 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_25 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_26 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_26 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_26 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_27 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_27 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_27 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_28 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_28 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_28 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_29 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_29 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_29 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_30 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_30 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_30 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_31 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_31 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_31 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_32 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_32 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_32 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_33 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_33 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_33 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_34 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_34 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_34 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_35 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_35 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_35 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_36 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_36 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_36 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_37 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_37 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_37 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_38 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_38 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_38 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_39 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_39 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_39 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_40 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_40 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_40 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_41 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_41 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_41 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_42 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_42 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_42 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_43 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_43 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_43 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_44 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_44 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_44 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_45 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_45 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_45 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module Calc6x6 : 
    input clock : Clock
    input reset : Reset
    output io : {flip input : {mat : SInt<16>[36]}, flip flag : UInt<2>, flip weight : {real : SInt<18>[16], comp1 : SInt<18>[10], comp2 : SInt<18>[10], comp3 : SInt<18>[10]}, output : {mat : SInt<37>[16]}, flip valid_in : UInt<1>, valid_out : UInt<1>}
    
    inst Core of Core @[calc6x6.scala 64:43]
    Core.clock <= clock
    Core.reset <= reset
    inst Core_1 of Core_1 @[calc6x6.scala 64:43]
    Core_1.clock <= clock
    Core_1.reset <= reset
    inst Core_2 of Core_2 @[calc6x6.scala 64:43]
    Core_2.clock <= clock
    Core_2.reset <= reset
    inst Core_3 of Core_3 @[calc6x6.scala 64:43]
    Core_3.clock <= clock
    Core_3.reset <= reset
    inst Core_4 of Core_4 @[calc6x6.scala 64:43]
    Core_4.clock <= clock
    Core_4.reset <= reset
    inst Core_5 of Core_5 @[calc6x6.scala 64:43]
    Core_5.clock <= clock
    Core_5.reset <= reset
    inst Core_6 of Core_6 @[calc6x6.scala 64:43]
    Core_6.clock <= clock
    Core_6.reset <= reset
    inst Core_7 of Core_7 @[calc6x6.scala 64:43]
    Core_7.clock <= clock
    Core_7.reset <= reset
    inst Core_8 of Core_8 @[calc6x6.scala 64:43]
    Core_8.clock <= clock
    Core_8.reset <= reset
    inst Core_9 of Core_9 @[calc6x6.scala 64:43]
    Core_9.clock <= clock
    Core_9.reset <= reset
    inst Core_10 of Core_10 @[calc6x6.scala 64:43]
    Core_10.clock <= clock
    Core_10.reset <= reset
    inst Core_11 of Core_11 @[calc6x6.scala 64:43]
    Core_11.clock <= clock
    Core_11.reset <= reset
    inst Core_12 of Core_12 @[calc6x6.scala 64:43]
    Core_12.clock <= clock
    Core_12.reset <= reset
    inst Core_13 of Core_13 @[calc6x6.scala 64:43]
    Core_13.clock <= clock
    Core_13.reset <= reset
    inst Core_14 of Core_14 @[calc6x6.scala 64:43]
    Core_14.clock <= clock
    Core_14.reset <= reset
    inst Core_15 of Core_15 @[calc6x6.scala 64:43]
    Core_15.clock <= clock
    Core_15.reset <= reset
    wire real : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[16] @[calc6x6.scala 64:23]
    real[0].result <= Core.io.result @[calc6x6.scala 64:23]
    Core.io.flag <= real[0].flag @[calc6x6.scala 64:23]
    Core.io.in_b <= real[0].in_b @[calc6x6.scala 64:23]
    Core.io.w_a <= real[0].w_a @[calc6x6.scala 64:23]
    real[1].result <= Core_1.io.result @[calc6x6.scala 64:23]
    Core_1.io.flag <= real[1].flag @[calc6x6.scala 64:23]
    Core_1.io.in_b <= real[1].in_b @[calc6x6.scala 64:23]
    Core_1.io.w_a <= real[1].w_a @[calc6x6.scala 64:23]
    real[2].result <= Core_2.io.result @[calc6x6.scala 64:23]
    Core_2.io.flag <= real[2].flag @[calc6x6.scala 64:23]
    Core_2.io.in_b <= real[2].in_b @[calc6x6.scala 64:23]
    Core_2.io.w_a <= real[2].w_a @[calc6x6.scala 64:23]
    real[3].result <= Core_3.io.result @[calc6x6.scala 64:23]
    Core_3.io.flag <= real[3].flag @[calc6x6.scala 64:23]
    Core_3.io.in_b <= real[3].in_b @[calc6x6.scala 64:23]
    Core_3.io.w_a <= real[3].w_a @[calc6x6.scala 64:23]
    real[4].result <= Core_4.io.result @[calc6x6.scala 64:23]
    Core_4.io.flag <= real[4].flag @[calc6x6.scala 64:23]
    Core_4.io.in_b <= real[4].in_b @[calc6x6.scala 64:23]
    Core_4.io.w_a <= real[4].w_a @[calc6x6.scala 64:23]
    real[5].result <= Core_5.io.result @[calc6x6.scala 64:23]
    Core_5.io.flag <= real[5].flag @[calc6x6.scala 64:23]
    Core_5.io.in_b <= real[5].in_b @[calc6x6.scala 64:23]
    Core_5.io.w_a <= real[5].w_a @[calc6x6.scala 64:23]
    real[6].result <= Core_6.io.result @[calc6x6.scala 64:23]
    Core_6.io.flag <= real[6].flag @[calc6x6.scala 64:23]
    Core_6.io.in_b <= real[6].in_b @[calc6x6.scala 64:23]
    Core_6.io.w_a <= real[6].w_a @[calc6x6.scala 64:23]
    real[7].result <= Core_7.io.result @[calc6x6.scala 64:23]
    Core_7.io.flag <= real[7].flag @[calc6x6.scala 64:23]
    Core_7.io.in_b <= real[7].in_b @[calc6x6.scala 64:23]
    Core_7.io.w_a <= real[7].w_a @[calc6x6.scala 64:23]
    real[8].result <= Core_8.io.result @[calc6x6.scala 64:23]
    Core_8.io.flag <= real[8].flag @[calc6x6.scala 64:23]
    Core_8.io.in_b <= real[8].in_b @[calc6x6.scala 64:23]
    Core_8.io.w_a <= real[8].w_a @[calc6x6.scala 64:23]
    real[9].result <= Core_9.io.result @[calc6x6.scala 64:23]
    Core_9.io.flag <= real[9].flag @[calc6x6.scala 64:23]
    Core_9.io.in_b <= real[9].in_b @[calc6x6.scala 64:23]
    Core_9.io.w_a <= real[9].w_a @[calc6x6.scala 64:23]
    real[10].result <= Core_10.io.result @[calc6x6.scala 64:23]
    Core_10.io.flag <= real[10].flag @[calc6x6.scala 64:23]
    Core_10.io.in_b <= real[10].in_b @[calc6x6.scala 64:23]
    Core_10.io.w_a <= real[10].w_a @[calc6x6.scala 64:23]
    real[11].result <= Core_11.io.result @[calc6x6.scala 64:23]
    Core_11.io.flag <= real[11].flag @[calc6x6.scala 64:23]
    Core_11.io.in_b <= real[11].in_b @[calc6x6.scala 64:23]
    Core_11.io.w_a <= real[11].w_a @[calc6x6.scala 64:23]
    real[12].result <= Core_12.io.result @[calc6x6.scala 64:23]
    Core_12.io.flag <= real[12].flag @[calc6x6.scala 64:23]
    Core_12.io.in_b <= real[12].in_b @[calc6x6.scala 64:23]
    Core_12.io.w_a <= real[12].w_a @[calc6x6.scala 64:23]
    real[13].result <= Core_13.io.result @[calc6x6.scala 64:23]
    Core_13.io.flag <= real[13].flag @[calc6x6.scala 64:23]
    Core_13.io.in_b <= real[13].in_b @[calc6x6.scala 64:23]
    Core_13.io.w_a <= real[13].w_a @[calc6x6.scala 64:23]
    real[14].result <= Core_14.io.result @[calc6x6.scala 64:23]
    Core_14.io.flag <= real[14].flag @[calc6x6.scala 64:23]
    Core_14.io.in_b <= real[14].in_b @[calc6x6.scala 64:23]
    Core_14.io.w_a <= real[14].w_a @[calc6x6.scala 64:23]
    real[15].result <= Core_15.io.result @[calc6x6.scala 64:23]
    Core_15.io.flag <= real[15].flag @[calc6x6.scala 64:23]
    Core_15.io.in_b <= real[15].in_b @[calc6x6.scala 64:23]
    Core_15.io.w_a <= real[15].w_a @[calc6x6.scala 64:23]
    wire _real_0_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[0].flag <= _real_0_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_0_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_0_w_a_WIRE <= _real_0_w_a_T @[calc6x6.scala 67:36]
    real[0].w_a <= _real_0_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_0_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_0_in_b_WIRE <= _real_0_in_b_T @[calc6x6.scala 68:37]
    real[0].in_b <= _real_0_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_1_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[1].flag <= _real_1_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_1_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_1_w_a_WIRE <= _real_1_w_a_T @[calc6x6.scala 67:36]
    real[1].w_a <= _real_1_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_1_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_1_in_b_WIRE <= _real_1_in_b_T @[calc6x6.scala 68:37]
    real[1].in_b <= _real_1_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_2_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[2].flag <= _real_2_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_2_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_2_w_a_WIRE <= _real_2_w_a_T @[calc6x6.scala 67:36]
    real[2].w_a <= _real_2_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_2_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_2_in_b_WIRE <= _real_2_in_b_T @[calc6x6.scala 68:37]
    real[2].in_b <= _real_2_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_3_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[3].flag <= _real_3_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_3_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_3_w_a_WIRE <= _real_3_w_a_T @[calc6x6.scala 67:36]
    real[3].w_a <= _real_3_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_3_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_3_in_b_WIRE <= _real_3_in_b_T @[calc6x6.scala 68:37]
    real[3].in_b <= _real_3_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_4_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[4].flag <= _real_4_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_4_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_4_w_a_WIRE <= _real_4_w_a_T @[calc6x6.scala 67:36]
    real[4].w_a <= _real_4_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_4_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_4_in_b_WIRE <= _real_4_in_b_T @[calc6x6.scala 68:37]
    real[4].in_b <= _real_4_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_5_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[5].flag <= _real_5_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_5_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_5_w_a_WIRE <= _real_5_w_a_T @[calc6x6.scala 67:36]
    real[5].w_a <= _real_5_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_5_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_5_in_b_WIRE <= _real_5_in_b_T @[calc6x6.scala 68:37]
    real[5].in_b <= _real_5_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_6_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[6].flag <= _real_6_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_6_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_6_w_a_WIRE <= _real_6_w_a_T @[calc6x6.scala 67:36]
    real[6].w_a <= _real_6_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_6_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_6_in_b_WIRE <= _real_6_in_b_T @[calc6x6.scala 68:37]
    real[6].in_b <= _real_6_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_7_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[7].flag <= _real_7_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_7_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_7_w_a_WIRE <= _real_7_w_a_T @[calc6x6.scala 67:36]
    real[7].w_a <= _real_7_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_7_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_7_in_b_WIRE <= _real_7_in_b_T @[calc6x6.scala 68:37]
    real[7].in_b <= _real_7_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_8_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[8].flag <= _real_8_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_8_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_8_w_a_WIRE <= _real_8_w_a_T @[calc6x6.scala 67:36]
    real[8].w_a <= _real_8_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_8_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_8_in_b_WIRE <= _real_8_in_b_T @[calc6x6.scala 68:37]
    real[8].in_b <= _real_8_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_9_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[9].flag <= _real_9_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_9_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_9_w_a_WIRE <= _real_9_w_a_T @[calc6x6.scala 67:36]
    real[9].w_a <= _real_9_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_9_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_9_in_b_WIRE <= _real_9_in_b_T @[calc6x6.scala 68:37]
    real[9].in_b <= _real_9_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_10_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_10_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[10].flag <= _real_10_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_10_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_10_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_10_w_a_WIRE <= _real_10_w_a_T @[calc6x6.scala 67:36]
    real[10].w_a <= _real_10_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_10_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_10_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_10_in_b_WIRE <= _real_10_in_b_T @[calc6x6.scala 68:37]
    real[10].in_b <= _real_10_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_11_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_11_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[11].flag <= _real_11_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_11_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_11_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_11_w_a_WIRE <= _real_11_w_a_T @[calc6x6.scala 67:36]
    real[11].w_a <= _real_11_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_11_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_11_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_11_in_b_WIRE <= _real_11_in_b_T @[calc6x6.scala 68:37]
    real[11].in_b <= _real_11_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_12_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_12_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[12].flag <= _real_12_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_12_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_12_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_12_w_a_WIRE <= _real_12_w_a_T @[calc6x6.scala 67:36]
    real[12].w_a <= _real_12_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_12_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_12_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_12_in_b_WIRE <= _real_12_in_b_T @[calc6x6.scala 68:37]
    real[12].in_b <= _real_12_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_13_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_13_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[13].flag <= _real_13_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_13_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_13_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_13_w_a_WIRE <= _real_13_w_a_T @[calc6x6.scala 67:36]
    real[13].w_a <= _real_13_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_13_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_13_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_13_in_b_WIRE <= _real_13_in_b_T @[calc6x6.scala 68:37]
    real[13].in_b <= _real_13_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_14_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_14_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[14].flag <= _real_14_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_14_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_14_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_14_w_a_WIRE <= _real_14_w_a_T @[calc6x6.scala 67:36]
    real[14].w_a <= _real_14_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_14_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_14_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_14_in_b_WIRE <= _real_14_in_b_T @[calc6x6.scala 68:37]
    real[14].in_b <= _real_14_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_15_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_15_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[15].flag <= _real_15_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_15_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_15_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_15_w_a_WIRE <= _real_15_w_a_T @[calc6x6.scala 67:36]
    real[15].w_a <= _real_15_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_15_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_15_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_15_in_b_WIRE <= _real_15_in_b_T @[calc6x6.scala 68:37]
    real[15].in_b <= _real_15_in_b_WIRE @[calc6x6.scala 68:22]
    inst Core_16 of Core_16 @[calc6x6.scala 71:44]
    Core_16.clock <= clock
    Core_16.reset <= reset
    inst Core_17 of Core_17 @[calc6x6.scala 71:44]
    Core_17.clock <= clock
    Core_17.reset <= reset
    inst Core_18 of Core_18 @[calc6x6.scala 71:44]
    Core_18.clock <= clock
    Core_18.reset <= reset
    inst Core_19 of Core_19 @[calc6x6.scala 71:44]
    Core_19.clock <= clock
    Core_19.reset <= reset
    inst Core_20 of Core_20 @[calc6x6.scala 71:44]
    Core_20.clock <= clock
    Core_20.reset <= reset
    inst Core_21 of Core_21 @[calc6x6.scala 71:44]
    Core_21.clock <= clock
    Core_21.reset <= reset
    inst Core_22 of Core_22 @[calc6x6.scala 71:44]
    Core_22.clock <= clock
    Core_22.reset <= reset
    inst Core_23 of Core_23 @[calc6x6.scala 71:44]
    Core_23.clock <= clock
    Core_23.reset <= reset
    inst Core_24 of Core_24 @[calc6x6.scala 71:44]
    Core_24.clock <= clock
    Core_24.reset <= reset
    inst Core_25 of Core_25 @[calc6x6.scala 71:44]
    Core_25.clock <= clock
    Core_25.reset <= reset
    wire comp1 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 71:24]
    comp1[0].result <= Core_16.io.result @[calc6x6.scala 71:24]
    Core_16.io.flag <= comp1[0].flag @[calc6x6.scala 71:24]
    Core_16.io.in_b <= comp1[0].in_b @[calc6x6.scala 71:24]
    Core_16.io.w_a <= comp1[0].w_a @[calc6x6.scala 71:24]
    comp1[1].result <= Core_17.io.result @[calc6x6.scala 71:24]
    Core_17.io.flag <= comp1[1].flag @[calc6x6.scala 71:24]
    Core_17.io.in_b <= comp1[1].in_b @[calc6x6.scala 71:24]
    Core_17.io.w_a <= comp1[1].w_a @[calc6x6.scala 71:24]
    comp1[2].result <= Core_18.io.result @[calc6x6.scala 71:24]
    Core_18.io.flag <= comp1[2].flag @[calc6x6.scala 71:24]
    Core_18.io.in_b <= comp1[2].in_b @[calc6x6.scala 71:24]
    Core_18.io.w_a <= comp1[2].w_a @[calc6x6.scala 71:24]
    comp1[3].result <= Core_19.io.result @[calc6x6.scala 71:24]
    Core_19.io.flag <= comp1[3].flag @[calc6x6.scala 71:24]
    Core_19.io.in_b <= comp1[3].in_b @[calc6x6.scala 71:24]
    Core_19.io.w_a <= comp1[3].w_a @[calc6x6.scala 71:24]
    comp1[4].result <= Core_20.io.result @[calc6x6.scala 71:24]
    Core_20.io.flag <= comp1[4].flag @[calc6x6.scala 71:24]
    Core_20.io.in_b <= comp1[4].in_b @[calc6x6.scala 71:24]
    Core_20.io.w_a <= comp1[4].w_a @[calc6x6.scala 71:24]
    comp1[5].result <= Core_21.io.result @[calc6x6.scala 71:24]
    Core_21.io.flag <= comp1[5].flag @[calc6x6.scala 71:24]
    Core_21.io.in_b <= comp1[5].in_b @[calc6x6.scala 71:24]
    Core_21.io.w_a <= comp1[5].w_a @[calc6x6.scala 71:24]
    comp1[6].result <= Core_22.io.result @[calc6x6.scala 71:24]
    Core_22.io.flag <= comp1[6].flag @[calc6x6.scala 71:24]
    Core_22.io.in_b <= comp1[6].in_b @[calc6x6.scala 71:24]
    Core_22.io.w_a <= comp1[6].w_a @[calc6x6.scala 71:24]
    comp1[7].result <= Core_23.io.result @[calc6x6.scala 71:24]
    Core_23.io.flag <= comp1[7].flag @[calc6x6.scala 71:24]
    Core_23.io.in_b <= comp1[7].in_b @[calc6x6.scala 71:24]
    Core_23.io.w_a <= comp1[7].w_a @[calc6x6.scala 71:24]
    comp1[8].result <= Core_24.io.result @[calc6x6.scala 71:24]
    Core_24.io.flag <= comp1[8].flag @[calc6x6.scala 71:24]
    Core_24.io.in_b <= comp1[8].in_b @[calc6x6.scala 71:24]
    Core_24.io.w_a <= comp1[8].w_a @[calc6x6.scala 71:24]
    comp1[9].result <= Core_25.io.result @[calc6x6.scala 71:24]
    Core_25.io.flag <= comp1[9].flag @[calc6x6.scala 71:24]
    Core_25.io.in_b <= comp1[9].in_b @[calc6x6.scala 71:24]
    Core_25.io.w_a <= comp1[9].w_a @[calc6x6.scala 71:24]
    inst Core_26 of Core_26 @[calc6x6.scala 72:44]
    Core_26.clock <= clock
    Core_26.reset <= reset
    inst Core_27 of Core_27 @[calc6x6.scala 72:44]
    Core_27.clock <= clock
    Core_27.reset <= reset
    inst Core_28 of Core_28 @[calc6x6.scala 72:44]
    Core_28.clock <= clock
    Core_28.reset <= reset
    inst Core_29 of Core_29 @[calc6x6.scala 72:44]
    Core_29.clock <= clock
    Core_29.reset <= reset
    inst Core_30 of Core_30 @[calc6x6.scala 72:44]
    Core_30.clock <= clock
    Core_30.reset <= reset
    inst Core_31 of Core_31 @[calc6x6.scala 72:44]
    Core_31.clock <= clock
    Core_31.reset <= reset
    inst Core_32 of Core_32 @[calc6x6.scala 72:44]
    Core_32.clock <= clock
    Core_32.reset <= reset
    inst Core_33 of Core_33 @[calc6x6.scala 72:44]
    Core_33.clock <= clock
    Core_33.reset <= reset
    inst Core_34 of Core_34 @[calc6x6.scala 72:44]
    Core_34.clock <= clock
    Core_34.reset <= reset
    inst Core_35 of Core_35 @[calc6x6.scala 72:44]
    Core_35.clock <= clock
    Core_35.reset <= reset
    wire comp2 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 72:24]
    comp2[0].result <= Core_26.io.result @[calc6x6.scala 72:24]
    Core_26.io.flag <= comp2[0].flag @[calc6x6.scala 72:24]
    Core_26.io.in_b <= comp2[0].in_b @[calc6x6.scala 72:24]
    Core_26.io.w_a <= comp2[0].w_a @[calc6x6.scala 72:24]
    comp2[1].result <= Core_27.io.result @[calc6x6.scala 72:24]
    Core_27.io.flag <= comp2[1].flag @[calc6x6.scala 72:24]
    Core_27.io.in_b <= comp2[1].in_b @[calc6x6.scala 72:24]
    Core_27.io.w_a <= comp2[1].w_a @[calc6x6.scala 72:24]
    comp2[2].result <= Core_28.io.result @[calc6x6.scala 72:24]
    Core_28.io.flag <= comp2[2].flag @[calc6x6.scala 72:24]
    Core_28.io.in_b <= comp2[2].in_b @[calc6x6.scala 72:24]
    Core_28.io.w_a <= comp2[2].w_a @[calc6x6.scala 72:24]
    comp2[3].result <= Core_29.io.result @[calc6x6.scala 72:24]
    Core_29.io.flag <= comp2[3].flag @[calc6x6.scala 72:24]
    Core_29.io.in_b <= comp2[3].in_b @[calc6x6.scala 72:24]
    Core_29.io.w_a <= comp2[3].w_a @[calc6x6.scala 72:24]
    comp2[4].result <= Core_30.io.result @[calc6x6.scala 72:24]
    Core_30.io.flag <= comp2[4].flag @[calc6x6.scala 72:24]
    Core_30.io.in_b <= comp2[4].in_b @[calc6x6.scala 72:24]
    Core_30.io.w_a <= comp2[4].w_a @[calc6x6.scala 72:24]
    comp2[5].result <= Core_31.io.result @[calc6x6.scala 72:24]
    Core_31.io.flag <= comp2[5].flag @[calc6x6.scala 72:24]
    Core_31.io.in_b <= comp2[5].in_b @[calc6x6.scala 72:24]
    Core_31.io.w_a <= comp2[5].w_a @[calc6x6.scala 72:24]
    comp2[6].result <= Core_32.io.result @[calc6x6.scala 72:24]
    Core_32.io.flag <= comp2[6].flag @[calc6x6.scala 72:24]
    Core_32.io.in_b <= comp2[6].in_b @[calc6x6.scala 72:24]
    Core_32.io.w_a <= comp2[6].w_a @[calc6x6.scala 72:24]
    comp2[7].result <= Core_33.io.result @[calc6x6.scala 72:24]
    Core_33.io.flag <= comp2[7].flag @[calc6x6.scala 72:24]
    Core_33.io.in_b <= comp2[7].in_b @[calc6x6.scala 72:24]
    Core_33.io.w_a <= comp2[7].w_a @[calc6x6.scala 72:24]
    comp2[8].result <= Core_34.io.result @[calc6x6.scala 72:24]
    Core_34.io.flag <= comp2[8].flag @[calc6x6.scala 72:24]
    Core_34.io.in_b <= comp2[8].in_b @[calc6x6.scala 72:24]
    Core_34.io.w_a <= comp2[8].w_a @[calc6x6.scala 72:24]
    comp2[9].result <= Core_35.io.result @[calc6x6.scala 72:24]
    Core_35.io.flag <= comp2[9].flag @[calc6x6.scala 72:24]
    Core_35.io.in_b <= comp2[9].in_b @[calc6x6.scala 72:24]
    Core_35.io.w_a <= comp2[9].w_a @[calc6x6.scala 72:24]
    inst Core_36 of Core_36 @[calc6x6.scala 73:44]
    Core_36.clock <= clock
    Core_36.reset <= reset
    inst Core_37 of Core_37 @[calc6x6.scala 73:44]
    Core_37.clock <= clock
    Core_37.reset <= reset
    inst Core_38 of Core_38 @[calc6x6.scala 73:44]
    Core_38.clock <= clock
    Core_38.reset <= reset
    inst Core_39 of Core_39 @[calc6x6.scala 73:44]
    Core_39.clock <= clock
    Core_39.reset <= reset
    inst Core_40 of Core_40 @[calc6x6.scala 73:44]
    Core_40.clock <= clock
    Core_40.reset <= reset
    inst Core_41 of Core_41 @[calc6x6.scala 73:44]
    Core_41.clock <= clock
    Core_41.reset <= reset
    inst Core_42 of Core_42 @[calc6x6.scala 73:44]
    Core_42.clock <= clock
    Core_42.reset <= reset
    inst Core_43 of Core_43 @[calc6x6.scala 73:44]
    Core_43.clock <= clock
    Core_43.reset <= reset
    inst Core_44 of Core_44 @[calc6x6.scala 73:44]
    Core_44.clock <= clock
    Core_44.reset <= reset
    inst Core_45 of Core_45 @[calc6x6.scala 73:44]
    Core_45.clock <= clock
    Core_45.reset <= reset
    wire comp3 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 73:24]
    comp3[0].result <= Core_36.io.result @[calc6x6.scala 73:24]
    Core_36.io.flag <= comp3[0].flag @[calc6x6.scala 73:24]
    Core_36.io.in_b <= comp3[0].in_b @[calc6x6.scala 73:24]
    Core_36.io.w_a <= comp3[0].w_a @[calc6x6.scala 73:24]
    comp3[1].result <= Core_37.io.result @[calc6x6.scala 73:24]
    Core_37.io.flag <= comp3[1].flag @[calc6x6.scala 73:24]
    Core_37.io.in_b <= comp3[1].in_b @[calc6x6.scala 73:24]
    Core_37.io.w_a <= comp3[1].w_a @[calc6x6.scala 73:24]
    comp3[2].result <= Core_38.io.result @[calc6x6.scala 73:24]
    Core_38.io.flag <= comp3[2].flag @[calc6x6.scala 73:24]
    Core_38.io.in_b <= comp3[2].in_b @[calc6x6.scala 73:24]
    Core_38.io.w_a <= comp3[2].w_a @[calc6x6.scala 73:24]
    comp3[3].result <= Core_39.io.result @[calc6x6.scala 73:24]
    Core_39.io.flag <= comp3[3].flag @[calc6x6.scala 73:24]
    Core_39.io.in_b <= comp3[3].in_b @[calc6x6.scala 73:24]
    Core_39.io.w_a <= comp3[3].w_a @[calc6x6.scala 73:24]
    comp3[4].result <= Core_40.io.result @[calc6x6.scala 73:24]
    Core_40.io.flag <= comp3[4].flag @[calc6x6.scala 73:24]
    Core_40.io.in_b <= comp3[4].in_b @[calc6x6.scala 73:24]
    Core_40.io.w_a <= comp3[4].w_a @[calc6x6.scala 73:24]
    comp3[5].result <= Core_41.io.result @[calc6x6.scala 73:24]
    Core_41.io.flag <= comp3[5].flag @[calc6x6.scala 73:24]
    Core_41.io.in_b <= comp3[5].in_b @[calc6x6.scala 73:24]
    Core_41.io.w_a <= comp3[5].w_a @[calc6x6.scala 73:24]
    comp3[6].result <= Core_42.io.result @[calc6x6.scala 73:24]
    Core_42.io.flag <= comp3[6].flag @[calc6x6.scala 73:24]
    Core_42.io.in_b <= comp3[6].in_b @[calc6x6.scala 73:24]
    Core_42.io.w_a <= comp3[6].w_a @[calc6x6.scala 73:24]
    comp3[7].result <= Core_43.io.result @[calc6x6.scala 73:24]
    Core_43.io.flag <= comp3[7].flag @[calc6x6.scala 73:24]
    Core_43.io.in_b <= comp3[7].in_b @[calc6x6.scala 73:24]
    Core_43.io.w_a <= comp3[7].w_a @[calc6x6.scala 73:24]
    comp3[8].result <= Core_44.io.result @[calc6x6.scala 73:24]
    Core_44.io.flag <= comp3[8].flag @[calc6x6.scala 73:24]
    Core_44.io.in_b <= comp3[8].in_b @[calc6x6.scala 73:24]
    Core_44.io.w_a <= comp3[8].w_a @[calc6x6.scala 73:24]
    comp3[9].result <= Core_45.io.result @[calc6x6.scala 73:24]
    Core_45.io.flag <= comp3[9].flag @[calc6x6.scala 73:24]
    Core_45.io.in_b <= comp3[9].in_b @[calc6x6.scala 73:24]
    Core_45.io.w_a <= comp3[9].w_a @[calc6x6.scala 73:24]
    wire _comp1_0_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[0].flag <= _comp1_0_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_0_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_0_w_a_WIRE <= _comp1_0_w_a_T @[calc6x6.scala 78:37]
    comp1[0].w_a <= _comp1_0_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_0_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_0_in_b_WIRE <= _comp1_0_in_b_T @[calc6x6.scala 79:38]
    comp1[0].in_b <= _comp1_0_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_0_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[0].flag <= _comp2_0_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_0_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_0_w_a_WIRE <= _comp2_0_w_a_T @[calc6x6.scala 81:37]
    comp2[0].w_a <= _comp2_0_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_0_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_0_in_b_WIRE <= _comp2_0_in_b_T @[calc6x6.scala 82:38]
    comp2[0].in_b <= _comp2_0_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_0_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[0].flag <= _comp3_0_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_0_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_0_w_a_WIRE <= _comp3_0_w_a_T @[calc6x6.scala 84:37]
    comp3[0].w_a <= _comp3_0_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_0_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_0_in_b_WIRE <= _comp3_0_in_b_T @[calc6x6.scala 85:38]
    comp3[0].in_b <= _comp3_0_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_1_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[1].flag <= _comp1_1_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_1_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_1_w_a_WIRE <= _comp1_1_w_a_T @[calc6x6.scala 78:37]
    comp1[1].w_a <= _comp1_1_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_1_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_1_in_b_WIRE <= _comp1_1_in_b_T @[calc6x6.scala 79:38]
    comp1[1].in_b <= _comp1_1_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_1_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[1].flag <= _comp2_1_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_1_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_1_w_a_WIRE <= _comp2_1_w_a_T @[calc6x6.scala 81:37]
    comp2[1].w_a <= _comp2_1_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_1_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_1_in_b_WIRE <= _comp2_1_in_b_T @[calc6x6.scala 82:38]
    comp2[1].in_b <= _comp2_1_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_1_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[1].flag <= _comp3_1_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_1_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_1_w_a_WIRE <= _comp3_1_w_a_T @[calc6x6.scala 84:37]
    comp3[1].w_a <= _comp3_1_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_1_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_1_in_b_WIRE <= _comp3_1_in_b_T @[calc6x6.scala 85:38]
    comp3[1].in_b <= _comp3_1_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_2_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[2].flag <= _comp1_2_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_2_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_2_w_a_WIRE <= _comp1_2_w_a_T @[calc6x6.scala 78:37]
    comp1[2].w_a <= _comp1_2_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_2_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_2_in_b_WIRE <= _comp1_2_in_b_T @[calc6x6.scala 79:38]
    comp1[2].in_b <= _comp1_2_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_2_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[2].flag <= _comp2_2_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_2_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_2_w_a_WIRE <= _comp2_2_w_a_T @[calc6x6.scala 81:37]
    comp2[2].w_a <= _comp2_2_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_2_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_2_in_b_WIRE <= _comp2_2_in_b_T @[calc6x6.scala 82:38]
    comp2[2].in_b <= _comp2_2_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_2_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[2].flag <= _comp3_2_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_2_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_2_w_a_WIRE <= _comp3_2_w_a_T @[calc6x6.scala 84:37]
    comp3[2].w_a <= _comp3_2_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_2_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_2_in_b_WIRE <= _comp3_2_in_b_T @[calc6x6.scala 85:38]
    comp3[2].in_b <= _comp3_2_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_3_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[3].flag <= _comp1_3_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_3_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_3_w_a_WIRE <= _comp1_3_w_a_T @[calc6x6.scala 78:37]
    comp1[3].w_a <= _comp1_3_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_3_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_3_in_b_WIRE <= _comp1_3_in_b_T @[calc6x6.scala 79:38]
    comp1[3].in_b <= _comp1_3_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_3_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[3].flag <= _comp2_3_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_3_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_3_w_a_WIRE <= _comp2_3_w_a_T @[calc6x6.scala 81:37]
    comp2[3].w_a <= _comp2_3_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_3_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_3_in_b_WIRE <= _comp2_3_in_b_T @[calc6x6.scala 82:38]
    comp2[3].in_b <= _comp2_3_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_3_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[3].flag <= _comp3_3_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_3_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_3_w_a_WIRE <= _comp3_3_w_a_T @[calc6x6.scala 84:37]
    comp3[3].w_a <= _comp3_3_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_3_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_3_in_b_WIRE <= _comp3_3_in_b_T @[calc6x6.scala 85:38]
    comp3[3].in_b <= _comp3_3_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_4_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[4].flag <= _comp1_4_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_4_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_4_w_a_WIRE <= _comp1_4_w_a_T @[calc6x6.scala 78:37]
    comp1[4].w_a <= _comp1_4_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_4_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_4_in_b_WIRE <= _comp1_4_in_b_T @[calc6x6.scala 79:38]
    comp1[4].in_b <= _comp1_4_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_4_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[4].flag <= _comp2_4_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_4_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_4_w_a_WIRE <= _comp2_4_w_a_T @[calc6x6.scala 81:37]
    comp2[4].w_a <= _comp2_4_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_4_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_4_in_b_WIRE <= _comp2_4_in_b_T @[calc6x6.scala 82:38]
    comp2[4].in_b <= _comp2_4_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_4_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[4].flag <= _comp3_4_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_4_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_4_w_a_WIRE <= _comp3_4_w_a_T @[calc6x6.scala 84:37]
    comp3[4].w_a <= _comp3_4_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_4_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_4_in_b_WIRE <= _comp3_4_in_b_T @[calc6x6.scala 85:38]
    comp3[4].in_b <= _comp3_4_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_5_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[5].flag <= _comp1_5_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_5_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_5_w_a_WIRE <= _comp1_5_w_a_T @[calc6x6.scala 78:37]
    comp1[5].w_a <= _comp1_5_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_5_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_5_in_b_WIRE <= _comp1_5_in_b_T @[calc6x6.scala 79:38]
    comp1[5].in_b <= _comp1_5_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_5_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[5].flag <= _comp2_5_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_5_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_5_w_a_WIRE <= _comp2_5_w_a_T @[calc6x6.scala 81:37]
    comp2[5].w_a <= _comp2_5_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_5_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_5_in_b_WIRE <= _comp2_5_in_b_T @[calc6x6.scala 82:38]
    comp2[5].in_b <= _comp2_5_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_5_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[5].flag <= _comp3_5_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_5_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_5_w_a_WIRE <= _comp3_5_w_a_T @[calc6x6.scala 84:37]
    comp3[5].w_a <= _comp3_5_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_5_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_5_in_b_WIRE <= _comp3_5_in_b_T @[calc6x6.scala 85:38]
    comp3[5].in_b <= _comp3_5_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_6_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[6].flag <= _comp1_6_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_6_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_6_w_a_WIRE <= _comp1_6_w_a_T @[calc6x6.scala 78:37]
    comp1[6].w_a <= _comp1_6_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_6_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_6_in_b_WIRE <= _comp1_6_in_b_T @[calc6x6.scala 79:38]
    comp1[6].in_b <= _comp1_6_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_6_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[6].flag <= _comp2_6_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_6_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_6_w_a_WIRE <= _comp2_6_w_a_T @[calc6x6.scala 81:37]
    comp2[6].w_a <= _comp2_6_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_6_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_6_in_b_WIRE <= _comp2_6_in_b_T @[calc6x6.scala 82:38]
    comp2[6].in_b <= _comp2_6_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_6_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[6].flag <= _comp3_6_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_6_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_6_w_a_WIRE <= _comp3_6_w_a_T @[calc6x6.scala 84:37]
    comp3[6].w_a <= _comp3_6_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_6_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_6_in_b_WIRE <= _comp3_6_in_b_T @[calc6x6.scala 85:38]
    comp3[6].in_b <= _comp3_6_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_7_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[7].flag <= _comp1_7_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_7_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_7_w_a_WIRE <= _comp1_7_w_a_T @[calc6x6.scala 78:37]
    comp1[7].w_a <= _comp1_7_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_7_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_7_in_b_WIRE <= _comp1_7_in_b_T @[calc6x6.scala 79:38]
    comp1[7].in_b <= _comp1_7_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_7_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[7].flag <= _comp2_7_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_7_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_7_w_a_WIRE <= _comp2_7_w_a_T @[calc6x6.scala 81:37]
    comp2[7].w_a <= _comp2_7_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_7_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_7_in_b_WIRE <= _comp2_7_in_b_T @[calc6x6.scala 82:38]
    comp2[7].in_b <= _comp2_7_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_7_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[7].flag <= _comp3_7_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_7_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_7_w_a_WIRE <= _comp3_7_w_a_T @[calc6x6.scala 84:37]
    comp3[7].w_a <= _comp3_7_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_7_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_7_in_b_WIRE <= _comp3_7_in_b_T @[calc6x6.scala 85:38]
    comp3[7].in_b <= _comp3_7_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_8_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[8].flag <= _comp1_8_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_8_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_8_w_a_WIRE <= _comp1_8_w_a_T @[calc6x6.scala 78:37]
    comp1[8].w_a <= _comp1_8_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_8_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_8_in_b_WIRE <= _comp1_8_in_b_T @[calc6x6.scala 79:38]
    comp1[8].in_b <= _comp1_8_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_8_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[8].flag <= _comp2_8_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_8_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_8_w_a_WIRE <= _comp2_8_w_a_T @[calc6x6.scala 81:37]
    comp2[8].w_a <= _comp2_8_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_8_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_8_in_b_WIRE <= _comp2_8_in_b_T @[calc6x6.scala 82:38]
    comp2[8].in_b <= _comp2_8_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_8_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[8].flag <= _comp3_8_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_8_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_8_w_a_WIRE <= _comp3_8_w_a_T @[calc6x6.scala 84:37]
    comp3[8].w_a <= _comp3_8_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_8_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_8_in_b_WIRE <= _comp3_8_in_b_T @[calc6x6.scala 85:38]
    comp3[8].in_b <= _comp3_8_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_9_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[9].flag <= _comp1_9_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_9_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_9_w_a_WIRE <= _comp1_9_w_a_T @[calc6x6.scala 78:37]
    comp1[9].w_a <= _comp1_9_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_9_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_9_in_b_WIRE <= _comp1_9_in_b_T @[calc6x6.scala 79:38]
    comp1[9].in_b <= _comp1_9_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_9_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[9].flag <= _comp2_9_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_9_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_9_w_a_WIRE <= _comp2_9_w_a_T @[calc6x6.scala 81:37]
    comp2[9].w_a <= _comp2_9_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_9_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_9_in_b_WIRE <= _comp2_9_in_b_T @[calc6x6.scala 82:38]
    comp2[9].in_b <= _comp2_9_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_9_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[9].flag <= _comp3_9_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_9_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_9_w_a_WIRE <= _comp3_9_w_a_T @[calc6x6.scala 84:37]
    comp3[9].w_a <= _comp3_9_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_9_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_9_in_b_WIRE <= _comp3_9_in_b_T @[calc6x6.scala 85:38]
    comp3[9].in_b <= _comp3_9_in_b_WIRE @[calc6x6.scala 85:23]
    wire _io_output_WIRE : {mat : SInt<37>[16]} @[calc6x6.scala 87:30]
    node _io_output_T = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[0] <= _io_output_T @[calc6x6.scala 87:30]
    node _io_output_T_1 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[1] <= _io_output_T_1 @[calc6x6.scala 87:30]
    node _io_output_T_2 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[2] <= _io_output_T_2 @[calc6x6.scala 87:30]
    node _io_output_T_3 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[3] <= _io_output_T_3 @[calc6x6.scala 87:30]
    node _io_output_T_4 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[4] <= _io_output_T_4 @[calc6x6.scala 87:30]
    node _io_output_T_5 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[5] <= _io_output_T_5 @[calc6x6.scala 87:30]
    node _io_output_T_6 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[6] <= _io_output_T_6 @[calc6x6.scala 87:30]
    node _io_output_T_7 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[7] <= _io_output_T_7 @[calc6x6.scala 87:30]
    node _io_output_T_8 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[8] <= _io_output_T_8 @[calc6x6.scala 87:30]
    node _io_output_T_9 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[9] <= _io_output_T_9 @[calc6x6.scala 87:30]
    node _io_output_T_10 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[10] <= _io_output_T_10 @[calc6x6.scala 87:30]
    node _io_output_T_11 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[11] <= _io_output_T_11 @[calc6x6.scala 87:30]
    node _io_output_T_12 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[12] <= _io_output_T_12 @[calc6x6.scala 87:30]
    node _io_output_T_13 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[13] <= _io_output_T_13 @[calc6x6.scala 87:30]
    node _io_output_T_14 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[14] <= _io_output_T_14 @[calc6x6.scala 87:30]
    node _io_output_T_15 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[15] <= _io_output_T_15 @[calc6x6.scala 87:30]
    io.output.mat[0] <= _io_output_WIRE.mat[0] @[calc6x6.scala 87:15]
    io.output.mat[1] <= _io_output_WIRE.mat[1] @[calc6x6.scala 87:15]
    io.output.mat[2] <= _io_output_WIRE.mat[2] @[calc6x6.scala 87:15]
    io.output.mat[3] <= _io_output_WIRE.mat[3] @[calc6x6.scala 87:15]
    io.output.mat[4] <= _io_output_WIRE.mat[4] @[calc6x6.scala 87:15]
    io.output.mat[5] <= _io_output_WIRE.mat[5] @[calc6x6.scala 87:15]
    io.output.mat[6] <= _io_output_WIRE.mat[6] @[calc6x6.scala 87:15]
    io.output.mat[7] <= _io_output_WIRE.mat[7] @[calc6x6.scala 87:15]
    io.output.mat[8] <= _io_output_WIRE.mat[8] @[calc6x6.scala 87:15]
    io.output.mat[9] <= _io_output_WIRE.mat[9] @[calc6x6.scala 87:15]
    io.output.mat[10] <= _io_output_WIRE.mat[10] @[calc6x6.scala 87:15]
    io.output.mat[11] <= _io_output_WIRE.mat[11] @[calc6x6.scala 87:15]
    io.output.mat[12] <= _io_output_WIRE.mat[12] @[calc6x6.scala 87:15]
    io.output.mat[13] <= _io_output_WIRE.mat[13] @[calc6x6.scala 87:15]
    io.output.mat[14] <= _io_output_WIRE.mat[14] @[calc6x6.scala 87:15]
    io.output.mat[15] <= _io_output_WIRE.mat[15] @[calc6x6.scala 87:15]
    io.valid_out <= UInt<1>("h00") @[calc6x6.scala 88:18]
    wire _reg1_WIRE : {mat_real : SInt<18>[36], mat_comp : SInt<18>[12]} @[calc6x6.scala 91:36]
    node _reg1_T = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[0] <= _reg1_T @[calc6x6.scala 91:36]
    node _reg1_T_1 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[1] <= _reg1_T_1 @[calc6x6.scala 91:36]
    node _reg1_T_2 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[2] <= _reg1_T_2 @[calc6x6.scala 91:36]
    node _reg1_T_3 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[3] <= _reg1_T_3 @[calc6x6.scala 91:36]
    node _reg1_T_4 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[4] <= _reg1_T_4 @[calc6x6.scala 91:36]
    node _reg1_T_5 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[5] <= _reg1_T_5 @[calc6x6.scala 91:36]
    node _reg1_T_6 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[6] <= _reg1_T_6 @[calc6x6.scala 91:36]
    node _reg1_T_7 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[7] <= _reg1_T_7 @[calc6x6.scala 91:36]
    node _reg1_T_8 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[8] <= _reg1_T_8 @[calc6x6.scala 91:36]
    node _reg1_T_9 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[9] <= _reg1_T_9 @[calc6x6.scala 91:36]
    node _reg1_T_10 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[10] <= _reg1_T_10 @[calc6x6.scala 91:36]
    node _reg1_T_11 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[11] <= _reg1_T_11 @[calc6x6.scala 91:36]
    node _reg1_T_12 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[0] <= _reg1_T_12 @[calc6x6.scala 91:36]
    node _reg1_T_13 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[1] <= _reg1_T_13 @[calc6x6.scala 91:36]
    node _reg1_T_14 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[2] <= _reg1_T_14 @[calc6x6.scala 91:36]
    node _reg1_T_15 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[3] <= _reg1_T_15 @[calc6x6.scala 91:36]
    node _reg1_T_16 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[4] <= _reg1_T_16 @[calc6x6.scala 91:36]
    node _reg1_T_17 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[5] <= _reg1_T_17 @[calc6x6.scala 91:36]
    node _reg1_T_18 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[6] <= _reg1_T_18 @[calc6x6.scala 91:36]
    node _reg1_T_19 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[7] <= _reg1_T_19 @[calc6x6.scala 91:36]
    node _reg1_T_20 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[8] <= _reg1_T_20 @[calc6x6.scala 91:36]
    node _reg1_T_21 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[9] <= _reg1_T_21 @[calc6x6.scala 91:36]
    node _reg1_T_22 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[10] <= _reg1_T_22 @[calc6x6.scala 91:36]
    node _reg1_T_23 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[11] <= _reg1_T_23 @[calc6x6.scala 91:36]
    node _reg1_T_24 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[12] <= _reg1_T_24 @[calc6x6.scala 91:36]
    node _reg1_T_25 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[13] <= _reg1_T_25 @[calc6x6.scala 91:36]
    node _reg1_T_26 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[14] <= _reg1_T_26 @[calc6x6.scala 91:36]
    node _reg1_T_27 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[15] <= _reg1_T_27 @[calc6x6.scala 91:36]
    node _reg1_T_28 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[16] <= _reg1_T_28 @[calc6x6.scala 91:36]
    node _reg1_T_29 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[17] <= _reg1_T_29 @[calc6x6.scala 91:36]
    node _reg1_T_30 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[18] <= _reg1_T_30 @[calc6x6.scala 91:36]
    node _reg1_T_31 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[19] <= _reg1_T_31 @[calc6x6.scala 91:36]
    node _reg1_T_32 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[20] <= _reg1_T_32 @[calc6x6.scala 91:36]
    node _reg1_T_33 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[21] <= _reg1_T_33 @[calc6x6.scala 91:36]
    node _reg1_T_34 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[22] <= _reg1_T_34 @[calc6x6.scala 91:36]
    node _reg1_T_35 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[23] <= _reg1_T_35 @[calc6x6.scala 91:36]
    node _reg1_T_36 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[24] <= _reg1_T_36 @[calc6x6.scala 91:36]
    node _reg1_T_37 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[25] <= _reg1_T_37 @[calc6x6.scala 91:36]
    node _reg1_T_38 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[26] <= _reg1_T_38 @[calc6x6.scala 91:36]
    node _reg1_T_39 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[27] <= _reg1_T_39 @[calc6x6.scala 91:36]
    node _reg1_T_40 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[28] <= _reg1_T_40 @[calc6x6.scala 91:36]
    node _reg1_T_41 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[29] <= _reg1_T_41 @[calc6x6.scala 91:36]
    node _reg1_T_42 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[30] <= _reg1_T_42 @[calc6x6.scala 91:36]
    node _reg1_T_43 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[31] <= _reg1_T_43 @[calc6x6.scala 91:36]
    node _reg1_T_44 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[32] <= _reg1_T_44 @[calc6x6.scala 91:36]
    node _reg1_T_45 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[33] <= _reg1_T_45 @[calc6x6.scala 91:36]
    node _reg1_T_46 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[34] <= _reg1_T_46 @[calc6x6.scala 91:36]
    node _reg1_T_47 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[35] <= _reg1_T_47 @[calc6x6.scala 91:36]
    reg reg1 : {mat_real : SInt<18>[36], mat_comp : SInt<18>[12]}, clock with : (reset => (reset, _reg1_WIRE)) @[calc6x6.scala 91:23]
    wire _reg2_WIRE : {mat_real : SInt<20>[36], mat_comp : SInt<20>[10]} @[calc6x6.scala 92:36]
    node _reg2_T = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[0] <= _reg2_T @[calc6x6.scala 92:36]
    node _reg2_T_1 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[1] <= _reg2_T_1 @[calc6x6.scala 92:36]
    node _reg2_T_2 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[2] <= _reg2_T_2 @[calc6x6.scala 92:36]
    node _reg2_T_3 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[3] <= _reg2_T_3 @[calc6x6.scala 92:36]
    node _reg2_T_4 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[4] <= _reg2_T_4 @[calc6x6.scala 92:36]
    node _reg2_T_5 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[5] <= _reg2_T_5 @[calc6x6.scala 92:36]
    node _reg2_T_6 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[6] <= _reg2_T_6 @[calc6x6.scala 92:36]
    node _reg2_T_7 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[7] <= _reg2_T_7 @[calc6x6.scala 92:36]
    node _reg2_T_8 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[8] <= _reg2_T_8 @[calc6x6.scala 92:36]
    node _reg2_T_9 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[9] <= _reg2_T_9 @[calc6x6.scala 92:36]
    node _reg2_T_10 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[0] <= _reg2_T_10 @[calc6x6.scala 92:36]
    node _reg2_T_11 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[1] <= _reg2_T_11 @[calc6x6.scala 92:36]
    node _reg2_T_12 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[2] <= _reg2_T_12 @[calc6x6.scala 92:36]
    node _reg2_T_13 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[3] <= _reg2_T_13 @[calc6x6.scala 92:36]
    node _reg2_T_14 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[4] <= _reg2_T_14 @[calc6x6.scala 92:36]
    node _reg2_T_15 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[5] <= _reg2_T_15 @[calc6x6.scala 92:36]
    node _reg2_T_16 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[6] <= _reg2_T_16 @[calc6x6.scala 92:36]
    node _reg2_T_17 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[7] <= _reg2_T_17 @[calc6x6.scala 92:36]
    node _reg2_T_18 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[8] <= _reg2_T_18 @[calc6x6.scala 92:36]
    node _reg2_T_19 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[9] <= _reg2_T_19 @[calc6x6.scala 92:36]
    node _reg2_T_20 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[10] <= _reg2_T_20 @[calc6x6.scala 92:36]
    node _reg2_T_21 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[11] <= _reg2_T_21 @[calc6x6.scala 92:36]
    node _reg2_T_22 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[12] <= _reg2_T_22 @[calc6x6.scala 92:36]
    node _reg2_T_23 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[13] <= _reg2_T_23 @[calc6x6.scala 92:36]
    node _reg2_T_24 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[14] <= _reg2_T_24 @[calc6x6.scala 92:36]
    node _reg2_T_25 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[15] <= _reg2_T_25 @[calc6x6.scala 92:36]
    node _reg2_T_26 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[16] <= _reg2_T_26 @[calc6x6.scala 92:36]
    node _reg2_T_27 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[17] <= _reg2_T_27 @[calc6x6.scala 92:36]
    node _reg2_T_28 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[18] <= _reg2_T_28 @[calc6x6.scala 92:36]
    node _reg2_T_29 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[19] <= _reg2_T_29 @[calc6x6.scala 92:36]
    node _reg2_T_30 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[20] <= _reg2_T_30 @[calc6x6.scala 92:36]
    node _reg2_T_31 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[21] <= _reg2_T_31 @[calc6x6.scala 92:36]
    node _reg2_T_32 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[22] <= _reg2_T_32 @[calc6x6.scala 92:36]
    node _reg2_T_33 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[23] <= _reg2_T_33 @[calc6x6.scala 92:36]
    node _reg2_T_34 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[24] <= _reg2_T_34 @[calc6x6.scala 92:36]
    node _reg2_T_35 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[25] <= _reg2_T_35 @[calc6x6.scala 92:36]
    node _reg2_T_36 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[26] <= _reg2_T_36 @[calc6x6.scala 92:36]
    node _reg2_T_37 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[27] <= _reg2_T_37 @[calc6x6.scala 92:36]
    node _reg2_T_38 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[28] <= _reg2_T_38 @[calc6x6.scala 92:36]
    node _reg2_T_39 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[29] <= _reg2_T_39 @[calc6x6.scala 92:36]
    node _reg2_T_40 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[30] <= _reg2_T_40 @[calc6x6.scala 92:36]
    node _reg2_T_41 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[31] <= _reg2_T_41 @[calc6x6.scala 92:36]
    node _reg2_T_42 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[32] <= _reg2_T_42 @[calc6x6.scala 92:36]
    node _reg2_T_43 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[33] <= _reg2_T_43 @[calc6x6.scala 92:36]
    node _reg2_T_44 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[34] <= _reg2_T_44 @[calc6x6.scala 92:36]
    node _reg2_T_45 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[35] <= _reg2_T_45 @[calc6x6.scala 92:36]
    reg reg2 : {mat_real : SInt<20>[36], mat_comp : SInt<20>[10]}, clock with : (reset => (reset, _reg2_WIRE)) @[calc6x6.scala 92:23]
    wire _w3_WIRE : {mat_real : SInt<38>[36], mat_comp : SInt<38>[36]} @[calc6x6.scala 93:34]
    node _w3_T = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[0] <= _w3_T @[calc6x6.scala 93:34]
    node _w3_T_1 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[1] <= _w3_T_1 @[calc6x6.scala 93:34]
    node _w3_T_2 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[2] <= _w3_T_2 @[calc6x6.scala 93:34]
    node _w3_T_3 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[3] <= _w3_T_3 @[calc6x6.scala 93:34]
    node _w3_T_4 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[4] <= _w3_T_4 @[calc6x6.scala 93:34]
    node _w3_T_5 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[5] <= _w3_T_5 @[calc6x6.scala 93:34]
    node _w3_T_6 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[6] <= _w3_T_6 @[calc6x6.scala 93:34]
    node _w3_T_7 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[7] <= _w3_T_7 @[calc6x6.scala 93:34]
    node _w3_T_8 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[8] <= _w3_T_8 @[calc6x6.scala 93:34]
    node _w3_T_9 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[9] <= _w3_T_9 @[calc6x6.scala 93:34]
    node _w3_T_10 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[10] <= _w3_T_10 @[calc6x6.scala 93:34]
    node _w3_T_11 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[11] <= _w3_T_11 @[calc6x6.scala 93:34]
    node _w3_T_12 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[12] <= _w3_T_12 @[calc6x6.scala 93:34]
    node _w3_T_13 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[13] <= _w3_T_13 @[calc6x6.scala 93:34]
    node _w3_T_14 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[14] <= _w3_T_14 @[calc6x6.scala 93:34]
    node _w3_T_15 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[15] <= _w3_T_15 @[calc6x6.scala 93:34]
    node _w3_T_16 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[16] <= _w3_T_16 @[calc6x6.scala 93:34]
    node _w3_T_17 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[17] <= _w3_T_17 @[calc6x6.scala 93:34]
    node _w3_T_18 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[18] <= _w3_T_18 @[calc6x6.scala 93:34]
    node _w3_T_19 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[19] <= _w3_T_19 @[calc6x6.scala 93:34]
    node _w3_T_20 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[20] <= _w3_T_20 @[calc6x6.scala 93:34]
    node _w3_T_21 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[21] <= _w3_T_21 @[calc6x6.scala 93:34]
    node _w3_T_22 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[22] <= _w3_T_22 @[calc6x6.scala 93:34]
    node _w3_T_23 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[23] <= _w3_T_23 @[calc6x6.scala 93:34]
    node _w3_T_24 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[24] <= _w3_T_24 @[calc6x6.scala 93:34]
    node _w3_T_25 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[25] <= _w3_T_25 @[calc6x6.scala 93:34]
    node _w3_T_26 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[26] <= _w3_T_26 @[calc6x6.scala 93:34]
    node _w3_T_27 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[27] <= _w3_T_27 @[calc6x6.scala 93:34]
    node _w3_T_28 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[28] <= _w3_T_28 @[calc6x6.scala 93:34]
    node _w3_T_29 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[29] <= _w3_T_29 @[calc6x6.scala 93:34]
    node _w3_T_30 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[30] <= _w3_T_30 @[calc6x6.scala 93:34]
    node _w3_T_31 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[31] <= _w3_T_31 @[calc6x6.scala 93:34]
    node _w3_T_32 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[32] <= _w3_T_32 @[calc6x6.scala 93:34]
    node _w3_T_33 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[33] <= _w3_T_33 @[calc6x6.scala 93:34]
    node _w3_T_34 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[34] <= _w3_T_34 @[calc6x6.scala 93:34]
    node _w3_T_35 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[35] <= _w3_T_35 @[calc6x6.scala 93:34]
    node _w3_T_36 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[0] <= _w3_T_36 @[calc6x6.scala 93:34]
    node _w3_T_37 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[1] <= _w3_T_37 @[calc6x6.scala 93:34]
    node _w3_T_38 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[2] <= _w3_T_38 @[calc6x6.scala 93:34]
    node _w3_T_39 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[3] <= _w3_T_39 @[calc6x6.scala 93:34]
    node _w3_T_40 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[4] <= _w3_T_40 @[calc6x6.scala 93:34]
    node _w3_T_41 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[5] <= _w3_T_41 @[calc6x6.scala 93:34]
    node _w3_T_42 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[6] <= _w3_T_42 @[calc6x6.scala 93:34]
    node _w3_T_43 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[7] <= _w3_T_43 @[calc6x6.scala 93:34]
    node _w3_T_44 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[8] <= _w3_T_44 @[calc6x6.scala 93:34]
    node _w3_T_45 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[9] <= _w3_T_45 @[calc6x6.scala 93:34]
    node _w3_T_46 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[10] <= _w3_T_46 @[calc6x6.scala 93:34]
    node _w3_T_47 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[11] <= _w3_T_47 @[calc6x6.scala 93:34]
    node _w3_T_48 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[12] <= _w3_T_48 @[calc6x6.scala 93:34]
    node _w3_T_49 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[13] <= _w3_T_49 @[calc6x6.scala 93:34]
    node _w3_T_50 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[14] <= _w3_T_50 @[calc6x6.scala 93:34]
    node _w3_T_51 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[15] <= _w3_T_51 @[calc6x6.scala 93:34]
    node _w3_T_52 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[16] <= _w3_T_52 @[calc6x6.scala 93:34]
    node _w3_T_53 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[17] <= _w3_T_53 @[calc6x6.scala 93:34]
    node _w3_T_54 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[18] <= _w3_T_54 @[calc6x6.scala 93:34]
    node _w3_T_55 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[19] <= _w3_T_55 @[calc6x6.scala 93:34]
    node _w3_T_56 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[20] <= _w3_T_56 @[calc6x6.scala 93:34]
    node _w3_T_57 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[21] <= _w3_T_57 @[calc6x6.scala 93:34]
    node _w3_T_58 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[22] <= _w3_T_58 @[calc6x6.scala 93:34]
    node _w3_T_59 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[23] <= _w3_T_59 @[calc6x6.scala 93:34]
    node _w3_T_60 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[24] <= _w3_T_60 @[calc6x6.scala 93:34]
    node _w3_T_61 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[25] <= _w3_T_61 @[calc6x6.scala 93:34]
    node _w3_T_62 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[26] <= _w3_T_62 @[calc6x6.scala 93:34]
    node _w3_T_63 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[27] <= _w3_T_63 @[calc6x6.scala 93:34]
    node _w3_T_64 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[28] <= _w3_T_64 @[calc6x6.scala 93:34]
    node _w3_T_65 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[29] <= _w3_T_65 @[calc6x6.scala 93:34]
    node _w3_T_66 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[30] <= _w3_T_66 @[calc6x6.scala 93:34]
    node _w3_T_67 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[31] <= _w3_T_67 @[calc6x6.scala 93:34]
    node _w3_T_68 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[32] <= _w3_T_68 @[calc6x6.scala 93:34]
    node _w3_T_69 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[33] <= _w3_T_69 @[calc6x6.scala 93:34]
    node _w3_T_70 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[34] <= _w3_T_70 @[calc6x6.scala 93:34]
    node _w3_T_71 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[35] <= _w3_T_71 @[calc6x6.scala 93:34]
    reg w3 : {mat_real : SInt<38>[36], mat_comp : SInt<38>[36]}, clock with : (reset => (reset, _w3_WIRE)) @[calc6x6.scala 93:21]
    wire _reg3_WIRE : {mat_real : SInt<38>[24], mat_comp : SInt<38>[24]} @[calc6x6.scala 94:36]
    node _reg3_T = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[0] <= _reg3_T @[calc6x6.scala 94:36]
    node _reg3_T_1 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[1] <= _reg3_T_1 @[calc6x6.scala 94:36]
    node _reg3_T_2 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[2] <= _reg3_T_2 @[calc6x6.scala 94:36]
    node _reg3_T_3 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[3] <= _reg3_T_3 @[calc6x6.scala 94:36]
    node _reg3_T_4 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[4] <= _reg3_T_4 @[calc6x6.scala 94:36]
    node _reg3_T_5 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[5] <= _reg3_T_5 @[calc6x6.scala 94:36]
    node _reg3_T_6 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[6] <= _reg3_T_6 @[calc6x6.scala 94:36]
    node _reg3_T_7 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[7] <= _reg3_T_7 @[calc6x6.scala 94:36]
    node _reg3_T_8 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[8] <= _reg3_T_8 @[calc6x6.scala 94:36]
    node _reg3_T_9 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[9] <= _reg3_T_9 @[calc6x6.scala 94:36]
    node _reg3_T_10 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[10] <= _reg3_T_10 @[calc6x6.scala 94:36]
    node _reg3_T_11 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[11] <= _reg3_T_11 @[calc6x6.scala 94:36]
    node _reg3_T_12 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[12] <= _reg3_T_12 @[calc6x6.scala 94:36]
    node _reg3_T_13 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[13] <= _reg3_T_13 @[calc6x6.scala 94:36]
    node _reg3_T_14 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[14] <= _reg3_T_14 @[calc6x6.scala 94:36]
    node _reg3_T_15 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[15] <= _reg3_T_15 @[calc6x6.scala 94:36]
    node _reg3_T_16 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[16] <= _reg3_T_16 @[calc6x6.scala 94:36]
    node _reg3_T_17 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[17] <= _reg3_T_17 @[calc6x6.scala 94:36]
    node _reg3_T_18 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[18] <= _reg3_T_18 @[calc6x6.scala 94:36]
    node _reg3_T_19 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[19] <= _reg3_T_19 @[calc6x6.scala 94:36]
    node _reg3_T_20 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[20] <= _reg3_T_20 @[calc6x6.scala 94:36]
    node _reg3_T_21 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[21] <= _reg3_T_21 @[calc6x6.scala 94:36]
    node _reg3_T_22 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[22] <= _reg3_T_22 @[calc6x6.scala 94:36]
    node _reg3_T_23 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[23] <= _reg3_T_23 @[calc6x6.scala 94:36]
    node _reg3_T_24 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[0] <= _reg3_T_24 @[calc6x6.scala 94:36]
    node _reg3_T_25 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[1] <= _reg3_T_25 @[calc6x6.scala 94:36]
    node _reg3_T_26 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[2] <= _reg3_T_26 @[calc6x6.scala 94:36]
    node _reg3_T_27 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[3] <= _reg3_T_27 @[calc6x6.scala 94:36]
    node _reg3_T_28 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[4] <= _reg3_T_28 @[calc6x6.scala 94:36]
    node _reg3_T_29 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[5] <= _reg3_T_29 @[calc6x6.scala 94:36]
    node _reg3_T_30 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[6] <= _reg3_T_30 @[calc6x6.scala 94:36]
    node _reg3_T_31 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[7] <= _reg3_T_31 @[calc6x6.scala 94:36]
    node _reg3_T_32 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[8] <= _reg3_T_32 @[calc6x6.scala 94:36]
    node _reg3_T_33 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[9] <= _reg3_T_33 @[calc6x6.scala 94:36]
    node _reg3_T_34 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[10] <= _reg3_T_34 @[calc6x6.scala 94:36]
    node _reg3_T_35 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[11] <= _reg3_T_35 @[calc6x6.scala 94:36]
    node _reg3_T_36 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[12] <= _reg3_T_36 @[calc6x6.scala 94:36]
    node _reg3_T_37 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[13] <= _reg3_T_37 @[calc6x6.scala 94:36]
    node _reg3_T_38 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[14] <= _reg3_T_38 @[calc6x6.scala 94:36]
    node _reg3_T_39 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[15] <= _reg3_T_39 @[calc6x6.scala 94:36]
    node _reg3_T_40 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[16] <= _reg3_T_40 @[calc6x6.scala 94:36]
    node _reg3_T_41 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[17] <= _reg3_T_41 @[calc6x6.scala 94:36]
    node _reg3_T_42 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[18] <= _reg3_T_42 @[calc6x6.scala 94:36]
    node _reg3_T_43 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[19] <= _reg3_T_43 @[calc6x6.scala 94:36]
    node _reg3_T_44 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[20] <= _reg3_T_44 @[calc6x6.scala 94:36]
    node _reg3_T_45 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[21] <= _reg3_T_45 @[calc6x6.scala 94:36]
    node _reg3_T_46 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[22] <= _reg3_T_46 @[calc6x6.scala 94:36]
    node _reg3_T_47 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[23] <= _reg3_T_47 @[calc6x6.scala 94:36]
    reg reg3 : {mat_real : SInt<38>[24], mat_comp : SInt<38>[24]}, clock with : (reset => (reset, _reg3_WIRE)) @[calc6x6.scala 94:23]
    wire _valid_reg_WIRE : UInt<1>[5] @[calc6x6.scala 172:36]
    _valid_reg_WIRE[0] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[1] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[2] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[3] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[4] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    reg valid_reg : UInt<1>[5], clock with : (reset => (reset, _valid_reg_WIRE)) @[calc6x6.scala 172:28]
    valid_reg[0] <= io.valid_in @[calc6x6.scala 173:18]
    node _reg1_mat_real_0_T = sub(io.input.mat[0], io.input.mat[24]) @[calc6x6.scala 110:56]
    reg1.mat_real[0] <= _reg1_mat_real_0_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_6_T = add(io.input.mat[6], io.input.mat[12]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_6_T_1 = add(_reg1_mat_real_6_T, io.input.mat[18]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_6_T_2 = add(_reg1_mat_real_6_T_1, io.input.mat[24]) @[calc6x6.scala 111:92]
    reg1.mat_real[6] <= _reg1_mat_real_6_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_12_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_1 = tail(_reg1_mat_real_12_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_2 = asSInt(_reg1_mat_real_12_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_3 = add(_reg1_mat_real_12_T_2, io.input.mat[12]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_12_T_4 = sub(_reg1_mat_real_12_T_3, io.input.mat[18]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_12_T_5 = add(_reg1_mat_real_12_T_4, io.input.mat[24]) @[calc6x6.scala 112:93]
    reg1.mat_real[12] <= _reg1_mat_real_12_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_18_T = sub(asSInt(UInt<1>("h00")), io.input.mat[12]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_1 = tail(_reg1_mat_real_18_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_2 = asSInt(_reg1_mat_real_18_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_3 = add(_reg1_mat_real_18_T_2, io.input.mat[24]) @[calc6x6.scala 113:57]
    reg1.mat_real[18] <= _reg1_mat_real_18_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_24_T = sub(asSInt(UInt<1>("h00")), io.input.mat[12]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_1 = tail(_reg1_mat_real_24_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_2 = asSInt(_reg1_mat_real_24_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_3 = add(_reg1_mat_real_24_T_2, io.input.mat[24]) @[calc6x6.scala 114:57]
    reg1.mat_real[24] <= _reg1_mat_real_24_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_30_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_1 = tail(_reg1_mat_real_30_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_2 = asSInt(_reg1_mat_real_30_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_3 = add(_reg1_mat_real_30_T_2, io.input.mat[30]) @[calc6x6.scala 115:57]
    reg1.mat_real[30] <= _reg1_mat_real_30_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_0_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_1 = tail(_reg1_mat_comp_0_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_2 = asSInt(_reg1_mat_comp_0_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_3 = add(_reg1_mat_comp_0_T_2, io.input.mat[18]) @[calc6x6.scala 117:57]
    reg1.mat_comp[0] <= _reg1_mat_comp_0_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_6_T = sub(io.input.mat[6], io.input.mat[18]) @[calc6x6.scala 118:56]
    reg1.mat_comp[6] <= _reg1_mat_comp_6_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_1_T = sub(io.input.mat[1], io.input.mat[25]) @[calc6x6.scala 110:56]
    reg1.mat_real[1] <= _reg1_mat_real_1_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_7_T = add(io.input.mat[7], io.input.mat[13]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_7_T_1 = add(_reg1_mat_real_7_T, io.input.mat[19]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_7_T_2 = add(_reg1_mat_real_7_T_1, io.input.mat[25]) @[calc6x6.scala 111:92]
    reg1.mat_real[7] <= _reg1_mat_real_7_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_13_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_1 = tail(_reg1_mat_real_13_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_2 = asSInt(_reg1_mat_real_13_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_3 = add(_reg1_mat_real_13_T_2, io.input.mat[13]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_13_T_4 = sub(_reg1_mat_real_13_T_3, io.input.mat[19]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_13_T_5 = add(_reg1_mat_real_13_T_4, io.input.mat[25]) @[calc6x6.scala 112:93]
    reg1.mat_real[13] <= _reg1_mat_real_13_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_19_T = sub(asSInt(UInt<1>("h00")), io.input.mat[13]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_1 = tail(_reg1_mat_real_19_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_2 = asSInt(_reg1_mat_real_19_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_3 = add(_reg1_mat_real_19_T_2, io.input.mat[25]) @[calc6x6.scala 113:57]
    reg1.mat_real[19] <= _reg1_mat_real_19_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_25_T = sub(asSInt(UInt<1>("h00")), io.input.mat[13]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_1 = tail(_reg1_mat_real_25_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_2 = asSInt(_reg1_mat_real_25_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_3 = add(_reg1_mat_real_25_T_2, io.input.mat[25]) @[calc6x6.scala 114:57]
    reg1.mat_real[25] <= _reg1_mat_real_25_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_31_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_1 = tail(_reg1_mat_real_31_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_2 = asSInt(_reg1_mat_real_31_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_3 = add(_reg1_mat_real_31_T_2, io.input.mat[31]) @[calc6x6.scala 115:57]
    reg1.mat_real[31] <= _reg1_mat_real_31_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_1_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_1 = tail(_reg1_mat_comp_1_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_2 = asSInt(_reg1_mat_comp_1_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_3 = add(_reg1_mat_comp_1_T_2, io.input.mat[19]) @[calc6x6.scala 117:57]
    reg1.mat_comp[1] <= _reg1_mat_comp_1_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_7_T = sub(io.input.mat[7], io.input.mat[19]) @[calc6x6.scala 118:56]
    reg1.mat_comp[7] <= _reg1_mat_comp_7_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_2_T = sub(io.input.mat[2], io.input.mat[26]) @[calc6x6.scala 110:56]
    reg1.mat_real[2] <= _reg1_mat_real_2_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_8_T = add(io.input.mat[8], io.input.mat[14]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_8_T_1 = add(_reg1_mat_real_8_T, io.input.mat[20]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_8_T_2 = add(_reg1_mat_real_8_T_1, io.input.mat[26]) @[calc6x6.scala 111:92]
    reg1.mat_real[8] <= _reg1_mat_real_8_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_14_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_1 = tail(_reg1_mat_real_14_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_2 = asSInt(_reg1_mat_real_14_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_3 = add(_reg1_mat_real_14_T_2, io.input.mat[14]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_14_T_4 = sub(_reg1_mat_real_14_T_3, io.input.mat[20]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_14_T_5 = add(_reg1_mat_real_14_T_4, io.input.mat[26]) @[calc6x6.scala 112:93]
    reg1.mat_real[14] <= _reg1_mat_real_14_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_20_T = sub(asSInt(UInt<1>("h00")), io.input.mat[14]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_1 = tail(_reg1_mat_real_20_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_2 = asSInt(_reg1_mat_real_20_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_3 = add(_reg1_mat_real_20_T_2, io.input.mat[26]) @[calc6x6.scala 113:57]
    reg1.mat_real[20] <= _reg1_mat_real_20_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_26_T = sub(asSInt(UInt<1>("h00")), io.input.mat[14]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_1 = tail(_reg1_mat_real_26_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_2 = asSInt(_reg1_mat_real_26_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_3 = add(_reg1_mat_real_26_T_2, io.input.mat[26]) @[calc6x6.scala 114:57]
    reg1.mat_real[26] <= _reg1_mat_real_26_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_32_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_1 = tail(_reg1_mat_real_32_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_2 = asSInt(_reg1_mat_real_32_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_3 = add(_reg1_mat_real_32_T_2, io.input.mat[32]) @[calc6x6.scala 115:57]
    reg1.mat_real[32] <= _reg1_mat_real_32_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_2_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_1 = tail(_reg1_mat_comp_2_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_2 = asSInt(_reg1_mat_comp_2_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_3 = add(_reg1_mat_comp_2_T_2, io.input.mat[20]) @[calc6x6.scala 117:57]
    reg1.mat_comp[2] <= _reg1_mat_comp_2_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_8_T = sub(io.input.mat[8], io.input.mat[20]) @[calc6x6.scala 118:56]
    reg1.mat_comp[8] <= _reg1_mat_comp_8_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_3_T = sub(io.input.mat[3], io.input.mat[27]) @[calc6x6.scala 110:56]
    reg1.mat_real[3] <= _reg1_mat_real_3_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_9_T = add(io.input.mat[9], io.input.mat[15]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_9_T_1 = add(_reg1_mat_real_9_T, io.input.mat[21]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_9_T_2 = add(_reg1_mat_real_9_T_1, io.input.mat[27]) @[calc6x6.scala 111:92]
    reg1.mat_real[9] <= _reg1_mat_real_9_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_15_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_1 = tail(_reg1_mat_real_15_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_2 = asSInt(_reg1_mat_real_15_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_3 = add(_reg1_mat_real_15_T_2, io.input.mat[15]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_15_T_4 = sub(_reg1_mat_real_15_T_3, io.input.mat[21]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_15_T_5 = add(_reg1_mat_real_15_T_4, io.input.mat[27]) @[calc6x6.scala 112:93]
    reg1.mat_real[15] <= _reg1_mat_real_15_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_21_T = sub(asSInt(UInt<1>("h00")), io.input.mat[15]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_1 = tail(_reg1_mat_real_21_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_2 = asSInt(_reg1_mat_real_21_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_3 = add(_reg1_mat_real_21_T_2, io.input.mat[27]) @[calc6x6.scala 113:57]
    reg1.mat_real[21] <= _reg1_mat_real_21_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_27_T = sub(asSInt(UInt<1>("h00")), io.input.mat[15]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_1 = tail(_reg1_mat_real_27_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_2 = asSInt(_reg1_mat_real_27_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_3 = add(_reg1_mat_real_27_T_2, io.input.mat[27]) @[calc6x6.scala 114:57]
    reg1.mat_real[27] <= _reg1_mat_real_27_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_33_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_1 = tail(_reg1_mat_real_33_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_2 = asSInt(_reg1_mat_real_33_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_3 = add(_reg1_mat_real_33_T_2, io.input.mat[33]) @[calc6x6.scala 115:57]
    reg1.mat_real[33] <= _reg1_mat_real_33_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_3_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_1 = tail(_reg1_mat_comp_3_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_2 = asSInt(_reg1_mat_comp_3_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_3 = add(_reg1_mat_comp_3_T_2, io.input.mat[21]) @[calc6x6.scala 117:57]
    reg1.mat_comp[3] <= _reg1_mat_comp_3_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_9_T = sub(io.input.mat[9], io.input.mat[21]) @[calc6x6.scala 118:56]
    reg1.mat_comp[9] <= _reg1_mat_comp_9_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_4_T = sub(io.input.mat[4], io.input.mat[28]) @[calc6x6.scala 110:56]
    reg1.mat_real[4] <= _reg1_mat_real_4_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_10_T = add(io.input.mat[10], io.input.mat[16]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_10_T_1 = add(_reg1_mat_real_10_T, io.input.mat[22]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_10_T_2 = add(_reg1_mat_real_10_T_1, io.input.mat[28]) @[calc6x6.scala 111:92]
    reg1.mat_real[10] <= _reg1_mat_real_10_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_16_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_1 = tail(_reg1_mat_real_16_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_2 = asSInt(_reg1_mat_real_16_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_3 = add(_reg1_mat_real_16_T_2, io.input.mat[16]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_16_T_4 = sub(_reg1_mat_real_16_T_3, io.input.mat[22]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_16_T_5 = add(_reg1_mat_real_16_T_4, io.input.mat[28]) @[calc6x6.scala 112:93]
    reg1.mat_real[16] <= _reg1_mat_real_16_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_22_T = sub(asSInt(UInt<1>("h00")), io.input.mat[16]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_1 = tail(_reg1_mat_real_22_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_2 = asSInt(_reg1_mat_real_22_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_3 = add(_reg1_mat_real_22_T_2, io.input.mat[28]) @[calc6x6.scala 113:57]
    reg1.mat_real[22] <= _reg1_mat_real_22_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_28_T = sub(asSInt(UInt<1>("h00")), io.input.mat[16]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_1 = tail(_reg1_mat_real_28_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_2 = asSInt(_reg1_mat_real_28_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_3 = add(_reg1_mat_real_28_T_2, io.input.mat[28]) @[calc6x6.scala 114:57]
    reg1.mat_real[28] <= _reg1_mat_real_28_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_34_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_1 = tail(_reg1_mat_real_34_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_2 = asSInt(_reg1_mat_real_34_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_3 = add(_reg1_mat_real_34_T_2, io.input.mat[34]) @[calc6x6.scala 115:57]
    reg1.mat_real[34] <= _reg1_mat_real_34_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_1 = tail(_reg1_mat_comp_4_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_2 = asSInt(_reg1_mat_comp_4_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_3 = add(_reg1_mat_comp_4_T_2, io.input.mat[22]) @[calc6x6.scala 117:57]
    reg1.mat_comp[4] <= _reg1_mat_comp_4_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_10_T = sub(io.input.mat[10], io.input.mat[22]) @[calc6x6.scala 118:56]
    reg1.mat_comp[10] <= _reg1_mat_comp_10_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_5_T = sub(io.input.mat[5], io.input.mat[29]) @[calc6x6.scala 110:56]
    reg1.mat_real[5] <= _reg1_mat_real_5_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_11_T = add(io.input.mat[11], io.input.mat[17]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_11_T_1 = add(_reg1_mat_real_11_T, io.input.mat[23]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_11_T_2 = add(_reg1_mat_real_11_T_1, io.input.mat[29]) @[calc6x6.scala 111:92]
    reg1.mat_real[11] <= _reg1_mat_real_11_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_17_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_1 = tail(_reg1_mat_real_17_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_2 = asSInt(_reg1_mat_real_17_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_3 = add(_reg1_mat_real_17_T_2, io.input.mat[17]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_17_T_4 = sub(_reg1_mat_real_17_T_3, io.input.mat[23]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_17_T_5 = add(_reg1_mat_real_17_T_4, io.input.mat[29]) @[calc6x6.scala 112:93]
    reg1.mat_real[17] <= _reg1_mat_real_17_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_23_T = sub(asSInt(UInt<1>("h00")), io.input.mat[17]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_1 = tail(_reg1_mat_real_23_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_2 = asSInt(_reg1_mat_real_23_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_3 = add(_reg1_mat_real_23_T_2, io.input.mat[29]) @[calc6x6.scala 113:57]
    reg1.mat_real[23] <= _reg1_mat_real_23_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_29_T = sub(asSInt(UInt<1>("h00")), io.input.mat[17]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_1 = tail(_reg1_mat_real_29_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_2 = asSInt(_reg1_mat_real_29_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_3 = add(_reg1_mat_real_29_T_2, io.input.mat[29]) @[calc6x6.scala 114:57]
    reg1.mat_real[29] <= _reg1_mat_real_29_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_35_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_1 = tail(_reg1_mat_real_35_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_2 = asSInt(_reg1_mat_real_35_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_3 = add(_reg1_mat_real_35_T_2, io.input.mat[35]) @[calc6x6.scala 115:57]
    reg1.mat_real[35] <= _reg1_mat_real_35_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_5_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_1 = tail(_reg1_mat_comp_5_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_2 = asSInt(_reg1_mat_comp_5_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_3 = add(_reg1_mat_comp_5_T_2, io.input.mat[23]) @[calc6x6.scala 117:57]
    reg1.mat_comp[5] <= _reg1_mat_comp_5_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_11_T = sub(io.input.mat[11], io.input.mat[23]) @[calc6x6.scala 118:56]
    reg1.mat_comp[11] <= _reg1_mat_comp_11_T @[calc6x6.scala 118:37]
    valid_reg[1] <= valid_reg[0] @[calc6x6.scala 175:18]
    node _reg2_mat_real_0_T = sub(reg1.mat_real[0], reg1.mat_real[4]) @[calc6x6.scala 124:61]
    reg2.mat_real[0] <= _reg2_mat_real_0_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_1_T = add(reg1.mat_real[1], reg1.mat_real[2]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_1_T_1 = add(_reg2_mat_real_1_T, reg1.mat_real[3]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_1_T_2 = add(_reg2_mat_real_1_T_1, reg1.mat_real[4]) @[calc6x6.scala 125:107]
    reg2.mat_real[1] <= _reg2_mat_real_1_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_2_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_1 = tail(_reg2_mat_real_2_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_2 = asSInt(_reg2_mat_real_2_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_3 = add(_reg2_mat_real_2_T_2, reg1.mat_real[2]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_2_T_4 = sub(_reg2_mat_real_2_T_3, reg1.mat_real[3]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_2_T_5 = add(_reg2_mat_real_2_T_4, reg1.mat_real[4]) @[calc6x6.scala 126:108]
    reg2.mat_real[2] <= _reg2_mat_real_2_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_3_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[2]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_1 = tail(_reg2_mat_real_3_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_2 = asSInt(_reg2_mat_real_3_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_3 = add(_reg2_mat_real_3_T_2, reg1.mat_real[4]) @[calc6x6.scala 127:180]
    reg2.mat_real[3] <= _reg2_mat_real_3_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_4_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[2]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_1 = tail(_reg2_mat_real_4_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_2 = asSInt(_reg2_mat_real_4_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_3 = add(_reg2_mat_real_4_T_2, reg1.mat_real[4]) @[calc6x6.scala 128:180]
    reg2.mat_real[4] <= _reg2_mat_real_4_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_5_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_1 = tail(_reg2_mat_real_5_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_2 = asSInt(_reg2_mat_real_5_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_3 = add(_reg2_mat_real_5_T_2, reg1.mat_real[5]) @[calc6x6.scala 129:62]
    reg2.mat_real[5] <= _reg2_mat_real_5_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_6_T = sub(reg1.mat_real[6], reg1.mat_real[10]) @[calc6x6.scala 124:61]
    reg2.mat_real[6] <= _reg2_mat_real_6_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_7_T = add(reg1.mat_real[7], reg1.mat_real[8]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_7_T_1 = add(_reg2_mat_real_7_T, reg1.mat_real[9]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_7_T_2 = add(_reg2_mat_real_7_T_1, reg1.mat_real[10]) @[calc6x6.scala 125:107]
    reg2.mat_real[7] <= _reg2_mat_real_7_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_8_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_1 = tail(_reg2_mat_real_8_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_2 = asSInt(_reg2_mat_real_8_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_3 = add(_reg2_mat_real_8_T_2, reg1.mat_real[8]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_8_T_4 = sub(_reg2_mat_real_8_T_3, reg1.mat_real[9]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_8_T_5 = add(_reg2_mat_real_8_T_4, reg1.mat_real[10]) @[calc6x6.scala 126:108]
    reg2.mat_real[8] <= _reg2_mat_real_8_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_9_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[8]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_1 = tail(_reg2_mat_real_9_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_2 = asSInt(_reg2_mat_real_9_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_3 = add(_reg2_mat_real_9_T_2, reg1.mat_real[10]) @[calc6x6.scala 127:180]
    reg2.mat_real[9] <= _reg2_mat_real_9_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_10_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[8]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_1 = tail(_reg2_mat_real_10_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_2 = asSInt(_reg2_mat_real_10_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_3 = add(_reg2_mat_real_10_T_2, reg1.mat_real[10]) @[calc6x6.scala 128:180]
    reg2.mat_real[10] <= _reg2_mat_real_10_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_11_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_1 = tail(_reg2_mat_real_11_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_2 = asSInt(_reg2_mat_real_11_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_3 = add(_reg2_mat_real_11_T_2, reg1.mat_real[11]) @[calc6x6.scala 129:62]
    reg2.mat_real[11] <= _reg2_mat_real_11_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_12_T = sub(reg1.mat_real[12], reg1.mat_real[16]) @[calc6x6.scala 124:61]
    reg2.mat_real[12] <= _reg2_mat_real_12_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_13_T = add(reg1.mat_real[13], reg1.mat_real[14]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_13_T_1 = add(_reg2_mat_real_13_T, reg1.mat_real[15]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_13_T_2 = add(_reg2_mat_real_13_T_1, reg1.mat_real[16]) @[calc6x6.scala 125:107]
    reg2.mat_real[13] <= _reg2_mat_real_13_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_14_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_1 = tail(_reg2_mat_real_14_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_2 = asSInt(_reg2_mat_real_14_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_3 = add(_reg2_mat_real_14_T_2, reg1.mat_real[14]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_14_T_4 = sub(_reg2_mat_real_14_T_3, reg1.mat_real[15]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_14_T_5 = add(_reg2_mat_real_14_T_4, reg1.mat_real[16]) @[calc6x6.scala 126:108]
    reg2.mat_real[14] <= _reg2_mat_real_14_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_15_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[14]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_1 = tail(_reg2_mat_real_15_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_2 = asSInt(_reg2_mat_real_15_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_3 = add(_reg2_mat_real_15_T_2, reg1.mat_real[16]) @[calc6x6.scala 127:180]
    reg2.mat_real[15] <= _reg2_mat_real_15_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_16_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[14]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_1 = tail(_reg2_mat_real_16_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_2 = asSInt(_reg2_mat_real_16_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_3 = add(_reg2_mat_real_16_T_2, reg1.mat_real[16]) @[calc6x6.scala 128:180]
    reg2.mat_real[16] <= _reg2_mat_real_16_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_17_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_1 = tail(_reg2_mat_real_17_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_2 = asSInt(_reg2_mat_real_17_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_3 = add(_reg2_mat_real_17_T_2, reg1.mat_real[17]) @[calc6x6.scala 129:62]
    reg2.mat_real[17] <= _reg2_mat_real_17_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_18_T = sub(reg1.mat_real[18], reg1.mat_real[22]) @[calc6x6.scala 124:61]
    reg2.mat_real[18] <= _reg2_mat_real_18_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_19_T = add(reg1.mat_real[19], reg1.mat_real[20]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_19_T_1 = add(_reg2_mat_real_19_T, reg1.mat_real[21]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_19_T_2 = add(_reg2_mat_real_19_T_1, reg1.mat_real[22]) @[calc6x6.scala 125:107]
    reg2.mat_real[19] <= _reg2_mat_real_19_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_20_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[19]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_1 = tail(_reg2_mat_real_20_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_2 = asSInt(_reg2_mat_real_20_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_3 = add(_reg2_mat_real_20_T_2, reg1.mat_real[20]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_20_T_4 = sub(_reg2_mat_real_20_T_3, reg1.mat_real[21]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_20_T_5 = add(_reg2_mat_real_20_T_4, reg1.mat_real[22]) @[calc6x6.scala 126:108]
    reg2.mat_real[20] <= _reg2_mat_real_20_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_21_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[20]) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_1 = tail(_reg2_mat_real_21_T, 1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_2 = asSInt(_reg2_mat_real_21_T_1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_3 = add(_reg2_mat_real_21_T_2, reg1.mat_real[22]) @[calc6x6.scala 127:79]
    node _reg2_mat_real_21_T_4 = sub(_reg2_mat_real_21_T_3, reg1.mat_comp[3]) @[calc6x6.scala 127:102]
    node _reg2_mat_real_21_T_5 = add(_reg2_mat_real_21_T_4, reg1.mat_comp[1]) @[calc6x6.scala 127:127]
    reg2.mat_real[21] <= _reg2_mat_real_21_T_5 @[calc6x6.scala 127:37]
    node _reg2_mat_real_22_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[20]) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_1 = tail(_reg2_mat_real_22_T, 1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_2 = asSInt(_reg2_mat_real_22_T_1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_3 = add(_reg2_mat_real_22_T_2, reg1.mat_real[22]) @[calc6x6.scala 128:79]
    node _reg2_mat_real_22_T_4 = add(_reg2_mat_real_22_T_3, reg1.mat_comp[3]) @[calc6x6.scala 128:102]
    node _reg2_mat_real_22_T_5 = sub(_reg2_mat_real_22_T_4, reg1.mat_comp[1]) @[calc6x6.scala 128:127]
    reg2.mat_real[22] <= _reg2_mat_real_22_T_5 @[calc6x6.scala 128:37]
    node _reg2_mat_real_23_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[19]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_1 = tail(_reg2_mat_real_23_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_2 = asSInt(_reg2_mat_real_23_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_3 = add(_reg2_mat_real_23_T_2, reg1.mat_real[23]) @[calc6x6.scala 129:62]
    reg2.mat_real[23] <= _reg2_mat_real_23_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_24_T = sub(reg1.mat_real[24], reg1.mat_real[28]) @[calc6x6.scala 124:61]
    reg2.mat_real[24] <= _reg2_mat_real_24_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_25_T = add(reg1.mat_real[25], reg1.mat_real[26]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_25_T_1 = add(_reg2_mat_real_25_T, reg1.mat_real[27]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_25_T_2 = add(_reg2_mat_real_25_T_1, reg1.mat_real[28]) @[calc6x6.scala 125:107]
    reg2.mat_real[25] <= _reg2_mat_real_25_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_26_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[25]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_1 = tail(_reg2_mat_real_26_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_2 = asSInt(_reg2_mat_real_26_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_3 = add(_reg2_mat_real_26_T_2, reg1.mat_real[26]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_26_T_4 = sub(_reg2_mat_real_26_T_3, reg1.mat_real[27]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_26_T_5 = add(_reg2_mat_real_26_T_4, reg1.mat_real[28]) @[calc6x6.scala 126:108]
    reg2.mat_real[26] <= _reg2_mat_real_26_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_27_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[26]) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_1 = tail(_reg2_mat_real_27_T, 1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_2 = asSInt(_reg2_mat_real_27_T_1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_3 = add(_reg2_mat_real_27_T_2, reg1.mat_real[28]) @[calc6x6.scala 127:79]
    node _reg2_mat_real_27_T_4 = sub(_reg2_mat_real_27_T_3, reg1.mat_comp[9]) @[calc6x6.scala 127:102]
    node _reg2_mat_real_27_T_5 = add(_reg2_mat_real_27_T_4, reg1.mat_comp[7]) @[calc6x6.scala 127:127]
    reg2.mat_real[27] <= _reg2_mat_real_27_T_5 @[calc6x6.scala 127:37]
    node _reg2_mat_real_28_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[26]) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_1 = tail(_reg2_mat_real_28_T, 1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_2 = asSInt(_reg2_mat_real_28_T_1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_3 = add(_reg2_mat_real_28_T_2, reg1.mat_real[28]) @[calc6x6.scala 128:79]
    node _reg2_mat_real_28_T_4 = add(_reg2_mat_real_28_T_3, reg1.mat_comp[9]) @[calc6x6.scala 128:102]
    node _reg2_mat_real_28_T_5 = sub(_reg2_mat_real_28_T_4, reg1.mat_comp[7]) @[calc6x6.scala 128:127]
    reg2.mat_real[28] <= _reg2_mat_real_28_T_5 @[calc6x6.scala 128:37]
    node _reg2_mat_real_29_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[25]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_1 = tail(_reg2_mat_real_29_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_2 = asSInt(_reg2_mat_real_29_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_3 = add(_reg2_mat_real_29_T_2, reg1.mat_real[29]) @[calc6x6.scala 129:62]
    reg2.mat_real[29] <= _reg2_mat_real_29_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_30_T = sub(reg1.mat_real[30], reg1.mat_real[34]) @[calc6x6.scala 124:61]
    reg2.mat_real[30] <= _reg2_mat_real_30_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_31_T = add(reg1.mat_real[31], reg1.mat_real[32]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_31_T_1 = add(_reg2_mat_real_31_T, reg1.mat_real[33]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_31_T_2 = add(_reg2_mat_real_31_T_1, reg1.mat_real[34]) @[calc6x6.scala 125:107]
    reg2.mat_real[31] <= _reg2_mat_real_31_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_32_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_1 = tail(_reg2_mat_real_32_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_2 = asSInt(_reg2_mat_real_32_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_3 = add(_reg2_mat_real_32_T_2, reg1.mat_real[32]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_32_T_4 = sub(_reg2_mat_real_32_T_3, reg1.mat_real[33]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_32_T_5 = add(_reg2_mat_real_32_T_4, reg1.mat_real[34]) @[calc6x6.scala 126:108]
    reg2.mat_real[32] <= _reg2_mat_real_32_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_33_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[32]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_1 = tail(_reg2_mat_real_33_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_2 = asSInt(_reg2_mat_real_33_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_3 = add(_reg2_mat_real_33_T_2, reg1.mat_real[34]) @[calc6x6.scala 127:180]
    reg2.mat_real[33] <= _reg2_mat_real_33_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_34_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[32]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_1 = tail(_reg2_mat_real_34_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_2 = asSInt(_reg2_mat_real_34_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_3 = add(_reg2_mat_real_34_T_2, reg1.mat_real[34]) @[calc6x6.scala 128:180]
    reg2.mat_real[34] <= _reg2_mat_real_34_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_35_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_1 = tail(_reg2_mat_real_35_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_2 = asSInt(_reg2_mat_real_35_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_3 = add(_reg2_mat_real_35_T_2, reg1.mat_real[35]) @[calc6x6.scala 129:62]
    reg2.mat_real[35] <= _reg2_mat_real_35_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_comp_0_T = sub(reg1.mat_comp[0], reg1.mat_comp[4]) @[calc6x6.scala 132:50]
    reg2.mat_comp[0] <= _reg2_mat_comp_0_T @[calc6x6.scala 132:26]
    node _reg2_mat_comp_1_T = add(reg1.mat_comp[1], reg1.mat_comp[2]) @[calc6x6.scala 133:50]
    node _reg2_mat_comp_1_T_1 = add(_reg2_mat_comp_1_T, reg1.mat_comp[3]) @[calc6x6.scala 133:73]
    node _reg2_mat_comp_1_T_2 = add(_reg2_mat_comp_1_T_1, reg1.mat_comp[4]) @[calc6x6.scala 133:96]
    reg2.mat_comp[1] <= _reg2_mat_comp_1_T_2 @[calc6x6.scala 133:26]
    node _reg2_mat_comp_2_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[1]) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_1 = tail(_reg2_mat_comp_2_T, 1) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_2 = asSInt(_reg2_mat_comp_2_T_1) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_3 = add(_reg2_mat_comp_2_T_2, reg1.mat_comp[2]) @[calc6x6.scala 134:51]
    node _reg2_mat_comp_2_T_4 = sub(_reg2_mat_comp_2_T_3, reg1.mat_comp[3]) @[calc6x6.scala 134:74]
    node _reg2_mat_comp_2_T_5 = add(_reg2_mat_comp_2_T_4, reg1.mat_comp[4]) @[calc6x6.scala 134:97]
    reg2.mat_comp[2] <= _reg2_mat_comp_2_T_5 @[calc6x6.scala 134:26]
    node _reg2_mat_comp_3_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[2]) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_1 = tail(_reg2_mat_comp_3_T, 1) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_2 = asSInt(_reg2_mat_comp_3_T_1) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_3 = add(_reg2_mat_comp_3_T_2, reg1.mat_comp[4]) @[calc6x6.scala 135:51]
    node _reg2_mat_comp_3_T_4 = sub(_reg2_mat_comp_3_T_3, reg1.mat_real[19]) @[calc6x6.scala 135:74]
    node _reg2_mat_comp_3_T_5 = add(_reg2_mat_comp_3_T_4, reg1.mat_real[21]) @[calc6x6.scala 135:97]
    reg2.mat_comp[3] <= _reg2_mat_comp_3_T_5 @[calc6x6.scala 135:26]
    node _reg2_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[2]) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_1 = tail(_reg2_mat_comp_4_T, 1) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_2 = asSInt(_reg2_mat_comp_4_T_1) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_3 = add(_reg2_mat_comp_4_T_2, reg1.mat_comp[4]) @[calc6x6.scala 136:51]
    node _reg2_mat_comp_4_T_4 = add(_reg2_mat_comp_4_T_3, reg1.mat_real[19]) @[calc6x6.scala 136:74]
    node _reg2_mat_comp_4_T_5 = sub(_reg2_mat_comp_4_T_4, reg1.mat_real[21]) @[calc6x6.scala 136:97]
    reg2.mat_comp[4] <= _reg2_mat_comp_4_T_5 @[calc6x6.scala 136:26]
    node _reg2_mat_comp_5_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[1]) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_1 = tail(_reg2_mat_comp_5_T, 1) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_2 = asSInt(_reg2_mat_comp_5_T_1) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_3 = add(_reg2_mat_comp_5_T_2, reg1.mat_comp[5]) @[calc6x6.scala 137:51]
    reg2.mat_comp[5] <= _reg2_mat_comp_5_T_3 @[calc6x6.scala 137:26]
    node _reg2_mat_comp_6_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_1 = tail(_reg2_mat_comp_6_T, 1) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_2 = asSInt(_reg2_mat_comp_6_T_1) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_3 = add(_reg2_mat_comp_6_T_2, reg1.mat_real[3]) @[calc6x6.scala 140:51]
    reg2.mat_comp[6] <= _reg2_mat_comp_6_T_3 @[calc6x6.scala 140:26]
    node _reg2_mat_comp_7_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_1 = tail(_reg2_mat_comp_7_T, 1) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_2 = asSInt(_reg2_mat_comp_7_T_1) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_3 = add(_reg2_mat_comp_7_T_2, reg1.mat_real[9]) @[calc6x6.scala 141:51]
    reg2.mat_comp[7] <= _reg2_mat_comp_7_T_3 @[calc6x6.scala 141:26]
    node _reg2_mat_comp_8_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_1 = tail(_reg2_mat_comp_8_T, 1) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_2 = asSInt(_reg2_mat_comp_8_T_1) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_3 = add(_reg2_mat_comp_8_T_2, reg1.mat_real[15]) @[calc6x6.scala 142:51]
    reg2.mat_comp[8] <= _reg2_mat_comp_8_T_3 @[calc6x6.scala 142:26]
    node _reg2_mat_comp_9_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_1 = tail(_reg2_mat_comp_9_T, 1) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_2 = asSInt(_reg2_mat_comp_9_T_1) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_3 = add(_reg2_mat_comp_9_T_2, reg1.mat_real[33]) @[calc6x6.scala 143:51]
    reg2.mat_comp[9] <= _reg2_mat_comp_9_T_3 @[calc6x6.scala 143:26]
    valid_reg[2] <= valid_reg[1] @[calc6x6.scala 177:18]
    node _reg3_mat_real_0_T = add(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_1 = tail(_reg3_mat_real_0_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_2 = asSInt(_reg3_mat_real_0_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_3 = add(_reg3_mat_real_0_T_2, w3.mat_real[18]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_4 = tail(_reg3_mat_real_0_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_5 = asSInt(_reg3_mat_real_0_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_6 = add(_reg3_mat_real_0_T_5, w3.mat_real[24]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_7 = tail(_reg3_mat_real_0_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_8 = asSInt(_reg3_mat_real_0_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_9 = dshr(_reg3_mat_real_0_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_0_T_10 = add(w3.mat_real[0], _reg3_mat_real_0_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_0_T_11 = tail(_reg3_mat_real_0_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_0_T_12 = asSInt(_reg3_mat_real_0_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[0] <= _reg3_mat_real_0_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_6_T = sub(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_1 = tail(_reg3_mat_real_6_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_2 = asSInt(_reg3_mat_real_6_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_3 = sub(_reg3_mat_real_6_T_2, w3.mat_comp[18]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_4 = tail(_reg3_mat_real_6_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_5 = asSInt(_reg3_mat_real_6_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_6 = add(_reg3_mat_real_6_T_5, w3.mat_comp[24]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_7 = tail(_reg3_mat_real_6_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_8 = asSInt(_reg3_mat_real_6_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_9 = dshr(_reg3_mat_real_6_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[6] <= _reg3_mat_real_6_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_12_T = add(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_1 = tail(_reg3_mat_real_12_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_2 = asSInt(_reg3_mat_real_12_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_3 = sub(_reg3_mat_real_12_T_2, w3.mat_real[18]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_4 = tail(_reg3_mat_real_12_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_5 = asSInt(_reg3_mat_real_12_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_6 = sub(_reg3_mat_real_12_T_5, w3.mat_real[24]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_7 = tail(_reg3_mat_real_12_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_8 = asSInt(_reg3_mat_real_12_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_9 = dshr(_reg3_mat_real_12_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[12] <= _reg3_mat_real_12_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_18_T = sub(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_1 = tail(_reg3_mat_real_18_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_2 = asSInt(_reg3_mat_real_18_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_3 = add(_reg3_mat_real_18_T_2, w3.mat_comp[18]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_4 = tail(_reg3_mat_real_18_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_5 = asSInt(_reg3_mat_real_18_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_6 = sub(_reg3_mat_real_18_T_5, w3.mat_comp[24]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_7 = tail(_reg3_mat_real_18_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_8 = asSInt(_reg3_mat_real_18_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_9 = dshr(_reg3_mat_real_18_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_18_T_10 = add(_reg3_mat_real_18_T_9, w3.mat_real[30]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_18_T_11 = tail(_reg3_mat_real_18_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_18_T_12 = asSInt(_reg3_mat_real_18_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[18] <= _reg3_mat_real_18_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_0_T = add(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_1 = tail(_reg3_mat_comp_0_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_2 = asSInt(_reg3_mat_comp_0_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_3 = add(_reg3_mat_comp_0_T_2, w3.mat_comp[18]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_4 = tail(_reg3_mat_comp_0_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_5 = asSInt(_reg3_mat_comp_0_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_6 = add(_reg3_mat_comp_0_T_5, w3.mat_comp[24]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_7 = tail(_reg3_mat_comp_0_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_8 = asSInt(_reg3_mat_comp_0_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_9 = dshr(_reg3_mat_comp_0_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_0_T_10 = add(w3.mat_comp[0], _reg3_mat_comp_0_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_0_T_11 = tail(_reg3_mat_comp_0_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_0_T_12 = asSInt(_reg3_mat_comp_0_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[0] <= _reg3_mat_comp_0_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_6_T = sub(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_1 = tail(_reg3_mat_comp_6_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_2 = asSInt(_reg3_mat_comp_6_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_3 = add(_reg3_mat_comp_6_T_2, w3.mat_real[18]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_4 = tail(_reg3_mat_comp_6_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_5 = asSInt(_reg3_mat_comp_6_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_6 = sub(_reg3_mat_comp_6_T_5, w3.mat_real[24]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_7 = tail(_reg3_mat_comp_6_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_8 = asSInt(_reg3_mat_comp_6_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_9 = dshr(_reg3_mat_comp_6_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[6] <= _reg3_mat_comp_6_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_12_T = add(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_1 = tail(_reg3_mat_comp_12_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_2 = asSInt(_reg3_mat_comp_12_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_3 = sub(_reg3_mat_comp_12_T_2, w3.mat_comp[18]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_4 = tail(_reg3_mat_comp_12_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_5 = asSInt(_reg3_mat_comp_12_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_6 = sub(_reg3_mat_comp_12_T_5, w3.mat_comp[24]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_7 = tail(_reg3_mat_comp_12_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_8 = asSInt(_reg3_mat_comp_12_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_9 = dshr(_reg3_mat_comp_12_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[12] <= _reg3_mat_comp_12_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_18_T = sub(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_1 = tail(_reg3_mat_comp_18_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_2 = asSInt(_reg3_mat_comp_18_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_3 = sub(_reg3_mat_comp_18_T_2, w3.mat_real[18]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_4 = tail(_reg3_mat_comp_18_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_5 = asSInt(_reg3_mat_comp_18_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_6 = add(_reg3_mat_comp_18_T_5, w3.mat_real[24]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_7 = tail(_reg3_mat_comp_18_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_8 = asSInt(_reg3_mat_comp_18_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_9 = dshr(_reg3_mat_comp_18_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_18_T_10 = add(_reg3_mat_comp_18_T_9, w3.mat_comp[30]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_18_T_11 = tail(_reg3_mat_comp_18_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_18_T_12 = asSInt(_reg3_mat_comp_18_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[18] <= _reg3_mat_comp_18_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_1_T = add(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_1 = tail(_reg3_mat_real_1_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_2 = asSInt(_reg3_mat_real_1_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_3 = add(_reg3_mat_real_1_T_2, w3.mat_real[19]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_4 = tail(_reg3_mat_real_1_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_5 = asSInt(_reg3_mat_real_1_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_6 = add(_reg3_mat_real_1_T_5, w3.mat_real[25]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_7 = tail(_reg3_mat_real_1_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_8 = asSInt(_reg3_mat_real_1_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_9 = dshr(_reg3_mat_real_1_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_1_T_10 = add(w3.mat_real[1], _reg3_mat_real_1_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_1_T_11 = tail(_reg3_mat_real_1_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_1_T_12 = asSInt(_reg3_mat_real_1_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[1] <= _reg3_mat_real_1_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_7_T = sub(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_1 = tail(_reg3_mat_real_7_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_2 = asSInt(_reg3_mat_real_7_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_3 = sub(_reg3_mat_real_7_T_2, w3.mat_comp[19]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_4 = tail(_reg3_mat_real_7_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_5 = asSInt(_reg3_mat_real_7_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_6 = add(_reg3_mat_real_7_T_5, w3.mat_comp[25]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_7 = tail(_reg3_mat_real_7_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_8 = asSInt(_reg3_mat_real_7_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_9 = dshr(_reg3_mat_real_7_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[7] <= _reg3_mat_real_7_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_13_T = add(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_1 = tail(_reg3_mat_real_13_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_2 = asSInt(_reg3_mat_real_13_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_3 = sub(_reg3_mat_real_13_T_2, w3.mat_real[19]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_4 = tail(_reg3_mat_real_13_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_5 = asSInt(_reg3_mat_real_13_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_6 = sub(_reg3_mat_real_13_T_5, w3.mat_real[25]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_7 = tail(_reg3_mat_real_13_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_8 = asSInt(_reg3_mat_real_13_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_9 = dshr(_reg3_mat_real_13_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[13] <= _reg3_mat_real_13_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_19_T = sub(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_1 = tail(_reg3_mat_real_19_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_2 = asSInt(_reg3_mat_real_19_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_3 = add(_reg3_mat_real_19_T_2, w3.mat_comp[19]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_4 = tail(_reg3_mat_real_19_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_5 = asSInt(_reg3_mat_real_19_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_6 = sub(_reg3_mat_real_19_T_5, w3.mat_comp[25]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_7 = tail(_reg3_mat_real_19_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_8 = asSInt(_reg3_mat_real_19_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_9 = dshr(_reg3_mat_real_19_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_19_T_10 = add(_reg3_mat_real_19_T_9, w3.mat_real[31]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_19_T_11 = tail(_reg3_mat_real_19_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_19_T_12 = asSInt(_reg3_mat_real_19_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[19] <= _reg3_mat_real_19_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_1_T = add(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_1 = tail(_reg3_mat_comp_1_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_2 = asSInt(_reg3_mat_comp_1_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_3 = add(_reg3_mat_comp_1_T_2, w3.mat_comp[19]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_4 = tail(_reg3_mat_comp_1_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_5 = asSInt(_reg3_mat_comp_1_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_6 = add(_reg3_mat_comp_1_T_5, w3.mat_comp[25]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_7 = tail(_reg3_mat_comp_1_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_8 = asSInt(_reg3_mat_comp_1_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_9 = dshr(_reg3_mat_comp_1_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_1_T_10 = add(w3.mat_comp[1], _reg3_mat_comp_1_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_1_T_11 = tail(_reg3_mat_comp_1_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_1_T_12 = asSInt(_reg3_mat_comp_1_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[1] <= _reg3_mat_comp_1_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_7_T = sub(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_1 = tail(_reg3_mat_comp_7_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_2 = asSInt(_reg3_mat_comp_7_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_3 = add(_reg3_mat_comp_7_T_2, w3.mat_real[19]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_4 = tail(_reg3_mat_comp_7_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_5 = asSInt(_reg3_mat_comp_7_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_6 = sub(_reg3_mat_comp_7_T_5, w3.mat_real[25]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_7 = tail(_reg3_mat_comp_7_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_8 = asSInt(_reg3_mat_comp_7_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_9 = dshr(_reg3_mat_comp_7_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[7] <= _reg3_mat_comp_7_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_13_T = add(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_1 = tail(_reg3_mat_comp_13_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_2 = asSInt(_reg3_mat_comp_13_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_3 = sub(_reg3_mat_comp_13_T_2, w3.mat_comp[19]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_4 = tail(_reg3_mat_comp_13_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_5 = asSInt(_reg3_mat_comp_13_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_6 = sub(_reg3_mat_comp_13_T_5, w3.mat_comp[25]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_7 = tail(_reg3_mat_comp_13_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_8 = asSInt(_reg3_mat_comp_13_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_9 = dshr(_reg3_mat_comp_13_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[13] <= _reg3_mat_comp_13_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_19_T = sub(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_1 = tail(_reg3_mat_comp_19_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_2 = asSInt(_reg3_mat_comp_19_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_3 = sub(_reg3_mat_comp_19_T_2, w3.mat_real[19]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_4 = tail(_reg3_mat_comp_19_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_5 = asSInt(_reg3_mat_comp_19_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_6 = add(_reg3_mat_comp_19_T_5, w3.mat_real[25]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_7 = tail(_reg3_mat_comp_19_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_8 = asSInt(_reg3_mat_comp_19_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_9 = dshr(_reg3_mat_comp_19_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_19_T_10 = add(_reg3_mat_comp_19_T_9, w3.mat_comp[31]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_19_T_11 = tail(_reg3_mat_comp_19_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_19_T_12 = asSInt(_reg3_mat_comp_19_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[19] <= _reg3_mat_comp_19_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_2_T = add(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_1 = tail(_reg3_mat_real_2_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_2 = asSInt(_reg3_mat_real_2_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_3 = add(_reg3_mat_real_2_T_2, w3.mat_real[20]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_4 = tail(_reg3_mat_real_2_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_5 = asSInt(_reg3_mat_real_2_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_6 = add(_reg3_mat_real_2_T_5, w3.mat_real[26]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_7 = tail(_reg3_mat_real_2_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_8 = asSInt(_reg3_mat_real_2_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_9 = dshr(_reg3_mat_real_2_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_2_T_10 = add(w3.mat_real[2], _reg3_mat_real_2_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_2_T_11 = tail(_reg3_mat_real_2_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_2_T_12 = asSInt(_reg3_mat_real_2_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[2] <= _reg3_mat_real_2_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_8_T = sub(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_1 = tail(_reg3_mat_real_8_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_2 = asSInt(_reg3_mat_real_8_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_3 = sub(_reg3_mat_real_8_T_2, w3.mat_comp[20]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_4 = tail(_reg3_mat_real_8_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_5 = asSInt(_reg3_mat_real_8_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_6 = add(_reg3_mat_real_8_T_5, w3.mat_comp[26]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_7 = tail(_reg3_mat_real_8_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_8 = asSInt(_reg3_mat_real_8_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_9 = dshr(_reg3_mat_real_8_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[8] <= _reg3_mat_real_8_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_14_T = add(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_1 = tail(_reg3_mat_real_14_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_2 = asSInt(_reg3_mat_real_14_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_3 = sub(_reg3_mat_real_14_T_2, w3.mat_real[20]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_4 = tail(_reg3_mat_real_14_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_5 = asSInt(_reg3_mat_real_14_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_6 = sub(_reg3_mat_real_14_T_5, w3.mat_real[26]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_7 = tail(_reg3_mat_real_14_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_8 = asSInt(_reg3_mat_real_14_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_9 = dshr(_reg3_mat_real_14_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[14] <= _reg3_mat_real_14_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_20_T = sub(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_1 = tail(_reg3_mat_real_20_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_2 = asSInt(_reg3_mat_real_20_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_3 = add(_reg3_mat_real_20_T_2, w3.mat_comp[20]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_4 = tail(_reg3_mat_real_20_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_5 = asSInt(_reg3_mat_real_20_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_6 = sub(_reg3_mat_real_20_T_5, w3.mat_comp[26]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_7 = tail(_reg3_mat_real_20_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_8 = asSInt(_reg3_mat_real_20_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_9 = dshr(_reg3_mat_real_20_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_20_T_10 = add(_reg3_mat_real_20_T_9, w3.mat_real[32]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_20_T_11 = tail(_reg3_mat_real_20_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_20_T_12 = asSInt(_reg3_mat_real_20_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[20] <= _reg3_mat_real_20_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_2_T = add(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_1 = tail(_reg3_mat_comp_2_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_2 = asSInt(_reg3_mat_comp_2_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_3 = add(_reg3_mat_comp_2_T_2, w3.mat_comp[20]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_4 = tail(_reg3_mat_comp_2_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_5 = asSInt(_reg3_mat_comp_2_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_6 = add(_reg3_mat_comp_2_T_5, w3.mat_comp[26]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_7 = tail(_reg3_mat_comp_2_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_8 = asSInt(_reg3_mat_comp_2_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_9 = dshr(_reg3_mat_comp_2_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_2_T_10 = add(w3.mat_comp[2], _reg3_mat_comp_2_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_2_T_11 = tail(_reg3_mat_comp_2_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_2_T_12 = asSInt(_reg3_mat_comp_2_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[2] <= _reg3_mat_comp_2_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_8_T = sub(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_1 = tail(_reg3_mat_comp_8_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_2 = asSInt(_reg3_mat_comp_8_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_3 = add(_reg3_mat_comp_8_T_2, w3.mat_real[20]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_4 = tail(_reg3_mat_comp_8_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_5 = asSInt(_reg3_mat_comp_8_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_6 = sub(_reg3_mat_comp_8_T_5, w3.mat_real[26]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_7 = tail(_reg3_mat_comp_8_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_8 = asSInt(_reg3_mat_comp_8_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_9 = dshr(_reg3_mat_comp_8_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[8] <= _reg3_mat_comp_8_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_14_T = add(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_1 = tail(_reg3_mat_comp_14_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_2 = asSInt(_reg3_mat_comp_14_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_3 = sub(_reg3_mat_comp_14_T_2, w3.mat_comp[20]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_4 = tail(_reg3_mat_comp_14_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_5 = asSInt(_reg3_mat_comp_14_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_6 = sub(_reg3_mat_comp_14_T_5, w3.mat_comp[26]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_7 = tail(_reg3_mat_comp_14_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_8 = asSInt(_reg3_mat_comp_14_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_9 = dshr(_reg3_mat_comp_14_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[14] <= _reg3_mat_comp_14_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_20_T = sub(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_1 = tail(_reg3_mat_comp_20_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_2 = asSInt(_reg3_mat_comp_20_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_3 = sub(_reg3_mat_comp_20_T_2, w3.mat_real[20]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_4 = tail(_reg3_mat_comp_20_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_5 = asSInt(_reg3_mat_comp_20_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_6 = add(_reg3_mat_comp_20_T_5, w3.mat_real[26]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_7 = tail(_reg3_mat_comp_20_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_8 = asSInt(_reg3_mat_comp_20_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_9 = dshr(_reg3_mat_comp_20_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_20_T_10 = add(_reg3_mat_comp_20_T_9, w3.mat_comp[32]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_20_T_11 = tail(_reg3_mat_comp_20_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_20_T_12 = asSInt(_reg3_mat_comp_20_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[20] <= _reg3_mat_comp_20_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_3_T = add(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_1 = tail(_reg3_mat_real_3_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_2 = asSInt(_reg3_mat_real_3_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_3 = add(_reg3_mat_real_3_T_2, w3.mat_real[21]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_4 = tail(_reg3_mat_real_3_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_5 = asSInt(_reg3_mat_real_3_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_6 = add(_reg3_mat_real_3_T_5, w3.mat_real[27]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_7 = tail(_reg3_mat_real_3_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_8 = asSInt(_reg3_mat_real_3_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_9 = dshr(_reg3_mat_real_3_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_3_T_10 = add(w3.mat_real[3], _reg3_mat_real_3_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_3_T_11 = tail(_reg3_mat_real_3_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_3_T_12 = asSInt(_reg3_mat_real_3_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[3] <= _reg3_mat_real_3_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_9_T = sub(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_1 = tail(_reg3_mat_real_9_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_2 = asSInt(_reg3_mat_real_9_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_3 = sub(_reg3_mat_real_9_T_2, w3.mat_comp[21]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_4 = tail(_reg3_mat_real_9_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_5 = asSInt(_reg3_mat_real_9_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_6 = add(_reg3_mat_real_9_T_5, w3.mat_comp[27]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_7 = tail(_reg3_mat_real_9_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_8 = asSInt(_reg3_mat_real_9_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_9 = dshr(_reg3_mat_real_9_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[9] <= _reg3_mat_real_9_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_15_T = add(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_1 = tail(_reg3_mat_real_15_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_2 = asSInt(_reg3_mat_real_15_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_3 = sub(_reg3_mat_real_15_T_2, w3.mat_real[21]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_4 = tail(_reg3_mat_real_15_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_5 = asSInt(_reg3_mat_real_15_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_6 = sub(_reg3_mat_real_15_T_5, w3.mat_real[27]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_7 = tail(_reg3_mat_real_15_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_8 = asSInt(_reg3_mat_real_15_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_9 = dshr(_reg3_mat_real_15_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[15] <= _reg3_mat_real_15_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_21_T = sub(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_1 = tail(_reg3_mat_real_21_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_2 = asSInt(_reg3_mat_real_21_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_3 = add(_reg3_mat_real_21_T_2, w3.mat_comp[21]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_4 = tail(_reg3_mat_real_21_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_5 = asSInt(_reg3_mat_real_21_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_6 = sub(_reg3_mat_real_21_T_5, w3.mat_comp[27]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_7 = tail(_reg3_mat_real_21_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_8 = asSInt(_reg3_mat_real_21_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_9 = dshr(_reg3_mat_real_21_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_21_T_10 = add(_reg3_mat_real_21_T_9, w3.mat_real[33]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_21_T_11 = tail(_reg3_mat_real_21_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_21_T_12 = asSInt(_reg3_mat_real_21_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[21] <= _reg3_mat_real_21_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_3_T = add(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_1 = tail(_reg3_mat_comp_3_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_2 = asSInt(_reg3_mat_comp_3_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_3 = add(_reg3_mat_comp_3_T_2, w3.mat_comp[21]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_4 = tail(_reg3_mat_comp_3_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_5 = asSInt(_reg3_mat_comp_3_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_6 = add(_reg3_mat_comp_3_T_5, w3.mat_comp[27]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_7 = tail(_reg3_mat_comp_3_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_8 = asSInt(_reg3_mat_comp_3_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_9 = dshr(_reg3_mat_comp_3_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_3_T_10 = add(w3.mat_comp[3], _reg3_mat_comp_3_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_3_T_11 = tail(_reg3_mat_comp_3_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_3_T_12 = asSInt(_reg3_mat_comp_3_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[3] <= _reg3_mat_comp_3_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_9_T = sub(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_1 = tail(_reg3_mat_comp_9_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_2 = asSInt(_reg3_mat_comp_9_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_3 = add(_reg3_mat_comp_9_T_2, w3.mat_real[21]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_4 = tail(_reg3_mat_comp_9_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_5 = asSInt(_reg3_mat_comp_9_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_6 = sub(_reg3_mat_comp_9_T_5, w3.mat_real[27]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_7 = tail(_reg3_mat_comp_9_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_8 = asSInt(_reg3_mat_comp_9_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_9 = dshr(_reg3_mat_comp_9_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[9] <= _reg3_mat_comp_9_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_15_T = add(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_1 = tail(_reg3_mat_comp_15_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_2 = asSInt(_reg3_mat_comp_15_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_3 = sub(_reg3_mat_comp_15_T_2, w3.mat_comp[21]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_4 = tail(_reg3_mat_comp_15_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_5 = asSInt(_reg3_mat_comp_15_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_6 = sub(_reg3_mat_comp_15_T_5, w3.mat_comp[27]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_7 = tail(_reg3_mat_comp_15_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_8 = asSInt(_reg3_mat_comp_15_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_9 = dshr(_reg3_mat_comp_15_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[15] <= _reg3_mat_comp_15_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_21_T = sub(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_1 = tail(_reg3_mat_comp_21_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_2 = asSInt(_reg3_mat_comp_21_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_3 = sub(_reg3_mat_comp_21_T_2, w3.mat_real[21]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_4 = tail(_reg3_mat_comp_21_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_5 = asSInt(_reg3_mat_comp_21_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_6 = add(_reg3_mat_comp_21_T_5, w3.mat_real[27]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_7 = tail(_reg3_mat_comp_21_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_8 = asSInt(_reg3_mat_comp_21_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_9 = dshr(_reg3_mat_comp_21_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_21_T_10 = add(_reg3_mat_comp_21_T_9, w3.mat_comp[33]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_21_T_11 = tail(_reg3_mat_comp_21_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_21_T_12 = asSInt(_reg3_mat_comp_21_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[21] <= _reg3_mat_comp_21_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_4_T = add(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_1 = tail(_reg3_mat_real_4_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_2 = asSInt(_reg3_mat_real_4_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_3 = add(_reg3_mat_real_4_T_2, w3.mat_real[22]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_4 = tail(_reg3_mat_real_4_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_5 = asSInt(_reg3_mat_real_4_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_6 = add(_reg3_mat_real_4_T_5, w3.mat_real[28]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_7 = tail(_reg3_mat_real_4_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_8 = asSInt(_reg3_mat_real_4_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_9 = dshr(_reg3_mat_real_4_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_4_T_10 = add(w3.mat_real[4], _reg3_mat_real_4_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_4_T_11 = tail(_reg3_mat_real_4_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_4_T_12 = asSInt(_reg3_mat_real_4_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[4] <= _reg3_mat_real_4_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_10_T = sub(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_1 = tail(_reg3_mat_real_10_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_2 = asSInt(_reg3_mat_real_10_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_3 = sub(_reg3_mat_real_10_T_2, w3.mat_comp[22]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_4 = tail(_reg3_mat_real_10_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_5 = asSInt(_reg3_mat_real_10_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_6 = add(_reg3_mat_real_10_T_5, w3.mat_comp[28]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_7 = tail(_reg3_mat_real_10_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_8 = asSInt(_reg3_mat_real_10_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_9 = dshr(_reg3_mat_real_10_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[10] <= _reg3_mat_real_10_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_16_T = add(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_1 = tail(_reg3_mat_real_16_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_2 = asSInt(_reg3_mat_real_16_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_3 = sub(_reg3_mat_real_16_T_2, w3.mat_real[22]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_4 = tail(_reg3_mat_real_16_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_5 = asSInt(_reg3_mat_real_16_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_6 = sub(_reg3_mat_real_16_T_5, w3.mat_real[28]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_7 = tail(_reg3_mat_real_16_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_8 = asSInt(_reg3_mat_real_16_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_9 = dshr(_reg3_mat_real_16_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[16] <= _reg3_mat_real_16_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_22_T = sub(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_1 = tail(_reg3_mat_real_22_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_2 = asSInt(_reg3_mat_real_22_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_3 = add(_reg3_mat_real_22_T_2, w3.mat_comp[22]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_4 = tail(_reg3_mat_real_22_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_5 = asSInt(_reg3_mat_real_22_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_6 = sub(_reg3_mat_real_22_T_5, w3.mat_comp[28]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_7 = tail(_reg3_mat_real_22_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_8 = asSInt(_reg3_mat_real_22_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_9 = dshr(_reg3_mat_real_22_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_22_T_10 = add(_reg3_mat_real_22_T_9, w3.mat_real[34]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_22_T_11 = tail(_reg3_mat_real_22_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_22_T_12 = asSInt(_reg3_mat_real_22_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[22] <= _reg3_mat_real_22_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_4_T = add(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_1 = tail(_reg3_mat_comp_4_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_2 = asSInt(_reg3_mat_comp_4_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_3 = add(_reg3_mat_comp_4_T_2, w3.mat_comp[22]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_4 = tail(_reg3_mat_comp_4_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_5 = asSInt(_reg3_mat_comp_4_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_6 = add(_reg3_mat_comp_4_T_5, w3.mat_comp[28]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_7 = tail(_reg3_mat_comp_4_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_8 = asSInt(_reg3_mat_comp_4_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_9 = dshr(_reg3_mat_comp_4_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_4_T_10 = add(w3.mat_comp[4], _reg3_mat_comp_4_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_4_T_11 = tail(_reg3_mat_comp_4_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_4_T_12 = asSInt(_reg3_mat_comp_4_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[4] <= _reg3_mat_comp_4_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_10_T = sub(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_1 = tail(_reg3_mat_comp_10_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_2 = asSInt(_reg3_mat_comp_10_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_3 = add(_reg3_mat_comp_10_T_2, w3.mat_real[22]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_4 = tail(_reg3_mat_comp_10_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_5 = asSInt(_reg3_mat_comp_10_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_6 = sub(_reg3_mat_comp_10_T_5, w3.mat_real[28]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_7 = tail(_reg3_mat_comp_10_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_8 = asSInt(_reg3_mat_comp_10_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_9 = dshr(_reg3_mat_comp_10_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[10] <= _reg3_mat_comp_10_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_16_T = add(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_1 = tail(_reg3_mat_comp_16_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_2 = asSInt(_reg3_mat_comp_16_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_3 = sub(_reg3_mat_comp_16_T_2, w3.mat_comp[22]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_4 = tail(_reg3_mat_comp_16_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_5 = asSInt(_reg3_mat_comp_16_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_6 = sub(_reg3_mat_comp_16_T_5, w3.mat_comp[28]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_7 = tail(_reg3_mat_comp_16_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_8 = asSInt(_reg3_mat_comp_16_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_9 = dshr(_reg3_mat_comp_16_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[16] <= _reg3_mat_comp_16_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_22_T = sub(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_1 = tail(_reg3_mat_comp_22_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_2 = asSInt(_reg3_mat_comp_22_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_3 = sub(_reg3_mat_comp_22_T_2, w3.mat_real[22]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_4 = tail(_reg3_mat_comp_22_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_5 = asSInt(_reg3_mat_comp_22_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_6 = add(_reg3_mat_comp_22_T_5, w3.mat_real[28]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_7 = tail(_reg3_mat_comp_22_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_8 = asSInt(_reg3_mat_comp_22_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_9 = dshr(_reg3_mat_comp_22_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_22_T_10 = add(_reg3_mat_comp_22_T_9, w3.mat_comp[34]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_22_T_11 = tail(_reg3_mat_comp_22_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_22_T_12 = asSInt(_reg3_mat_comp_22_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[22] <= _reg3_mat_comp_22_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_5_T = add(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_1 = tail(_reg3_mat_real_5_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_2 = asSInt(_reg3_mat_real_5_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_3 = add(_reg3_mat_real_5_T_2, w3.mat_real[23]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_4 = tail(_reg3_mat_real_5_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_5 = asSInt(_reg3_mat_real_5_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_6 = add(_reg3_mat_real_5_T_5, w3.mat_real[29]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_7 = tail(_reg3_mat_real_5_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_8 = asSInt(_reg3_mat_real_5_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_9 = dshr(_reg3_mat_real_5_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_5_T_10 = add(w3.mat_real[5], _reg3_mat_real_5_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_5_T_11 = tail(_reg3_mat_real_5_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_5_T_12 = asSInt(_reg3_mat_real_5_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[5] <= _reg3_mat_real_5_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_11_T = sub(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_1 = tail(_reg3_mat_real_11_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_2 = asSInt(_reg3_mat_real_11_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_3 = sub(_reg3_mat_real_11_T_2, w3.mat_comp[23]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_4 = tail(_reg3_mat_real_11_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_5 = asSInt(_reg3_mat_real_11_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_6 = add(_reg3_mat_real_11_T_5, w3.mat_comp[29]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_7 = tail(_reg3_mat_real_11_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_8 = asSInt(_reg3_mat_real_11_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_9 = dshr(_reg3_mat_real_11_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[11] <= _reg3_mat_real_11_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_17_T = add(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_1 = tail(_reg3_mat_real_17_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_2 = asSInt(_reg3_mat_real_17_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_3 = sub(_reg3_mat_real_17_T_2, w3.mat_real[23]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_4 = tail(_reg3_mat_real_17_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_5 = asSInt(_reg3_mat_real_17_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_6 = sub(_reg3_mat_real_17_T_5, w3.mat_real[29]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_7 = tail(_reg3_mat_real_17_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_8 = asSInt(_reg3_mat_real_17_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_9 = dshr(_reg3_mat_real_17_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[17] <= _reg3_mat_real_17_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_23_T = sub(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_1 = tail(_reg3_mat_real_23_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_2 = asSInt(_reg3_mat_real_23_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_3 = add(_reg3_mat_real_23_T_2, w3.mat_comp[23]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_4 = tail(_reg3_mat_real_23_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_5 = asSInt(_reg3_mat_real_23_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_6 = sub(_reg3_mat_real_23_T_5, w3.mat_comp[29]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_7 = tail(_reg3_mat_real_23_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_8 = asSInt(_reg3_mat_real_23_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_9 = dshr(_reg3_mat_real_23_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_23_T_10 = add(_reg3_mat_real_23_T_9, w3.mat_real[35]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_23_T_11 = tail(_reg3_mat_real_23_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_23_T_12 = asSInt(_reg3_mat_real_23_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[23] <= _reg3_mat_real_23_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_5_T = add(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_1 = tail(_reg3_mat_comp_5_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_2 = asSInt(_reg3_mat_comp_5_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_3 = add(_reg3_mat_comp_5_T_2, w3.mat_comp[23]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_4 = tail(_reg3_mat_comp_5_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_5 = asSInt(_reg3_mat_comp_5_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_6 = add(_reg3_mat_comp_5_T_5, w3.mat_comp[29]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_7 = tail(_reg3_mat_comp_5_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_8 = asSInt(_reg3_mat_comp_5_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_9 = dshr(_reg3_mat_comp_5_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_5_T_10 = add(w3.mat_comp[5], _reg3_mat_comp_5_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_5_T_11 = tail(_reg3_mat_comp_5_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_5_T_12 = asSInt(_reg3_mat_comp_5_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[5] <= _reg3_mat_comp_5_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_11_T = sub(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_1 = tail(_reg3_mat_comp_11_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_2 = asSInt(_reg3_mat_comp_11_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_3 = add(_reg3_mat_comp_11_T_2, w3.mat_real[23]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_4 = tail(_reg3_mat_comp_11_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_5 = asSInt(_reg3_mat_comp_11_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_6 = sub(_reg3_mat_comp_11_T_5, w3.mat_real[29]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_7 = tail(_reg3_mat_comp_11_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_8 = asSInt(_reg3_mat_comp_11_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_9 = dshr(_reg3_mat_comp_11_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[11] <= _reg3_mat_comp_11_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_17_T = add(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_1 = tail(_reg3_mat_comp_17_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_2 = asSInt(_reg3_mat_comp_17_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_3 = sub(_reg3_mat_comp_17_T_2, w3.mat_comp[23]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_4 = tail(_reg3_mat_comp_17_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_5 = asSInt(_reg3_mat_comp_17_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_6 = sub(_reg3_mat_comp_17_T_5, w3.mat_comp[29]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_7 = tail(_reg3_mat_comp_17_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_8 = asSInt(_reg3_mat_comp_17_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_9 = dshr(_reg3_mat_comp_17_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[17] <= _reg3_mat_comp_17_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_23_T = sub(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_1 = tail(_reg3_mat_comp_23_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_2 = asSInt(_reg3_mat_comp_23_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_3 = sub(_reg3_mat_comp_23_T_2, w3.mat_real[23]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_4 = tail(_reg3_mat_comp_23_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_5 = asSInt(_reg3_mat_comp_23_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_6 = add(_reg3_mat_comp_23_T_5, w3.mat_real[29]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_7 = tail(_reg3_mat_comp_23_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_8 = asSInt(_reg3_mat_comp_23_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_9 = dshr(_reg3_mat_comp_23_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_23_T_10 = add(_reg3_mat_comp_23_T_9, w3.mat_comp[35]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_23_T_11 = tail(_reg3_mat_comp_23_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_23_T_12 = asSInt(_reg3_mat_comp_23_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[23] <= _reg3_mat_comp_23_T_12 @[calc6x6.scala 158:37]
    valid_reg[3] <= valid_reg[2] @[calc6x6.scala 179:18]
    io.valid_out <= valid_reg[3] @[calc6x6.scala 180:18]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      real[0].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[0].in_b <= io.input.mat[0] @[calc6x6.scala 186:30]
      io.output.mat[0] <= real[0].result @[calc6x6.scala 187:34]
      real[1].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[1].in_b <= io.input.mat[1] @[calc6x6.scala 186:30]
      io.output.mat[1] <= real[1].result @[calc6x6.scala 187:34]
      real[2].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[2].in_b <= io.input.mat[2] @[calc6x6.scala 186:30]
      io.output.mat[2] <= real[2].result @[calc6x6.scala 187:34]
      real[3].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[3].in_b <= io.input.mat[3] @[calc6x6.scala 186:30]
      io.output.mat[3] <= real[3].result @[calc6x6.scala 187:34]
      real[4].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[4].in_b <= io.input.mat[4] @[calc6x6.scala 186:30]
      io.output.mat[4] <= real[4].result @[calc6x6.scala 187:34]
      real[5].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[5].in_b <= io.input.mat[5] @[calc6x6.scala 186:30]
      io.output.mat[5] <= real[5].result @[calc6x6.scala 187:34]
      real[6].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[6].in_b <= io.input.mat[6] @[calc6x6.scala 186:30]
      io.output.mat[6] <= real[6].result @[calc6x6.scala 187:34]
      real[7].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[7].in_b <= io.input.mat[7] @[calc6x6.scala 186:30]
      io.output.mat[7] <= real[7].result @[calc6x6.scala 187:34]
      real[8].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[8].in_b <= io.input.mat[8] @[calc6x6.scala 186:30]
      io.output.mat[8] <= real[8].result @[calc6x6.scala 187:34]
      real[9].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[9].in_b <= io.input.mat[9] @[calc6x6.scala 186:30]
      io.output.mat[9] <= real[9].result @[calc6x6.scala 187:34]
      real[10].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[10].in_b <= io.input.mat[10] @[calc6x6.scala 186:30]
      io.output.mat[10] <= real[10].result @[calc6x6.scala 187:34]
      real[11].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[11].in_b <= io.input.mat[11] @[calc6x6.scala 186:30]
      io.output.mat[11] <= real[11].result @[calc6x6.scala 187:34]
      real[12].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[12].in_b <= io.input.mat[12] @[calc6x6.scala 186:30]
      io.output.mat[12] <= real[12].result @[calc6x6.scala 187:34]
      real[13].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[13].in_b <= io.input.mat[13] @[calc6x6.scala 186:30]
      io.output.mat[13] <= real[13].result @[calc6x6.scala 187:34]
      real[14].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[14].in_b <= io.input.mat[14] @[calc6x6.scala 186:30]
      io.output.mat[14] <= real[14].result @[calc6x6.scala 187:34]
      real[15].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[15].in_b <= io.input.mat[15] @[calc6x6.scala 186:30]
      io.output.mat[15] <= real[15].result @[calc6x6.scala 187:34]
      io.valid_out <= io.valid_in @[calc6x6.scala 189:26]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_4 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_5 = eq(_T_3, _T_4) @[Conditional.scala 37:30]
      when _T_5 : @[Conditional.scala 39:67]
        real[0].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[0].in_b <= io.input.mat[0] @[calc6x6.scala 196:30]
        real[0].w_a <= io.weight.real[0] @[calc6x6.scala 197:29]
        io.output.mat[0] <= real[0].result @[calc6x6.scala 198:34]
        real[1].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[1].in_b <= io.input.mat[1] @[calc6x6.scala 196:30]
        real[1].w_a <= io.weight.real[1] @[calc6x6.scala 197:29]
        io.output.mat[1] <= real[1].result @[calc6x6.scala 198:34]
        real[2].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[2].in_b <= io.input.mat[2] @[calc6x6.scala 196:30]
        real[2].w_a <= io.weight.real[2] @[calc6x6.scala 197:29]
        io.output.mat[2] <= real[2].result @[calc6x6.scala 198:34]
        real[3].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[3].in_b <= io.input.mat[3] @[calc6x6.scala 196:30]
        real[3].w_a <= io.weight.real[3] @[calc6x6.scala 197:29]
        io.output.mat[3] <= real[3].result @[calc6x6.scala 198:34]
        real[4].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[4].in_b <= io.input.mat[4] @[calc6x6.scala 196:30]
        real[4].w_a <= io.weight.real[4] @[calc6x6.scala 197:29]
        io.output.mat[4] <= real[4].result @[calc6x6.scala 198:34]
        real[5].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[5].in_b <= io.input.mat[5] @[calc6x6.scala 196:30]
        real[5].w_a <= io.weight.real[5] @[calc6x6.scala 197:29]
        io.output.mat[5] <= real[5].result @[calc6x6.scala 198:34]
        real[6].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[6].in_b <= io.input.mat[6] @[calc6x6.scala 196:30]
        real[6].w_a <= io.weight.real[6] @[calc6x6.scala 197:29]
        io.output.mat[6] <= real[6].result @[calc6x6.scala 198:34]
        real[7].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[7].in_b <= io.input.mat[7] @[calc6x6.scala 196:30]
        real[7].w_a <= io.weight.real[7] @[calc6x6.scala 197:29]
        io.output.mat[7] <= real[7].result @[calc6x6.scala 198:34]
        real[8].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[8].in_b <= io.input.mat[8] @[calc6x6.scala 196:30]
        real[8].w_a <= io.weight.real[8] @[calc6x6.scala 197:29]
        io.output.mat[8] <= real[8].result @[calc6x6.scala 198:34]
        real[9].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[9].in_b <= io.input.mat[9] @[calc6x6.scala 196:30]
        real[9].w_a <= io.weight.real[9] @[calc6x6.scala 197:29]
        io.output.mat[9] <= real[9].result @[calc6x6.scala 198:34]
        real[10].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[10].in_b <= io.input.mat[10] @[calc6x6.scala 196:30]
        real[10].w_a <= io.weight.real[10] @[calc6x6.scala 197:29]
        io.output.mat[10] <= real[10].result @[calc6x6.scala 198:34]
        real[11].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[11].in_b <= io.input.mat[11] @[calc6x6.scala 196:30]
        real[11].w_a <= io.weight.real[11] @[calc6x6.scala 197:29]
        io.output.mat[11] <= real[11].result @[calc6x6.scala 198:34]
        real[12].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[12].in_b <= io.input.mat[12] @[calc6x6.scala 196:30]
        real[12].w_a <= io.weight.real[12] @[calc6x6.scala 197:29]
        io.output.mat[12] <= real[12].result @[calc6x6.scala 198:34]
        real[13].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[13].in_b <= io.input.mat[13] @[calc6x6.scala 196:30]
        real[13].w_a <= io.weight.real[13] @[calc6x6.scala 197:29]
        io.output.mat[13] <= real[13].result @[calc6x6.scala 198:34]
        real[14].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[14].in_b <= io.input.mat[14] @[calc6x6.scala 196:30]
        real[14].w_a <= io.weight.real[14] @[calc6x6.scala 197:29]
        io.output.mat[14] <= real[14].result @[calc6x6.scala 198:34]
        real[15].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[15].in_b <= io.input.mat[15] @[calc6x6.scala 196:30]
        real[15].w_a <= io.weight.real[15] @[calc6x6.scala 197:29]
        io.output.mat[15] <= real[15].result @[calc6x6.scala 198:34]
        io.valid_out <= io.valid_in @[calc6x6.scala 201:25]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_6 = asUInt(UInt<2>("h02")) @[Conditional.scala 37:23]
        node _T_7 = asUInt(io.flag) @[Conditional.scala 37:39]
        node _T_8 = eq(_T_6, _T_7) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          node _io_output_mat_0_T = add(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_1 = tail(_io_output_mat_0_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_2 = asSInt(_io_output_mat_0_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_3 = add(_io_output_mat_0_T_2, reg3.mat_real[3]) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_4 = tail(_io_output_mat_0_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_5 = asSInt(_io_output_mat_0_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_6 = add(_io_output_mat_0_T_5, reg3.mat_real[4]) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_7 = tail(_io_output_mat_0_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_8 = asSInt(_io_output_mat_0_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_9 = dshr(_io_output_mat_0_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_0_T_10 = add(reg3.mat_real[0], _io_output_mat_0_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_0_T_11 = tail(_io_output_mat_0_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_0_T_12 = asSInt(_io_output_mat_0_T_11) @[calc6x6.scala 164:61]
          io.output.mat[0] <= _io_output_mat_0_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_1_T = sub(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_1 = tail(_io_output_mat_1_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_2 = asSInt(_io_output_mat_1_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_3 = sub(_io_output_mat_1_T_2, reg3.mat_comp[3]) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_4 = tail(_io_output_mat_1_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_5 = asSInt(_io_output_mat_1_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_6 = add(_io_output_mat_1_T_5, reg3.mat_comp[4]) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_7 = tail(_io_output_mat_1_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_8 = asSInt(_io_output_mat_1_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_9 = dshr(_io_output_mat_1_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[1] <= _io_output_mat_1_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_2_T = add(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_1 = tail(_io_output_mat_2_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_2 = asSInt(_io_output_mat_2_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_3 = sub(_io_output_mat_2_T_2, reg3.mat_real[3]) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_4 = tail(_io_output_mat_2_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_5 = asSInt(_io_output_mat_2_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_6 = sub(_io_output_mat_2_T_5, reg3.mat_real[4]) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_7 = tail(_io_output_mat_2_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_8 = asSInt(_io_output_mat_2_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_9 = dshr(_io_output_mat_2_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[2] <= _io_output_mat_2_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_3_T = sub(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_1 = tail(_io_output_mat_3_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_2 = asSInt(_io_output_mat_3_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_3 = add(_io_output_mat_3_T_2, reg3.mat_comp[3]) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_4 = tail(_io_output_mat_3_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_5 = asSInt(_io_output_mat_3_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_6 = sub(_io_output_mat_3_T_5, reg3.mat_comp[4]) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_7 = tail(_io_output_mat_3_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_8 = asSInt(_io_output_mat_3_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_9 = dshr(_io_output_mat_3_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_3_T_10 = add(_io_output_mat_3_T_9, reg3.mat_real[5]) @[calc6x6.scala 168:136]
          node _io_output_mat_3_T_11 = tail(_io_output_mat_3_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_3_T_12 = asSInt(_io_output_mat_3_T_11) @[calc6x6.scala 168:136]
          io.output.mat[3] <= _io_output_mat_3_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_4_T = add(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_1 = tail(_io_output_mat_4_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_2 = asSInt(_io_output_mat_4_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_3 = add(_io_output_mat_4_T_2, reg3.mat_real[9]) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_4 = tail(_io_output_mat_4_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_5 = asSInt(_io_output_mat_4_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_6 = add(_io_output_mat_4_T_5, reg3.mat_real[10]) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_7 = tail(_io_output_mat_4_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_8 = asSInt(_io_output_mat_4_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_9 = dshr(_io_output_mat_4_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_4_T_10 = add(reg3.mat_real[6], _io_output_mat_4_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_4_T_11 = tail(_io_output_mat_4_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_4_T_12 = asSInt(_io_output_mat_4_T_11) @[calc6x6.scala 164:61]
          io.output.mat[4] <= _io_output_mat_4_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_5_T = sub(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_1 = tail(_io_output_mat_5_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_2 = asSInt(_io_output_mat_5_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_3 = sub(_io_output_mat_5_T_2, reg3.mat_comp[9]) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_4 = tail(_io_output_mat_5_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_5 = asSInt(_io_output_mat_5_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_6 = add(_io_output_mat_5_T_5, reg3.mat_comp[10]) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_7 = tail(_io_output_mat_5_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_8 = asSInt(_io_output_mat_5_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_9 = dshr(_io_output_mat_5_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[5] <= _io_output_mat_5_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_6_T = add(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_1 = tail(_io_output_mat_6_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_2 = asSInt(_io_output_mat_6_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_3 = sub(_io_output_mat_6_T_2, reg3.mat_real[9]) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_4 = tail(_io_output_mat_6_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_5 = asSInt(_io_output_mat_6_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_6 = sub(_io_output_mat_6_T_5, reg3.mat_real[10]) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_7 = tail(_io_output_mat_6_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_8 = asSInt(_io_output_mat_6_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_9 = dshr(_io_output_mat_6_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[6] <= _io_output_mat_6_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_7_T = sub(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_1 = tail(_io_output_mat_7_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_2 = asSInt(_io_output_mat_7_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_3 = add(_io_output_mat_7_T_2, reg3.mat_comp[9]) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_4 = tail(_io_output_mat_7_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_5 = asSInt(_io_output_mat_7_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_6 = sub(_io_output_mat_7_T_5, reg3.mat_comp[10]) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_7 = tail(_io_output_mat_7_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_8 = asSInt(_io_output_mat_7_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_9 = dshr(_io_output_mat_7_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_7_T_10 = add(_io_output_mat_7_T_9, reg3.mat_real[11]) @[calc6x6.scala 168:136]
          node _io_output_mat_7_T_11 = tail(_io_output_mat_7_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_7_T_12 = asSInt(_io_output_mat_7_T_11) @[calc6x6.scala 168:136]
          io.output.mat[7] <= _io_output_mat_7_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_8_T = add(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_1 = tail(_io_output_mat_8_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_2 = asSInt(_io_output_mat_8_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_3 = add(_io_output_mat_8_T_2, reg3.mat_real[15]) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_4 = tail(_io_output_mat_8_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_5 = asSInt(_io_output_mat_8_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_6 = add(_io_output_mat_8_T_5, reg3.mat_real[16]) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_7 = tail(_io_output_mat_8_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_8 = asSInt(_io_output_mat_8_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_9 = dshr(_io_output_mat_8_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_8_T_10 = add(reg3.mat_real[12], _io_output_mat_8_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_8_T_11 = tail(_io_output_mat_8_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_8_T_12 = asSInt(_io_output_mat_8_T_11) @[calc6x6.scala 164:61]
          io.output.mat[8] <= _io_output_mat_8_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_9_T = sub(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_1 = tail(_io_output_mat_9_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_2 = asSInt(_io_output_mat_9_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_3 = sub(_io_output_mat_9_T_2, reg3.mat_comp[15]) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_4 = tail(_io_output_mat_9_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_5 = asSInt(_io_output_mat_9_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_6 = add(_io_output_mat_9_T_5, reg3.mat_comp[16]) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_7 = tail(_io_output_mat_9_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_8 = asSInt(_io_output_mat_9_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_9 = dshr(_io_output_mat_9_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[9] <= _io_output_mat_9_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_10_T = add(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_1 = tail(_io_output_mat_10_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_2 = asSInt(_io_output_mat_10_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_3 = sub(_io_output_mat_10_T_2, reg3.mat_real[15]) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_4 = tail(_io_output_mat_10_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_5 = asSInt(_io_output_mat_10_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_6 = sub(_io_output_mat_10_T_5, reg3.mat_real[16]) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_7 = tail(_io_output_mat_10_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_8 = asSInt(_io_output_mat_10_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_9 = dshr(_io_output_mat_10_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[10] <= _io_output_mat_10_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_11_T = sub(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_1 = tail(_io_output_mat_11_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_2 = asSInt(_io_output_mat_11_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_3 = add(_io_output_mat_11_T_2, reg3.mat_comp[15]) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_4 = tail(_io_output_mat_11_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_5 = asSInt(_io_output_mat_11_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_6 = sub(_io_output_mat_11_T_5, reg3.mat_comp[16]) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_7 = tail(_io_output_mat_11_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_8 = asSInt(_io_output_mat_11_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_9 = dshr(_io_output_mat_11_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_11_T_10 = add(_io_output_mat_11_T_9, reg3.mat_real[17]) @[calc6x6.scala 168:136]
          node _io_output_mat_11_T_11 = tail(_io_output_mat_11_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_11_T_12 = asSInt(_io_output_mat_11_T_11) @[calc6x6.scala 168:136]
          io.output.mat[11] <= _io_output_mat_11_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_12_T = add(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_1 = tail(_io_output_mat_12_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_2 = asSInt(_io_output_mat_12_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_3 = add(_io_output_mat_12_T_2, reg3.mat_real[21]) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_4 = tail(_io_output_mat_12_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_5 = asSInt(_io_output_mat_12_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_6 = add(_io_output_mat_12_T_5, reg3.mat_real[22]) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_7 = tail(_io_output_mat_12_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_8 = asSInt(_io_output_mat_12_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_9 = dshr(_io_output_mat_12_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_12_T_10 = add(reg3.mat_real[18], _io_output_mat_12_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_12_T_11 = tail(_io_output_mat_12_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_12_T_12 = asSInt(_io_output_mat_12_T_11) @[calc6x6.scala 164:61]
          io.output.mat[12] <= _io_output_mat_12_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_13_T = sub(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_1 = tail(_io_output_mat_13_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_2 = asSInt(_io_output_mat_13_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_3 = sub(_io_output_mat_13_T_2, reg3.mat_comp[21]) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_4 = tail(_io_output_mat_13_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_5 = asSInt(_io_output_mat_13_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_6 = add(_io_output_mat_13_T_5, reg3.mat_comp[22]) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_7 = tail(_io_output_mat_13_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_8 = asSInt(_io_output_mat_13_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_9 = dshr(_io_output_mat_13_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[13] <= _io_output_mat_13_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_14_T = add(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_1 = tail(_io_output_mat_14_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_2 = asSInt(_io_output_mat_14_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_3 = sub(_io_output_mat_14_T_2, reg3.mat_real[21]) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_4 = tail(_io_output_mat_14_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_5 = asSInt(_io_output_mat_14_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_6 = sub(_io_output_mat_14_T_5, reg3.mat_real[22]) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_7 = tail(_io_output_mat_14_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_8 = asSInt(_io_output_mat_14_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_9 = dshr(_io_output_mat_14_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[14] <= _io_output_mat_14_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_15_T = sub(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_1 = tail(_io_output_mat_15_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_2 = asSInt(_io_output_mat_15_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_3 = add(_io_output_mat_15_T_2, reg3.mat_comp[21]) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_4 = tail(_io_output_mat_15_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_5 = asSInt(_io_output_mat_15_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_6 = sub(_io_output_mat_15_T_5, reg3.mat_comp[22]) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_7 = tail(_io_output_mat_15_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_8 = asSInt(_io_output_mat_15_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_9 = dshr(_io_output_mat_15_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_15_T_10 = add(_io_output_mat_15_T_9, reg3.mat_real[23]) @[calc6x6.scala 168:136]
          node _io_output_mat_15_T_11 = tail(_io_output_mat_15_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_15_T_12 = asSInt(_io_output_mat_15_T_11) @[calc6x6.scala 168:136]
          io.output.mat[15] <= _io_output_mat_15_T_12 @[calc6x6.scala 168:37]
          real[0].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[0].in_b <= reg2.mat_real[0] @[calc6x6.scala 225:38]
          real[0].w_a <= io.weight.real[0] @[calc6x6.scala 226:37]
          w3.mat_real[0] <= real[0].result @[calc6x6.scala 227:47]
          real[1].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[1].in_b <= reg2.mat_real[1] @[calc6x6.scala 225:38]
          real[1].w_a <= io.weight.real[1] @[calc6x6.scala 226:37]
          w3.mat_real[1] <= real[1].result @[calc6x6.scala 227:47]
          real[2].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[2].in_b <= reg2.mat_real[2] @[calc6x6.scala 225:38]
          real[2].w_a <= io.weight.real[2] @[calc6x6.scala 226:37]
          w3.mat_real[2] <= real[2].result @[calc6x6.scala 227:47]
          comp1[0].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[0].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[0].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[0].w_a <= io.weight.comp1[0] @[calc6x6.scala 257:38]
          comp2[0].w_a <= io.weight.comp2[0] @[calc6x6.scala 258:38]
          comp3[0].w_a <= io.weight.comp3[0] @[calc6x6.scala 259:38]
          node _comp1_0_in_b_T_1 = add(reg2.mat_real[3], reg2.mat_comp[6]) @[calc6x6.scala 261:65]
          node _comp1_0_in_b_T_2 = tail(_comp1_0_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_0_in_b_T_3 = asSInt(_comp1_0_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[0].in_b <= _comp1_0_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[0].in_b <= reg2.mat_real[3] @[calc6x6.scala 262:39]
          comp3[0].in_b <= reg2.mat_comp[6] @[calc6x6.scala 263:39]
          node _w3_mat_real_3_T = sub(comp2[0].result, comp3[0].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_3_T_1 = tail(_w3_mat_real_3_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_3_T_2 = asSInt(_w3_mat_real_3_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[3] <= _w3_mat_real_3_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_3_T = sub(comp1[0].result, comp2[0].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_1 = tail(_w3_mat_comp_3_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_2 = asSInt(_w3_mat_comp_3_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_3 = sub(_w3_mat_comp_3_T_2, comp3[0].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_3_T_4 = tail(_w3_mat_comp_3_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_3_T_5 = asSInt(_w3_mat_comp_3_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[3] <= _w3_mat_comp_3_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_4_T = sub(comp2[0].result, comp3[0].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_4_T_1 = tail(_w3_mat_real_4_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_4_T_2 = asSInt(_w3_mat_real_4_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[4] <= _w3_mat_real_4_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), comp1[0].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_1 = tail(_w3_mat_comp_4_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_2 = asSInt(_w3_mat_comp_4_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_3 = add(_w3_mat_comp_4_T_2, comp2[0].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_4 = tail(_w3_mat_comp_4_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_5 = asSInt(_w3_mat_comp_4_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_6 = add(_w3_mat_comp_4_T_5, comp3[0].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_4_T_7 = tail(_w3_mat_comp_4_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_4_T_8 = asSInt(_w3_mat_comp_4_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[4] <= _w3_mat_comp_4_T_8 @[calc6x6.scala 272:47]
          real[3].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[3].in_b <= reg2.mat_real[5] @[calc6x6.scala 225:38]
          real[3].w_a <= io.weight.real[3] @[calc6x6.scala 226:37]
          w3.mat_real[5] <= real[3].result @[calc6x6.scala 227:47]
          real[4].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[4].in_b <= reg2.mat_real[6] @[calc6x6.scala 225:38]
          real[4].w_a <= io.weight.real[4] @[calc6x6.scala 226:37]
          w3.mat_real[6] <= real[4].result @[calc6x6.scala 227:47]
          real[5].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[5].in_b <= reg2.mat_real[7] @[calc6x6.scala 225:38]
          real[5].w_a <= io.weight.real[5] @[calc6x6.scala 226:37]
          w3.mat_real[7] <= real[5].result @[calc6x6.scala 227:47]
          real[6].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[6].in_b <= reg2.mat_real[8] @[calc6x6.scala 225:38]
          real[6].w_a <= io.weight.real[6] @[calc6x6.scala 226:37]
          w3.mat_real[8] <= real[6].result @[calc6x6.scala 227:47]
          comp1[1].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[1].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[1].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[1].w_a <= io.weight.comp1[1] @[calc6x6.scala 257:38]
          comp2[1].w_a <= io.weight.comp2[1] @[calc6x6.scala 258:38]
          comp3[1].w_a <= io.weight.comp3[1] @[calc6x6.scala 259:38]
          node _comp1_1_in_b_T_1 = add(reg2.mat_real[9], reg2.mat_comp[7]) @[calc6x6.scala 261:65]
          node _comp1_1_in_b_T_2 = tail(_comp1_1_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_1_in_b_T_3 = asSInt(_comp1_1_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[1].in_b <= _comp1_1_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[1].in_b <= reg2.mat_real[9] @[calc6x6.scala 262:39]
          comp3[1].in_b <= reg2.mat_comp[7] @[calc6x6.scala 263:39]
          node _w3_mat_real_9_T = sub(comp2[1].result, comp3[1].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_9_T_1 = tail(_w3_mat_real_9_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_9_T_2 = asSInt(_w3_mat_real_9_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[9] <= _w3_mat_real_9_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_9_T = sub(comp1[1].result, comp2[1].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_1 = tail(_w3_mat_comp_9_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_2 = asSInt(_w3_mat_comp_9_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_3 = sub(_w3_mat_comp_9_T_2, comp3[1].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_9_T_4 = tail(_w3_mat_comp_9_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_9_T_5 = asSInt(_w3_mat_comp_9_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[9] <= _w3_mat_comp_9_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_10_T = sub(comp2[1].result, comp3[1].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_10_T_1 = tail(_w3_mat_real_10_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_10_T_2 = asSInt(_w3_mat_real_10_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[10] <= _w3_mat_real_10_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_10_T = sub(asSInt(UInt<1>("h00")), comp1[1].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_1 = tail(_w3_mat_comp_10_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_2 = asSInt(_w3_mat_comp_10_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_3 = add(_w3_mat_comp_10_T_2, comp2[1].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_4 = tail(_w3_mat_comp_10_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_5 = asSInt(_w3_mat_comp_10_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_6 = add(_w3_mat_comp_10_T_5, comp3[1].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_10_T_7 = tail(_w3_mat_comp_10_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_10_T_8 = asSInt(_w3_mat_comp_10_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[10] <= _w3_mat_comp_10_T_8 @[calc6x6.scala 272:47]
          real[7].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[7].in_b <= reg2.mat_real[11] @[calc6x6.scala 225:38]
          real[7].w_a <= io.weight.real[7] @[calc6x6.scala 226:37]
          w3.mat_real[11] <= real[7].result @[calc6x6.scala 227:47]
          real[8].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[8].in_b <= reg2.mat_real[12] @[calc6x6.scala 225:38]
          real[8].w_a <= io.weight.real[8] @[calc6x6.scala 226:37]
          w3.mat_real[12] <= real[8].result @[calc6x6.scala 227:47]
          real[9].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[9].in_b <= reg2.mat_real[13] @[calc6x6.scala 225:38]
          real[9].w_a <= io.weight.real[9] @[calc6x6.scala 226:37]
          w3.mat_real[13] <= real[9].result @[calc6x6.scala 227:47]
          real[10].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[10].in_b <= reg2.mat_real[14] @[calc6x6.scala 225:38]
          real[10].w_a <= io.weight.real[10] @[calc6x6.scala 226:37]
          w3.mat_real[14] <= real[10].result @[calc6x6.scala 227:47]
          comp1[2].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[2].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[2].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[2].w_a <= io.weight.comp1[2] @[calc6x6.scala 257:38]
          comp2[2].w_a <= io.weight.comp2[2] @[calc6x6.scala 258:38]
          comp3[2].w_a <= io.weight.comp3[2] @[calc6x6.scala 259:38]
          node _comp1_2_in_b_T_1 = add(reg2.mat_real[15], reg2.mat_comp[8]) @[calc6x6.scala 261:65]
          node _comp1_2_in_b_T_2 = tail(_comp1_2_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_2_in_b_T_3 = asSInt(_comp1_2_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[2].in_b <= _comp1_2_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[2].in_b <= reg2.mat_real[15] @[calc6x6.scala 262:39]
          comp3[2].in_b <= reg2.mat_comp[8] @[calc6x6.scala 263:39]
          node _w3_mat_real_15_T = sub(comp2[2].result, comp3[2].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_15_T_1 = tail(_w3_mat_real_15_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_15_T_2 = asSInt(_w3_mat_real_15_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[15] <= _w3_mat_real_15_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_15_T = sub(comp1[2].result, comp2[2].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_1 = tail(_w3_mat_comp_15_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_2 = asSInt(_w3_mat_comp_15_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_3 = sub(_w3_mat_comp_15_T_2, comp3[2].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_15_T_4 = tail(_w3_mat_comp_15_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_15_T_5 = asSInt(_w3_mat_comp_15_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[15] <= _w3_mat_comp_15_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_16_T = sub(comp2[2].result, comp3[2].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_16_T_1 = tail(_w3_mat_real_16_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_16_T_2 = asSInt(_w3_mat_real_16_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[16] <= _w3_mat_real_16_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_16_T = sub(asSInt(UInt<1>("h00")), comp1[2].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_1 = tail(_w3_mat_comp_16_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_2 = asSInt(_w3_mat_comp_16_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_3 = add(_w3_mat_comp_16_T_2, comp2[2].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_4 = tail(_w3_mat_comp_16_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_5 = asSInt(_w3_mat_comp_16_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_6 = add(_w3_mat_comp_16_T_5, comp3[2].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_16_T_7 = tail(_w3_mat_comp_16_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_16_T_8 = asSInt(_w3_mat_comp_16_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[16] <= _w3_mat_comp_16_T_8 @[calc6x6.scala 272:47]
          real[11].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[11].in_b <= reg2.mat_real[17] @[calc6x6.scala 225:38]
          real[11].w_a <= io.weight.real[11] @[calc6x6.scala 226:37]
          w3.mat_real[17] <= real[11].result @[calc6x6.scala 227:47]
          comp1[3].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[3].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[3].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[3].w_a <= io.weight.comp1[3] @[calc6x6.scala 234:38]
          comp2[3].w_a <= io.weight.comp2[3] @[calc6x6.scala 235:38]
          comp3[3].w_a <= io.weight.comp3[3] @[calc6x6.scala 236:38]
          node _comp1_3_in_b_T_1 = add(reg2.mat_real[18], reg2.mat_comp[0]) @[calc6x6.scala 238:65]
          node _comp1_3_in_b_T_2 = tail(_comp1_3_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_3_in_b_T_3 = asSInt(_comp1_3_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[3].in_b <= _comp1_3_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[3].in_b <= reg2.mat_real[18] @[calc6x6.scala 239:39]
          comp3[3].in_b <= reg2.mat_comp[0] @[calc6x6.scala 240:39]
          node _w3_mat_real_18_T = sub(comp2[3].result, comp3[3].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_18_T_1 = tail(_w3_mat_real_18_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_18_T_2 = asSInt(_w3_mat_real_18_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[18] <= _w3_mat_real_18_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_18_T = sub(comp1[3].result, comp2[3].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_1 = tail(_w3_mat_comp_18_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_2 = asSInt(_w3_mat_comp_18_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_3 = sub(_w3_mat_comp_18_T_2, comp3[3].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_18_T_4 = tail(_w3_mat_comp_18_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_18_T_5 = asSInt(_w3_mat_comp_18_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[18] <= _w3_mat_comp_18_T_5 @[calc6x6.scala 242:47]
          comp1[4].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[4].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[4].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[4].w_a <= io.weight.comp1[4] @[calc6x6.scala 234:38]
          comp2[4].w_a <= io.weight.comp2[4] @[calc6x6.scala 235:38]
          comp3[4].w_a <= io.weight.comp3[4] @[calc6x6.scala 236:38]
          node _comp1_4_in_b_T_1 = add(reg2.mat_real[19], reg2.mat_comp[1]) @[calc6x6.scala 238:65]
          node _comp1_4_in_b_T_2 = tail(_comp1_4_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_4_in_b_T_3 = asSInt(_comp1_4_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[4].in_b <= _comp1_4_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[4].in_b <= reg2.mat_real[19] @[calc6x6.scala 239:39]
          comp3[4].in_b <= reg2.mat_comp[1] @[calc6x6.scala 240:39]
          node _w3_mat_real_19_T = sub(comp2[4].result, comp3[4].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_19_T_1 = tail(_w3_mat_real_19_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_19_T_2 = asSInt(_w3_mat_real_19_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[19] <= _w3_mat_real_19_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_19_T = sub(comp1[4].result, comp2[4].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_1 = tail(_w3_mat_comp_19_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_2 = asSInt(_w3_mat_comp_19_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_3 = sub(_w3_mat_comp_19_T_2, comp3[4].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_19_T_4 = tail(_w3_mat_comp_19_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_19_T_5 = asSInt(_w3_mat_comp_19_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[19] <= _w3_mat_comp_19_T_5 @[calc6x6.scala 242:47]
          comp1[5].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[5].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[5].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[5].w_a <= io.weight.comp1[5] @[calc6x6.scala 234:38]
          comp2[5].w_a <= io.weight.comp2[5] @[calc6x6.scala 235:38]
          comp3[5].w_a <= io.weight.comp3[5] @[calc6x6.scala 236:38]
          node _comp1_5_in_b_T_1 = add(reg2.mat_real[20], reg2.mat_comp[2]) @[calc6x6.scala 238:65]
          node _comp1_5_in_b_T_2 = tail(_comp1_5_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_5_in_b_T_3 = asSInt(_comp1_5_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[5].in_b <= _comp1_5_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[5].in_b <= reg2.mat_real[20] @[calc6x6.scala 239:39]
          comp3[5].in_b <= reg2.mat_comp[2] @[calc6x6.scala 240:39]
          node _w3_mat_real_20_T = sub(comp2[5].result, comp3[5].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_20_T_1 = tail(_w3_mat_real_20_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_20_T_2 = asSInt(_w3_mat_real_20_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[20] <= _w3_mat_real_20_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_20_T = sub(comp1[5].result, comp2[5].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_1 = tail(_w3_mat_comp_20_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_2 = asSInt(_w3_mat_comp_20_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_3 = sub(_w3_mat_comp_20_T_2, comp3[5].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_20_T_4 = tail(_w3_mat_comp_20_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_20_T_5 = asSInt(_w3_mat_comp_20_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[20] <= _w3_mat_comp_20_T_5 @[calc6x6.scala 242:47]
          comp1[6].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[6].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[6].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[6].w_a <= io.weight.comp1[6] @[calc6x6.scala 234:38]
          comp2[6].w_a <= io.weight.comp2[6] @[calc6x6.scala 235:38]
          comp3[6].w_a <= io.weight.comp3[6] @[calc6x6.scala 236:38]
          node _comp1_6_in_b_T_1 = add(reg2.mat_real[21], reg2.mat_comp[3]) @[calc6x6.scala 238:65]
          node _comp1_6_in_b_T_2 = tail(_comp1_6_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_6_in_b_T_3 = asSInt(_comp1_6_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[6].in_b <= _comp1_6_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[6].in_b <= reg2.mat_real[21] @[calc6x6.scala 239:39]
          comp3[6].in_b <= reg2.mat_comp[3] @[calc6x6.scala 240:39]
          node _w3_mat_real_21_T = sub(comp2[6].result, comp3[6].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_21_T_1 = tail(_w3_mat_real_21_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_21_T_2 = asSInt(_w3_mat_real_21_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[21] <= _w3_mat_real_21_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_21_T = sub(comp1[6].result, comp2[6].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_1 = tail(_w3_mat_comp_21_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_2 = asSInt(_w3_mat_comp_21_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_3 = sub(_w3_mat_comp_21_T_2, comp3[6].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_21_T_4 = tail(_w3_mat_comp_21_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_21_T_5 = asSInt(_w3_mat_comp_21_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[21] <= _w3_mat_comp_21_T_5 @[calc6x6.scala 242:47]
          comp1[7].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[7].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[7].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[7].w_a <= io.weight.comp1[7] @[calc6x6.scala 234:38]
          comp2[7].w_a <= io.weight.comp2[7] @[calc6x6.scala 235:38]
          comp3[7].w_a <= io.weight.comp3[7] @[calc6x6.scala 236:38]
          node _comp1_7_in_b_T_1 = add(reg2.mat_real[22], reg2.mat_comp[4]) @[calc6x6.scala 238:65]
          node _comp1_7_in_b_T_2 = tail(_comp1_7_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_7_in_b_T_3 = asSInt(_comp1_7_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[7].in_b <= _comp1_7_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[7].in_b <= reg2.mat_real[22] @[calc6x6.scala 239:39]
          comp3[7].in_b <= reg2.mat_comp[4] @[calc6x6.scala 240:39]
          node _w3_mat_real_22_T = sub(comp2[7].result, comp3[7].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_22_T_1 = tail(_w3_mat_real_22_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_22_T_2 = asSInt(_w3_mat_real_22_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[22] <= _w3_mat_real_22_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_22_T = sub(comp1[7].result, comp2[7].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_1 = tail(_w3_mat_comp_22_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_2 = asSInt(_w3_mat_comp_22_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_3 = sub(_w3_mat_comp_22_T_2, comp3[7].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_22_T_4 = tail(_w3_mat_comp_22_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_22_T_5 = asSInt(_w3_mat_comp_22_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[22] <= _w3_mat_comp_22_T_5 @[calc6x6.scala 242:47]
          comp1[8].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[8].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[8].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[8].w_a <= io.weight.comp1[8] @[calc6x6.scala 234:38]
          comp2[8].w_a <= io.weight.comp2[8] @[calc6x6.scala 235:38]
          comp3[8].w_a <= io.weight.comp3[8] @[calc6x6.scala 236:38]
          node _comp1_8_in_b_T_1 = add(reg2.mat_real[23], reg2.mat_comp[5]) @[calc6x6.scala 238:65]
          node _comp1_8_in_b_T_2 = tail(_comp1_8_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_8_in_b_T_3 = asSInt(_comp1_8_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[8].in_b <= _comp1_8_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[8].in_b <= reg2.mat_real[23] @[calc6x6.scala 239:39]
          comp3[8].in_b <= reg2.mat_comp[5] @[calc6x6.scala 240:39]
          node _w3_mat_real_23_T = sub(comp2[8].result, comp3[8].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_23_T_1 = tail(_w3_mat_real_23_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_23_T_2 = asSInt(_w3_mat_real_23_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[23] <= _w3_mat_real_23_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_23_T = sub(comp1[8].result, comp2[8].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_1 = tail(_w3_mat_comp_23_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_2 = asSInt(_w3_mat_comp_23_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_3 = sub(_w3_mat_comp_23_T_2, comp3[8].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_23_T_4 = tail(_w3_mat_comp_23_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_23_T_5 = asSInt(_w3_mat_comp_23_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[23] <= _w3_mat_comp_23_T_5 @[calc6x6.scala 242:47]
          node _w3_mat_real_24_T = sub(comp2[3].result, comp3[3].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_24_T_1 = tail(_w3_mat_real_24_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_24_T_2 = asSInt(_w3_mat_real_24_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[24] <= _w3_mat_real_24_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_24_T = sub(asSInt(UInt<1>("h00")), comp1[3].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_1 = tail(_w3_mat_comp_24_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_2 = asSInt(_w3_mat_comp_24_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_3 = add(_w3_mat_comp_24_T_2, comp2[3].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_4 = tail(_w3_mat_comp_24_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_5 = asSInt(_w3_mat_comp_24_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_6 = add(_w3_mat_comp_24_T_5, comp3[3].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_24_T_7 = tail(_w3_mat_comp_24_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_24_T_8 = asSInt(_w3_mat_comp_24_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[24] <= _w3_mat_comp_24_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_25_T = sub(comp2[4].result, comp3[4].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_25_T_1 = tail(_w3_mat_real_25_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_25_T_2 = asSInt(_w3_mat_real_25_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[25] <= _w3_mat_real_25_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_25_T = sub(asSInt(UInt<1>("h00")), comp1[4].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_1 = tail(_w3_mat_comp_25_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_2 = asSInt(_w3_mat_comp_25_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_3 = add(_w3_mat_comp_25_T_2, comp2[4].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_4 = tail(_w3_mat_comp_25_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_5 = asSInt(_w3_mat_comp_25_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_6 = add(_w3_mat_comp_25_T_5, comp3[4].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_25_T_7 = tail(_w3_mat_comp_25_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_25_T_8 = asSInt(_w3_mat_comp_25_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[25] <= _w3_mat_comp_25_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_26_T = sub(comp2[5].result, comp3[5].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_26_T_1 = tail(_w3_mat_real_26_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_26_T_2 = asSInt(_w3_mat_real_26_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[26] <= _w3_mat_real_26_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_26_T = sub(asSInt(UInt<1>("h00")), comp1[5].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_1 = tail(_w3_mat_comp_26_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_2 = asSInt(_w3_mat_comp_26_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_3 = add(_w3_mat_comp_26_T_2, comp2[5].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_4 = tail(_w3_mat_comp_26_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_5 = asSInt(_w3_mat_comp_26_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_6 = add(_w3_mat_comp_26_T_5, comp3[5].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_26_T_7 = tail(_w3_mat_comp_26_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_26_T_8 = asSInt(_w3_mat_comp_26_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[26] <= _w3_mat_comp_26_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_27_T = sub(comp2[7].result, comp3[7].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_27_T_1 = tail(_w3_mat_real_27_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_27_T_2 = asSInt(_w3_mat_real_27_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[27] <= _w3_mat_real_27_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_27_T = sub(asSInt(UInt<1>("h00")), comp1[7].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_1 = tail(_w3_mat_comp_27_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_2 = asSInt(_w3_mat_comp_27_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_3 = add(_w3_mat_comp_27_T_2, comp2[7].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_4 = tail(_w3_mat_comp_27_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_5 = asSInt(_w3_mat_comp_27_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_6 = add(_w3_mat_comp_27_T_5, comp3[7].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_27_T_7 = tail(_w3_mat_comp_27_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_27_T_8 = asSInt(_w3_mat_comp_27_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[27] <= _w3_mat_comp_27_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_28_T = sub(comp2[6].result, comp3[6].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_28_T_1 = tail(_w3_mat_real_28_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_28_T_2 = asSInt(_w3_mat_real_28_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[28] <= _w3_mat_real_28_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_28_T = sub(asSInt(UInt<1>("h00")), comp1[6].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_1 = tail(_w3_mat_comp_28_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_2 = asSInt(_w3_mat_comp_28_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_3 = add(_w3_mat_comp_28_T_2, comp2[6].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_4 = tail(_w3_mat_comp_28_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_5 = asSInt(_w3_mat_comp_28_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_6 = add(_w3_mat_comp_28_T_5, comp3[6].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_28_T_7 = tail(_w3_mat_comp_28_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_28_T_8 = asSInt(_w3_mat_comp_28_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[28] <= _w3_mat_comp_28_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_29_T = sub(comp2[8].result, comp3[8].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_29_T_1 = tail(_w3_mat_real_29_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_29_T_2 = asSInt(_w3_mat_real_29_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[29] <= _w3_mat_real_29_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_29_T = sub(asSInt(UInt<1>("h00")), comp1[8].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_1 = tail(_w3_mat_comp_29_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_2 = asSInt(_w3_mat_comp_29_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_3 = add(_w3_mat_comp_29_T_2, comp2[8].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_4 = tail(_w3_mat_comp_29_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_5 = asSInt(_w3_mat_comp_29_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_6 = add(_w3_mat_comp_29_T_5, comp3[8].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_29_T_7 = tail(_w3_mat_comp_29_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_29_T_8 = asSInt(_w3_mat_comp_29_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[29] <= _w3_mat_comp_29_T_8 @[calc6x6.scala 250:47]
          real[12].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[12].in_b <= reg2.mat_real[30] @[calc6x6.scala 225:38]
          real[12].w_a <= io.weight.real[12] @[calc6x6.scala 226:37]
          w3.mat_real[30] <= real[12].result @[calc6x6.scala 227:47]
          real[13].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[13].in_b <= reg2.mat_real[31] @[calc6x6.scala 225:38]
          real[13].w_a <= io.weight.real[13] @[calc6x6.scala 226:37]
          w3.mat_real[31] <= real[13].result @[calc6x6.scala 227:47]
          real[14].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[14].in_b <= reg2.mat_real[32] @[calc6x6.scala 225:38]
          real[14].w_a <= io.weight.real[14] @[calc6x6.scala 226:37]
          w3.mat_real[32] <= real[14].result @[calc6x6.scala 227:47]
          comp1[9].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[9].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[9].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[9].w_a <= io.weight.comp1[9] @[calc6x6.scala 257:38]
          comp2[9].w_a <= io.weight.comp2[9] @[calc6x6.scala 258:38]
          comp3[9].w_a <= io.weight.comp3[9] @[calc6x6.scala 259:38]
          node _comp1_9_in_b_T_1 = add(reg2.mat_real[33], reg2.mat_comp[9]) @[calc6x6.scala 261:65]
          node _comp1_9_in_b_T_2 = tail(_comp1_9_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_9_in_b_T_3 = asSInt(_comp1_9_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[9].in_b <= _comp1_9_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[9].in_b <= reg2.mat_real[33] @[calc6x6.scala 262:39]
          comp3[9].in_b <= reg2.mat_comp[9] @[calc6x6.scala 263:39]
          node _w3_mat_real_33_T = sub(comp2[9].result, comp3[9].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_33_T_1 = tail(_w3_mat_real_33_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_33_T_2 = asSInt(_w3_mat_real_33_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[33] <= _w3_mat_real_33_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_33_T = sub(comp1[9].result, comp2[9].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_1 = tail(_w3_mat_comp_33_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_2 = asSInt(_w3_mat_comp_33_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_3 = sub(_w3_mat_comp_33_T_2, comp3[9].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_33_T_4 = tail(_w3_mat_comp_33_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_33_T_5 = asSInt(_w3_mat_comp_33_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[33] <= _w3_mat_comp_33_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_34_T = sub(comp2[9].result, comp3[9].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_34_T_1 = tail(_w3_mat_real_34_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_34_T_2 = asSInt(_w3_mat_real_34_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[34] <= _w3_mat_real_34_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_34_T = sub(asSInt(UInt<1>("h00")), comp1[9].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_1 = tail(_w3_mat_comp_34_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_2 = asSInt(_w3_mat_comp_34_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_3 = add(_w3_mat_comp_34_T_2, comp2[9].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_4 = tail(_w3_mat_comp_34_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_5 = asSInt(_w3_mat_comp_34_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_6 = add(_w3_mat_comp_34_T_5, comp3[9].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_34_T_7 = tail(_w3_mat_comp_34_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_34_T_8 = asSInt(_w3_mat_comp_34_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[34] <= _w3_mat_comp_34_T_8 @[calc6x6.scala 272:47]
          real[15].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[15].in_b <= reg2.mat_real[35] @[calc6x6.scala 225:38]
          real[15].w_a <= io.weight.real[15] @[calc6x6.scala 226:37]
          w3.mat_real[35] <= real[15].result @[calc6x6.scala 227:47]
          skip @[Conditional.scala 39:67]
    
  module DSP48_46 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_46 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_46 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_47 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_47 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_47 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_48 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_48 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_48 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_49 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_49 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_49 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_50 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_50 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_50 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_51 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_51 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_51 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_52 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_52 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_52 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_53 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_53 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_53 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_54 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_54 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_54 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_55 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_55 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_55 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_56 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_56 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_56 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_57 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_57 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_57 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_58 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_58 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_58 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_59 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_59 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_59 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_60 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_60 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_60 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_61 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_61 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_61 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_62 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_62 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_62 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_63 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_63 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_63 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_64 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_64 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_64 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_65 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_65 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_65 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_66 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_66 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_66 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_67 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_67 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_67 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_68 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_68 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_68 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_69 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_69 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_69 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_70 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_70 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_70 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_71 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_71 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_71 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_72 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_72 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_72 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_73 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_73 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_73 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_74 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_74 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_74 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_75 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_75 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_75 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_76 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_76 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_76 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_77 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_77 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_77 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_78 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_78 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_78 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_79 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_79 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_79 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_80 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_80 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_80 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_81 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_81 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_81 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_82 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_82 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_82 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_83 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_83 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_83 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_84 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_84 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_84 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_85 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_85 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_85 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_86 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_86 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_86 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_87 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_87 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_87 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_88 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_88 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_88 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_89 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_89 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_89 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_90 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_90 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_90 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_91 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_91 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_91 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module Calc6x6_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip input : {mat : SInt<16>[36]}, flip flag : UInt<2>, flip weight : {real : SInt<18>[16], comp1 : SInt<18>[10], comp2 : SInt<18>[10], comp3 : SInt<18>[10]}, output : {mat : SInt<37>[16]}, flip valid_in : UInt<1>, valid_out : UInt<1>}
    
    inst Core of Core_46 @[calc6x6.scala 64:43]
    Core.clock <= clock
    Core.reset <= reset
    inst Core_1 of Core_47 @[calc6x6.scala 64:43]
    Core_1.clock <= clock
    Core_1.reset <= reset
    inst Core_2 of Core_48 @[calc6x6.scala 64:43]
    Core_2.clock <= clock
    Core_2.reset <= reset
    inst Core_3 of Core_49 @[calc6x6.scala 64:43]
    Core_3.clock <= clock
    Core_3.reset <= reset
    inst Core_4 of Core_50 @[calc6x6.scala 64:43]
    Core_4.clock <= clock
    Core_4.reset <= reset
    inst Core_5 of Core_51 @[calc6x6.scala 64:43]
    Core_5.clock <= clock
    Core_5.reset <= reset
    inst Core_6 of Core_52 @[calc6x6.scala 64:43]
    Core_6.clock <= clock
    Core_6.reset <= reset
    inst Core_7 of Core_53 @[calc6x6.scala 64:43]
    Core_7.clock <= clock
    Core_7.reset <= reset
    inst Core_8 of Core_54 @[calc6x6.scala 64:43]
    Core_8.clock <= clock
    Core_8.reset <= reset
    inst Core_9 of Core_55 @[calc6x6.scala 64:43]
    Core_9.clock <= clock
    Core_9.reset <= reset
    inst Core_10 of Core_56 @[calc6x6.scala 64:43]
    Core_10.clock <= clock
    Core_10.reset <= reset
    inst Core_11 of Core_57 @[calc6x6.scala 64:43]
    Core_11.clock <= clock
    Core_11.reset <= reset
    inst Core_12 of Core_58 @[calc6x6.scala 64:43]
    Core_12.clock <= clock
    Core_12.reset <= reset
    inst Core_13 of Core_59 @[calc6x6.scala 64:43]
    Core_13.clock <= clock
    Core_13.reset <= reset
    inst Core_14 of Core_60 @[calc6x6.scala 64:43]
    Core_14.clock <= clock
    Core_14.reset <= reset
    inst Core_15 of Core_61 @[calc6x6.scala 64:43]
    Core_15.clock <= clock
    Core_15.reset <= reset
    wire real : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[16] @[calc6x6.scala 64:23]
    real[0].result <= Core.io.result @[calc6x6.scala 64:23]
    Core.io.flag <= real[0].flag @[calc6x6.scala 64:23]
    Core.io.in_b <= real[0].in_b @[calc6x6.scala 64:23]
    Core.io.w_a <= real[0].w_a @[calc6x6.scala 64:23]
    real[1].result <= Core_1.io.result @[calc6x6.scala 64:23]
    Core_1.io.flag <= real[1].flag @[calc6x6.scala 64:23]
    Core_1.io.in_b <= real[1].in_b @[calc6x6.scala 64:23]
    Core_1.io.w_a <= real[1].w_a @[calc6x6.scala 64:23]
    real[2].result <= Core_2.io.result @[calc6x6.scala 64:23]
    Core_2.io.flag <= real[2].flag @[calc6x6.scala 64:23]
    Core_2.io.in_b <= real[2].in_b @[calc6x6.scala 64:23]
    Core_2.io.w_a <= real[2].w_a @[calc6x6.scala 64:23]
    real[3].result <= Core_3.io.result @[calc6x6.scala 64:23]
    Core_3.io.flag <= real[3].flag @[calc6x6.scala 64:23]
    Core_3.io.in_b <= real[3].in_b @[calc6x6.scala 64:23]
    Core_3.io.w_a <= real[3].w_a @[calc6x6.scala 64:23]
    real[4].result <= Core_4.io.result @[calc6x6.scala 64:23]
    Core_4.io.flag <= real[4].flag @[calc6x6.scala 64:23]
    Core_4.io.in_b <= real[4].in_b @[calc6x6.scala 64:23]
    Core_4.io.w_a <= real[4].w_a @[calc6x6.scala 64:23]
    real[5].result <= Core_5.io.result @[calc6x6.scala 64:23]
    Core_5.io.flag <= real[5].flag @[calc6x6.scala 64:23]
    Core_5.io.in_b <= real[5].in_b @[calc6x6.scala 64:23]
    Core_5.io.w_a <= real[5].w_a @[calc6x6.scala 64:23]
    real[6].result <= Core_6.io.result @[calc6x6.scala 64:23]
    Core_6.io.flag <= real[6].flag @[calc6x6.scala 64:23]
    Core_6.io.in_b <= real[6].in_b @[calc6x6.scala 64:23]
    Core_6.io.w_a <= real[6].w_a @[calc6x6.scala 64:23]
    real[7].result <= Core_7.io.result @[calc6x6.scala 64:23]
    Core_7.io.flag <= real[7].flag @[calc6x6.scala 64:23]
    Core_7.io.in_b <= real[7].in_b @[calc6x6.scala 64:23]
    Core_7.io.w_a <= real[7].w_a @[calc6x6.scala 64:23]
    real[8].result <= Core_8.io.result @[calc6x6.scala 64:23]
    Core_8.io.flag <= real[8].flag @[calc6x6.scala 64:23]
    Core_8.io.in_b <= real[8].in_b @[calc6x6.scala 64:23]
    Core_8.io.w_a <= real[8].w_a @[calc6x6.scala 64:23]
    real[9].result <= Core_9.io.result @[calc6x6.scala 64:23]
    Core_9.io.flag <= real[9].flag @[calc6x6.scala 64:23]
    Core_9.io.in_b <= real[9].in_b @[calc6x6.scala 64:23]
    Core_9.io.w_a <= real[9].w_a @[calc6x6.scala 64:23]
    real[10].result <= Core_10.io.result @[calc6x6.scala 64:23]
    Core_10.io.flag <= real[10].flag @[calc6x6.scala 64:23]
    Core_10.io.in_b <= real[10].in_b @[calc6x6.scala 64:23]
    Core_10.io.w_a <= real[10].w_a @[calc6x6.scala 64:23]
    real[11].result <= Core_11.io.result @[calc6x6.scala 64:23]
    Core_11.io.flag <= real[11].flag @[calc6x6.scala 64:23]
    Core_11.io.in_b <= real[11].in_b @[calc6x6.scala 64:23]
    Core_11.io.w_a <= real[11].w_a @[calc6x6.scala 64:23]
    real[12].result <= Core_12.io.result @[calc6x6.scala 64:23]
    Core_12.io.flag <= real[12].flag @[calc6x6.scala 64:23]
    Core_12.io.in_b <= real[12].in_b @[calc6x6.scala 64:23]
    Core_12.io.w_a <= real[12].w_a @[calc6x6.scala 64:23]
    real[13].result <= Core_13.io.result @[calc6x6.scala 64:23]
    Core_13.io.flag <= real[13].flag @[calc6x6.scala 64:23]
    Core_13.io.in_b <= real[13].in_b @[calc6x6.scala 64:23]
    Core_13.io.w_a <= real[13].w_a @[calc6x6.scala 64:23]
    real[14].result <= Core_14.io.result @[calc6x6.scala 64:23]
    Core_14.io.flag <= real[14].flag @[calc6x6.scala 64:23]
    Core_14.io.in_b <= real[14].in_b @[calc6x6.scala 64:23]
    Core_14.io.w_a <= real[14].w_a @[calc6x6.scala 64:23]
    real[15].result <= Core_15.io.result @[calc6x6.scala 64:23]
    Core_15.io.flag <= real[15].flag @[calc6x6.scala 64:23]
    Core_15.io.in_b <= real[15].in_b @[calc6x6.scala 64:23]
    Core_15.io.w_a <= real[15].w_a @[calc6x6.scala 64:23]
    wire _real_0_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[0].flag <= _real_0_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_0_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_0_w_a_WIRE <= _real_0_w_a_T @[calc6x6.scala 67:36]
    real[0].w_a <= _real_0_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_0_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_0_in_b_WIRE <= _real_0_in_b_T @[calc6x6.scala 68:37]
    real[0].in_b <= _real_0_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_1_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[1].flag <= _real_1_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_1_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_1_w_a_WIRE <= _real_1_w_a_T @[calc6x6.scala 67:36]
    real[1].w_a <= _real_1_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_1_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_1_in_b_WIRE <= _real_1_in_b_T @[calc6x6.scala 68:37]
    real[1].in_b <= _real_1_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_2_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[2].flag <= _real_2_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_2_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_2_w_a_WIRE <= _real_2_w_a_T @[calc6x6.scala 67:36]
    real[2].w_a <= _real_2_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_2_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_2_in_b_WIRE <= _real_2_in_b_T @[calc6x6.scala 68:37]
    real[2].in_b <= _real_2_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_3_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[3].flag <= _real_3_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_3_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_3_w_a_WIRE <= _real_3_w_a_T @[calc6x6.scala 67:36]
    real[3].w_a <= _real_3_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_3_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_3_in_b_WIRE <= _real_3_in_b_T @[calc6x6.scala 68:37]
    real[3].in_b <= _real_3_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_4_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[4].flag <= _real_4_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_4_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_4_w_a_WIRE <= _real_4_w_a_T @[calc6x6.scala 67:36]
    real[4].w_a <= _real_4_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_4_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_4_in_b_WIRE <= _real_4_in_b_T @[calc6x6.scala 68:37]
    real[4].in_b <= _real_4_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_5_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[5].flag <= _real_5_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_5_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_5_w_a_WIRE <= _real_5_w_a_T @[calc6x6.scala 67:36]
    real[5].w_a <= _real_5_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_5_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_5_in_b_WIRE <= _real_5_in_b_T @[calc6x6.scala 68:37]
    real[5].in_b <= _real_5_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_6_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[6].flag <= _real_6_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_6_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_6_w_a_WIRE <= _real_6_w_a_T @[calc6x6.scala 67:36]
    real[6].w_a <= _real_6_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_6_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_6_in_b_WIRE <= _real_6_in_b_T @[calc6x6.scala 68:37]
    real[6].in_b <= _real_6_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_7_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[7].flag <= _real_7_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_7_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_7_w_a_WIRE <= _real_7_w_a_T @[calc6x6.scala 67:36]
    real[7].w_a <= _real_7_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_7_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_7_in_b_WIRE <= _real_7_in_b_T @[calc6x6.scala 68:37]
    real[7].in_b <= _real_7_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_8_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[8].flag <= _real_8_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_8_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_8_w_a_WIRE <= _real_8_w_a_T @[calc6x6.scala 67:36]
    real[8].w_a <= _real_8_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_8_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_8_in_b_WIRE <= _real_8_in_b_T @[calc6x6.scala 68:37]
    real[8].in_b <= _real_8_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_9_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[9].flag <= _real_9_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_9_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_9_w_a_WIRE <= _real_9_w_a_T @[calc6x6.scala 67:36]
    real[9].w_a <= _real_9_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_9_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_9_in_b_WIRE <= _real_9_in_b_T @[calc6x6.scala 68:37]
    real[9].in_b <= _real_9_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_10_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_10_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[10].flag <= _real_10_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_10_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_10_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_10_w_a_WIRE <= _real_10_w_a_T @[calc6x6.scala 67:36]
    real[10].w_a <= _real_10_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_10_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_10_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_10_in_b_WIRE <= _real_10_in_b_T @[calc6x6.scala 68:37]
    real[10].in_b <= _real_10_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_11_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_11_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[11].flag <= _real_11_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_11_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_11_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_11_w_a_WIRE <= _real_11_w_a_T @[calc6x6.scala 67:36]
    real[11].w_a <= _real_11_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_11_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_11_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_11_in_b_WIRE <= _real_11_in_b_T @[calc6x6.scala 68:37]
    real[11].in_b <= _real_11_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_12_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_12_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[12].flag <= _real_12_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_12_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_12_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_12_w_a_WIRE <= _real_12_w_a_T @[calc6x6.scala 67:36]
    real[12].w_a <= _real_12_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_12_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_12_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_12_in_b_WIRE <= _real_12_in_b_T @[calc6x6.scala 68:37]
    real[12].in_b <= _real_12_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_13_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_13_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[13].flag <= _real_13_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_13_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_13_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_13_w_a_WIRE <= _real_13_w_a_T @[calc6x6.scala 67:36]
    real[13].w_a <= _real_13_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_13_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_13_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_13_in_b_WIRE <= _real_13_in_b_T @[calc6x6.scala 68:37]
    real[13].in_b <= _real_13_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_14_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_14_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[14].flag <= _real_14_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_14_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_14_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_14_w_a_WIRE <= _real_14_w_a_T @[calc6x6.scala 67:36]
    real[14].w_a <= _real_14_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_14_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_14_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_14_in_b_WIRE <= _real_14_in_b_T @[calc6x6.scala 68:37]
    real[14].in_b <= _real_14_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_15_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_15_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[15].flag <= _real_15_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_15_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_15_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_15_w_a_WIRE <= _real_15_w_a_T @[calc6x6.scala 67:36]
    real[15].w_a <= _real_15_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_15_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_15_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_15_in_b_WIRE <= _real_15_in_b_T @[calc6x6.scala 68:37]
    real[15].in_b <= _real_15_in_b_WIRE @[calc6x6.scala 68:22]
    inst Core_16 of Core_62 @[calc6x6.scala 71:44]
    Core_16.clock <= clock
    Core_16.reset <= reset
    inst Core_17 of Core_63 @[calc6x6.scala 71:44]
    Core_17.clock <= clock
    Core_17.reset <= reset
    inst Core_18 of Core_64 @[calc6x6.scala 71:44]
    Core_18.clock <= clock
    Core_18.reset <= reset
    inst Core_19 of Core_65 @[calc6x6.scala 71:44]
    Core_19.clock <= clock
    Core_19.reset <= reset
    inst Core_20 of Core_66 @[calc6x6.scala 71:44]
    Core_20.clock <= clock
    Core_20.reset <= reset
    inst Core_21 of Core_67 @[calc6x6.scala 71:44]
    Core_21.clock <= clock
    Core_21.reset <= reset
    inst Core_22 of Core_68 @[calc6x6.scala 71:44]
    Core_22.clock <= clock
    Core_22.reset <= reset
    inst Core_23 of Core_69 @[calc6x6.scala 71:44]
    Core_23.clock <= clock
    Core_23.reset <= reset
    inst Core_24 of Core_70 @[calc6x6.scala 71:44]
    Core_24.clock <= clock
    Core_24.reset <= reset
    inst Core_25 of Core_71 @[calc6x6.scala 71:44]
    Core_25.clock <= clock
    Core_25.reset <= reset
    wire comp1 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 71:24]
    comp1[0].result <= Core_16.io.result @[calc6x6.scala 71:24]
    Core_16.io.flag <= comp1[0].flag @[calc6x6.scala 71:24]
    Core_16.io.in_b <= comp1[0].in_b @[calc6x6.scala 71:24]
    Core_16.io.w_a <= comp1[0].w_a @[calc6x6.scala 71:24]
    comp1[1].result <= Core_17.io.result @[calc6x6.scala 71:24]
    Core_17.io.flag <= comp1[1].flag @[calc6x6.scala 71:24]
    Core_17.io.in_b <= comp1[1].in_b @[calc6x6.scala 71:24]
    Core_17.io.w_a <= comp1[1].w_a @[calc6x6.scala 71:24]
    comp1[2].result <= Core_18.io.result @[calc6x6.scala 71:24]
    Core_18.io.flag <= comp1[2].flag @[calc6x6.scala 71:24]
    Core_18.io.in_b <= comp1[2].in_b @[calc6x6.scala 71:24]
    Core_18.io.w_a <= comp1[2].w_a @[calc6x6.scala 71:24]
    comp1[3].result <= Core_19.io.result @[calc6x6.scala 71:24]
    Core_19.io.flag <= comp1[3].flag @[calc6x6.scala 71:24]
    Core_19.io.in_b <= comp1[3].in_b @[calc6x6.scala 71:24]
    Core_19.io.w_a <= comp1[3].w_a @[calc6x6.scala 71:24]
    comp1[4].result <= Core_20.io.result @[calc6x6.scala 71:24]
    Core_20.io.flag <= comp1[4].flag @[calc6x6.scala 71:24]
    Core_20.io.in_b <= comp1[4].in_b @[calc6x6.scala 71:24]
    Core_20.io.w_a <= comp1[4].w_a @[calc6x6.scala 71:24]
    comp1[5].result <= Core_21.io.result @[calc6x6.scala 71:24]
    Core_21.io.flag <= comp1[5].flag @[calc6x6.scala 71:24]
    Core_21.io.in_b <= comp1[5].in_b @[calc6x6.scala 71:24]
    Core_21.io.w_a <= comp1[5].w_a @[calc6x6.scala 71:24]
    comp1[6].result <= Core_22.io.result @[calc6x6.scala 71:24]
    Core_22.io.flag <= comp1[6].flag @[calc6x6.scala 71:24]
    Core_22.io.in_b <= comp1[6].in_b @[calc6x6.scala 71:24]
    Core_22.io.w_a <= comp1[6].w_a @[calc6x6.scala 71:24]
    comp1[7].result <= Core_23.io.result @[calc6x6.scala 71:24]
    Core_23.io.flag <= comp1[7].flag @[calc6x6.scala 71:24]
    Core_23.io.in_b <= comp1[7].in_b @[calc6x6.scala 71:24]
    Core_23.io.w_a <= comp1[7].w_a @[calc6x6.scala 71:24]
    comp1[8].result <= Core_24.io.result @[calc6x6.scala 71:24]
    Core_24.io.flag <= comp1[8].flag @[calc6x6.scala 71:24]
    Core_24.io.in_b <= comp1[8].in_b @[calc6x6.scala 71:24]
    Core_24.io.w_a <= comp1[8].w_a @[calc6x6.scala 71:24]
    comp1[9].result <= Core_25.io.result @[calc6x6.scala 71:24]
    Core_25.io.flag <= comp1[9].flag @[calc6x6.scala 71:24]
    Core_25.io.in_b <= comp1[9].in_b @[calc6x6.scala 71:24]
    Core_25.io.w_a <= comp1[9].w_a @[calc6x6.scala 71:24]
    inst Core_26 of Core_72 @[calc6x6.scala 72:44]
    Core_26.clock <= clock
    Core_26.reset <= reset
    inst Core_27 of Core_73 @[calc6x6.scala 72:44]
    Core_27.clock <= clock
    Core_27.reset <= reset
    inst Core_28 of Core_74 @[calc6x6.scala 72:44]
    Core_28.clock <= clock
    Core_28.reset <= reset
    inst Core_29 of Core_75 @[calc6x6.scala 72:44]
    Core_29.clock <= clock
    Core_29.reset <= reset
    inst Core_30 of Core_76 @[calc6x6.scala 72:44]
    Core_30.clock <= clock
    Core_30.reset <= reset
    inst Core_31 of Core_77 @[calc6x6.scala 72:44]
    Core_31.clock <= clock
    Core_31.reset <= reset
    inst Core_32 of Core_78 @[calc6x6.scala 72:44]
    Core_32.clock <= clock
    Core_32.reset <= reset
    inst Core_33 of Core_79 @[calc6x6.scala 72:44]
    Core_33.clock <= clock
    Core_33.reset <= reset
    inst Core_34 of Core_80 @[calc6x6.scala 72:44]
    Core_34.clock <= clock
    Core_34.reset <= reset
    inst Core_35 of Core_81 @[calc6x6.scala 72:44]
    Core_35.clock <= clock
    Core_35.reset <= reset
    wire comp2 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 72:24]
    comp2[0].result <= Core_26.io.result @[calc6x6.scala 72:24]
    Core_26.io.flag <= comp2[0].flag @[calc6x6.scala 72:24]
    Core_26.io.in_b <= comp2[0].in_b @[calc6x6.scala 72:24]
    Core_26.io.w_a <= comp2[0].w_a @[calc6x6.scala 72:24]
    comp2[1].result <= Core_27.io.result @[calc6x6.scala 72:24]
    Core_27.io.flag <= comp2[1].flag @[calc6x6.scala 72:24]
    Core_27.io.in_b <= comp2[1].in_b @[calc6x6.scala 72:24]
    Core_27.io.w_a <= comp2[1].w_a @[calc6x6.scala 72:24]
    comp2[2].result <= Core_28.io.result @[calc6x6.scala 72:24]
    Core_28.io.flag <= comp2[2].flag @[calc6x6.scala 72:24]
    Core_28.io.in_b <= comp2[2].in_b @[calc6x6.scala 72:24]
    Core_28.io.w_a <= comp2[2].w_a @[calc6x6.scala 72:24]
    comp2[3].result <= Core_29.io.result @[calc6x6.scala 72:24]
    Core_29.io.flag <= comp2[3].flag @[calc6x6.scala 72:24]
    Core_29.io.in_b <= comp2[3].in_b @[calc6x6.scala 72:24]
    Core_29.io.w_a <= comp2[3].w_a @[calc6x6.scala 72:24]
    comp2[4].result <= Core_30.io.result @[calc6x6.scala 72:24]
    Core_30.io.flag <= comp2[4].flag @[calc6x6.scala 72:24]
    Core_30.io.in_b <= comp2[4].in_b @[calc6x6.scala 72:24]
    Core_30.io.w_a <= comp2[4].w_a @[calc6x6.scala 72:24]
    comp2[5].result <= Core_31.io.result @[calc6x6.scala 72:24]
    Core_31.io.flag <= comp2[5].flag @[calc6x6.scala 72:24]
    Core_31.io.in_b <= comp2[5].in_b @[calc6x6.scala 72:24]
    Core_31.io.w_a <= comp2[5].w_a @[calc6x6.scala 72:24]
    comp2[6].result <= Core_32.io.result @[calc6x6.scala 72:24]
    Core_32.io.flag <= comp2[6].flag @[calc6x6.scala 72:24]
    Core_32.io.in_b <= comp2[6].in_b @[calc6x6.scala 72:24]
    Core_32.io.w_a <= comp2[6].w_a @[calc6x6.scala 72:24]
    comp2[7].result <= Core_33.io.result @[calc6x6.scala 72:24]
    Core_33.io.flag <= comp2[7].flag @[calc6x6.scala 72:24]
    Core_33.io.in_b <= comp2[7].in_b @[calc6x6.scala 72:24]
    Core_33.io.w_a <= comp2[7].w_a @[calc6x6.scala 72:24]
    comp2[8].result <= Core_34.io.result @[calc6x6.scala 72:24]
    Core_34.io.flag <= comp2[8].flag @[calc6x6.scala 72:24]
    Core_34.io.in_b <= comp2[8].in_b @[calc6x6.scala 72:24]
    Core_34.io.w_a <= comp2[8].w_a @[calc6x6.scala 72:24]
    comp2[9].result <= Core_35.io.result @[calc6x6.scala 72:24]
    Core_35.io.flag <= comp2[9].flag @[calc6x6.scala 72:24]
    Core_35.io.in_b <= comp2[9].in_b @[calc6x6.scala 72:24]
    Core_35.io.w_a <= comp2[9].w_a @[calc6x6.scala 72:24]
    inst Core_36 of Core_82 @[calc6x6.scala 73:44]
    Core_36.clock <= clock
    Core_36.reset <= reset
    inst Core_37 of Core_83 @[calc6x6.scala 73:44]
    Core_37.clock <= clock
    Core_37.reset <= reset
    inst Core_38 of Core_84 @[calc6x6.scala 73:44]
    Core_38.clock <= clock
    Core_38.reset <= reset
    inst Core_39 of Core_85 @[calc6x6.scala 73:44]
    Core_39.clock <= clock
    Core_39.reset <= reset
    inst Core_40 of Core_86 @[calc6x6.scala 73:44]
    Core_40.clock <= clock
    Core_40.reset <= reset
    inst Core_41 of Core_87 @[calc6x6.scala 73:44]
    Core_41.clock <= clock
    Core_41.reset <= reset
    inst Core_42 of Core_88 @[calc6x6.scala 73:44]
    Core_42.clock <= clock
    Core_42.reset <= reset
    inst Core_43 of Core_89 @[calc6x6.scala 73:44]
    Core_43.clock <= clock
    Core_43.reset <= reset
    inst Core_44 of Core_90 @[calc6x6.scala 73:44]
    Core_44.clock <= clock
    Core_44.reset <= reset
    inst Core_45 of Core_91 @[calc6x6.scala 73:44]
    Core_45.clock <= clock
    Core_45.reset <= reset
    wire comp3 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 73:24]
    comp3[0].result <= Core_36.io.result @[calc6x6.scala 73:24]
    Core_36.io.flag <= comp3[0].flag @[calc6x6.scala 73:24]
    Core_36.io.in_b <= comp3[0].in_b @[calc6x6.scala 73:24]
    Core_36.io.w_a <= comp3[0].w_a @[calc6x6.scala 73:24]
    comp3[1].result <= Core_37.io.result @[calc6x6.scala 73:24]
    Core_37.io.flag <= comp3[1].flag @[calc6x6.scala 73:24]
    Core_37.io.in_b <= comp3[1].in_b @[calc6x6.scala 73:24]
    Core_37.io.w_a <= comp3[1].w_a @[calc6x6.scala 73:24]
    comp3[2].result <= Core_38.io.result @[calc6x6.scala 73:24]
    Core_38.io.flag <= comp3[2].flag @[calc6x6.scala 73:24]
    Core_38.io.in_b <= comp3[2].in_b @[calc6x6.scala 73:24]
    Core_38.io.w_a <= comp3[2].w_a @[calc6x6.scala 73:24]
    comp3[3].result <= Core_39.io.result @[calc6x6.scala 73:24]
    Core_39.io.flag <= comp3[3].flag @[calc6x6.scala 73:24]
    Core_39.io.in_b <= comp3[3].in_b @[calc6x6.scala 73:24]
    Core_39.io.w_a <= comp3[3].w_a @[calc6x6.scala 73:24]
    comp3[4].result <= Core_40.io.result @[calc6x6.scala 73:24]
    Core_40.io.flag <= comp3[4].flag @[calc6x6.scala 73:24]
    Core_40.io.in_b <= comp3[4].in_b @[calc6x6.scala 73:24]
    Core_40.io.w_a <= comp3[4].w_a @[calc6x6.scala 73:24]
    comp3[5].result <= Core_41.io.result @[calc6x6.scala 73:24]
    Core_41.io.flag <= comp3[5].flag @[calc6x6.scala 73:24]
    Core_41.io.in_b <= comp3[5].in_b @[calc6x6.scala 73:24]
    Core_41.io.w_a <= comp3[5].w_a @[calc6x6.scala 73:24]
    comp3[6].result <= Core_42.io.result @[calc6x6.scala 73:24]
    Core_42.io.flag <= comp3[6].flag @[calc6x6.scala 73:24]
    Core_42.io.in_b <= comp3[6].in_b @[calc6x6.scala 73:24]
    Core_42.io.w_a <= comp3[6].w_a @[calc6x6.scala 73:24]
    comp3[7].result <= Core_43.io.result @[calc6x6.scala 73:24]
    Core_43.io.flag <= comp3[7].flag @[calc6x6.scala 73:24]
    Core_43.io.in_b <= comp3[7].in_b @[calc6x6.scala 73:24]
    Core_43.io.w_a <= comp3[7].w_a @[calc6x6.scala 73:24]
    comp3[8].result <= Core_44.io.result @[calc6x6.scala 73:24]
    Core_44.io.flag <= comp3[8].flag @[calc6x6.scala 73:24]
    Core_44.io.in_b <= comp3[8].in_b @[calc6x6.scala 73:24]
    Core_44.io.w_a <= comp3[8].w_a @[calc6x6.scala 73:24]
    comp3[9].result <= Core_45.io.result @[calc6x6.scala 73:24]
    Core_45.io.flag <= comp3[9].flag @[calc6x6.scala 73:24]
    Core_45.io.in_b <= comp3[9].in_b @[calc6x6.scala 73:24]
    Core_45.io.w_a <= comp3[9].w_a @[calc6x6.scala 73:24]
    wire _comp1_0_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[0].flag <= _comp1_0_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_0_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_0_w_a_WIRE <= _comp1_0_w_a_T @[calc6x6.scala 78:37]
    comp1[0].w_a <= _comp1_0_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_0_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_0_in_b_WIRE <= _comp1_0_in_b_T @[calc6x6.scala 79:38]
    comp1[0].in_b <= _comp1_0_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_0_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[0].flag <= _comp2_0_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_0_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_0_w_a_WIRE <= _comp2_0_w_a_T @[calc6x6.scala 81:37]
    comp2[0].w_a <= _comp2_0_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_0_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_0_in_b_WIRE <= _comp2_0_in_b_T @[calc6x6.scala 82:38]
    comp2[0].in_b <= _comp2_0_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_0_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[0].flag <= _comp3_0_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_0_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_0_w_a_WIRE <= _comp3_0_w_a_T @[calc6x6.scala 84:37]
    comp3[0].w_a <= _comp3_0_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_0_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_0_in_b_WIRE <= _comp3_0_in_b_T @[calc6x6.scala 85:38]
    comp3[0].in_b <= _comp3_0_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_1_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[1].flag <= _comp1_1_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_1_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_1_w_a_WIRE <= _comp1_1_w_a_T @[calc6x6.scala 78:37]
    comp1[1].w_a <= _comp1_1_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_1_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_1_in_b_WIRE <= _comp1_1_in_b_T @[calc6x6.scala 79:38]
    comp1[1].in_b <= _comp1_1_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_1_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[1].flag <= _comp2_1_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_1_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_1_w_a_WIRE <= _comp2_1_w_a_T @[calc6x6.scala 81:37]
    comp2[1].w_a <= _comp2_1_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_1_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_1_in_b_WIRE <= _comp2_1_in_b_T @[calc6x6.scala 82:38]
    comp2[1].in_b <= _comp2_1_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_1_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[1].flag <= _comp3_1_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_1_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_1_w_a_WIRE <= _comp3_1_w_a_T @[calc6x6.scala 84:37]
    comp3[1].w_a <= _comp3_1_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_1_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_1_in_b_WIRE <= _comp3_1_in_b_T @[calc6x6.scala 85:38]
    comp3[1].in_b <= _comp3_1_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_2_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[2].flag <= _comp1_2_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_2_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_2_w_a_WIRE <= _comp1_2_w_a_T @[calc6x6.scala 78:37]
    comp1[2].w_a <= _comp1_2_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_2_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_2_in_b_WIRE <= _comp1_2_in_b_T @[calc6x6.scala 79:38]
    comp1[2].in_b <= _comp1_2_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_2_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[2].flag <= _comp2_2_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_2_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_2_w_a_WIRE <= _comp2_2_w_a_T @[calc6x6.scala 81:37]
    comp2[2].w_a <= _comp2_2_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_2_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_2_in_b_WIRE <= _comp2_2_in_b_T @[calc6x6.scala 82:38]
    comp2[2].in_b <= _comp2_2_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_2_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[2].flag <= _comp3_2_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_2_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_2_w_a_WIRE <= _comp3_2_w_a_T @[calc6x6.scala 84:37]
    comp3[2].w_a <= _comp3_2_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_2_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_2_in_b_WIRE <= _comp3_2_in_b_T @[calc6x6.scala 85:38]
    comp3[2].in_b <= _comp3_2_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_3_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[3].flag <= _comp1_3_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_3_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_3_w_a_WIRE <= _comp1_3_w_a_T @[calc6x6.scala 78:37]
    comp1[3].w_a <= _comp1_3_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_3_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_3_in_b_WIRE <= _comp1_3_in_b_T @[calc6x6.scala 79:38]
    comp1[3].in_b <= _comp1_3_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_3_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[3].flag <= _comp2_3_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_3_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_3_w_a_WIRE <= _comp2_3_w_a_T @[calc6x6.scala 81:37]
    comp2[3].w_a <= _comp2_3_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_3_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_3_in_b_WIRE <= _comp2_3_in_b_T @[calc6x6.scala 82:38]
    comp2[3].in_b <= _comp2_3_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_3_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[3].flag <= _comp3_3_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_3_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_3_w_a_WIRE <= _comp3_3_w_a_T @[calc6x6.scala 84:37]
    comp3[3].w_a <= _comp3_3_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_3_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_3_in_b_WIRE <= _comp3_3_in_b_T @[calc6x6.scala 85:38]
    comp3[3].in_b <= _comp3_3_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_4_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[4].flag <= _comp1_4_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_4_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_4_w_a_WIRE <= _comp1_4_w_a_T @[calc6x6.scala 78:37]
    comp1[4].w_a <= _comp1_4_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_4_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_4_in_b_WIRE <= _comp1_4_in_b_T @[calc6x6.scala 79:38]
    comp1[4].in_b <= _comp1_4_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_4_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[4].flag <= _comp2_4_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_4_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_4_w_a_WIRE <= _comp2_4_w_a_T @[calc6x6.scala 81:37]
    comp2[4].w_a <= _comp2_4_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_4_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_4_in_b_WIRE <= _comp2_4_in_b_T @[calc6x6.scala 82:38]
    comp2[4].in_b <= _comp2_4_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_4_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[4].flag <= _comp3_4_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_4_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_4_w_a_WIRE <= _comp3_4_w_a_T @[calc6x6.scala 84:37]
    comp3[4].w_a <= _comp3_4_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_4_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_4_in_b_WIRE <= _comp3_4_in_b_T @[calc6x6.scala 85:38]
    comp3[4].in_b <= _comp3_4_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_5_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[5].flag <= _comp1_5_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_5_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_5_w_a_WIRE <= _comp1_5_w_a_T @[calc6x6.scala 78:37]
    comp1[5].w_a <= _comp1_5_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_5_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_5_in_b_WIRE <= _comp1_5_in_b_T @[calc6x6.scala 79:38]
    comp1[5].in_b <= _comp1_5_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_5_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[5].flag <= _comp2_5_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_5_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_5_w_a_WIRE <= _comp2_5_w_a_T @[calc6x6.scala 81:37]
    comp2[5].w_a <= _comp2_5_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_5_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_5_in_b_WIRE <= _comp2_5_in_b_T @[calc6x6.scala 82:38]
    comp2[5].in_b <= _comp2_5_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_5_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[5].flag <= _comp3_5_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_5_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_5_w_a_WIRE <= _comp3_5_w_a_T @[calc6x6.scala 84:37]
    comp3[5].w_a <= _comp3_5_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_5_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_5_in_b_WIRE <= _comp3_5_in_b_T @[calc6x6.scala 85:38]
    comp3[5].in_b <= _comp3_5_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_6_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[6].flag <= _comp1_6_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_6_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_6_w_a_WIRE <= _comp1_6_w_a_T @[calc6x6.scala 78:37]
    comp1[6].w_a <= _comp1_6_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_6_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_6_in_b_WIRE <= _comp1_6_in_b_T @[calc6x6.scala 79:38]
    comp1[6].in_b <= _comp1_6_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_6_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[6].flag <= _comp2_6_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_6_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_6_w_a_WIRE <= _comp2_6_w_a_T @[calc6x6.scala 81:37]
    comp2[6].w_a <= _comp2_6_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_6_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_6_in_b_WIRE <= _comp2_6_in_b_T @[calc6x6.scala 82:38]
    comp2[6].in_b <= _comp2_6_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_6_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[6].flag <= _comp3_6_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_6_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_6_w_a_WIRE <= _comp3_6_w_a_T @[calc6x6.scala 84:37]
    comp3[6].w_a <= _comp3_6_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_6_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_6_in_b_WIRE <= _comp3_6_in_b_T @[calc6x6.scala 85:38]
    comp3[6].in_b <= _comp3_6_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_7_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[7].flag <= _comp1_7_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_7_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_7_w_a_WIRE <= _comp1_7_w_a_T @[calc6x6.scala 78:37]
    comp1[7].w_a <= _comp1_7_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_7_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_7_in_b_WIRE <= _comp1_7_in_b_T @[calc6x6.scala 79:38]
    comp1[7].in_b <= _comp1_7_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_7_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[7].flag <= _comp2_7_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_7_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_7_w_a_WIRE <= _comp2_7_w_a_T @[calc6x6.scala 81:37]
    comp2[7].w_a <= _comp2_7_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_7_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_7_in_b_WIRE <= _comp2_7_in_b_T @[calc6x6.scala 82:38]
    comp2[7].in_b <= _comp2_7_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_7_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[7].flag <= _comp3_7_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_7_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_7_w_a_WIRE <= _comp3_7_w_a_T @[calc6x6.scala 84:37]
    comp3[7].w_a <= _comp3_7_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_7_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_7_in_b_WIRE <= _comp3_7_in_b_T @[calc6x6.scala 85:38]
    comp3[7].in_b <= _comp3_7_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_8_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[8].flag <= _comp1_8_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_8_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_8_w_a_WIRE <= _comp1_8_w_a_T @[calc6x6.scala 78:37]
    comp1[8].w_a <= _comp1_8_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_8_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_8_in_b_WIRE <= _comp1_8_in_b_T @[calc6x6.scala 79:38]
    comp1[8].in_b <= _comp1_8_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_8_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[8].flag <= _comp2_8_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_8_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_8_w_a_WIRE <= _comp2_8_w_a_T @[calc6x6.scala 81:37]
    comp2[8].w_a <= _comp2_8_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_8_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_8_in_b_WIRE <= _comp2_8_in_b_T @[calc6x6.scala 82:38]
    comp2[8].in_b <= _comp2_8_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_8_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[8].flag <= _comp3_8_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_8_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_8_w_a_WIRE <= _comp3_8_w_a_T @[calc6x6.scala 84:37]
    comp3[8].w_a <= _comp3_8_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_8_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_8_in_b_WIRE <= _comp3_8_in_b_T @[calc6x6.scala 85:38]
    comp3[8].in_b <= _comp3_8_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_9_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[9].flag <= _comp1_9_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_9_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_9_w_a_WIRE <= _comp1_9_w_a_T @[calc6x6.scala 78:37]
    comp1[9].w_a <= _comp1_9_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_9_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_9_in_b_WIRE <= _comp1_9_in_b_T @[calc6x6.scala 79:38]
    comp1[9].in_b <= _comp1_9_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_9_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[9].flag <= _comp2_9_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_9_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_9_w_a_WIRE <= _comp2_9_w_a_T @[calc6x6.scala 81:37]
    comp2[9].w_a <= _comp2_9_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_9_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_9_in_b_WIRE <= _comp2_9_in_b_T @[calc6x6.scala 82:38]
    comp2[9].in_b <= _comp2_9_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_9_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[9].flag <= _comp3_9_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_9_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_9_w_a_WIRE <= _comp3_9_w_a_T @[calc6x6.scala 84:37]
    comp3[9].w_a <= _comp3_9_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_9_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_9_in_b_WIRE <= _comp3_9_in_b_T @[calc6x6.scala 85:38]
    comp3[9].in_b <= _comp3_9_in_b_WIRE @[calc6x6.scala 85:23]
    wire _io_output_WIRE : {mat : SInt<37>[16]} @[calc6x6.scala 87:30]
    node _io_output_T = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[0] <= _io_output_T @[calc6x6.scala 87:30]
    node _io_output_T_1 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[1] <= _io_output_T_1 @[calc6x6.scala 87:30]
    node _io_output_T_2 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[2] <= _io_output_T_2 @[calc6x6.scala 87:30]
    node _io_output_T_3 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[3] <= _io_output_T_3 @[calc6x6.scala 87:30]
    node _io_output_T_4 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[4] <= _io_output_T_4 @[calc6x6.scala 87:30]
    node _io_output_T_5 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[5] <= _io_output_T_5 @[calc6x6.scala 87:30]
    node _io_output_T_6 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[6] <= _io_output_T_6 @[calc6x6.scala 87:30]
    node _io_output_T_7 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[7] <= _io_output_T_7 @[calc6x6.scala 87:30]
    node _io_output_T_8 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[8] <= _io_output_T_8 @[calc6x6.scala 87:30]
    node _io_output_T_9 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[9] <= _io_output_T_9 @[calc6x6.scala 87:30]
    node _io_output_T_10 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[10] <= _io_output_T_10 @[calc6x6.scala 87:30]
    node _io_output_T_11 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[11] <= _io_output_T_11 @[calc6x6.scala 87:30]
    node _io_output_T_12 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[12] <= _io_output_T_12 @[calc6x6.scala 87:30]
    node _io_output_T_13 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[13] <= _io_output_T_13 @[calc6x6.scala 87:30]
    node _io_output_T_14 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[14] <= _io_output_T_14 @[calc6x6.scala 87:30]
    node _io_output_T_15 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[15] <= _io_output_T_15 @[calc6x6.scala 87:30]
    io.output.mat[0] <= _io_output_WIRE.mat[0] @[calc6x6.scala 87:15]
    io.output.mat[1] <= _io_output_WIRE.mat[1] @[calc6x6.scala 87:15]
    io.output.mat[2] <= _io_output_WIRE.mat[2] @[calc6x6.scala 87:15]
    io.output.mat[3] <= _io_output_WIRE.mat[3] @[calc6x6.scala 87:15]
    io.output.mat[4] <= _io_output_WIRE.mat[4] @[calc6x6.scala 87:15]
    io.output.mat[5] <= _io_output_WIRE.mat[5] @[calc6x6.scala 87:15]
    io.output.mat[6] <= _io_output_WIRE.mat[6] @[calc6x6.scala 87:15]
    io.output.mat[7] <= _io_output_WIRE.mat[7] @[calc6x6.scala 87:15]
    io.output.mat[8] <= _io_output_WIRE.mat[8] @[calc6x6.scala 87:15]
    io.output.mat[9] <= _io_output_WIRE.mat[9] @[calc6x6.scala 87:15]
    io.output.mat[10] <= _io_output_WIRE.mat[10] @[calc6x6.scala 87:15]
    io.output.mat[11] <= _io_output_WIRE.mat[11] @[calc6x6.scala 87:15]
    io.output.mat[12] <= _io_output_WIRE.mat[12] @[calc6x6.scala 87:15]
    io.output.mat[13] <= _io_output_WIRE.mat[13] @[calc6x6.scala 87:15]
    io.output.mat[14] <= _io_output_WIRE.mat[14] @[calc6x6.scala 87:15]
    io.output.mat[15] <= _io_output_WIRE.mat[15] @[calc6x6.scala 87:15]
    io.valid_out <= UInt<1>("h00") @[calc6x6.scala 88:18]
    wire _reg1_WIRE : {mat_real : SInt<18>[36], mat_comp : SInt<18>[12]} @[calc6x6.scala 91:36]
    node _reg1_T = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[0] <= _reg1_T @[calc6x6.scala 91:36]
    node _reg1_T_1 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[1] <= _reg1_T_1 @[calc6x6.scala 91:36]
    node _reg1_T_2 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[2] <= _reg1_T_2 @[calc6x6.scala 91:36]
    node _reg1_T_3 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[3] <= _reg1_T_3 @[calc6x6.scala 91:36]
    node _reg1_T_4 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[4] <= _reg1_T_4 @[calc6x6.scala 91:36]
    node _reg1_T_5 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[5] <= _reg1_T_5 @[calc6x6.scala 91:36]
    node _reg1_T_6 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[6] <= _reg1_T_6 @[calc6x6.scala 91:36]
    node _reg1_T_7 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[7] <= _reg1_T_7 @[calc6x6.scala 91:36]
    node _reg1_T_8 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[8] <= _reg1_T_8 @[calc6x6.scala 91:36]
    node _reg1_T_9 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[9] <= _reg1_T_9 @[calc6x6.scala 91:36]
    node _reg1_T_10 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[10] <= _reg1_T_10 @[calc6x6.scala 91:36]
    node _reg1_T_11 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[11] <= _reg1_T_11 @[calc6x6.scala 91:36]
    node _reg1_T_12 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[0] <= _reg1_T_12 @[calc6x6.scala 91:36]
    node _reg1_T_13 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[1] <= _reg1_T_13 @[calc6x6.scala 91:36]
    node _reg1_T_14 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[2] <= _reg1_T_14 @[calc6x6.scala 91:36]
    node _reg1_T_15 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[3] <= _reg1_T_15 @[calc6x6.scala 91:36]
    node _reg1_T_16 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[4] <= _reg1_T_16 @[calc6x6.scala 91:36]
    node _reg1_T_17 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[5] <= _reg1_T_17 @[calc6x6.scala 91:36]
    node _reg1_T_18 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[6] <= _reg1_T_18 @[calc6x6.scala 91:36]
    node _reg1_T_19 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[7] <= _reg1_T_19 @[calc6x6.scala 91:36]
    node _reg1_T_20 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[8] <= _reg1_T_20 @[calc6x6.scala 91:36]
    node _reg1_T_21 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[9] <= _reg1_T_21 @[calc6x6.scala 91:36]
    node _reg1_T_22 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[10] <= _reg1_T_22 @[calc6x6.scala 91:36]
    node _reg1_T_23 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[11] <= _reg1_T_23 @[calc6x6.scala 91:36]
    node _reg1_T_24 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[12] <= _reg1_T_24 @[calc6x6.scala 91:36]
    node _reg1_T_25 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[13] <= _reg1_T_25 @[calc6x6.scala 91:36]
    node _reg1_T_26 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[14] <= _reg1_T_26 @[calc6x6.scala 91:36]
    node _reg1_T_27 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[15] <= _reg1_T_27 @[calc6x6.scala 91:36]
    node _reg1_T_28 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[16] <= _reg1_T_28 @[calc6x6.scala 91:36]
    node _reg1_T_29 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[17] <= _reg1_T_29 @[calc6x6.scala 91:36]
    node _reg1_T_30 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[18] <= _reg1_T_30 @[calc6x6.scala 91:36]
    node _reg1_T_31 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[19] <= _reg1_T_31 @[calc6x6.scala 91:36]
    node _reg1_T_32 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[20] <= _reg1_T_32 @[calc6x6.scala 91:36]
    node _reg1_T_33 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[21] <= _reg1_T_33 @[calc6x6.scala 91:36]
    node _reg1_T_34 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[22] <= _reg1_T_34 @[calc6x6.scala 91:36]
    node _reg1_T_35 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[23] <= _reg1_T_35 @[calc6x6.scala 91:36]
    node _reg1_T_36 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[24] <= _reg1_T_36 @[calc6x6.scala 91:36]
    node _reg1_T_37 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[25] <= _reg1_T_37 @[calc6x6.scala 91:36]
    node _reg1_T_38 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[26] <= _reg1_T_38 @[calc6x6.scala 91:36]
    node _reg1_T_39 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[27] <= _reg1_T_39 @[calc6x6.scala 91:36]
    node _reg1_T_40 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[28] <= _reg1_T_40 @[calc6x6.scala 91:36]
    node _reg1_T_41 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[29] <= _reg1_T_41 @[calc6x6.scala 91:36]
    node _reg1_T_42 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[30] <= _reg1_T_42 @[calc6x6.scala 91:36]
    node _reg1_T_43 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[31] <= _reg1_T_43 @[calc6x6.scala 91:36]
    node _reg1_T_44 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[32] <= _reg1_T_44 @[calc6x6.scala 91:36]
    node _reg1_T_45 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[33] <= _reg1_T_45 @[calc6x6.scala 91:36]
    node _reg1_T_46 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[34] <= _reg1_T_46 @[calc6x6.scala 91:36]
    node _reg1_T_47 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[35] <= _reg1_T_47 @[calc6x6.scala 91:36]
    reg reg1 : {mat_real : SInt<18>[36], mat_comp : SInt<18>[12]}, clock with : (reset => (reset, _reg1_WIRE)) @[calc6x6.scala 91:23]
    wire _reg2_WIRE : {mat_real : SInt<20>[36], mat_comp : SInt<20>[10]} @[calc6x6.scala 92:36]
    node _reg2_T = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[0] <= _reg2_T @[calc6x6.scala 92:36]
    node _reg2_T_1 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[1] <= _reg2_T_1 @[calc6x6.scala 92:36]
    node _reg2_T_2 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[2] <= _reg2_T_2 @[calc6x6.scala 92:36]
    node _reg2_T_3 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[3] <= _reg2_T_3 @[calc6x6.scala 92:36]
    node _reg2_T_4 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[4] <= _reg2_T_4 @[calc6x6.scala 92:36]
    node _reg2_T_5 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[5] <= _reg2_T_5 @[calc6x6.scala 92:36]
    node _reg2_T_6 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[6] <= _reg2_T_6 @[calc6x6.scala 92:36]
    node _reg2_T_7 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[7] <= _reg2_T_7 @[calc6x6.scala 92:36]
    node _reg2_T_8 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[8] <= _reg2_T_8 @[calc6x6.scala 92:36]
    node _reg2_T_9 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[9] <= _reg2_T_9 @[calc6x6.scala 92:36]
    node _reg2_T_10 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[0] <= _reg2_T_10 @[calc6x6.scala 92:36]
    node _reg2_T_11 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[1] <= _reg2_T_11 @[calc6x6.scala 92:36]
    node _reg2_T_12 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[2] <= _reg2_T_12 @[calc6x6.scala 92:36]
    node _reg2_T_13 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[3] <= _reg2_T_13 @[calc6x6.scala 92:36]
    node _reg2_T_14 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[4] <= _reg2_T_14 @[calc6x6.scala 92:36]
    node _reg2_T_15 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[5] <= _reg2_T_15 @[calc6x6.scala 92:36]
    node _reg2_T_16 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[6] <= _reg2_T_16 @[calc6x6.scala 92:36]
    node _reg2_T_17 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[7] <= _reg2_T_17 @[calc6x6.scala 92:36]
    node _reg2_T_18 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[8] <= _reg2_T_18 @[calc6x6.scala 92:36]
    node _reg2_T_19 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[9] <= _reg2_T_19 @[calc6x6.scala 92:36]
    node _reg2_T_20 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[10] <= _reg2_T_20 @[calc6x6.scala 92:36]
    node _reg2_T_21 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[11] <= _reg2_T_21 @[calc6x6.scala 92:36]
    node _reg2_T_22 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[12] <= _reg2_T_22 @[calc6x6.scala 92:36]
    node _reg2_T_23 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[13] <= _reg2_T_23 @[calc6x6.scala 92:36]
    node _reg2_T_24 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[14] <= _reg2_T_24 @[calc6x6.scala 92:36]
    node _reg2_T_25 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[15] <= _reg2_T_25 @[calc6x6.scala 92:36]
    node _reg2_T_26 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[16] <= _reg2_T_26 @[calc6x6.scala 92:36]
    node _reg2_T_27 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[17] <= _reg2_T_27 @[calc6x6.scala 92:36]
    node _reg2_T_28 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[18] <= _reg2_T_28 @[calc6x6.scala 92:36]
    node _reg2_T_29 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[19] <= _reg2_T_29 @[calc6x6.scala 92:36]
    node _reg2_T_30 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[20] <= _reg2_T_30 @[calc6x6.scala 92:36]
    node _reg2_T_31 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[21] <= _reg2_T_31 @[calc6x6.scala 92:36]
    node _reg2_T_32 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[22] <= _reg2_T_32 @[calc6x6.scala 92:36]
    node _reg2_T_33 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[23] <= _reg2_T_33 @[calc6x6.scala 92:36]
    node _reg2_T_34 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[24] <= _reg2_T_34 @[calc6x6.scala 92:36]
    node _reg2_T_35 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[25] <= _reg2_T_35 @[calc6x6.scala 92:36]
    node _reg2_T_36 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[26] <= _reg2_T_36 @[calc6x6.scala 92:36]
    node _reg2_T_37 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[27] <= _reg2_T_37 @[calc6x6.scala 92:36]
    node _reg2_T_38 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[28] <= _reg2_T_38 @[calc6x6.scala 92:36]
    node _reg2_T_39 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[29] <= _reg2_T_39 @[calc6x6.scala 92:36]
    node _reg2_T_40 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[30] <= _reg2_T_40 @[calc6x6.scala 92:36]
    node _reg2_T_41 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[31] <= _reg2_T_41 @[calc6x6.scala 92:36]
    node _reg2_T_42 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[32] <= _reg2_T_42 @[calc6x6.scala 92:36]
    node _reg2_T_43 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[33] <= _reg2_T_43 @[calc6x6.scala 92:36]
    node _reg2_T_44 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[34] <= _reg2_T_44 @[calc6x6.scala 92:36]
    node _reg2_T_45 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[35] <= _reg2_T_45 @[calc6x6.scala 92:36]
    reg reg2 : {mat_real : SInt<20>[36], mat_comp : SInt<20>[10]}, clock with : (reset => (reset, _reg2_WIRE)) @[calc6x6.scala 92:23]
    wire _w3_WIRE : {mat_real : SInt<38>[36], mat_comp : SInt<38>[36]} @[calc6x6.scala 93:34]
    node _w3_T = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[0] <= _w3_T @[calc6x6.scala 93:34]
    node _w3_T_1 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[1] <= _w3_T_1 @[calc6x6.scala 93:34]
    node _w3_T_2 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[2] <= _w3_T_2 @[calc6x6.scala 93:34]
    node _w3_T_3 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[3] <= _w3_T_3 @[calc6x6.scala 93:34]
    node _w3_T_4 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[4] <= _w3_T_4 @[calc6x6.scala 93:34]
    node _w3_T_5 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[5] <= _w3_T_5 @[calc6x6.scala 93:34]
    node _w3_T_6 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[6] <= _w3_T_6 @[calc6x6.scala 93:34]
    node _w3_T_7 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[7] <= _w3_T_7 @[calc6x6.scala 93:34]
    node _w3_T_8 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[8] <= _w3_T_8 @[calc6x6.scala 93:34]
    node _w3_T_9 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[9] <= _w3_T_9 @[calc6x6.scala 93:34]
    node _w3_T_10 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[10] <= _w3_T_10 @[calc6x6.scala 93:34]
    node _w3_T_11 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[11] <= _w3_T_11 @[calc6x6.scala 93:34]
    node _w3_T_12 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[12] <= _w3_T_12 @[calc6x6.scala 93:34]
    node _w3_T_13 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[13] <= _w3_T_13 @[calc6x6.scala 93:34]
    node _w3_T_14 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[14] <= _w3_T_14 @[calc6x6.scala 93:34]
    node _w3_T_15 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[15] <= _w3_T_15 @[calc6x6.scala 93:34]
    node _w3_T_16 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[16] <= _w3_T_16 @[calc6x6.scala 93:34]
    node _w3_T_17 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[17] <= _w3_T_17 @[calc6x6.scala 93:34]
    node _w3_T_18 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[18] <= _w3_T_18 @[calc6x6.scala 93:34]
    node _w3_T_19 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[19] <= _w3_T_19 @[calc6x6.scala 93:34]
    node _w3_T_20 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[20] <= _w3_T_20 @[calc6x6.scala 93:34]
    node _w3_T_21 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[21] <= _w3_T_21 @[calc6x6.scala 93:34]
    node _w3_T_22 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[22] <= _w3_T_22 @[calc6x6.scala 93:34]
    node _w3_T_23 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[23] <= _w3_T_23 @[calc6x6.scala 93:34]
    node _w3_T_24 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[24] <= _w3_T_24 @[calc6x6.scala 93:34]
    node _w3_T_25 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[25] <= _w3_T_25 @[calc6x6.scala 93:34]
    node _w3_T_26 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[26] <= _w3_T_26 @[calc6x6.scala 93:34]
    node _w3_T_27 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[27] <= _w3_T_27 @[calc6x6.scala 93:34]
    node _w3_T_28 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[28] <= _w3_T_28 @[calc6x6.scala 93:34]
    node _w3_T_29 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[29] <= _w3_T_29 @[calc6x6.scala 93:34]
    node _w3_T_30 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[30] <= _w3_T_30 @[calc6x6.scala 93:34]
    node _w3_T_31 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[31] <= _w3_T_31 @[calc6x6.scala 93:34]
    node _w3_T_32 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[32] <= _w3_T_32 @[calc6x6.scala 93:34]
    node _w3_T_33 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[33] <= _w3_T_33 @[calc6x6.scala 93:34]
    node _w3_T_34 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[34] <= _w3_T_34 @[calc6x6.scala 93:34]
    node _w3_T_35 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[35] <= _w3_T_35 @[calc6x6.scala 93:34]
    node _w3_T_36 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[0] <= _w3_T_36 @[calc6x6.scala 93:34]
    node _w3_T_37 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[1] <= _w3_T_37 @[calc6x6.scala 93:34]
    node _w3_T_38 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[2] <= _w3_T_38 @[calc6x6.scala 93:34]
    node _w3_T_39 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[3] <= _w3_T_39 @[calc6x6.scala 93:34]
    node _w3_T_40 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[4] <= _w3_T_40 @[calc6x6.scala 93:34]
    node _w3_T_41 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[5] <= _w3_T_41 @[calc6x6.scala 93:34]
    node _w3_T_42 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[6] <= _w3_T_42 @[calc6x6.scala 93:34]
    node _w3_T_43 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[7] <= _w3_T_43 @[calc6x6.scala 93:34]
    node _w3_T_44 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[8] <= _w3_T_44 @[calc6x6.scala 93:34]
    node _w3_T_45 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[9] <= _w3_T_45 @[calc6x6.scala 93:34]
    node _w3_T_46 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[10] <= _w3_T_46 @[calc6x6.scala 93:34]
    node _w3_T_47 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[11] <= _w3_T_47 @[calc6x6.scala 93:34]
    node _w3_T_48 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[12] <= _w3_T_48 @[calc6x6.scala 93:34]
    node _w3_T_49 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[13] <= _w3_T_49 @[calc6x6.scala 93:34]
    node _w3_T_50 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[14] <= _w3_T_50 @[calc6x6.scala 93:34]
    node _w3_T_51 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[15] <= _w3_T_51 @[calc6x6.scala 93:34]
    node _w3_T_52 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[16] <= _w3_T_52 @[calc6x6.scala 93:34]
    node _w3_T_53 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[17] <= _w3_T_53 @[calc6x6.scala 93:34]
    node _w3_T_54 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[18] <= _w3_T_54 @[calc6x6.scala 93:34]
    node _w3_T_55 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[19] <= _w3_T_55 @[calc6x6.scala 93:34]
    node _w3_T_56 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[20] <= _w3_T_56 @[calc6x6.scala 93:34]
    node _w3_T_57 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[21] <= _w3_T_57 @[calc6x6.scala 93:34]
    node _w3_T_58 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[22] <= _w3_T_58 @[calc6x6.scala 93:34]
    node _w3_T_59 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[23] <= _w3_T_59 @[calc6x6.scala 93:34]
    node _w3_T_60 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[24] <= _w3_T_60 @[calc6x6.scala 93:34]
    node _w3_T_61 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[25] <= _w3_T_61 @[calc6x6.scala 93:34]
    node _w3_T_62 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[26] <= _w3_T_62 @[calc6x6.scala 93:34]
    node _w3_T_63 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[27] <= _w3_T_63 @[calc6x6.scala 93:34]
    node _w3_T_64 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[28] <= _w3_T_64 @[calc6x6.scala 93:34]
    node _w3_T_65 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[29] <= _w3_T_65 @[calc6x6.scala 93:34]
    node _w3_T_66 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[30] <= _w3_T_66 @[calc6x6.scala 93:34]
    node _w3_T_67 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[31] <= _w3_T_67 @[calc6x6.scala 93:34]
    node _w3_T_68 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[32] <= _w3_T_68 @[calc6x6.scala 93:34]
    node _w3_T_69 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[33] <= _w3_T_69 @[calc6x6.scala 93:34]
    node _w3_T_70 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[34] <= _w3_T_70 @[calc6x6.scala 93:34]
    node _w3_T_71 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[35] <= _w3_T_71 @[calc6x6.scala 93:34]
    reg w3 : {mat_real : SInt<38>[36], mat_comp : SInt<38>[36]}, clock with : (reset => (reset, _w3_WIRE)) @[calc6x6.scala 93:21]
    wire _reg3_WIRE : {mat_real : SInt<38>[24], mat_comp : SInt<38>[24]} @[calc6x6.scala 94:36]
    node _reg3_T = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[0] <= _reg3_T @[calc6x6.scala 94:36]
    node _reg3_T_1 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[1] <= _reg3_T_1 @[calc6x6.scala 94:36]
    node _reg3_T_2 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[2] <= _reg3_T_2 @[calc6x6.scala 94:36]
    node _reg3_T_3 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[3] <= _reg3_T_3 @[calc6x6.scala 94:36]
    node _reg3_T_4 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[4] <= _reg3_T_4 @[calc6x6.scala 94:36]
    node _reg3_T_5 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[5] <= _reg3_T_5 @[calc6x6.scala 94:36]
    node _reg3_T_6 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[6] <= _reg3_T_6 @[calc6x6.scala 94:36]
    node _reg3_T_7 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[7] <= _reg3_T_7 @[calc6x6.scala 94:36]
    node _reg3_T_8 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[8] <= _reg3_T_8 @[calc6x6.scala 94:36]
    node _reg3_T_9 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[9] <= _reg3_T_9 @[calc6x6.scala 94:36]
    node _reg3_T_10 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[10] <= _reg3_T_10 @[calc6x6.scala 94:36]
    node _reg3_T_11 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[11] <= _reg3_T_11 @[calc6x6.scala 94:36]
    node _reg3_T_12 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[12] <= _reg3_T_12 @[calc6x6.scala 94:36]
    node _reg3_T_13 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[13] <= _reg3_T_13 @[calc6x6.scala 94:36]
    node _reg3_T_14 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[14] <= _reg3_T_14 @[calc6x6.scala 94:36]
    node _reg3_T_15 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[15] <= _reg3_T_15 @[calc6x6.scala 94:36]
    node _reg3_T_16 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[16] <= _reg3_T_16 @[calc6x6.scala 94:36]
    node _reg3_T_17 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[17] <= _reg3_T_17 @[calc6x6.scala 94:36]
    node _reg3_T_18 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[18] <= _reg3_T_18 @[calc6x6.scala 94:36]
    node _reg3_T_19 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[19] <= _reg3_T_19 @[calc6x6.scala 94:36]
    node _reg3_T_20 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[20] <= _reg3_T_20 @[calc6x6.scala 94:36]
    node _reg3_T_21 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[21] <= _reg3_T_21 @[calc6x6.scala 94:36]
    node _reg3_T_22 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[22] <= _reg3_T_22 @[calc6x6.scala 94:36]
    node _reg3_T_23 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[23] <= _reg3_T_23 @[calc6x6.scala 94:36]
    node _reg3_T_24 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[0] <= _reg3_T_24 @[calc6x6.scala 94:36]
    node _reg3_T_25 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[1] <= _reg3_T_25 @[calc6x6.scala 94:36]
    node _reg3_T_26 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[2] <= _reg3_T_26 @[calc6x6.scala 94:36]
    node _reg3_T_27 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[3] <= _reg3_T_27 @[calc6x6.scala 94:36]
    node _reg3_T_28 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[4] <= _reg3_T_28 @[calc6x6.scala 94:36]
    node _reg3_T_29 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[5] <= _reg3_T_29 @[calc6x6.scala 94:36]
    node _reg3_T_30 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[6] <= _reg3_T_30 @[calc6x6.scala 94:36]
    node _reg3_T_31 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[7] <= _reg3_T_31 @[calc6x6.scala 94:36]
    node _reg3_T_32 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[8] <= _reg3_T_32 @[calc6x6.scala 94:36]
    node _reg3_T_33 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[9] <= _reg3_T_33 @[calc6x6.scala 94:36]
    node _reg3_T_34 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[10] <= _reg3_T_34 @[calc6x6.scala 94:36]
    node _reg3_T_35 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[11] <= _reg3_T_35 @[calc6x6.scala 94:36]
    node _reg3_T_36 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[12] <= _reg3_T_36 @[calc6x6.scala 94:36]
    node _reg3_T_37 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[13] <= _reg3_T_37 @[calc6x6.scala 94:36]
    node _reg3_T_38 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[14] <= _reg3_T_38 @[calc6x6.scala 94:36]
    node _reg3_T_39 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[15] <= _reg3_T_39 @[calc6x6.scala 94:36]
    node _reg3_T_40 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[16] <= _reg3_T_40 @[calc6x6.scala 94:36]
    node _reg3_T_41 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[17] <= _reg3_T_41 @[calc6x6.scala 94:36]
    node _reg3_T_42 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[18] <= _reg3_T_42 @[calc6x6.scala 94:36]
    node _reg3_T_43 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[19] <= _reg3_T_43 @[calc6x6.scala 94:36]
    node _reg3_T_44 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[20] <= _reg3_T_44 @[calc6x6.scala 94:36]
    node _reg3_T_45 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[21] <= _reg3_T_45 @[calc6x6.scala 94:36]
    node _reg3_T_46 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[22] <= _reg3_T_46 @[calc6x6.scala 94:36]
    node _reg3_T_47 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[23] <= _reg3_T_47 @[calc6x6.scala 94:36]
    reg reg3 : {mat_real : SInt<38>[24], mat_comp : SInt<38>[24]}, clock with : (reset => (reset, _reg3_WIRE)) @[calc6x6.scala 94:23]
    wire _valid_reg_WIRE : UInt<1>[5] @[calc6x6.scala 172:36]
    _valid_reg_WIRE[0] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[1] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[2] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[3] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[4] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    reg valid_reg : UInt<1>[5], clock with : (reset => (reset, _valid_reg_WIRE)) @[calc6x6.scala 172:28]
    valid_reg[0] <= io.valid_in @[calc6x6.scala 173:18]
    node _reg1_mat_real_0_T = sub(io.input.mat[0], io.input.mat[24]) @[calc6x6.scala 110:56]
    reg1.mat_real[0] <= _reg1_mat_real_0_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_6_T = add(io.input.mat[6], io.input.mat[12]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_6_T_1 = add(_reg1_mat_real_6_T, io.input.mat[18]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_6_T_2 = add(_reg1_mat_real_6_T_1, io.input.mat[24]) @[calc6x6.scala 111:92]
    reg1.mat_real[6] <= _reg1_mat_real_6_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_12_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_1 = tail(_reg1_mat_real_12_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_2 = asSInt(_reg1_mat_real_12_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_3 = add(_reg1_mat_real_12_T_2, io.input.mat[12]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_12_T_4 = sub(_reg1_mat_real_12_T_3, io.input.mat[18]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_12_T_5 = add(_reg1_mat_real_12_T_4, io.input.mat[24]) @[calc6x6.scala 112:93]
    reg1.mat_real[12] <= _reg1_mat_real_12_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_18_T = sub(asSInt(UInt<1>("h00")), io.input.mat[12]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_1 = tail(_reg1_mat_real_18_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_2 = asSInt(_reg1_mat_real_18_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_3 = add(_reg1_mat_real_18_T_2, io.input.mat[24]) @[calc6x6.scala 113:57]
    reg1.mat_real[18] <= _reg1_mat_real_18_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_24_T = sub(asSInt(UInt<1>("h00")), io.input.mat[12]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_1 = tail(_reg1_mat_real_24_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_2 = asSInt(_reg1_mat_real_24_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_3 = add(_reg1_mat_real_24_T_2, io.input.mat[24]) @[calc6x6.scala 114:57]
    reg1.mat_real[24] <= _reg1_mat_real_24_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_30_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_1 = tail(_reg1_mat_real_30_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_2 = asSInt(_reg1_mat_real_30_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_3 = add(_reg1_mat_real_30_T_2, io.input.mat[30]) @[calc6x6.scala 115:57]
    reg1.mat_real[30] <= _reg1_mat_real_30_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_0_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_1 = tail(_reg1_mat_comp_0_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_2 = asSInt(_reg1_mat_comp_0_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_3 = add(_reg1_mat_comp_0_T_2, io.input.mat[18]) @[calc6x6.scala 117:57]
    reg1.mat_comp[0] <= _reg1_mat_comp_0_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_6_T = sub(io.input.mat[6], io.input.mat[18]) @[calc6x6.scala 118:56]
    reg1.mat_comp[6] <= _reg1_mat_comp_6_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_1_T = sub(io.input.mat[1], io.input.mat[25]) @[calc6x6.scala 110:56]
    reg1.mat_real[1] <= _reg1_mat_real_1_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_7_T = add(io.input.mat[7], io.input.mat[13]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_7_T_1 = add(_reg1_mat_real_7_T, io.input.mat[19]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_7_T_2 = add(_reg1_mat_real_7_T_1, io.input.mat[25]) @[calc6x6.scala 111:92]
    reg1.mat_real[7] <= _reg1_mat_real_7_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_13_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_1 = tail(_reg1_mat_real_13_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_2 = asSInt(_reg1_mat_real_13_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_3 = add(_reg1_mat_real_13_T_2, io.input.mat[13]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_13_T_4 = sub(_reg1_mat_real_13_T_3, io.input.mat[19]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_13_T_5 = add(_reg1_mat_real_13_T_4, io.input.mat[25]) @[calc6x6.scala 112:93]
    reg1.mat_real[13] <= _reg1_mat_real_13_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_19_T = sub(asSInt(UInt<1>("h00")), io.input.mat[13]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_1 = tail(_reg1_mat_real_19_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_2 = asSInt(_reg1_mat_real_19_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_3 = add(_reg1_mat_real_19_T_2, io.input.mat[25]) @[calc6x6.scala 113:57]
    reg1.mat_real[19] <= _reg1_mat_real_19_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_25_T = sub(asSInt(UInt<1>("h00")), io.input.mat[13]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_1 = tail(_reg1_mat_real_25_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_2 = asSInt(_reg1_mat_real_25_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_3 = add(_reg1_mat_real_25_T_2, io.input.mat[25]) @[calc6x6.scala 114:57]
    reg1.mat_real[25] <= _reg1_mat_real_25_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_31_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_1 = tail(_reg1_mat_real_31_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_2 = asSInt(_reg1_mat_real_31_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_3 = add(_reg1_mat_real_31_T_2, io.input.mat[31]) @[calc6x6.scala 115:57]
    reg1.mat_real[31] <= _reg1_mat_real_31_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_1_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_1 = tail(_reg1_mat_comp_1_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_2 = asSInt(_reg1_mat_comp_1_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_3 = add(_reg1_mat_comp_1_T_2, io.input.mat[19]) @[calc6x6.scala 117:57]
    reg1.mat_comp[1] <= _reg1_mat_comp_1_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_7_T = sub(io.input.mat[7], io.input.mat[19]) @[calc6x6.scala 118:56]
    reg1.mat_comp[7] <= _reg1_mat_comp_7_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_2_T = sub(io.input.mat[2], io.input.mat[26]) @[calc6x6.scala 110:56]
    reg1.mat_real[2] <= _reg1_mat_real_2_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_8_T = add(io.input.mat[8], io.input.mat[14]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_8_T_1 = add(_reg1_mat_real_8_T, io.input.mat[20]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_8_T_2 = add(_reg1_mat_real_8_T_1, io.input.mat[26]) @[calc6x6.scala 111:92]
    reg1.mat_real[8] <= _reg1_mat_real_8_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_14_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_1 = tail(_reg1_mat_real_14_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_2 = asSInt(_reg1_mat_real_14_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_3 = add(_reg1_mat_real_14_T_2, io.input.mat[14]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_14_T_4 = sub(_reg1_mat_real_14_T_3, io.input.mat[20]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_14_T_5 = add(_reg1_mat_real_14_T_4, io.input.mat[26]) @[calc6x6.scala 112:93]
    reg1.mat_real[14] <= _reg1_mat_real_14_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_20_T = sub(asSInt(UInt<1>("h00")), io.input.mat[14]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_1 = tail(_reg1_mat_real_20_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_2 = asSInt(_reg1_mat_real_20_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_3 = add(_reg1_mat_real_20_T_2, io.input.mat[26]) @[calc6x6.scala 113:57]
    reg1.mat_real[20] <= _reg1_mat_real_20_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_26_T = sub(asSInt(UInt<1>("h00")), io.input.mat[14]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_1 = tail(_reg1_mat_real_26_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_2 = asSInt(_reg1_mat_real_26_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_3 = add(_reg1_mat_real_26_T_2, io.input.mat[26]) @[calc6x6.scala 114:57]
    reg1.mat_real[26] <= _reg1_mat_real_26_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_32_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_1 = tail(_reg1_mat_real_32_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_2 = asSInt(_reg1_mat_real_32_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_3 = add(_reg1_mat_real_32_T_2, io.input.mat[32]) @[calc6x6.scala 115:57]
    reg1.mat_real[32] <= _reg1_mat_real_32_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_2_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_1 = tail(_reg1_mat_comp_2_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_2 = asSInt(_reg1_mat_comp_2_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_3 = add(_reg1_mat_comp_2_T_2, io.input.mat[20]) @[calc6x6.scala 117:57]
    reg1.mat_comp[2] <= _reg1_mat_comp_2_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_8_T = sub(io.input.mat[8], io.input.mat[20]) @[calc6x6.scala 118:56]
    reg1.mat_comp[8] <= _reg1_mat_comp_8_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_3_T = sub(io.input.mat[3], io.input.mat[27]) @[calc6x6.scala 110:56]
    reg1.mat_real[3] <= _reg1_mat_real_3_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_9_T = add(io.input.mat[9], io.input.mat[15]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_9_T_1 = add(_reg1_mat_real_9_T, io.input.mat[21]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_9_T_2 = add(_reg1_mat_real_9_T_1, io.input.mat[27]) @[calc6x6.scala 111:92]
    reg1.mat_real[9] <= _reg1_mat_real_9_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_15_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_1 = tail(_reg1_mat_real_15_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_2 = asSInt(_reg1_mat_real_15_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_3 = add(_reg1_mat_real_15_T_2, io.input.mat[15]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_15_T_4 = sub(_reg1_mat_real_15_T_3, io.input.mat[21]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_15_T_5 = add(_reg1_mat_real_15_T_4, io.input.mat[27]) @[calc6x6.scala 112:93]
    reg1.mat_real[15] <= _reg1_mat_real_15_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_21_T = sub(asSInt(UInt<1>("h00")), io.input.mat[15]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_1 = tail(_reg1_mat_real_21_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_2 = asSInt(_reg1_mat_real_21_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_3 = add(_reg1_mat_real_21_T_2, io.input.mat[27]) @[calc6x6.scala 113:57]
    reg1.mat_real[21] <= _reg1_mat_real_21_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_27_T = sub(asSInt(UInt<1>("h00")), io.input.mat[15]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_1 = tail(_reg1_mat_real_27_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_2 = asSInt(_reg1_mat_real_27_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_3 = add(_reg1_mat_real_27_T_2, io.input.mat[27]) @[calc6x6.scala 114:57]
    reg1.mat_real[27] <= _reg1_mat_real_27_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_33_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_1 = tail(_reg1_mat_real_33_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_2 = asSInt(_reg1_mat_real_33_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_3 = add(_reg1_mat_real_33_T_2, io.input.mat[33]) @[calc6x6.scala 115:57]
    reg1.mat_real[33] <= _reg1_mat_real_33_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_3_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_1 = tail(_reg1_mat_comp_3_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_2 = asSInt(_reg1_mat_comp_3_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_3 = add(_reg1_mat_comp_3_T_2, io.input.mat[21]) @[calc6x6.scala 117:57]
    reg1.mat_comp[3] <= _reg1_mat_comp_3_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_9_T = sub(io.input.mat[9], io.input.mat[21]) @[calc6x6.scala 118:56]
    reg1.mat_comp[9] <= _reg1_mat_comp_9_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_4_T = sub(io.input.mat[4], io.input.mat[28]) @[calc6x6.scala 110:56]
    reg1.mat_real[4] <= _reg1_mat_real_4_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_10_T = add(io.input.mat[10], io.input.mat[16]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_10_T_1 = add(_reg1_mat_real_10_T, io.input.mat[22]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_10_T_2 = add(_reg1_mat_real_10_T_1, io.input.mat[28]) @[calc6x6.scala 111:92]
    reg1.mat_real[10] <= _reg1_mat_real_10_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_16_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_1 = tail(_reg1_mat_real_16_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_2 = asSInt(_reg1_mat_real_16_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_3 = add(_reg1_mat_real_16_T_2, io.input.mat[16]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_16_T_4 = sub(_reg1_mat_real_16_T_3, io.input.mat[22]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_16_T_5 = add(_reg1_mat_real_16_T_4, io.input.mat[28]) @[calc6x6.scala 112:93]
    reg1.mat_real[16] <= _reg1_mat_real_16_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_22_T = sub(asSInt(UInt<1>("h00")), io.input.mat[16]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_1 = tail(_reg1_mat_real_22_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_2 = asSInt(_reg1_mat_real_22_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_3 = add(_reg1_mat_real_22_T_2, io.input.mat[28]) @[calc6x6.scala 113:57]
    reg1.mat_real[22] <= _reg1_mat_real_22_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_28_T = sub(asSInt(UInt<1>("h00")), io.input.mat[16]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_1 = tail(_reg1_mat_real_28_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_2 = asSInt(_reg1_mat_real_28_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_3 = add(_reg1_mat_real_28_T_2, io.input.mat[28]) @[calc6x6.scala 114:57]
    reg1.mat_real[28] <= _reg1_mat_real_28_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_34_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_1 = tail(_reg1_mat_real_34_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_2 = asSInt(_reg1_mat_real_34_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_3 = add(_reg1_mat_real_34_T_2, io.input.mat[34]) @[calc6x6.scala 115:57]
    reg1.mat_real[34] <= _reg1_mat_real_34_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_1 = tail(_reg1_mat_comp_4_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_2 = asSInt(_reg1_mat_comp_4_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_3 = add(_reg1_mat_comp_4_T_2, io.input.mat[22]) @[calc6x6.scala 117:57]
    reg1.mat_comp[4] <= _reg1_mat_comp_4_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_10_T = sub(io.input.mat[10], io.input.mat[22]) @[calc6x6.scala 118:56]
    reg1.mat_comp[10] <= _reg1_mat_comp_10_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_5_T = sub(io.input.mat[5], io.input.mat[29]) @[calc6x6.scala 110:56]
    reg1.mat_real[5] <= _reg1_mat_real_5_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_11_T = add(io.input.mat[11], io.input.mat[17]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_11_T_1 = add(_reg1_mat_real_11_T, io.input.mat[23]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_11_T_2 = add(_reg1_mat_real_11_T_1, io.input.mat[29]) @[calc6x6.scala 111:92]
    reg1.mat_real[11] <= _reg1_mat_real_11_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_17_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_1 = tail(_reg1_mat_real_17_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_2 = asSInt(_reg1_mat_real_17_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_3 = add(_reg1_mat_real_17_T_2, io.input.mat[17]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_17_T_4 = sub(_reg1_mat_real_17_T_3, io.input.mat[23]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_17_T_5 = add(_reg1_mat_real_17_T_4, io.input.mat[29]) @[calc6x6.scala 112:93]
    reg1.mat_real[17] <= _reg1_mat_real_17_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_23_T = sub(asSInt(UInt<1>("h00")), io.input.mat[17]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_1 = tail(_reg1_mat_real_23_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_2 = asSInt(_reg1_mat_real_23_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_3 = add(_reg1_mat_real_23_T_2, io.input.mat[29]) @[calc6x6.scala 113:57]
    reg1.mat_real[23] <= _reg1_mat_real_23_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_29_T = sub(asSInt(UInt<1>("h00")), io.input.mat[17]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_1 = tail(_reg1_mat_real_29_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_2 = asSInt(_reg1_mat_real_29_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_3 = add(_reg1_mat_real_29_T_2, io.input.mat[29]) @[calc6x6.scala 114:57]
    reg1.mat_real[29] <= _reg1_mat_real_29_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_35_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_1 = tail(_reg1_mat_real_35_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_2 = asSInt(_reg1_mat_real_35_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_3 = add(_reg1_mat_real_35_T_2, io.input.mat[35]) @[calc6x6.scala 115:57]
    reg1.mat_real[35] <= _reg1_mat_real_35_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_5_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_1 = tail(_reg1_mat_comp_5_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_2 = asSInt(_reg1_mat_comp_5_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_3 = add(_reg1_mat_comp_5_T_2, io.input.mat[23]) @[calc6x6.scala 117:57]
    reg1.mat_comp[5] <= _reg1_mat_comp_5_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_11_T = sub(io.input.mat[11], io.input.mat[23]) @[calc6x6.scala 118:56]
    reg1.mat_comp[11] <= _reg1_mat_comp_11_T @[calc6x6.scala 118:37]
    valid_reg[1] <= valid_reg[0] @[calc6x6.scala 175:18]
    node _reg2_mat_real_0_T = sub(reg1.mat_real[0], reg1.mat_real[4]) @[calc6x6.scala 124:61]
    reg2.mat_real[0] <= _reg2_mat_real_0_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_1_T = add(reg1.mat_real[1], reg1.mat_real[2]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_1_T_1 = add(_reg2_mat_real_1_T, reg1.mat_real[3]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_1_T_2 = add(_reg2_mat_real_1_T_1, reg1.mat_real[4]) @[calc6x6.scala 125:107]
    reg2.mat_real[1] <= _reg2_mat_real_1_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_2_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_1 = tail(_reg2_mat_real_2_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_2 = asSInt(_reg2_mat_real_2_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_3 = add(_reg2_mat_real_2_T_2, reg1.mat_real[2]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_2_T_4 = sub(_reg2_mat_real_2_T_3, reg1.mat_real[3]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_2_T_5 = add(_reg2_mat_real_2_T_4, reg1.mat_real[4]) @[calc6x6.scala 126:108]
    reg2.mat_real[2] <= _reg2_mat_real_2_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_3_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[2]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_1 = tail(_reg2_mat_real_3_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_2 = asSInt(_reg2_mat_real_3_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_3 = add(_reg2_mat_real_3_T_2, reg1.mat_real[4]) @[calc6x6.scala 127:180]
    reg2.mat_real[3] <= _reg2_mat_real_3_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_4_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[2]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_1 = tail(_reg2_mat_real_4_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_2 = asSInt(_reg2_mat_real_4_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_3 = add(_reg2_mat_real_4_T_2, reg1.mat_real[4]) @[calc6x6.scala 128:180]
    reg2.mat_real[4] <= _reg2_mat_real_4_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_5_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_1 = tail(_reg2_mat_real_5_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_2 = asSInt(_reg2_mat_real_5_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_3 = add(_reg2_mat_real_5_T_2, reg1.mat_real[5]) @[calc6x6.scala 129:62]
    reg2.mat_real[5] <= _reg2_mat_real_5_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_6_T = sub(reg1.mat_real[6], reg1.mat_real[10]) @[calc6x6.scala 124:61]
    reg2.mat_real[6] <= _reg2_mat_real_6_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_7_T = add(reg1.mat_real[7], reg1.mat_real[8]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_7_T_1 = add(_reg2_mat_real_7_T, reg1.mat_real[9]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_7_T_2 = add(_reg2_mat_real_7_T_1, reg1.mat_real[10]) @[calc6x6.scala 125:107]
    reg2.mat_real[7] <= _reg2_mat_real_7_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_8_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_1 = tail(_reg2_mat_real_8_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_2 = asSInt(_reg2_mat_real_8_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_3 = add(_reg2_mat_real_8_T_2, reg1.mat_real[8]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_8_T_4 = sub(_reg2_mat_real_8_T_3, reg1.mat_real[9]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_8_T_5 = add(_reg2_mat_real_8_T_4, reg1.mat_real[10]) @[calc6x6.scala 126:108]
    reg2.mat_real[8] <= _reg2_mat_real_8_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_9_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[8]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_1 = tail(_reg2_mat_real_9_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_2 = asSInt(_reg2_mat_real_9_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_3 = add(_reg2_mat_real_9_T_2, reg1.mat_real[10]) @[calc6x6.scala 127:180]
    reg2.mat_real[9] <= _reg2_mat_real_9_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_10_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[8]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_1 = tail(_reg2_mat_real_10_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_2 = asSInt(_reg2_mat_real_10_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_3 = add(_reg2_mat_real_10_T_2, reg1.mat_real[10]) @[calc6x6.scala 128:180]
    reg2.mat_real[10] <= _reg2_mat_real_10_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_11_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_1 = tail(_reg2_mat_real_11_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_2 = asSInt(_reg2_mat_real_11_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_3 = add(_reg2_mat_real_11_T_2, reg1.mat_real[11]) @[calc6x6.scala 129:62]
    reg2.mat_real[11] <= _reg2_mat_real_11_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_12_T = sub(reg1.mat_real[12], reg1.mat_real[16]) @[calc6x6.scala 124:61]
    reg2.mat_real[12] <= _reg2_mat_real_12_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_13_T = add(reg1.mat_real[13], reg1.mat_real[14]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_13_T_1 = add(_reg2_mat_real_13_T, reg1.mat_real[15]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_13_T_2 = add(_reg2_mat_real_13_T_1, reg1.mat_real[16]) @[calc6x6.scala 125:107]
    reg2.mat_real[13] <= _reg2_mat_real_13_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_14_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_1 = tail(_reg2_mat_real_14_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_2 = asSInt(_reg2_mat_real_14_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_3 = add(_reg2_mat_real_14_T_2, reg1.mat_real[14]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_14_T_4 = sub(_reg2_mat_real_14_T_3, reg1.mat_real[15]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_14_T_5 = add(_reg2_mat_real_14_T_4, reg1.mat_real[16]) @[calc6x6.scala 126:108]
    reg2.mat_real[14] <= _reg2_mat_real_14_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_15_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[14]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_1 = tail(_reg2_mat_real_15_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_2 = asSInt(_reg2_mat_real_15_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_3 = add(_reg2_mat_real_15_T_2, reg1.mat_real[16]) @[calc6x6.scala 127:180]
    reg2.mat_real[15] <= _reg2_mat_real_15_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_16_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[14]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_1 = tail(_reg2_mat_real_16_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_2 = asSInt(_reg2_mat_real_16_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_3 = add(_reg2_mat_real_16_T_2, reg1.mat_real[16]) @[calc6x6.scala 128:180]
    reg2.mat_real[16] <= _reg2_mat_real_16_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_17_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_1 = tail(_reg2_mat_real_17_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_2 = asSInt(_reg2_mat_real_17_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_3 = add(_reg2_mat_real_17_T_2, reg1.mat_real[17]) @[calc6x6.scala 129:62]
    reg2.mat_real[17] <= _reg2_mat_real_17_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_18_T = sub(reg1.mat_real[18], reg1.mat_real[22]) @[calc6x6.scala 124:61]
    reg2.mat_real[18] <= _reg2_mat_real_18_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_19_T = add(reg1.mat_real[19], reg1.mat_real[20]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_19_T_1 = add(_reg2_mat_real_19_T, reg1.mat_real[21]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_19_T_2 = add(_reg2_mat_real_19_T_1, reg1.mat_real[22]) @[calc6x6.scala 125:107]
    reg2.mat_real[19] <= _reg2_mat_real_19_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_20_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[19]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_1 = tail(_reg2_mat_real_20_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_2 = asSInt(_reg2_mat_real_20_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_3 = add(_reg2_mat_real_20_T_2, reg1.mat_real[20]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_20_T_4 = sub(_reg2_mat_real_20_T_3, reg1.mat_real[21]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_20_T_5 = add(_reg2_mat_real_20_T_4, reg1.mat_real[22]) @[calc6x6.scala 126:108]
    reg2.mat_real[20] <= _reg2_mat_real_20_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_21_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[20]) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_1 = tail(_reg2_mat_real_21_T, 1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_2 = asSInt(_reg2_mat_real_21_T_1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_3 = add(_reg2_mat_real_21_T_2, reg1.mat_real[22]) @[calc6x6.scala 127:79]
    node _reg2_mat_real_21_T_4 = sub(_reg2_mat_real_21_T_3, reg1.mat_comp[3]) @[calc6x6.scala 127:102]
    node _reg2_mat_real_21_T_5 = add(_reg2_mat_real_21_T_4, reg1.mat_comp[1]) @[calc6x6.scala 127:127]
    reg2.mat_real[21] <= _reg2_mat_real_21_T_5 @[calc6x6.scala 127:37]
    node _reg2_mat_real_22_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[20]) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_1 = tail(_reg2_mat_real_22_T, 1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_2 = asSInt(_reg2_mat_real_22_T_1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_3 = add(_reg2_mat_real_22_T_2, reg1.mat_real[22]) @[calc6x6.scala 128:79]
    node _reg2_mat_real_22_T_4 = add(_reg2_mat_real_22_T_3, reg1.mat_comp[3]) @[calc6x6.scala 128:102]
    node _reg2_mat_real_22_T_5 = sub(_reg2_mat_real_22_T_4, reg1.mat_comp[1]) @[calc6x6.scala 128:127]
    reg2.mat_real[22] <= _reg2_mat_real_22_T_5 @[calc6x6.scala 128:37]
    node _reg2_mat_real_23_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[19]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_1 = tail(_reg2_mat_real_23_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_2 = asSInt(_reg2_mat_real_23_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_3 = add(_reg2_mat_real_23_T_2, reg1.mat_real[23]) @[calc6x6.scala 129:62]
    reg2.mat_real[23] <= _reg2_mat_real_23_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_24_T = sub(reg1.mat_real[24], reg1.mat_real[28]) @[calc6x6.scala 124:61]
    reg2.mat_real[24] <= _reg2_mat_real_24_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_25_T = add(reg1.mat_real[25], reg1.mat_real[26]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_25_T_1 = add(_reg2_mat_real_25_T, reg1.mat_real[27]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_25_T_2 = add(_reg2_mat_real_25_T_1, reg1.mat_real[28]) @[calc6x6.scala 125:107]
    reg2.mat_real[25] <= _reg2_mat_real_25_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_26_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[25]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_1 = tail(_reg2_mat_real_26_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_2 = asSInt(_reg2_mat_real_26_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_3 = add(_reg2_mat_real_26_T_2, reg1.mat_real[26]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_26_T_4 = sub(_reg2_mat_real_26_T_3, reg1.mat_real[27]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_26_T_5 = add(_reg2_mat_real_26_T_4, reg1.mat_real[28]) @[calc6x6.scala 126:108]
    reg2.mat_real[26] <= _reg2_mat_real_26_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_27_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[26]) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_1 = tail(_reg2_mat_real_27_T, 1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_2 = asSInt(_reg2_mat_real_27_T_1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_3 = add(_reg2_mat_real_27_T_2, reg1.mat_real[28]) @[calc6x6.scala 127:79]
    node _reg2_mat_real_27_T_4 = sub(_reg2_mat_real_27_T_3, reg1.mat_comp[9]) @[calc6x6.scala 127:102]
    node _reg2_mat_real_27_T_5 = add(_reg2_mat_real_27_T_4, reg1.mat_comp[7]) @[calc6x6.scala 127:127]
    reg2.mat_real[27] <= _reg2_mat_real_27_T_5 @[calc6x6.scala 127:37]
    node _reg2_mat_real_28_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[26]) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_1 = tail(_reg2_mat_real_28_T, 1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_2 = asSInt(_reg2_mat_real_28_T_1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_3 = add(_reg2_mat_real_28_T_2, reg1.mat_real[28]) @[calc6x6.scala 128:79]
    node _reg2_mat_real_28_T_4 = add(_reg2_mat_real_28_T_3, reg1.mat_comp[9]) @[calc6x6.scala 128:102]
    node _reg2_mat_real_28_T_5 = sub(_reg2_mat_real_28_T_4, reg1.mat_comp[7]) @[calc6x6.scala 128:127]
    reg2.mat_real[28] <= _reg2_mat_real_28_T_5 @[calc6x6.scala 128:37]
    node _reg2_mat_real_29_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[25]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_1 = tail(_reg2_mat_real_29_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_2 = asSInt(_reg2_mat_real_29_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_3 = add(_reg2_mat_real_29_T_2, reg1.mat_real[29]) @[calc6x6.scala 129:62]
    reg2.mat_real[29] <= _reg2_mat_real_29_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_30_T = sub(reg1.mat_real[30], reg1.mat_real[34]) @[calc6x6.scala 124:61]
    reg2.mat_real[30] <= _reg2_mat_real_30_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_31_T = add(reg1.mat_real[31], reg1.mat_real[32]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_31_T_1 = add(_reg2_mat_real_31_T, reg1.mat_real[33]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_31_T_2 = add(_reg2_mat_real_31_T_1, reg1.mat_real[34]) @[calc6x6.scala 125:107]
    reg2.mat_real[31] <= _reg2_mat_real_31_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_32_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_1 = tail(_reg2_mat_real_32_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_2 = asSInt(_reg2_mat_real_32_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_3 = add(_reg2_mat_real_32_T_2, reg1.mat_real[32]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_32_T_4 = sub(_reg2_mat_real_32_T_3, reg1.mat_real[33]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_32_T_5 = add(_reg2_mat_real_32_T_4, reg1.mat_real[34]) @[calc6x6.scala 126:108]
    reg2.mat_real[32] <= _reg2_mat_real_32_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_33_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[32]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_1 = tail(_reg2_mat_real_33_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_2 = asSInt(_reg2_mat_real_33_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_3 = add(_reg2_mat_real_33_T_2, reg1.mat_real[34]) @[calc6x6.scala 127:180]
    reg2.mat_real[33] <= _reg2_mat_real_33_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_34_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[32]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_1 = tail(_reg2_mat_real_34_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_2 = asSInt(_reg2_mat_real_34_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_3 = add(_reg2_mat_real_34_T_2, reg1.mat_real[34]) @[calc6x6.scala 128:180]
    reg2.mat_real[34] <= _reg2_mat_real_34_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_35_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_1 = tail(_reg2_mat_real_35_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_2 = asSInt(_reg2_mat_real_35_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_3 = add(_reg2_mat_real_35_T_2, reg1.mat_real[35]) @[calc6x6.scala 129:62]
    reg2.mat_real[35] <= _reg2_mat_real_35_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_comp_0_T = sub(reg1.mat_comp[0], reg1.mat_comp[4]) @[calc6x6.scala 132:50]
    reg2.mat_comp[0] <= _reg2_mat_comp_0_T @[calc6x6.scala 132:26]
    node _reg2_mat_comp_1_T = add(reg1.mat_comp[1], reg1.mat_comp[2]) @[calc6x6.scala 133:50]
    node _reg2_mat_comp_1_T_1 = add(_reg2_mat_comp_1_T, reg1.mat_comp[3]) @[calc6x6.scala 133:73]
    node _reg2_mat_comp_1_T_2 = add(_reg2_mat_comp_1_T_1, reg1.mat_comp[4]) @[calc6x6.scala 133:96]
    reg2.mat_comp[1] <= _reg2_mat_comp_1_T_2 @[calc6x6.scala 133:26]
    node _reg2_mat_comp_2_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[1]) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_1 = tail(_reg2_mat_comp_2_T, 1) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_2 = asSInt(_reg2_mat_comp_2_T_1) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_3 = add(_reg2_mat_comp_2_T_2, reg1.mat_comp[2]) @[calc6x6.scala 134:51]
    node _reg2_mat_comp_2_T_4 = sub(_reg2_mat_comp_2_T_3, reg1.mat_comp[3]) @[calc6x6.scala 134:74]
    node _reg2_mat_comp_2_T_5 = add(_reg2_mat_comp_2_T_4, reg1.mat_comp[4]) @[calc6x6.scala 134:97]
    reg2.mat_comp[2] <= _reg2_mat_comp_2_T_5 @[calc6x6.scala 134:26]
    node _reg2_mat_comp_3_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[2]) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_1 = tail(_reg2_mat_comp_3_T, 1) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_2 = asSInt(_reg2_mat_comp_3_T_1) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_3 = add(_reg2_mat_comp_3_T_2, reg1.mat_comp[4]) @[calc6x6.scala 135:51]
    node _reg2_mat_comp_3_T_4 = sub(_reg2_mat_comp_3_T_3, reg1.mat_real[19]) @[calc6x6.scala 135:74]
    node _reg2_mat_comp_3_T_5 = add(_reg2_mat_comp_3_T_4, reg1.mat_real[21]) @[calc6x6.scala 135:97]
    reg2.mat_comp[3] <= _reg2_mat_comp_3_T_5 @[calc6x6.scala 135:26]
    node _reg2_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[2]) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_1 = tail(_reg2_mat_comp_4_T, 1) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_2 = asSInt(_reg2_mat_comp_4_T_1) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_3 = add(_reg2_mat_comp_4_T_2, reg1.mat_comp[4]) @[calc6x6.scala 136:51]
    node _reg2_mat_comp_4_T_4 = add(_reg2_mat_comp_4_T_3, reg1.mat_real[19]) @[calc6x6.scala 136:74]
    node _reg2_mat_comp_4_T_5 = sub(_reg2_mat_comp_4_T_4, reg1.mat_real[21]) @[calc6x6.scala 136:97]
    reg2.mat_comp[4] <= _reg2_mat_comp_4_T_5 @[calc6x6.scala 136:26]
    node _reg2_mat_comp_5_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[1]) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_1 = tail(_reg2_mat_comp_5_T, 1) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_2 = asSInt(_reg2_mat_comp_5_T_1) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_3 = add(_reg2_mat_comp_5_T_2, reg1.mat_comp[5]) @[calc6x6.scala 137:51]
    reg2.mat_comp[5] <= _reg2_mat_comp_5_T_3 @[calc6x6.scala 137:26]
    node _reg2_mat_comp_6_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_1 = tail(_reg2_mat_comp_6_T, 1) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_2 = asSInt(_reg2_mat_comp_6_T_1) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_3 = add(_reg2_mat_comp_6_T_2, reg1.mat_real[3]) @[calc6x6.scala 140:51]
    reg2.mat_comp[6] <= _reg2_mat_comp_6_T_3 @[calc6x6.scala 140:26]
    node _reg2_mat_comp_7_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_1 = tail(_reg2_mat_comp_7_T, 1) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_2 = asSInt(_reg2_mat_comp_7_T_1) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_3 = add(_reg2_mat_comp_7_T_2, reg1.mat_real[9]) @[calc6x6.scala 141:51]
    reg2.mat_comp[7] <= _reg2_mat_comp_7_T_3 @[calc6x6.scala 141:26]
    node _reg2_mat_comp_8_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_1 = tail(_reg2_mat_comp_8_T, 1) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_2 = asSInt(_reg2_mat_comp_8_T_1) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_3 = add(_reg2_mat_comp_8_T_2, reg1.mat_real[15]) @[calc6x6.scala 142:51]
    reg2.mat_comp[8] <= _reg2_mat_comp_8_T_3 @[calc6x6.scala 142:26]
    node _reg2_mat_comp_9_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_1 = tail(_reg2_mat_comp_9_T, 1) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_2 = asSInt(_reg2_mat_comp_9_T_1) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_3 = add(_reg2_mat_comp_9_T_2, reg1.mat_real[33]) @[calc6x6.scala 143:51]
    reg2.mat_comp[9] <= _reg2_mat_comp_9_T_3 @[calc6x6.scala 143:26]
    valid_reg[2] <= valid_reg[1] @[calc6x6.scala 177:18]
    node _reg3_mat_real_0_T = add(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_1 = tail(_reg3_mat_real_0_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_2 = asSInt(_reg3_mat_real_0_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_3 = add(_reg3_mat_real_0_T_2, w3.mat_real[18]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_4 = tail(_reg3_mat_real_0_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_5 = asSInt(_reg3_mat_real_0_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_6 = add(_reg3_mat_real_0_T_5, w3.mat_real[24]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_7 = tail(_reg3_mat_real_0_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_8 = asSInt(_reg3_mat_real_0_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_9 = dshr(_reg3_mat_real_0_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_0_T_10 = add(w3.mat_real[0], _reg3_mat_real_0_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_0_T_11 = tail(_reg3_mat_real_0_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_0_T_12 = asSInt(_reg3_mat_real_0_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[0] <= _reg3_mat_real_0_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_6_T = sub(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_1 = tail(_reg3_mat_real_6_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_2 = asSInt(_reg3_mat_real_6_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_3 = sub(_reg3_mat_real_6_T_2, w3.mat_comp[18]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_4 = tail(_reg3_mat_real_6_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_5 = asSInt(_reg3_mat_real_6_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_6 = add(_reg3_mat_real_6_T_5, w3.mat_comp[24]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_7 = tail(_reg3_mat_real_6_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_8 = asSInt(_reg3_mat_real_6_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_9 = dshr(_reg3_mat_real_6_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[6] <= _reg3_mat_real_6_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_12_T = add(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_1 = tail(_reg3_mat_real_12_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_2 = asSInt(_reg3_mat_real_12_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_3 = sub(_reg3_mat_real_12_T_2, w3.mat_real[18]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_4 = tail(_reg3_mat_real_12_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_5 = asSInt(_reg3_mat_real_12_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_6 = sub(_reg3_mat_real_12_T_5, w3.mat_real[24]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_7 = tail(_reg3_mat_real_12_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_8 = asSInt(_reg3_mat_real_12_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_9 = dshr(_reg3_mat_real_12_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[12] <= _reg3_mat_real_12_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_18_T = sub(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_1 = tail(_reg3_mat_real_18_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_2 = asSInt(_reg3_mat_real_18_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_3 = add(_reg3_mat_real_18_T_2, w3.mat_comp[18]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_4 = tail(_reg3_mat_real_18_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_5 = asSInt(_reg3_mat_real_18_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_6 = sub(_reg3_mat_real_18_T_5, w3.mat_comp[24]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_7 = tail(_reg3_mat_real_18_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_8 = asSInt(_reg3_mat_real_18_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_9 = dshr(_reg3_mat_real_18_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_18_T_10 = add(_reg3_mat_real_18_T_9, w3.mat_real[30]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_18_T_11 = tail(_reg3_mat_real_18_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_18_T_12 = asSInt(_reg3_mat_real_18_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[18] <= _reg3_mat_real_18_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_0_T = add(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_1 = tail(_reg3_mat_comp_0_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_2 = asSInt(_reg3_mat_comp_0_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_3 = add(_reg3_mat_comp_0_T_2, w3.mat_comp[18]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_4 = tail(_reg3_mat_comp_0_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_5 = asSInt(_reg3_mat_comp_0_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_6 = add(_reg3_mat_comp_0_T_5, w3.mat_comp[24]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_7 = tail(_reg3_mat_comp_0_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_8 = asSInt(_reg3_mat_comp_0_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_9 = dshr(_reg3_mat_comp_0_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_0_T_10 = add(w3.mat_comp[0], _reg3_mat_comp_0_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_0_T_11 = tail(_reg3_mat_comp_0_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_0_T_12 = asSInt(_reg3_mat_comp_0_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[0] <= _reg3_mat_comp_0_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_6_T = sub(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_1 = tail(_reg3_mat_comp_6_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_2 = asSInt(_reg3_mat_comp_6_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_3 = add(_reg3_mat_comp_6_T_2, w3.mat_real[18]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_4 = tail(_reg3_mat_comp_6_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_5 = asSInt(_reg3_mat_comp_6_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_6 = sub(_reg3_mat_comp_6_T_5, w3.mat_real[24]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_7 = tail(_reg3_mat_comp_6_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_8 = asSInt(_reg3_mat_comp_6_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_9 = dshr(_reg3_mat_comp_6_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[6] <= _reg3_mat_comp_6_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_12_T = add(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_1 = tail(_reg3_mat_comp_12_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_2 = asSInt(_reg3_mat_comp_12_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_3 = sub(_reg3_mat_comp_12_T_2, w3.mat_comp[18]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_4 = tail(_reg3_mat_comp_12_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_5 = asSInt(_reg3_mat_comp_12_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_6 = sub(_reg3_mat_comp_12_T_5, w3.mat_comp[24]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_7 = tail(_reg3_mat_comp_12_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_8 = asSInt(_reg3_mat_comp_12_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_9 = dshr(_reg3_mat_comp_12_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[12] <= _reg3_mat_comp_12_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_18_T = sub(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_1 = tail(_reg3_mat_comp_18_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_2 = asSInt(_reg3_mat_comp_18_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_3 = sub(_reg3_mat_comp_18_T_2, w3.mat_real[18]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_4 = tail(_reg3_mat_comp_18_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_5 = asSInt(_reg3_mat_comp_18_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_6 = add(_reg3_mat_comp_18_T_5, w3.mat_real[24]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_7 = tail(_reg3_mat_comp_18_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_8 = asSInt(_reg3_mat_comp_18_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_9 = dshr(_reg3_mat_comp_18_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_18_T_10 = add(_reg3_mat_comp_18_T_9, w3.mat_comp[30]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_18_T_11 = tail(_reg3_mat_comp_18_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_18_T_12 = asSInt(_reg3_mat_comp_18_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[18] <= _reg3_mat_comp_18_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_1_T = add(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_1 = tail(_reg3_mat_real_1_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_2 = asSInt(_reg3_mat_real_1_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_3 = add(_reg3_mat_real_1_T_2, w3.mat_real[19]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_4 = tail(_reg3_mat_real_1_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_5 = asSInt(_reg3_mat_real_1_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_6 = add(_reg3_mat_real_1_T_5, w3.mat_real[25]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_7 = tail(_reg3_mat_real_1_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_8 = asSInt(_reg3_mat_real_1_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_9 = dshr(_reg3_mat_real_1_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_1_T_10 = add(w3.mat_real[1], _reg3_mat_real_1_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_1_T_11 = tail(_reg3_mat_real_1_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_1_T_12 = asSInt(_reg3_mat_real_1_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[1] <= _reg3_mat_real_1_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_7_T = sub(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_1 = tail(_reg3_mat_real_7_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_2 = asSInt(_reg3_mat_real_7_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_3 = sub(_reg3_mat_real_7_T_2, w3.mat_comp[19]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_4 = tail(_reg3_mat_real_7_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_5 = asSInt(_reg3_mat_real_7_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_6 = add(_reg3_mat_real_7_T_5, w3.mat_comp[25]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_7 = tail(_reg3_mat_real_7_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_8 = asSInt(_reg3_mat_real_7_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_9 = dshr(_reg3_mat_real_7_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[7] <= _reg3_mat_real_7_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_13_T = add(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_1 = tail(_reg3_mat_real_13_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_2 = asSInt(_reg3_mat_real_13_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_3 = sub(_reg3_mat_real_13_T_2, w3.mat_real[19]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_4 = tail(_reg3_mat_real_13_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_5 = asSInt(_reg3_mat_real_13_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_6 = sub(_reg3_mat_real_13_T_5, w3.mat_real[25]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_7 = tail(_reg3_mat_real_13_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_8 = asSInt(_reg3_mat_real_13_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_9 = dshr(_reg3_mat_real_13_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[13] <= _reg3_mat_real_13_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_19_T = sub(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_1 = tail(_reg3_mat_real_19_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_2 = asSInt(_reg3_mat_real_19_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_3 = add(_reg3_mat_real_19_T_2, w3.mat_comp[19]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_4 = tail(_reg3_mat_real_19_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_5 = asSInt(_reg3_mat_real_19_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_6 = sub(_reg3_mat_real_19_T_5, w3.mat_comp[25]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_7 = tail(_reg3_mat_real_19_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_8 = asSInt(_reg3_mat_real_19_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_9 = dshr(_reg3_mat_real_19_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_19_T_10 = add(_reg3_mat_real_19_T_9, w3.mat_real[31]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_19_T_11 = tail(_reg3_mat_real_19_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_19_T_12 = asSInt(_reg3_mat_real_19_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[19] <= _reg3_mat_real_19_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_1_T = add(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_1 = tail(_reg3_mat_comp_1_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_2 = asSInt(_reg3_mat_comp_1_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_3 = add(_reg3_mat_comp_1_T_2, w3.mat_comp[19]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_4 = tail(_reg3_mat_comp_1_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_5 = asSInt(_reg3_mat_comp_1_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_6 = add(_reg3_mat_comp_1_T_5, w3.mat_comp[25]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_7 = tail(_reg3_mat_comp_1_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_8 = asSInt(_reg3_mat_comp_1_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_9 = dshr(_reg3_mat_comp_1_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_1_T_10 = add(w3.mat_comp[1], _reg3_mat_comp_1_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_1_T_11 = tail(_reg3_mat_comp_1_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_1_T_12 = asSInt(_reg3_mat_comp_1_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[1] <= _reg3_mat_comp_1_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_7_T = sub(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_1 = tail(_reg3_mat_comp_7_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_2 = asSInt(_reg3_mat_comp_7_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_3 = add(_reg3_mat_comp_7_T_2, w3.mat_real[19]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_4 = tail(_reg3_mat_comp_7_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_5 = asSInt(_reg3_mat_comp_7_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_6 = sub(_reg3_mat_comp_7_T_5, w3.mat_real[25]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_7 = tail(_reg3_mat_comp_7_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_8 = asSInt(_reg3_mat_comp_7_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_9 = dshr(_reg3_mat_comp_7_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[7] <= _reg3_mat_comp_7_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_13_T = add(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_1 = tail(_reg3_mat_comp_13_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_2 = asSInt(_reg3_mat_comp_13_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_3 = sub(_reg3_mat_comp_13_T_2, w3.mat_comp[19]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_4 = tail(_reg3_mat_comp_13_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_5 = asSInt(_reg3_mat_comp_13_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_6 = sub(_reg3_mat_comp_13_T_5, w3.mat_comp[25]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_7 = tail(_reg3_mat_comp_13_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_8 = asSInt(_reg3_mat_comp_13_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_9 = dshr(_reg3_mat_comp_13_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[13] <= _reg3_mat_comp_13_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_19_T = sub(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_1 = tail(_reg3_mat_comp_19_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_2 = asSInt(_reg3_mat_comp_19_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_3 = sub(_reg3_mat_comp_19_T_2, w3.mat_real[19]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_4 = tail(_reg3_mat_comp_19_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_5 = asSInt(_reg3_mat_comp_19_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_6 = add(_reg3_mat_comp_19_T_5, w3.mat_real[25]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_7 = tail(_reg3_mat_comp_19_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_8 = asSInt(_reg3_mat_comp_19_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_9 = dshr(_reg3_mat_comp_19_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_19_T_10 = add(_reg3_mat_comp_19_T_9, w3.mat_comp[31]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_19_T_11 = tail(_reg3_mat_comp_19_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_19_T_12 = asSInt(_reg3_mat_comp_19_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[19] <= _reg3_mat_comp_19_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_2_T = add(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_1 = tail(_reg3_mat_real_2_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_2 = asSInt(_reg3_mat_real_2_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_3 = add(_reg3_mat_real_2_T_2, w3.mat_real[20]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_4 = tail(_reg3_mat_real_2_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_5 = asSInt(_reg3_mat_real_2_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_6 = add(_reg3_mat_real_2_T_5, w3.mat_real[26]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_7 = tail(_reg3_mat_real_2_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_8 = asSInt(_reg3_mat_real_2_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_9 = dshr(_reg3_mat_real_2_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_2_T_10 = add(w3.mat_real[2], _reg3_mat_real_2_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_2_T_11 = tail(_reg3_mat_real_2_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_2_T_12 = asSInt(_reg3_mat_real_2_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[2] <= _reg3_mat_real_2_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_8_T = sub(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_1 = tail(_reg3_mat_real_8_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_2 = asSInt(_reg3_mat_real_8_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_3 = sub(_reg3_mat_real_8_T_2, w3.mat_comp[20]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_4 = tail(_reg3_mat_real_8_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_5 = asSInt(_reg3_mat_real_8_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_6 = add(_reg3_mat_real_8_T_5, w3.mat_comp[26]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_7 = tail(_reg3_mat_real_8_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_8 = asSInt(_reg3_mat_real_8_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_9 = dshr(_reg3_mat_real_8_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[8] <= _reg3_mat_real_8_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_14_T = add(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_1 = tail(_reg3_mat_real_14_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_2 = asSInt(_reg3_mat_real_14_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_3 = sub(_reg3_mat_real_14_T_2, w3.mat_real[20]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_4 = tail(_reg3_mat_real_14_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_5 = asSInt(_reg3_mat_real_14_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_6 = sub(_reg3_mat_real_14_T_5, w3.mat_real[26]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_7 = tail(_reg3_mat_real_14_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_8 = asSInt(_reg3_mat_real_14_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_9 = dshr(_reg3_mat_real_14_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[14] <= _reg3_mat_real_14_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_20_T = sub(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_1 = tail(_reg3_mat_real_20_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_2 = asSInt(_reg3_mat_real_20_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_3 = add(_reg3_mat_real_20_T_2, w3.mat_comp[20]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_4 = tail(_reg3_mat_real_20_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_5 = asSInt(_reg3_mat_real_20_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_6 = sub(_reg3_mat_real_20_T_5, w3.mat_comp[26]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_7 = tail(_reg3_mat_real_20_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_8 = asSInt(_reg3_mat_real_20_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_9 = dshr(_reg3_mat_real_20_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_20_T_10 = add(_reg3_mat_real_20_T_9, w3.mat_real[32]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_20_T_11 = tail(_reg3_mat_real_20_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_20_T_12 = asSInt(_reg3_mat_real_20_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[20] <= _reg3_mat_real_20_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_2_T = add(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_1 = tail(_reg3_mat_comp_2_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_2 = asSInt(_reg3_mat_comp_2_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_3 = add(_reg3_mat_comp_2_T_2, w3.mat_comp[20]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_4 = tail(_reg3_mat_comp_2_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_5 = asSInt(_reg3_mat_comp_2_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_6 = add(_reg3_mat_comp_2_T_5, w3.mat_comp[26]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_7 = tail(_reg3_mat_comp_2_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_8 = asSInt(_reg3_mat_comp_2_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_9 = dshr(_reg3_mat_comp_2_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_2_T_10 = add(w3.mat_comp[2], _reg3_mat_comp_2_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_2_T_11 = tail(_reg3_mat_comp_2_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_2_T_12 = asSInt(_reg3_mat_comp_2_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[2] <= _reg3_mat_comp_2_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_8_T = sub(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_1 = tail(_reg3_mat_comp_8_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_2 = asSInt(_reg3_mat_comp_8_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_3 = add(_reg3_mat_comp_8_T_2, w3.mat_real[20]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_4 = tail(_reg3_mat_comp_8_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_5 = asSInt(_reg3_mat_comp_8_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_6 = sub(_reg3_mat_comp_8_T_5, w3.mat_real[26]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_7 = tail(_reg3_mat_comp_8_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_8 = asSInt(_reg3_mat_comp_8_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_9 = dshr(_reg3_mat_comp_8_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[8] <= _reg3_mat_comp_8_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_14_T = add(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_1 = tail(_reg3_mat_comp_14_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_2 = asSInt(_reg3_mat_comp_14_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_3 = sub(_reg3_mat_comp_14_T_2, w3.mat_comp[20]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_4 = tail(_reg3_mat_comp_14_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_5 = asSInt(_reg3_mat_comp_14_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_6 = sub(_reg3_mat_comp_14_T_5, w3.mat_comp[26]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_7 = tail(_reg3_mat_comp_14_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_8 = asSInt(_reg3_mat_comp_14_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_9 = dshr(_reg3_mat_comp_14_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[14] <= _reg3_mat_comp_14_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_20_T = sub(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_1 = tail(_reg3_mat_comp_20_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_2 = asSInt(_reg3_mat_comp_20_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_3 = sub(_reg3_mat_comp_20_T_2, w3.mat_real[20]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_4 = tail(_reg3_mat_comp_20_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_5 = asSInt(_reg3_mat_comp_20_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_6 = add(_reg3_mat_comp_20_T_5, w3.mat_real[26]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_7 = tail(_reg3_mat_comp_20_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_8 = asSInt(_reg3_mat_comp_20_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_9 = dshr(_reg3_mat_comp_20_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_20_T_10 = add(_reg3_mat_comp_20_T_9, w3.mat_comp[32]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_20_T_11 = tail(_reg3_mat_comp_20_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_20_T_12 = asSInt(_reg3_mat_comp_20_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[20] <= _reg3_mat_comp_20_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_3_T = add(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_1 = tail(_reg3_mat_real_3_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_2 = asSInt(_reg3_mat_real_3_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_3 = add(_reg3_mat_real_3_T_2, w3.mat_real[21]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_4 = tail(_reg3_mat_real_3_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_5 = asSInt(_reg3_mat_real_3_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_6 = add(_reg3_mat_real_3_T_5, w3.mat_real[27]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_7 = tail(_reg3_mat_real_3_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_8 = asSInt(_reg3_mat_real_3_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_9 = dshr(_reg3_mat_real_3_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_3_T_10 = add(w3.mat_real[3], _reg3_mat_real_3_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_3_T_11 = tail(_reg3_mat_real_3_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_3_T_12 = asSInt(_reg3_mat_real_3_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[3] <= _reg3_mat_real_3_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_9_T = sub(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_1 = tail(_reg3_mat_real_9_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_2 = asSInt(_reg3_mat_real_9_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_3 = sub(_reg3_mat_real_9_T_2, w3.mat_comp[21]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_4 = tail(_reg3_mat_real_9_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_5 = asSInt(_reg3_mat_real_9_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_6 = add(_reg3_mat_real_9_T_5, w3.mat_comp[27]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_7 = tail(_reg3_mat_real_9_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_8 = asSInt(_reg3_mat_real_9_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_9 = dshr(_reg3_mat_real_9_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[9] <= _reg3_mat_real_9_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_15_T = add(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_1 = tail(_reg3_mat_real_15_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_2 = asSInt(_reg3_mat_real_15_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_3 = sub(_reg3_mat_real_15_T_2, w3.mat_real[21]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_4 = tail(_reg3_mat_real_15_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_5 = asSInt(_reg3_mat_real_15_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_6 = sub(_reg3_mat_real_15_T_5, w3.mat_real[27]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_7 = tail(_reg3_mat_real_15_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_8 = asSInt(_reg3_mat_real_15_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_9 = dshr(_reg3_mat_real_15_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[15] <= _reg3_mat_real_15_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_21_T = sub(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_1 = tail(_reg3_mat_real_21_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_2 = asSInt(_reg3_mat_real_21_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_3 = add(_reg3_mat_real_21_T_2, w3.mat_comp[21]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_4 = tail(_reg3_mat_real_21_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_5 = asSInt(_reg3_mat_real_21_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_6 = sub(_reg3_mat_real_21_T_5, w3.mat_comp[27]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_7 = tail(_reg3_mat_real_21_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_8 = asSInt(_reg3_mat_real_21_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_9 = dshr(_reg3_mat_real_21_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_21_T_10 = add(_reg3_mat_real_21_T_9, w3.mat_real[33]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_21_T_11 = tail(_reg3_mat_real_21_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_21_T_12 = asSInt(_reg3_mat_real_21_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[21] <= _reg3_mat_real_21_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_3_T = add(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_1 = tail(_reg3_mat_comp_3_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_2 = asSInt(_reg3_mat_comp_3_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_3 = add(_reg3_mat_comp_3_T_2, w3.mat_comp[21]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_4 = tail(_reg3_mat_comp_3_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_5 = asSInt(_reg3_mat_comp_3_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_6 = add(_reg3_mat_comp_3_T_5, w3.mat_comp[27]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_7 = tail(_reg3_mat_comp_3_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_8 = asSInt(_reg3_mat_comp_3_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_9 = dshr(_reg3_mat_comp_3_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_3_T_10 = add(w3.mat_comp[3], _reg3_mat_comp_3_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_3_T_11 = tail(_reg3_mat_comp_3_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_3_T_12 = asSInt(_reg3_mat_comp_3_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[3] <= _reg3_mat_comp_3_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_9_T = sub(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_1 = tail(_reg3_mat_comp_9_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_2 = asSInt(_reg3_mat_comp_9_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_3 = add(_reg3_mat_comp_9_T_2, w3.mat_real[21]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_4 = tail(_reg3_mat_comp_9_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_5 = asSInt(_reg3_mat_comp_9_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_6 = sub(_reg3_mat_comp_9_T_5, w3.mat_real[27]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_7 = tail(_reg3_mat_comp_9_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_8 = asSInt(_reg3_mat_comp_9_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_9 = dshr(_reg3_mat_comp_9_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[9] <= _reg3_mat_comp_9_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_15_T = add(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_1 = tail(_reg3_mat_comp_15_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_2 = asSInt(_reg3_mat_comp_15_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_3 = sub(_reg3_mat_comp_15_T_2, w3.mat_comp[21]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_4 = tail(_reg3_mat_comp_15_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_5 = asSInt(_reg3_mat_comp_15_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_6 = sub(_reg3_mat_comp_15_T_5, w3.mat_comp[27]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_7 = tail(_reg3_mat_comp_15_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_8 = asSInt(_reg3_mat_comp_15_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_9 = dshr(_reg3_mat_comp_15_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[15] <= _reg3_mat_comp_15_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_21_T = sub(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_1 = tail(_reg3_mat_comp_21_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_2 = asSInt(_reg3_mat_comp_21_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_3 = sub(_reg3_mat_comp_21_T_2, w3.mat_real[21]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_4 = tail(_reg3_mat_comp_21_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_5 = asSInt(_reg3_mat_comp_21_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_6 = add(_reg3_mat_comp_21_T_5, w3.mat_real[27]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_7 = tail(_reg3_mat_comp_21_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_8 = asSInt(_reg3_mat_comp_21_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_9 = dshr(_reg3_mat_comp_21_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_21_T_10 = add(_reg3_mat_comp_21_T_9, w3.mat_comp[33]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_21_T_11 = tail(_reg3_mat_comp_21_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_21_T_12 = asSInt(_reg3_mat_comp_21_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[21] <= _reg3_mat_comp_21_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_4_T = add(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_1 = tail(_reg3_mat_real_4_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_2 = asSInt(_reg3_mat_real_4_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_3 = add(_reg3_mat_real_4_T_2, w3.mat_real[22]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_4 = tail(_reg3_mat_real_4_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_5 = asSInt(_reg3_mat_real_4_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_6 = add(_reg3_mat_real_4_T_5, w3.mat_real[28]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_7 = tail(_reg3_mat_real_4_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_8 = asSInt(_reg3_mat_real_4_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_9 = dshr(_reg3_mat_real_4_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_4_T_10 = add(w3.mat_real[4], _reg3_mat_real_4_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_4_T_11 = tail(_reg3_mat_real_4_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_4_T_12 = asSInt(_reg3_mat_real_4_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[4] <= _reg3_mat_real_4_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_10_T = sub(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_1 = tail(_reg3_mat_real_10_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_2 = asSInt(_reg3_mat_real_10_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_3 = sub(_reg3_mat_real_10_T_2, w3.mat_comp[22]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_4 = tail(_reg3_mat_real_10_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_5 = asSInt(_reg3_mat_real_10_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_6 = add(_reg3_mat_real_10_T_5, w3.mat_comp[28]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_7 = tail(_reg3_mat_real_10_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_8 = asSInt(_reg3_mat_real_10_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_9 = dshr(_reg3_mat_real_10_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[10] <= _reg3_mat_real_10_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_16_T = add(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_1 = tail(_reg3_mat_real_16_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_2 = asSInt(_reg3_mat_real_16_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_3 = sub(_reg3_mat_real_16_T_2, w3.mat_real[22]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_4 = tail(_reg3_mat_real_16_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_5 = asSInt(_reg3_mat_real_16_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_6 = sub(_reg3_mat_real_16_T_5, w3.mat_real[28]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_7 = tail(_reg3_mat_real_16_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_8 = asSInt(_reg3_mat_real_16_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_9 = dshr(_reg3_mat_real_16_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[16] <= _reg3_mat_real_16_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_22_T = sub(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_1 = tail(_reg3_mat_real_22_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_2 = asSInt(_reg3_mat_real_22_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_3 = add(_reg3_mat_real_22_T_2, w3.mat_comp[22]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_4 = tail(_reg3_mat_real_22_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_5 = asSInt(_reg3_mat_real_22_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_6 = sub(_reg3_mat_real_22_T_5, w3.mat_comp[28]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_7 = tail(_reg3_mat_real_22_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_8 = asSInt(_reg3_mat_real_22_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_9 = dshr(_reg3_mat_real_22_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_22_T_10 = add(_reg3_mat_real_22_T_9, w3.mat_real[34]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_22_T_11 = tail(_reg3_mat_real_22_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_22_T_12 = asSInt(_reg3_mat_real_22_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[22] <= _reg3_mat_real_22_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_4_T = add(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_1 = tail(_reg3_mat_comp_4_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_2 = asSInt(_reg3_mat_comp_4_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_3 = add(_reg3_mat_comp_4_T_2, w3.mat_comp[22]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_4 = tail(_reg3_mat_comp_4_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_5 = asSInt(_reg3_mat_comp_4_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_6 = add(_reg3_mat_comp_4_T_5, w3.mat_comp[28]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_7 = tail(_reg3_mat_comp_4_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_8 = asSInt(_reg3_mat_comp_4_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_9 = dshr(_reg3_mat_comp_4_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_4_T_10 = add(w3.mat_comp[4], _reg3_mat_comp_4_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_4_T_11 = tail(_reg3_mat_comp_4_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_4_T_12 = asSInt(_reg3_mat_comp_4_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[4] <= _reg3_mat_comp_4_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_10_T = sub(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_1 = tail(_reg3_mat_comp_10_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_2 = asSInt(_reg3_mat_comp_10_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_3 = add(_reg3_mat_comp_10_T_2, w3.mat_real[22]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_4 = tail(_reg3_mat_comp_10_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_5 = asSInt(_reg3_mat_comp_10_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_6 = sub(_reg3_mat_comp_10_T_5, w3.mat_real[28]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_7 = tail(_reg3_mat_comp_10_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_8 = asSInt(_reg3_mat_comp_10_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_9 = dshr(_reg3_mat_comp_10_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[10] <= _reg3_mat_comp_10_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_16_T = add(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_1 = tail(_reg3_mat_comp_16_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_2 = asSInt(_reg3_mat_comp_16_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_3 = sub(_reg3_mat_comp_16_T_2, w3.mat_comp[22]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_4 = tail(_reg3_mat_comp_16_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_5 = asSInt(_reg3_mat_comp_16_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_6 = sub(_reg3_mat_comp_16_T_5, w3.mat_comp[28]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_7 = tail(_reg3_mat_comp_16_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_8 = asSInt(_reg3_mat_comp_16_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_9 = dshr(_reg3_mat_comp_16_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[16] <= _reg3_mat_comp_16_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_22_T = sub(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_1 = tail(_reg3_mat_comp_22_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_2 = asSInt(_reg3_mat_comp_22_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_3 = sub(_reg3_mat_comp_22_T_2, w3.mat_real[22]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_4 = tail(_reg3_mat_comp_22_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_5 = asSInt(_reg3_mat_comp_22_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_6 = add(_reg3_mat_comp_22_T_5, w3.mat_real[28]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_7 = tail(_reg3_mat_comp_22_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_8 = asSInt(_reg3_mat_comp_22_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_9 = dshr(_reg3_mat_comp_22_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_22_T_10 = add(_reg3_mat_comp_22_T_9, w3.mat_comp[34]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_22_T_11 = tail(_reg3_mat_comp_22_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_22_T_12 = asSInt(_reg3_mat_comp_22_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[22] <= _reg3_mat_comp_22_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_5_T = add(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_1 = tail(_reg3_mat_real_5_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_2 = asSInt(_reg3_mat_real_5_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_3 = add(_reg3_mat_real_5_T_2, w3.mat_real[23]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_4 = tail(_reg3_mat_real_5_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_5 = asSInt(_reg3_mat_real_5_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_6 = add(_reg3_mat_real_5_T_5, w3.mat_real[29]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_7 = tail(_reg3_mat_real_5_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_8 = asSInt(_reg3_mat_real_5_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_9 = dshr(_reg3_mat_real_5_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_5_T_10 = add(w3.mat_real[5], _reg3_mat_real_5_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_5_T_11 = tail(_reg3_mat_real_5_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_5_T_12 = asSInt(_reg3_mat_real_5_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[5] <= _reg3_mat_real_5_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_11_T = sub(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_1 = tail(_reg3_mat_real_11_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_2 = asSInt(_reg3_mat_real_11_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_3 = sub(_reg3_mat_real_11_T_2, w3.mat_comp[23]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_4 = tail(_reg3_mat_real_11_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_5 = asSInt(_reg3_mat_real_11_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_6 = add(_reg3_mat_real_11_T_5, w3.mat_comp[29]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_7 = tail(_reg3_mat_real_11_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_8 = asSInt(_reg3_mat_real_11_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_9 = dshr(_reg3_mat_real_11_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[11] <= _reg3_mat_real_11_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_17_T = add(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_1 = tail(_reg3_mat_real_17_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_2 = asSInt(_reg3_mat_real_17_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_3 = sub(_reg3_mat_real_17_T_2, w3.mat_real[23]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_4 = tail(_reg3_mat_real_17_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_5 = asSInt(_reg3_mat_real_17_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_6 = sub(_reg3_mat_real_17_T_5, w3.mat_real[29]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_7 = tail(_reg3_mat_real_17_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_8 = asSInt(_reg3_mat_real_17_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_9 = dshr(_reg3_mat_real_17_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[17] <= _reg3_mat_real_17_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_23_T = sub(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_1 = tail(_reg3_mat_real_23_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_2 = asSInt(_reg3_mat_real_23_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_3 = add(_reg3_mat_real_23_T_2, w3.mat_comp[23]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_4 = tail(_reg3_mat_real_23_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_5 = asSInt(_reg3_mat_real_23_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_6 = sub(_reg3_mat_real_23_T_5, w3.mat_comp[29]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_7 = tail(_reg3_mat_real_23_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_8 = asSInt(_reg3_mat_real_23_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_9 = dshr(_reg3_mat_real_23_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_23_T_10 = add(_reg3_mat_real_23_T_9, w3.mat_real[35]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_23_T_11 = tail(_reg3_mat_real_23_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_23_T_12 = asSInt(_reg3_mat_real_23_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[23] <= _reg3_mat_real_23_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_5_T = add(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_1 = tail(_reg3_mat_comp_5_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_2 = asSInt(_reg3_mat_comp_5_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_3 = add(_reg3_mat_comp_5_T_2, w3.mat_comp[23]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_4 = tail(_reg3_mat_comp_5_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_5 = asSInt(_reg3_mat_comp_5_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_6 = add(_reg3_mat_comp_5_T_5, w3.mat_comp[29]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_7 = tail(_reg3_mat_comp_5_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_8 = asSInt(_reg3_mat_comp_5_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_9 = dshr(_reg3_mat_comp_5_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_5_T_10 = add(w3.mat_comp[5], _reg3_mat_comp_5_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_5_T_11 = tail(_reg3_mat_comp_5_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_5_T_12 = asSInt(_reg3_mat_comp_5_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[5] <= _reg3_mat_comp_5_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_11_T = sub(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_1 = tail(_reg3_mat_comp_11_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_2 = asSInt(_reg3_mat_comp_11_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_3 = add(_reg3_mat_comp_11_T_2, w3.mat_real[23]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_4 = tail(_reg3_mat_comp_11_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_5 = asSInt(_reg3_mat_comp_11_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_6 = sub(_reg3_mat_comp_11_T_5, w3.mat_real[29]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_7 = tail(_reg3_mat_comp_11_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_8 = asSInt(_reg3_mat_comp_11_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_9 = dshr(_reg3_mat_comp_11_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[11] <= _reg3_mat_comp_11_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_17_T = add(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_1 = tail(_reg3_mat_comp_17_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_2 = asSInt(_reg3_mat_comp_17_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_3 = sub(_reg3_mat_comp_17_T_2, w3.mat_comp[23]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_4 = tail(_reg3_mat_comp_17_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_5 = asSInt(_reg3_mat_comp_17_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_6 = sub(_reg3_mat_comp_17_T_5, w3.mat_comp[29]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_7 = tail(_reg3_mat_comp_17_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_8 = asSInt(_reg3_mat_comp_17_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_9 = dshr(_reg3_mat_comp_17_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[17] <= _reg3_mat_comp_17_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_23_T = sub(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_1 = tail(_reg3_mat_comp_23_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_2 = asSInt(_reg3_mat_comp_23_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_3 = sub(_reg3_mat_comp_23_T_2, w3.mat_real[23]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_4 = tail(_reg3_mat_comp_23_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_5 = asSInt(_reg3_mat_comp_23_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_6 = add(_reg3_mat_comp_23_T_5, w3.mat_real[29]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_7 = tail(_reg3_mat_comp_23_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_8 = asSInt(_reg3_mat_comp_23_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_9 = dshr(_reg3_mat_comp_23_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_23_T_10 = add(_reg3_mat_comp_23_T_9, w3.mat_comp[35]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_23_T_11 = tail(_reg3_mat_comp_23_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_23_T_12 = asSInt(_reg3_mat_comp_23_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[23] <= _reg3_mat_comp_23_T_12 @[calc6x6.scala 158:37]
    valid_reg[3] <= valid_reg[2] @[calc6x6.scala 179:18]
    io.valid_out <= valid_reg[3] @[calc6x6.scala 180:18]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      real[0].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[0].in_b <= io.input.mat[0] @[calc6x6.scala 186:30]
      io.output.mat[0] <= real[0].result @[calc6x6.scala 187:34]
      real[1].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[1].in_b <= io.input.mat[1] @[calc6x6.scala 186:30]
      io.output.mat[1] <= real[1].result @[calc6x6.scala 187:34]
      real[2].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[2].in_b <= io.input.mat[2] @[calc6x6.scala 186:30]
      io.output.mat[2] <= real[2].result @[calc6x6.scala 187:34]
      real[3].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[3].in_b <= io.input.mat[3] @[calc6x6.scala 186:30]
      io.output.mat[3] <= real[3].result @[calc6x6.scala 187:34]
      real[4].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[4].in_b <= io.input.mat[4] @[calc6x6.scala 186:30]
      io.output.mat[4] <= real[4].result @[calc6x6.scala 187:34]
      real[5].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[5].in_b <= io.input.mat[5] @[calc6x6.scala 186:30]
      io.output.mat[5] <= real[5].result @[calc6x6.scala 187:34]
      real[6].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[6].in_b <= io.input.mat[6] @[calc6x6.scala 186:30]
      io.output.mat[6] <= real[6].result @[calc6x6.scala 187:34]
      real[7].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[7].in_b <= io.input.mat[7] @[calc6x6.scala 186:30]
      io.output.mat[7] <= real[7].result @[calc6x6.scala 187:34]
      real[8].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[8].in_b <= io.input.mat[8] @[calc6x6.scala 186:30]
      io.output.mat[8] <= real[8].result @[calc6x6.scala 187:34]
      real[9].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[9].in_b <= io.input.mat[9] @[calc6x6.scala 186:30]
      io.output.mat[9] <= real[9].result @[calc6x6.scala 187:34]
      real[10].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[10].in_b <= io.input.mat[10] @[calc6x6.scala 186:30]
      io.output.mat[10] <= real[10].result @[calc6x6.scala 187:34]
      real[11].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[11].in_b <= io.input.mat[11] @[calc6x6.scala 186:30]
      io.output.mat[11] <= real[11].result @[calc6x6.scala 187:34]
      real[12].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[12].in_b <= io.input.mat[12] @[calc6x6.scala 186:30]
      io.output.mat[12] <= real[12].result @[calc6x6.scala 187:34]
      real[13].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[13].in_b <= io.input.mat[13] @[calc6x6.scala 186:30]
      io.output.mat[13] <= real[13].result @[calc6x6.scala 187:34]
      real[14].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[14].in_b <= io.input.mat[14] @[calc6x6.scala 186:30]
      io.output.mat[14] <= real[14].result @[calc6x6.scala 187:34]
      real[15].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[15].in_b <= io.input.mat[15] @[calc6x6.scala 186:30]
      io.output.mat[15] <= real[15].result @[calc6x6.scala 187:34]
      io.valid_out <= io.valid_in @[calc6x6.scala 189:26]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_4 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_5 = eq(_T_3, _T_4) @[Conditional.scala 37:30]
      when _T_5 : @[Conditional.scala 39:67]
        real[0].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[0].in_b <= io.input.mat[0] @[calc6x6.scala 196:30]
        real[0].w_a <= io.weight.real[0] @[calc6x6.scala 197:29]
        io.output.mat[0] <= real[0].result @[calc6x6.scala 198:34]
        real[1].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[1].in_b <= io.input.mat[1] @[calc6x6.scala 196:30]
        real[1].w_a <= io.weight.real[1] @[calc6x6.scala 197:29]
        io.output.mat[1] <= real[1].result @[calc6x6.scala 198:34]
        real[2].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[2].in_b <= io.input.mat[2] @[calc6x6.scala 196:30]
        real[2].w_a <= io.weight.real[2] @[calc6x6.scala 197:29]
        io.output.mat[2] <= real[2].result @[calc6x6.scala 198:34]
        real[3].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[3].in_b <= io.input.mat[3] @[calc6x6.scala 196:30]
        real[3].w_a <= io.weight.real[3] @[calc6x6.scala 197:29]
        io.output.mat[3] <= real[3].result @[calc6x6.scala 198:34]
        real[4].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[4].in_b <= io.input.mat[4] @[calc6x6.scala 196:30]
        real[4].w_a <= io.weight.real[4] @[calc6x6.scala 197:29]
        io.output.mat[4] <= real[4].result @[calc6x6.scala 198:34]
        real[5].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[5].in_b <= io.input.mat[5] @[calc6x6.scala 196:30]
        real[5].w_a <= io.weight.real[5] @[calc6x6.scala 197:29]
        io.output.mat[5] <= real[5].result @[calc6x6.scala 198:34]
        real[6].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[6].in_b <= io.input.mat[6] @[calc6x6.scala 196:30]
        real[6].w_a <= io.weight.real[6] @[calc6x6.scala 197:29]
        io.output.mat[6] <= real[6].result @[calc6x6.scala 198:34]
        real[7].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[7].in_b <= io.input.mat[7] @[calc6x6.scala 196:30]
        real[7].w_a <= io.weight.real[7] @[calc6x6.scala 197:29]
        io.output.mat[7] <= real[7].result @[calc6x6.scala 198:34]
        real[8].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[8].in_b <= io.input.mat[8] @[calc6x6.scala 196:30]
        real[8].w_a <= io.weight.real[8] @[calc6x6.scala 197:29]
        io.output.mat[8] <= real[8].result @[calc6x6.scala 198:34]
        real[9].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[9].in_b <= io.input.mat[9] @[calc6x6.scala 196:30]
        real[9].w_a <= io.weight.real[9] @[calc6x6.scala 197:29]
        io.output.mat[9] <= real[9].result @[calc6x6.scala 198:34]
        real[10].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[10].in_b <= io.input.mat[10] @[calc6x6.scala 196:30]
        real[10].w_a <= io.weight.real[10] @[calc6x6.scala 197:29]
        io.output.mat[10] <= real[10].result @[calc6x6.scala 198:34]
        real[11].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[11].in_b <= io.input.mat[11] @[calc6x6.scala 196:30]
        real[11].w_a <= io.weight.real[11] @[calc6x6.scala 197:29]
        io.output.mat[11] <= real[11].result @[calc6x6.scala 198:34]
        real[12].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[12].in_b <= io.input.mat[12] @[calc6x6.scala 196:30]
        real[12].w_a <= io.weight.real[12] @[calc6x6.scala 197:29]
        io.output.mat[12] <= real[12].result @[calc6x6.scala 198:34]
        real[13].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[13].in_b <= io.input.mat[13] @[calc6x6.scala 196:30]
        real[13].w_a <= io.weight.real[13] @[calc6x6.scala 197:29]
        io.output.mat[13] <= real[13].result @[calc6x6.scala 198:34]
        real[14].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[14].in_b <= io.input.mat[14] @[calc6x6.scala 196:30]
        real[14].w_a <= io.weight.real[14] @[calc6x6.scala 197:29]
        io.output.mat[14] <= real[14].result @[calc6x6.scala 198:34]
        real[15].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[15].in_b <= io.input.mat[15] @[calc6x6.scala 196:30]
        real[15].w_a <= io.weight.real[15] @[calc6x6.scala 197:29]
        io.output.mat[15] <= real[15].result @[calc6x6.scala 198:34]
        io.valid_out <= io.valid_in @[calc6x6.scala 201:25]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_6 = asUInt(UInt<2>("h02")) @[Conditional.scala 37:23]
        node _T_7 = asUInt(io.flag) @[Conditional.scala 37:39]
        node _T_8 = eq(_T_6, _T_7) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          node _io_output_mat_0_T = add(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_1 = tail(_io_output_mat_0_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_2 = asSInt(_io_output_mat_0_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_3 = add(_io_output_mat_0_T_2, reg3.mat_real[3]) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_4 = tail(_io_output_mat_0_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_5 = asSInt(_io_output_mat_0_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_6 = add(_io_output_mat_0_T_5, reg3.mat_real[4]) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_7 = tail(_io_output_mat_0_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_8 = asSInt(_io_output_mat_0_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_9 = dshr(_io_output_mat_0_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_0_T_10 = add(reg3.mat_real[0], _io_output_mat_0_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_0_T_11 = tail(_io_output_mat_0_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_0_T_12 = asSInt(_io_output_mat_0_T_11) @[calc6x6.scala 164:61]
          io.output.mat[0] <= _io_output_mat_0_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_1_T = sub(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_1 = tail(_io_output_mat_1_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_2 = asSInt(_io_output_mat_1_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_3 = sub(_io_output_mat_1_T_2, reg3.mat_comp[3]) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_4 = tail(_io_output_mat_1_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_5 = asSInt(_io_output_mat_1_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_6 = add(_io_output_mat_1_T_5, reg3.mat_comp[4]) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_7 = tail(_io_output_mat_1_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_8 = asSInt(_io_output_mat_1_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_9 = dshr(_io_output_mat_1_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[1] <= _io_output_mat_1_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_2_T = add(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_1 = tail(_io_output_mat_2_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_2 = asSInt(_io_output_mat_2_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_3 = sub(_io_output_mat_2_T_2, reg3.mat_real[3]) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_4 = tail(_io_output_mat_2_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_5 = asSInt(_io_output_mat_2_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_6 = sub(_io_output_mat_2_T_5, reg3.mat_real[4]) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_7 = tail(_io_output_mat_2_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_8 = asSInt(_io_output_mat_2_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_9 = dshr(_io_output_mat_2_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[2] <= _io_output_mat_2_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_3_T = sub(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_1 = tail(_io_output_mat_3_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_2 = asSInt(_io_output_mat_3_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_3 = add(_io_output_mat_3_T_2, reg3.mat_comp[3]) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_4 = tail(_io_output_mat_3_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_5 = asSInt(_io_output_mat_3_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_6 = sub(_io_output_mat_3_T_5, reg3.mat_comp[4]) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_7 = tail(_io_output_mat_3_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_8 = asSInt(_io_output_mat_3_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_9 = dshr(_io_output_mat_3_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_3_T_10 = add(_io_output_mat_3_T_9, reg3.mat_real[5]) @[calc6x6.scala 168:136]
          node _io_output_mat_3_T_11 = tail(_io_output_mat_3_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_3_T_12 = asSInt(_io_output_mat_3_T_11) @[calc6x6.scala 168:136]
          io.output.mat[3] <= _io_output_mat_3_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_4_T = add(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_1 = tail(_io_output_mat_4_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_2 = asSInt(_io_output_mat_4_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_3 = add(_io_output_mat_4_T_2, reg3.mat_real[9]) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_4 = tail(_io_output_mat_4_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_5 = asSInt(_io_output_mat_4_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_6 = add(_io_output_mat_4_T_5, reg3.mat_real[10]) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_7 = tail(_io_output_mat_4_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_8 = asSInt(_io_output_mat_4_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_9 = dshr(_io_output_mat_4_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_4_T_10 = add(reg3.mat_real[6], _io_output_mat_4_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_4_T_11 = tail(_io_output_mat_4_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_4_T_12 = asSInt(_io_output_mat_4_T_11) @[calc6x6.scala 164:61]
          io.output.mat[4] <= _io_output_mat_4_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_5_T = sub(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_1 = tail(_io_output_mat_5_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_2 = asSInt(_io_output_mat_5_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_3 = sub(_io_output_mat_5_T_2, reg3.mat_comp[9]) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_4 = tail(_io_output_mat_5_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_5 = asSInt(_io_output_mat_5_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_6 = add(_io_output_mat_5_T_5, reg3.mat_comp[10]) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_7 = tail(_io_output_mat_5_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_8 = asSInt(_io_output_mat_5_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_9 = dshr(_io_output_mat_5_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[5] <= _io_output_mat_5_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_6_T = add(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_1 = tail(_io_output_mat_6_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_2 = asSInt(_io_output_mat_6_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_3 = sub(_io_output_mat_6_T_2, reg3.mat_real[9]) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_4 = tail(_io_output_mat_6_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_5 = asSInt(_io_output_mat_6_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_6 = sub(_io_output_mat_6_T_5, reg3.mat_real[10]) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_7 = tail(_io_output_mat_6_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_8 = asSInt(_io_output_mat_6_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_9 = dshr(_io_output_mat_6_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[6] <= _io_output_mat_6_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_7_T = sub(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_1 = tail(_io_output_mat_7_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_2 = asSInt(_io_output_mat_7_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_3 = add(_io_output_mat_7_T_2, reg3.mat_comp[9]) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_4 = tail(_io_output_mat_7_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_5 = asSInt(_io_output_mat_7_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_6 = sub(_io_output_mat_7_T_5, reg3.mat_comp[10]) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_7 = tail(_io_output_mat_7_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_8 = asSInt(_io_output_mat_7_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_9 = dshr(_io_output_mat_7_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_7_T_10 = add(_io_output_mat_7_T_9, reg3.mat_real[11]) @[calc6x6.scala 168:136]
          node _io_output_mat_7_T_11 = tail(_io_output_mat_7_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_7_T_12 = asSInt(_io_output_mat_7_T_11) @[calc6x6.scala 168:136]
          io.output.mat[7] <= _io_output_mat_7_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_8_T = add(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_1 = tail(_io_output_mat_8_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_2 = asSInt(_io_output_mat_8_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_3 = add(_io_output_mat_8_T_2, reg3.mat_real[15]) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_4 = tail(_io_output_mat_8_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_5 = asSInt(_io_output_mat_8_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_6 = add(_io_output_mat_8_T_5, reg3.mat_real[16]) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_7 = tail(_io_output_mat_8_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_8 = asSInt(_io_output_mat_8_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_9 = dshr(_io_output_mat_8_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_8_T_10 = add(reg3.mat_real[12], _io_output_mat_8_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_8_T_11 = tail(_io_output_mat_8_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_8_T_12 = asSInt(_io_output_mat_8_T_11) @[calc6x6.scala 164:61]
          io.output.mat[8] <= _io_output_mat_8_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_9_T = sub(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_1 = tail(_io_output_mat_9_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_2 = asSInt(_io_output_mat_9_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_3 = sub(_io_output_mat_9_T_2, reg3.mat_comp[15]) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_4 = tail(_io_output_mat_9_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_5 = asSInt(_io_output_mat_9_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_6 = add(_io_output_mat_9_T_5, reg3.mat_comp[16]) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_7 = tail(_io_output_mat_9_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_8 = asSInt(_io_output_mat_9_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_9 = dshr(_io_output_mat_9_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[9] <= _io_output_mat_9_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_10_T = add(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_1 = tail(_io_output_mat_10_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_2 = asSInt(_io_output_mat_10_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_3 = sub(_io_output_mat_10_T_2, reg3.mat_real[15]) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_4 = tail(_io_output_mat_10_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_5 = asSInt(_io_output_mat_10_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_6 = sub(_io_output_mat_10_T_5, reg3.mat_real[16]) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_7 = tail(_io_output_mat_10_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_8 = asSInt(_io_output_mat_10_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_9 = dshr(_io_output_mat_10_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[10] <= _io_output_mat_10_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_11_T = sub(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_1 = tail(_io_output_mat_11_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_2 = asSInt(_io_output_mat_11_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_3 = add(_io_output_mat_11_T_2, reg3.mat_comp[15]) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_4 = tail(_io_output_mat_11_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_5 = asSInt(_io_output_mat_11_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_6 = sub(_io_output_mat_11_T_5, reg3.mat_comp[16]) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_7 = tail(_io_output_mat_11_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_8 = asSInt(_io_output_mat_11_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_9 = dshr(_io_output_mat_11_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_11_T_10 = add(_io_output_mat_11_T_9, reg3.mat_real[17]) @[calc6x6.scala 168:136]
          node _io_output_mat_11_T_11 = tail(_io_output_mat_11_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_11_T_12 = asSInt(_io_output_mat_11_T_11) @[calc6x6.scala 168:136]
          io.output.mat[11] <= _io_output_mat_11_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_12_T = add(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_1 = tail(_io_output_mat_12_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_2 = asSInt(_io_output_mat_12_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_3 = add(_io_output_mat_12_T_2, reg3.mat_real[21]) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_4 = tail(_io_output_mat_12_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_5 = asSInt(_io_output_mat_12_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_6 = add(_io_output_mat_12_T_5, reg3.mat_real[22]) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_7 = tail(_io_output_mat_12_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_8 = asSInt(_io_output_mat_12_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_9 = dshr(_io_output_mat_12_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_12_T_10 = add(reg3.mat_real[18], _io_output_mat_12_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_12_T_11 = tail(_io_output_mat_12_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_12_T_12 = asSInt(_io_output_mat_12_T_11) @[calc6x6.scala 164:61]
          io.output.mat[12] <= _io_output_mat_12_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_13_T = sub(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_1 = tail(_io_output_mat_13_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_2 = asSInt(_io_output_mat_13_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_3 = sub(_io_output_mat_13_T_2, reg3.mat_comp[21]) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_4 = tail(_io_output_mat_13_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_5 = asSInt(_io_output_mat_13_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_6 = add(_io_output_mat_13_T_5, reg3.mat_comp[22]) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_7 = tail(_io_output_mat_13_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_8 = asSInt(_io_output_mat_13_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_9 = dshr(_io_output_mat_13_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[13] <= _io_output_mat_13_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_14_T = add(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_1 = tail(_io_output_mat_14_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_2 = asSInt(_io_output_mat_14_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_3 = sub(_io_output_mat_14_T_2, reg3.mat_real[21]) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_4 = tail(_io_output_mat_14_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_5 = asSInt(_io_output_mat_14_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_6 = sub(_io_output_mat_14_T_5, reg3.mat_real[22]) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_7 = tail(_io_output_mat_14_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_8 = asSInt(_io_output_mat_14_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_9 = dshr(_io_output_mat_14_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[14] <= _io_output_mat_14_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_15_T = sub(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_1 = tail(_io_output_mat_15_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_2 = asSInt(_io_output_mat_15_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_3 = add(_io_output_mat_15_T_2, reg3.mat_comp[21]) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_4 = tail(_io_output_mat_15_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_5 = asSInt(_io_output_mat_15_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_6 = sub(_io_output_mat_15_T_5, reg3.mat_comp[22]) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_7 = tail(_io_output_mat_15_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_8 = asSInt(_io_output_mat_15_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_9 = dshr(_io_output_mat_15_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_15_T_10 = add(_io_output_mat_15_T_9, reg3.mat_real[23]) @[calc6x6.scala 168:136]
          node _io_output_mat_15_T_11 = tail(_io_output_mat_15_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_15_T_12 = asSInt(_io_output_mat_15_T_11) @[calc6x6.scala 168:136]
          io.output.mat[15] <= _io_output_mat_15_T_12 @[calc6x6.scala 168:37]
          real[0].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[0].in_b <= reg2.mat_real[0] @[calc6x6.scala 225:38]
          real[0].w_a <= io.weight.real[0] @[calc6x6.scala 226:37]
          w3.mat_real[0] <= real[0].result @[calc6x6.scala 227:47]
          real[1].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[1].in_b <= reg2.mat_real[1] @[calc6x6.scala 225:38]
          real[1].w_a <= io.weight.real[1] @[calc6x6.scala 226:37]
          w3.mat_real[1] <= real[1].result @[calc6x6.scala 227:47]
          real[2].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[2].in_b <= reg2.mat_real[2] @[calc6x6.scala 225:38]
          real[2].w_a <= io.weight.real[2] @[calc6x6.scala 226:37]
          w3.mat_real[2] <= real[2].result @[calc6x6.scala 227:47]
          comp1[0].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[0].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[0].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[0].w_a <= io.weight.comp1[0] @[calc6x6.scala 257:38]
          comp2[0].w_a <= io.weight.comp2[0] @[calc6x6.scala 258:38]
          comp3[0].w_a <= io.weight.comp3[0] @[calc6x6.scala 259:38]
          node _comp1_0_in_b_T_1 = add(reg2.mat_real[3], reg2.mat_comp[6]) @[calc6x6.scala 261:65]
          node _comp1_0_in_b_T_2 = tail(_comp1_0_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_0_in_b_T_3 = asSInt(_comp1_0_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[0].in_b <= _comp1_0_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[0].in_b <= reg2.mat_real[3] @[calc6x6.scala 262:39]
          comp3[0].in_b <= reg2.mat_comp[6] @[calc6x6.scala 263:39]
          node _w3_mat_real_3_T = sub(comp2[0].result, comp3[0].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_3_T_1 = tail(_w3_mat_real_3_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_3_T_2 = asSInt(_w3_mat_real_3_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[3] <= _w3_mat_real_3_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_3_T = sub(comp1[0].result, comp2[0].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_1 = tail(_w3_mat_comp_3_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_2 = asSInt(_w3_mat_comp_3_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_3 = sub(_w3_mat_comp_3_T_2, comp3[0].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_3_T_4 = tail(_w3_mat_comp_3_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_3_T_5 = asSInt(_w3_mat_comp_3_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[3] <= _w3_mat_comp_3_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_4_T = sub(comp2[0].result, comp3[0].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_4_T_1 = tail(_w3_mat_real_4_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_4_T_2 = asSInt(_w3_mat_real_4_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[4] <= _w3_mat_real_4_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), comp1[0].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_1 = tail(_w3_mat_comp_4_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_2 = asSInt(_w3_mat_comp_4_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_3 = add(_w3_mat_comp_4_T_2, comp2[0].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_4 = tail(_w3_mat_comp_4_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_5 = asSInt(_w3_mat_comp_4_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_6 = add(_w3_mat_comp_4_T_5, comp3[0].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_4_T_7 = tail(_w3_mat_comp_4_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_4_T_8 = asSInt(_w3_mat_comp_4_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[4] <= _w3_mat_comp_4_T_8 @[calc6x6.scala 272:47]
          real[3].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[3].in_b <= reg2.mat_real[5] @[calc6x6.scala 225:38]
          real[3].w_a <= io.weight.real[3] @[calc6x6.scala 226:37]
          w3.mat_real[5] <= real[3].result @[calc6x6.scala 227:47]
          real[4].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[4].in_b <= reg2.mat_real[6] @[calc6x6.scala 225:38]
          real[4].w_a <= io.weight.real[4] @[calc6x6.scala 226:37]
          w3.mat_real[6] <= real[4].result @[calc6x6.scala 227:47]
          real[5].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[5].in_b <= reg2.mat_real[7] @[calc6x6.scala 225:38]
          real[5].w_a <= io.weight.real[5] @[calc6x6.scala 226:37]
          w3.mat_real[7] <= real[5].result @[calc6x6.scala 227:47]
          real[6].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[6].in_b <= reg2.mat_real[8] @[calc6x6.scala 225:38]
          real[6].w_a <= io.weight.real[6] @[calc6x6.scala 226:37]
          w3.mat_real[8] <= real[6].result @[calc6x6.scala 227:47]
          comp1[1].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[1].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[1].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[1].w_a <= io.weight.comp1[1] @[calc6x6.scala 257:38]
          comp2[1].w_a <= io.weight.comp2[1] @[calc6x6.scala 258:38]
          comp3[1].w_a <= io.weight.comp3[1] @[calc6x6.scala 259:38]
          node _comp1_1_in_b_T_1 = add(reg2.mat_real[9], reg2.mat_comp[7]) @[calc6x6.scala 261:65]
          node _comp1_1_in_b_T_2 = tail(_comp1_1_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_1_in_b_T_3 = asSInt(_comp1_1_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[1].in_b <= _comp1_1_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[1].in_b <= reg2.mat_real[9] @[calc6x6.scala 262:39]
          comp3[1].in_b <= reg2.mat_comp[7] @[calc6x6.scala 263:39]
          node _w3_mat_real_9_T = sub(comp2[1].result, comp3[1].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_9_T_1 = tail(_w3_mat_real_9_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_9_T_2 = asSInt(_w3_mat_real_9_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[9] <= _w3_mat_real_9_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_9_T = sub(comp1[1].result, comp2[1].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_1 = tail(_w3_mat_comp_9_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_2 = asSInt(_w3_mat_comp_9_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_3 = sub(_w3_mat_comp_9_T_2, comp3[1].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_9_T_4 = tail(_w3_mat_comp_9_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_9_T_5 = asSInt(_w3_mat_comp_9_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[9] <= _w3_mat_comp_9_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_10_T = sub(comp2[1].result, comp3[1].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_10_T_1 = tail(_w3_mat_real_10_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_10_T_2 = asSInt(_w3_mat_real_10_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[10] <= _w3_mat_real_10_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_10_T = sub(asSInt(UInt<1>("h00")), comp1[1].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_1 = tail(_w3_mat_comp_10_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_2 = asSInt(_w3_mat_comp_10_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_3 = add(_w3_mat_comp_10_T_2, comp2[1].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_4 = tail(_w3_mat_comp_10_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_5 = asSInt(_w3_mat_comp_10_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_6 = add(_w3_mat_comp_10_T_5, comp3[1].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_10_T_7 = tail(_w3_mat_comp_10_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_10_T_8 = asSInt(_w3_mat_comp_10_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[10] <= _w3_mat_comp_10_T_8 @[calc6x6.scala 272:47]
          real[7].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[7].in_b <= reg2.mat_real[11] @[calc6x6.scala 225:38]
          real[7].w_a <= io.weight.real[7] @[calc6x6.scala 226:37]
          w3.mat_real[11] <= real[7].result @[calc6x6.scala 227:47]
          real[8].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[8].in_b <= reg2.mat_real[12] @[calc6x6.scala 225:38]
          real[8].w_a <= io.weight.real[8] @[calc6x6.scala 226:37]
          w3.mat_real[12] <= real[8].result @[calc6x6.scala 227:47]
          real[9].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[9].in_b <= reg2.mat_real[13] @[calc6x6.scala 225:38]
          real[9].w_a <= io.weight.real[9] @[calc6x6.scala 226:37]
          w3.mat_real[13] <= real[9].result @[calc6x6.scala 227:47]
          real[10].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[10].in_b <= reg2.mat_real[14] @[calc6x6.scala 225:38]
          real[10].w_a <= io.weight.real[10] @[calc6x6.scala 226:37]
          w3.mat_real[14] <= real[10].result @[calc6x6.scala 227:47]
          comp1[2].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[2].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[2].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[2].w_a <= io.weight.comp1[2] @[calc6x6.scala 257:38]
          comp2[2].w_a <= io.weight.comp2[2] @[calc6x6.scala 258:38]
          comp3[2].w_a <= io.weight.comp3[2] @[calc6x6.scala 259:38]
          node _comp1_2_in_b_T_1 = add(reg2.mat_real[15], reg2.mat_comp[8]) @[calc6x6.scala 261:65]
          node _comp1_2_in_b_T_2 = tail(_comp1_2_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_2_in_b_T_3 = asSInt(_comp1_2_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[2].in_b <= _comp1_2_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[2].in_b <= reg2.mat_real[15] @[calc6x6.scala 262:39]
          comp3[2].in_b <= reg2.mat_comp[8] @[calc6x6.scala 263:39]
          node _w3_mat_real_15_T = sub(comp2[2].result, comp3[2].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_15_T_1 = tail(_w3_mat_real_15_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_15_T_2 = asSInt(_w3_mat_real_15_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[15] <= _w3_mat_real_15_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_15_T = sub(comp1[2].result, comp2[2].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_1 = tail(_w3_mat_comp_15_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_2 = asSInt(_w3_mat_comp_15_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_3 = sub(_w3_mat_comp_15_T_2, comp3[2].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_15_T_4 = tail(_w3_mat_comp_15_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_15_T_5 = asSInt(_w3_mat_comp_15_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[15] <= _w3_mat_comp_15_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_16_T = sub(comp2[2].result, comp3[2].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_16_T_1 = tail(_w3_mat_real_16_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_16_T_2 = asSInt(_w3_mat_real_16_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[16] <= _w3_mat_real_16_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_16_T = sub(asSInt(UInt<1>("h00")), comp1[2].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_1 = tail(_w3_mat_comp_16_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_2 = asSInt(_w3_mat_comp_16_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_3 = add(_w3_mat_comp_16_T_2, comp2[2].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_4 = tail(_w3_mat_comp_16_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_5 = asSInt(_w3_mat_comp_16_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_6 = add(_w3_mat_comp_16_T_5, comp3[2].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_16_T_7 = tail(_w3_mat_comp_16_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_16_T_8 = asSInt(_w3_mat_comp_16_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[16] <= _w3_mat_comp_16_T_8 @[calc6x6.scala 272:47]
          real[11].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[11].in_b <= reg2.mat_real[17] @[calc6x6.scala 225:38]
          real[11].w_a <= io.weight.real[11] @[calc6x6.scala 226:37]
          w3.mat_real[17] <= real[11].result @[calc6x6.scala 227:47]
          comp1[3].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[3].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[3].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[3].w_a <= io.weight.comp1[3] @[calc6x6.scala 234:38]
          comp2[3].w_a <= io.weight.comp2[3] @[calc6x6.scala 235:38]
          comp3[3].w_a <= io.weight.comp3[3] @[calc6x6.scala 236:38]
          node _comp1_3_in_b_T_1 = add(reg2.mat_real[18], reg2.mat_comp[0]) @[calc6x6.scala 238:65]
          node _comp1_3_in_b_T_2 = tail(_comp1_3_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_3_in_b_T_3 = asSInt(_comp1_3_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[3].in_b <= _comp1_3_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[3].in_b <= reg2.mat_real[18] @[calc6x6.scala 239:39]
          comp3[3].in_b <= reg2.mat_comp[0] @[calc6x6.scala 240:39]
          node _w3_mat_real_18_T = sub(comp2[3].result, comp3[3].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_18_T_1 = tail(_w3_mat_real_18_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_18_T_2 = asSInt(_w3_mat_real_18_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[18] <= _w3_mat_real_18_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_18_T = sub(comp1[3].result, comp2[3].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_1 = tail(_w3_mat_comp_18_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_2 = asSInt(_w3_mat_comp_18_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_3 = sub(_w3_mat_comp_18_T_2, comp3[3].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_18_T_4 = tail(_w3_mat_comp_18_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_18_T_5 = asSInt(_w3_mat_comp_18_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[18] <= _w3_mat_comp_18_T_5 @[calc6x6.scala 242:47]
          comp1[4].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[4].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[4].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[4].w_a <= io.weight.comp1[4] @[calc6x6.scala 234:38]
          comp2[4].w_a <= io.weight.comp2[4] @[calc6x6.scala 235:38]
          comp3[4].w_a <= io.weight.comp3[4] @[calc6x6.scala 236:38]
          node _comp1_4_in_b_T_1 = add(reg2.mat_real[19], reg2.mat_comp[1]) @[calc6x6.scala 238:65]
          node _comp1_4_in_b_T_2 = tail(_comp1_4_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_4_in_b_T_3 = asSInt(_comp1_4_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[4].in_b <= _comp1_4_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[4].in_b <= reg2.mat_real[19] @[calc6x6.scala 239:39]
          comp3[4].in_b <= reg2.mat_comp[1] @[calc6x6.scala 240:39]
          node _w3_mat_real_19_T = sub(comp2[4].result, comp3[4].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_19_T_1 = tail(_w3_mat_real_19_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_19_T_2 = asSInt(_w3_mat_real_19_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[19] <= _w3_mat_real_19_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_19_T = sub(comp1[4].result, comp2[4].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_1 = tail(_w3_mat_comp_19_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_2 = asSInt(_w3_mat_comp_19_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_3 = sub(_w3_mat_comp_19_T_2, comp3[4].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_19_T_4 = tail(_w3_mat_comp_19_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_19_T_5 = asSInt(_w3_mat_comp_19_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[19] <= _w3_mat_comp_19_T_5 @[calc6x6.scala 242:47]
          comp1[5].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[5].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[5].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[5].w_a <= io.weight.comp1[5] @[calc6x6.scala 234:38]
          comp2[5].w_a <= io.weight.comp2[5] @[calc6x6.scala 235:38]
          comp3[5].w_a <= io.weight.comp3[5] @[calc6x6.scala 236:38]
          node _comp1_5_in_b_T_1 = add(reg2.mat_real[20], reg2.mat_comp[2]) @[calc6x6.scala 238:65]
          node _comp1_5_in_b_T_2 = tail(_comp1_5_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_5_in_b_T_3 = asSInt(_comp1_5_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[5].in_b <= _comp1_5_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[5].in_b <= reg2.mat_real[20] @[calc6x6.scala 239:39]
          comp3[5].in_b <= reg2.mat_comp[2] @[calc6x6.scala 240:39]
          node _w3_mat_real_20_T = sub(comp2[5].result, comp3[5].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_20_T_1 = tail(_w3_mat_real_20_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_20_T_2 = asSInt(_w3_mat_real_20_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[20] <= _w3_mat_real_20_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_20_T = sub(comp1[5].result, comp2[5].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_1 = tail(_w3_mat_comp_20_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_2 = asSInt(_w3_mat_comp_20_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_3 = sub(_w3_mat_comp_20_T_2, comp3[5].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_20_T_4 = tail(_w3_mat_comp_20_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_20_T_5 = asSInt(_w3_mat_comp_20_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[20] <= _w3_mat_comp_20_T_5 @[calc6x6.scala 242:47]
          comp1[6].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[6].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[6].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[6].w_a <= io.weight.comp1[6] @[calc6x6.scala 234:38]
          comp2[6].w_a <= io.weight.comp2[6] @[calc6x6.scala 235:38]
          comp3[6].w_a <= io.weight.comp3[6] @[calc6x6.scala 236:38]
          node _comp1_6_in_b_T_1 = add(reg2.mat_real[21], reg2.mat_comp[3]) @[calc6x6.scala 238:65]
          node _comp1_6_in_b_T_2 = tail(_comp1_6_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_6_in_b_T_3 = asSInt(_comp1_6_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[6].in_b <= _comp1_6_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[6].in_b <= reg2.mat_real[21] @[calc6x6.scala 239:39]
          comp3[6].in_b <= reg2.mat_comp[3] @[calc6x6.scala 240:39]
          node _w3_mat_real_21_T = sub(comp2[6].result, comp3[6].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_21_T_1 = tail(_w3_mat_real_21_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_21_T_2 = asSInt(_w3_mat_real_21_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[21] <= _w3_mat_real_21_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_21_T = sub(comp1[6].result, comp2[6].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_1 = tail(_w3_mat_comp_21_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_2 = asSInt(_w3_mat_comp_21_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_3 = sub(_w3_mat_comp_21_T_2, comp3[6].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_21_T_4 = tail(_w3_mat_comp_21_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_21_T_5 = asSInt(_w3_mat_comp_21_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[21] <= _w3_mat_comp_21_T_5 @[calc6x6.scala 242:47]
          comp1[7].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[7].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[7].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[7].w_a <= io.weight.comp1[7] @[calc6x6.scala 234:38]
          comp2[7].w_a <= io.weight.comp2[7] @[calc6x6.scala 235:38]
          comp3[7].w_a <= io.weight.comp3[7] @[calc6x6.scala 236:38]
          node _comp1_7_in_b_T_1 = add(reg2.mat_real[22], reg2.mat_comp[4]) @[calc6x6.scala 238:65]
          node _comp1_7_in_b_T_2 = tail(_comp1_7_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_7_in_b_T_3 = asSInt(_comp1_7_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[7].in_b <= _comp1_7_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[7].in_b <= reg2.mat_real[22] @[calc6x6.scala 239:39]
          comp3[7].in_b <= reg2.mat_comp[4] @[calc6x6.scala 240:39]
          node _w3_mat_real_22_T = sub(comp2[7].result, comp3[7].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_22_T_1 = tail(_w3_mat_real_22_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_22_T_2 = asSInt(_w3_mat_real_22_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[22] <= _w3_mat_real_22_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_22_T = sub(comp1[7].result, comp2[7].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_1 = tail(_w3_mat_comp_22_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_2 = asSInt(_w3_mat_comp_22_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_3 = sub(_w3_mat_comp_22_T_2, comp3[7].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_22_T_4 = tail(_w3_mat_comp_22_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_22_T_5 = asSInt(_w3_mat_comp_22_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[22] <= _w3_mat_comp_22_T_5 @[calc6x6.scala 242:47]
          comp1[8].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[8].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[8].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[8].w_a <= io.weight.comp1[8] @[calc6x6.scala 234:38]
          comp2[8].w_a <= io.weight.comp2[8] @[calc6x6.scala 235:38]
          comp3[8].w_a <= io.weight.comp3[8] @[calc6x6.scala 236:38]
          node _comp1_8_in_b_T_1 = add(reg2.mat_real[23], reg2.mat_comp[5]) @[calc6x6.scala 238:65]
          node _comp1_8_in_b_T_2 = tail(_comp1_8_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_8_in_b_T_3 = asSInt(_comp1_8_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[8].in_b <= _comp1_8_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[8].in_b <= reg2.mat_real[23] @[calc6x6.scala 239:39]
          comp3[8].in_b <= reg2.mat_comp[5] @[calc6x6.scala 240:39]
          node _w3_mat_real_23_T = sub(comp2[8].result, comp3[8].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_23_T_1 = tail(_w3_mat_real_23_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_23_T_2 = asSInt(_w3_mat_real_23_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[23] <= _w3_mat_real_23_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_23_T = sub(comp1[8].result, comp2[8].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_1 = tail(_w3_mat_comp_23_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_2 = asSInt(_w3_mat_comp_23_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_3 = sub(_w3_mat_comp_23_T_2, comp3[8].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_23_T_4 = tail(_w3_mat_comp_23_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_23_T_5 = asSInt(_w3_mat_comp_23_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[23] <= _w3_mat_comp_23_T_5 @[calc6x6.scala 242:47]
          node _w3_mat_real_24_T = sub(comp2[3].result, comp3[3].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_24_T_1 = tail(_w3_mat_real_24_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_24_T_2 = asSInt(_w3_mat_real_24_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[24] <= _w3_mat_real_24_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_24_T = sub(asSInt(UInt<1>("h00")), comp1[3].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_1 = tail(_w3_mat_comp_24_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_2 = asSInt(_w3_mat_comp_24_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_3 = add(_w3_mat_comp_24_T_2, comp2[3].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_4 = tail(_w3_mat_comp_24_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_5 = asSInt(_w3_mat_comp_24_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_6 = add(_w3_mat_comp_24_T_5, comp3[3].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_24_T_7 = tail(_w3_mat_comp_24_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_24_T_8 = asSInt(_w3_mat_comp_24_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[24] <= _w3_mat_comp_24_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_25_T = sub(comp2[4].result, comp3[4].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_25_T_1 = tail(_w3_mat_real_25_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_25_T_2 = asSInt(_w3_mat_real_25_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[25] <= _w3_mat_real_25_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_25_T = sub(asSInt(UInt<1>("h00")), comp1[4].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_1 = tail(_w3_mat_comp_25_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_2 = asSInt(_w3_mat_comp_25_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_3 = add(_w3_mat_comp_25_T_2, comp2[4].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_4 = tail(_w3_mat_comp_25_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_5 = asSInt(_w3_mat_comp_25_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_6 = add(_w3_mat_comp_25_T_5, comp3[4].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_25_T_7 = tail(_w3_mat_comp_25_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_25_T_8 = asSInt(_w3_mat_comp_25_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[25] <= _w3_mat_comp_25_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_26_T = sub(comp2[5].result, comp3[5].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_26_T_1 = tail(_w3_mat_real_26_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_26_T_2 = asSInt(_w3_mat_real_26_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[26] <= _w3_mat_real_26_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_26_T = sub(asSInt(UInt<1>("h00")), comp1[5].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_1 = tail(_w3_mat_comp_26_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_2 = asSInt(_w3_mat_comp_26_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_3 = add(_w3_mat_comp_26_T_2, comp2[5].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_4 = tail(_w3_mat_comp_26_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_5 = asSInt(_w3_mat_comp_26_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_6 = add(_w3_mat_comp_26_T_5, comp3[5].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_26_T_7 = tail(_w3_mat_comp_26_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_26_T_8 = asSInt(_w3_mat_comp_26_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[26] <= _w3_mat_comp_26_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_27_T = sub(comp2[7].result, comp3[7].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_27_T_1 = tail(_w3_mat_real_27_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_27_T_2 = asSInt(_w3_mat_real_27_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[27] <= _w3_mat_real_27_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_27_T = sub(asSInt(UInt<1>("h00")), comp1[7].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_1 = tail(_w3_mat_comp_27_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_2 = asSInt(_w3_mat_comp_27_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_3 = add(_w3_mat_comp_27_T_2, comp2[7].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_4 = tail(_w3_mat_comp_27_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_5 = asSInt(_w3_mat_comp_27_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_6 = add(_w3_mat_comp_27_T_5, comp3[7].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_27_T_7 = tail(_w3_mat_comp_27_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_27_T_8 = asSInt(_w3_mat_comp_27_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[27] <= _w3_mat_comp_27_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_28_T = sub(comp2[6].result, comp3[6].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_28_T_1 = tail(_w3_mat_real_28_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_28_T_2 = asSInt(_w3_mat_real_28_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[28] <= _w3_mat_real_28_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_28_T = sub(asSInt(UInt<1>("h00")), comp1[6].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_1 = tail(_w3_mat_comp_28_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_2 = asSInt(_w3_mat_comp_28_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_3 = add(_w3_mat_comp_28_T_2, comp2[6].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_4 = tail(_w3_mat_comp_28_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_5 = asSInt(_w3_mat_comp_28_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_6 = add(_w3_mat_comp_28_T_5, comp3[6].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_28_T_7 = tail(_w3_mat_comp_28_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_28_T_8 = asSInt(_w3_mat_comp_28_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[28] <= _w3_mat_comp_28_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_29_T = sub(comp2[8].result, comp3[8].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_29_T_1 = tail(_w3_mat_real_29_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_29_T_2 = asSInt(_w3_mat_real_29_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[29] <= _w3_mat_real_29_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_29_T = sub(asSInt(UInt<1>("h00")), comp1[8].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_1 = tail(_w3_mat_comp_29_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_2 = asSInt(_w3_mat_comp_29_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_3 = add(_w3_mat_comp_29_T_2, comp2[8].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_4 = tail(_w3_mat_comp_29_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_5 = asSInt(_w3_mat_comp_29_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_6 = add(_w3_mat_comp_29_T_5, comp3[8].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_29_T_7 = tail(_w3_mat_comp_29_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_29_T_8 = asSInt(_w3_mat_comp_29_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[29] <= _w3_mat_comp_29_T_8 @[calc6x6.scala 250:47]
          real[12].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[12].in_b <= reg2.mat_real[30] @[calc6x6.scala 225:38]
          real[12].w_a <= io.weight.real[12] @[calc6x6.scala 226:37]
          w3.mat_real[30] <= real[12].result @[calc6x6.scala 227:47]
          real[13].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[13].in_b <= reg2.mat_real[31] @[calc6x6.scala 225:38]
          real[13].w_a <= io.weight.real[13] @[calc6x6.scala 226:37]
          w3.mat_real[31] <= real[13].result @[calc6x6.scala 227:47]
          real[14].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[14].in_b <= reg2.mat_real[32] @[calc6x6.scala 225:38]
          real[14].w_a <= io.weight.real[14] @[calc6x6.scala 226:37]
          w3.mat_real[32] <= real[14].result @[calc6x6.scala 227:47]
          comp1[9].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[9].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[9].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[9].w_a <= io.weight.comp1[9] @[calc6x6.scala 257:38]
          comp2[9].w_a <= io.weight.comp2[9] @[calc6x6.scala 258:38]
          comp3[9].w_a <= io.weight.comp3[9] @[calc6x6.scala 259:38]
          node _comp1_9_in_b_T_1 = add(reg2.mat_real[33], reg2.mat_comp[9]) @[calc6x6.scala 261:65]
          node _comp1_9_in_b_T_2 = tail(_comp1_9_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_9_in_b_T_3 = asSInt(_comp1_9_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[9].in_b <= _comp1_9_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[9].in_b <= reg2.mat_real[33] @[calc6x6.scala 262:39]
          comp3[9].in_b <= reg2.mat_comp[9] @[calc6x6.scala 263:39]
          node _w3_mat_real_33_T = sub(comp2[9].result, comp3[9].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_33_T_1 = tail(_w3_mat_real_33_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_33_T_2 = asSInt(_w3_mat_real_33_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[33] <= _w3_mat_real_33_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_33_T = sub(comp1[9].result, comp2[9].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_1 = tail(_w3_mat_comp_33_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_2 = asSInt(_w3_mat_comp_33_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_3 = sub(_w3_mat_comp_33_T_2, comp3[9].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_33_T_4 = tail(_w3_mat_comp_33_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_33_T_5 = asSInt(_w3_mat_comp_33_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[33] <= _w3_mat_comp_33_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_34_T = sub(comp2[9].result, comp3[9].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_34_T_1 = tail(_w3_mat_real_34_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_34_T_2 = asSInt(_w3_mat_real_34_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[34] <= _w3_mat_real_34_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_34_T = sub(asSInt(UInt<1>("h00")), comp1[9].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_1 = tail(_w3_mat_comp_34_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_2 = asSInt(_w3_mat_comp_34_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_3 = add(_w3_mat_comp_34_T_2, comp2[9].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_4 = tail(_w3_mat_comp_34_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_5 = asSInt(_w3_mat_comp_34_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_6 = add(_w3_mat_comp_34_T_5, comp3[9].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_34_T_7 = tail(_w3_mat_comp_34_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_34_T_8 = asSInt(_w3_mat_comp_34_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[34] <= _w3_mat_comp_34_T_8 @[calc6x6.scala 272:47]
          real[15].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[15].in_b <= reg2.mat_real[35] @[calc6x6.scala 225:38]
          real[15].w_a <= io.weight.real[15] @[calc6x6.scala 226:37]
          w3.mat_real[35] <= real[15].result @[calc6x6.scala 227:47]
          skip @[Conditional.scala 39:67]
    
  module DSP48_92 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_92 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_92 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_93 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_93 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_93 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_94 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_94 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_94 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_95 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_95 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_95 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_96 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_96 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_96 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_97 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_97 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_97 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_98 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_98 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_98 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_99 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_99 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_99 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_100 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_100 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_100 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_101 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_101 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_101 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_102 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_102 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_102 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_103 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_103 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_103 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_104 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_104 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_104 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_105 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_105 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_105 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_106 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_106 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_106 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_107 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_107 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_107 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_108 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_108 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_108 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_109 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_109 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_109 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_110 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_110 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_110 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_111 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_111 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_111 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_112 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_112 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_112 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_113 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_113 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_113 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_114 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_114 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_114 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_115 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_115 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_115 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_116 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_116 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_116 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_117 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_117 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_117 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_118 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_118 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_118 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_119 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_119 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_119 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_120 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_120 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_120 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_121 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_121 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_121 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_122 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_122 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_122 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_123 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_123 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_123 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_124 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_124 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_124 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_125 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_125 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_125 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_126 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_126 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_126 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_127 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_127 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_127 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_128 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_128 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_128 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_129 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_129 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_129 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_130 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_130 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_130 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_131 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_131 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_131 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_132 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_132 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_132 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_133 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_133 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_133 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_134 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_134 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_134 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_135 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_135 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_135 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_136 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_136 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_136 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_137 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_137 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_137 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module Calc6x6_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip input : {mat : SInt<16>[36]}, flip flag : UInt<2>, flip weight : {real : SInt<18>[16], comp1 : SInt<18>[10], comp2 : SInt<18>[10], comp3 : SInt<18>[10]}, output : {mat : SInt<37>[16]}, flip valid_in : UInt<1>, valid_out : UInt<1>}
    
    inst Core of Core_92 @[calc6x6.scala 64:43]
    Core.clock <= clock
    Core.reset <= reset
    inst Core_1 of Core_93 @[calc6x6.scala 64:43]
    Core_1.clock <= clock
    Core_1.reset <= reset
    inst Core_2 of Core_94 @[calc6x6.scala 64:43]
    Core_2.clock <= clock
    Core_2.reset <= reset
    inst Core_3 of Core_95 @[calc6x6.scala 64:43]
    Core_3.clock <= clock
    Core_3.reset <= reset
    inst Core_4 of Core_96 @[calc6x6.scala 64:43]
    Core_4.clock <= clock
    Core_4.reset <= reset
    inst Core_5 of Core_97 @[calc6x6.scala 64:43]
    Core_5.clock <= clock
    Core_5.reset <= reset
    inst Core_6 of Core_98 @[calc6x6.scala 64:43]
    Core_6.clock <= clock
    Core_6.reset <= reset
    inst Core_7 of Core_99 @[calc6x6.scala 64:43]
    Core_7.clock <= clock
    Core_7.reset <= reset
    inst Core_8 of Core_100 @[calc6x6.scala 64:43]
    Core_8.clock <= clock
    Core_8.reset <= reset
    inst Core_9 of Core_101 @[calc6x6.scala 64:43]
    Core_9.clock <= clock
    Core_9.reset <= reset
    inst Core_10 of Core_102 @[calc6x6.scala 64:43]
    Core_10.clock <= clock
    Core_10.reset <= reset
    inst Core_11 of Core_103 @[calc6x6.scala 64:43]
    Core_11.clock <= clock
    Core_11.reset <= reset
    inst Core_12 of Core_104 @[calc6x6.scala 64:43]
    Core_12.clock <= clock
    Core_12.reset <= reset
    inst Core_13 of Core_105 @[calc6x6.scala 64:43]
    Core_13.clock <= clock
    Core_13.reset <= reset
    inst Core_14 of Core_106 @[calc6x6.scala 64:43]
    Core_14.clock <= clock
    Core_14.reset <= reset
    inst Core_15 of Core_107 @[calc6x6.scala 64:43]
    Core_15.clock <= clock
    Core_15.reset <= reset
    wire real : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[16] @[calc6x6.scala 64:23]
    real[0].result <= Core.io.result @[calc6x6.scala 64:23]
    Core.io.flag <= real[0].flag @[calc6x6.scala 64:23]
    Core.io.in_b <= real[0].in_b @[calc6x6.scala 64:23]
    Core.io.w_a <= real[0].w_a @[calc6x6.scala 64:23]
    real[1].result <= Core_1.io.result @[calc6x6.scala 64:23]
    Core_1.io.flag <= real[1].flag @[calc6x6.scala 64:23]
    Core_1.io.in_b <= real[1].in_b @[calc6x6.scala 64:23]
    Core_1.io.w_a <= real[1].w_a @[calc6x6.scala 64:23]
    real[2].result <= Core_2.io.result @[calc6x6.scala 64:23]
    Core_2.io.flag <= real[2].flag @[calc6x6.scala 64:23]
    Core_2.io.in_b <= real[2].in_b @[calc6x6.scala 64:23]
    Core_2.io.w_a <= real[2].w_a @[calc6x6.scala 64:23]
    real[3].result <= Core_3.io.result @[calc6x6.scala 64:23]
    Core_3.io.flag <= real[3].flag @[calc6x6.scala 64:23]
    Core_3.io.in_b <= real[3].in_b @[calc6x6.scala 64:23]
    Core_3.io.w_a <= real[3].w_a @[calc6x6.scala 64:23]
    real[4].result <= Core_4.io.result @[calc6x6.scala 64:23]
    Core_4.io.flag <= real[4].flag @[calc6x6.scala 64:23]
    Core_4.io.in_b <= real[4].in_b @[calc6x6.scala 64:23]
    Core_4.io.w_a <= real[4].w_a @[calc6x6.scala 64:23]
    real[5].result <= Core_5.io.result @[calc6x6.scala 64:23]
    Core_5.io.flag <= real[5].flag @[calc6x6.scala 64:23]
    Core_5.io.in_b <= real[5].in_b @[calc6x6.scala 64:23]
    Core_5.io.w_a <= real[5].w_a @[calc6x6.scala 64:23]
    real[6].result <= Core_6.io.result @[calc6x6.scala 64:23]
    Core_6.io.flag <= real[6].flag @[calc6x6.scala 64:23]
    Core_6.io.in_b <= real[6].in_b @[calc6x6.scala 64:23]
    Core_6.io.w_a <= real[6].w_a @[calc6x6.scala 64:23]
    real[7].result <= Core_7.io.result @[calc6x6.scala 64:23]
    Core_7.io.flag <= real[7].flag @[calc6x6.scala 64:23]
    Core_7.io.in_b <= real[7].in_b @[calc6x6.scala 64:23]
    Core_7.io.w_a <= real[7].w_a @[calc6x6.scala 64:23]
    real[8].result <= Core_8.io.result @[calc6x6.scala 64:23]
    Core_8.io.flag <= real[8].flag @[calc6x6.scala 64:23]
    Core_8.io.in_b <= real[8].in_b @[calc6x6.scala 64:23]
    Core_8.io.w_a <= real[8].w_a @[calc6x6.scala 64:23]
    real[9].result <= Core_9.io.result @[calc6x6.scala 64:23]
    Core_9.io.flag <= real[9].flag @[calc6x6.scala 64:23]
    Core_9.io.in_b <= real[9].in_b @[calc6x6.scala 64:23]
    Core_9.io.w_a <= real[9].w_a @[calc6x6.scala 64:23]
    real[10].result <= Core_10.io.result @[calc6x6.scala 64:23]
    Core_10.io.flag <= real[10].flag @[calc6x6.scala 64:23]
    Core_10.io.in_b <= real[10].in_b @[calc6x6.scala 64:23]
    Core_10.io.w_a <= real[10].w_a @[calc6x6.scala 64:23]
    real[11].result <= Core_11.io.result @[calc6x6.scala 64:23]
    Core_11.io.flag <= real[11].flag @[calc6x6.scala 64:23]
    Core_11.io.in_b <= real[11].in_b @[calc6x6.scala 64:23]
    Core_11.io.w_a <= real[11].w_a @[calc6x6.scala 64:23]
    real[12].result <= Core_12.io.result @[calc6x6.scala 64:23]
    Core_12.io.flag <= real[12].flag @[calc6x6.scala 64:23]
    Core_12.io.in_b <= real[12].in_b @[calc6x6.scala 64:23]
    Core_12.io.w_a <= real[12].w_a @[calc6x6.scala 64:23]
    real[13].result <= Core_13.io.result @[calc6x6.scala 64:23]
    Core_13.io.flag <= real[13].flag @[calc6x6.scala 64:23]
    Core_13.io.in_b <= real[13].in_b @[calc6x6.scala 64:23]
    Core_13.io.w_a <= real[13].w_a @[calc6x6.scala 64:23]
    real[14].result <= Core_14.io.result @[calc6x6.scala 64:23]
    Core_14.io.flag <= real[14].flag @[calc6x6.scala 64:23]
    Core_14.io.in_b <= real[14].in_b @[calc6x6.scala 64:23]
    Core_14.io.w_a <= real[14].w_a @[calc6x6.scala 64:23]
    real[15].result <= Core_15.io.result @[calc6x6.scala 64:23]
    Core_15.io.flag <= real[15].flag @[calc6x6.scala 64:23]
    Core_15.io.in_b <= real[15].in_b @[calc6x6.scala 64:23]
    Core_15.io.w_a <= real[15].w_a @[calc6x6.scala 64:23]
    wire _real_0_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[0].flag <= _real_0_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_0_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_0_w_a_WIRE <= _real_0_w_a_T @[calc6x6.scala 67:36]
    real[0].w_a <= _real_0_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_0_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_0_in_b_WIRE <= _real_0_in_b_T @[calc6x6.scala 68:37]
    real[0].in_b <= _real_0_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_1_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[1].flag <= _real_1_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_1_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_1_w_a_WIRE <= _real_1_w_a_T @[calc6x6.scala 67:36]
    real[1].w_a <= _real_1_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_1_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_1_in_b_WIRE <= _real_1_in_b_T @[calc6x6.scala 68:37]
    real[1].in_b <= _real_1_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_2_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[2].flag <= _real_2_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_2_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_2_w_a_WIRE <= _real_2_w_a_T @[calc6x6.scala 67:36]
    real[2].w_a <= _real_2_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_2_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_2_in_b_WIRE <= _real_2_in_b_T @[calc6x6.scala 68:37]
    real[2].in_b <= _real_2_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_3_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[3].flag <= _real_3_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_3_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_3_w_a_WIRE <= _real_3_w_a_T @[calc6x6.scala 67:36]
    real[3].w_a <= _real_3_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_3_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_3_in_b_WIRE <= _real_3_in_b_T @[calc6x6.scala 68:37]
    real[3].in_b <= _real_3_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_4_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[4].flag <= _real_4_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_4_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_4_w_a_WIRE <= _real_4_w_a_T @[calc6x6.scala 67:36]
    real[4].w_a <= _real_4_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_4_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_4_in_b_WIRE <= _real_4_in_b_T @[calc6x6.scala 68:37]
    real[4].in_b <= _real_4_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_5_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[5].flag <= _real_5_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_5_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_5_w_a_WIRE <= _real_5_w_a_T @[calc6x6.scala 67:36]
    real[5].w_a <= _real_5_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_5_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_5_in_b_WIRE <= _real_5_in_b_T @[calc6x6.scala 68:37]
    real[5].in_b <= _real_5_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_6_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[6].flag <= _real_6_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_6_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_6_w_a_WIRE <= _real_6_w_a_T @[calc6x6.scala 67:36]
    real[6].w_a <= _real_6_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_6_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_6_in_b_WIRE <= _real_6_in_b_T @[calc6x6.scala 68:37]
    real[6].in_b <= _real_6_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_7_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[7].flag <= _real_7_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_7_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_7_w_a_WIRE <= _real_7_w_a_T @[calc6x6.scala 67:36]
    real[7].w_a <= _real_7_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_7_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_7_in_b_WIRE <= _real_7_in_b_T @[calc6x6.scala 68:37]
    real[7].in_b <= _real_7_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_8_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[8].flag <= _real_8_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_8_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_8_w_a_WIRE <= _real_8_w_a_T @[calc6x6.scala 67:36]
    real[8].w_a <= _real_8_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_8_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_8_in_b_WIRE <= _real_8_in_b_T @[calc6x6.scala 68:37]
    real[8].in_b <= _real_8_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_9_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[9].flag <= _real_9_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_9_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_9_w_a_WIRE <= _real_9_w_a_T @[calc6x6.scala 67:36]
    real[9].w_a <= _real_9_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_9_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_9_in_b_WIRE <= _real_9_in_b_T @[calc6x6.scala 68:37]
    real[9].in_b <= _real_9_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_10_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_10_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[10].flag <= _real_10_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_10_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_10_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_10_w_a_WIRE <= _real_10_w_a_T @[calc6x6.scala 67:36]
    real[10].w_a <= _real_10_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_10_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_10_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_10_in_b_WIRE <= _real_10_in_b_T @[calc6x6.scala 68:37]
    real[10].in_b <= _real_10_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_11_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_11_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[11].flag <= _real_11_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_11_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_11_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_11_w_a_WIRE <= _real_11_w_a_T @[calc6x6.scala 67:36]
    real[11].w_a <= _real_11_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_11_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_11_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_11_in_b_WIRE <= _real_11_in_b_T @[calc6x6.scala 68:37]
    real[11].in_b <= _real_11_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_12_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_12_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[12].flag <= _real_12_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_12_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_12_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_12_w_a_WIRE <= _real_12_w_a_T @[calc6x6.scala 67:36]
    real[12].w_a <= _real_12_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_12_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_12_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_12_in_b_WIRE <= _real_12_in_b_T @[calc6x6.scala 68:37]
    real[12].in_b <= _real_12_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_13_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_13_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[13].flag <= _real_13_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_13_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_13_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_13_w_a_WIRE <= _real_13_w_a_T @[calc6x6.scala 67:36]
    real[13].w_a <= _real_13_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_13_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_13_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_13_in_b_WIRE <= _real_13_in_b_T @[calc6x6.scala 68:37]
    real[13].in_b <= _real_13_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_14_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_14_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[14].flag <= _real_14_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_14_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_14_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_14_w_a_WIRE <= _real_14_w_a_T @[calc6x6.scala 67:36]
    real[14].w_a <= _real_14_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_14_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_14_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_14_in_b_WIRE <= _real_14_in_b_T @[calc6x6.scala 68:37]
    real[14].in_b <= _real_14_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_15_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_15_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[15].flag <= _real_15_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_15_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_15_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_15_w_a_WIRE <= _real_15_w_a_T @[calc6x6.scala 67:36]
    real[15].w_a <= _real_15_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_15_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_15_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_15_in_b_WIRE <= _real_15_in_b_T @[calc6x6.scala 68:37]
    real[15].in_b <= _real_15_in_b_WIRE @[calc6x6.scala 68:22]
    inst Core_16 of Core_108 @[calc6x6.scala 71:44]
    Core_16.clock <= clock
    Core_16.reset <= reset
    inst Core_17 of Core_109 @[calc6x6.scala 71:44]
    Core_17.clock <= clock
    Core_17.reset <= reset
    inst Core_18 of Core_110 @[calc6x6.scala 71:44]
    Core_18.clock <= clock
    Core_18.reset <= reset
    inst Core_19 of Core_111 @[calc6x6.scala 71:44]
    Core_19.clock <= clock
    Core_19.reset <= reset
    inst Core_20 of Core_112 @[calc6x6.scala 71:44]
    Core_20.clock <= clock
    Core_20.reset <= reset
    inst Core_21 of Core_113 @[calc6x6.scala 71:44]
    Core_21.clock <= clock
    Core_21.reset <= reset
    inst Core_22 of Core_114 @[calc6x6.scala 71:44]
    Core_22.clock <= clock
    Core_22.reset <= reset
    inst Core_23 of Core_115 @[calc6x6.scala 71:44]
    Core_23.clock <= clock
    Core_23.reset <= reset
    inst Core_24 of Core_116 @[calc6x6.scala 71:44]
    Core_24.clock <= clock
    Core_24.reset <= reset
    inst Core_25 of Core_117 @[calc6x6.scala 71:44]
    Core_25.clock <= clock
    Core_25.reset <= reset
    wire comp1 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 71:24]
    comp1[0].result <= Core_16.io.result @[calc6x6.scala 71:24]
    Core_16.io.flag <= comp1[0].flag @[calc6x6.scala 71:24]
    Core_16.io.in_b <= comp1[0].in_b @[calc6x6.scala 71:24]
    Core_16.io.w_a <= comp1[0].w_a @[calc6x6.scala 71:24]
    comp1[1].result <= Core_17.io.result @[calc6x6.scala 71:24]
    Core_17.io.flag <= comp1[1].flag @[calc6x6.scala 71:24]
    Core_17.io.in_b <= comp1[1].in_b @[calc6x6.scala 71:24]
    Core_17.io.w_a <= comp1[1].w_a @[calc6x6.scala 71:24]
    comp1[2].result <= Core_18.io.result @[calc6x6.scala 71:24]
    Core_18.io.flag <= comp1[2].flag @[calc6x6.scala 71:24]
    Core_18.io.in_b <= comp1[2].in_b @[calc6x6.scala 71:24]
    Core_18.io.w_a <= comp1[2].w_a @[calc6x6.scala 71:24]
    comp1[3].result <= Core_19.io.result @[calc6x6.scala 71:24]
    Core_19.io.flag <= comp1[3].flag @[calc6x6.scala 71:24]
    Core_19.io.in_b <= comp1[3].in_b @[calc6x6.scala 71:24]
    Core_19.io.w_a <= comp1[3].w_a @[calc6x6.scala 71:24]
    comp1[4].result <= Core_20.io.result @[calc6x6.scala 71:24]
    Core_20.io.flag <= comp1[4].flag @[calc6x6.scala 71:24]
    Core_20.io.in_b <= comp1[4].in_b @[calc6x6.scala 71:24]
    Core_20.io.w_a <= comp1[4].w_a @[calc6x6.scala 71:24]
    comp1[5].result <= Core_21.io.result @[calc6x6.scala 71:24]
    Core_21.io.flag <= comp1[5].flag @[calc6x6.scala 71:24]
    Core_21.io.in_b <= comp1[5].in_b @[calc6x6.scala 71:24]
    Core_21.io.w_a <= comp1[5].w_a @[calc6x6.scala 71:24]
    comp1[6].result <= Core_22.io.result @[calc6x6.scala 71:24]
    Core_22.io.flag <= comp1[6].flag @[calc6x6.scala 71:24]
    Core_22.io.in_b <= comp1[6].in_b @[calc6x6.scala 71:24]
    Core_22.io.w_a <= comp1[6].w_a @[calc6x6.scala 71:24]
    comp1[7].result <= Core_23.io.result @[calc6x6.scala 71:24]
    Core_23.io.flag <= comp1[7].flag @[calc6x6.scala 71:24]
    Core_23.io.in_b <= comp1[7].in_b @[calc6x6.scala 71:24]
    Core_23.io.w_a <= comp1[7].w_a @[calc6x6.scala 71:24]
    comp1[8].result <= Core_24.io.result @[calc6x6.scala 71:24]
    Core_24.io.flag <= comp1[8].flag @[calc6x6.scala 71:24]
    Core_24.io.in_b <= comp1[8].in_b @[calc6x6.scala 71:24]
    Core_24.io.w_a <= comp1[8].w_a @[calc6x6.scala 71:24]
    comp1[9].result <= Core_25.io.result @[calc6x6.scala 71:24]
    Core_25.io.flag <= comp1[9].flag @[calc6x6.scala 71:24]
    Core_25.io.in_b <= comp1[9].in_b @[calc6x6.scala 71:24]
    Core_25.io.w_a <= comp1[9].w_a @[calc6x6.scala 71:24]
    inst Core_26 of Core_118 @[calc6x6.scala 72:44]
    Core_26.clock <= clock
    Core_26.reset <= reset
    inst Core_27 of Core_119 @[calc6x6.scala 72:44]
    Core_27.clock <= clock
    Core_27.reset <= reset
    inst Core_28 of Core_120 @[calc6x6.scala 72:44]
    Core_28.clock <= clock
    Core_28.reset <= reset
    inst Core_29 of Core_121 @[calc6x6.scala 72:44]
    Core_29.clock <= clock
    Core_29.reset <= reset
    inst Core_30 of Core_122 @[calc6x6.scala 72:44]
    Core_30.clock <= clock
    Core_30.reset <= reset
    inst Core_31 of Core_123 @[calc6x6.scala 72:44]
    Core_31.clock <= clock
    Core_31.reset <= reset
    inst Core_32 of Core_124 @[calc6x6.scala 72:44]
    Core_32.clock <= clock
    Core_32.reset <= reset
    inst Core_33 of Core_125 @[calc6x6.scala 72:44]
    Core_33.clock <= clock
    Core_33.reset <= reset
    inst Core_34 of Core_126 @[calc6x6.scala 72:44]
    Core_34.clock <= clock
    Core_34.reset <= reset
    inst Core_35 of Core_127 @[calc6x6.scala 72:44]
    Core_35.clock <= clock
    Core_35.reset <= reset
    wire comp2 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 72:24]
    comp2[0].result <= Core_26.io.result @[calc6x6.scala 72:24]
    Core_26.io.flag <= comp2[0].flag @[calc6x6.scala 72:24]
    Core_26.io.in_b <= comp2[0].in_b @[calc6x6.scala 72:24]
    Core_26.io.w_a <= comp2[0].w_a @[calc6x6.scala 72:24]
    comp2[1].result <= Core_27.io.result @[calc6x6.scala 72:24]
    Core_27.io.flag <= comp2[1].flag @[calc6x6.scala 72:24]
    Core_27.io.in_b <= comp2[1].in_b @[calc6x6.scala 72:24]
    Core_27.io.w_a <= comp2[1].w_a @[calc6x6.scala 72:24]
    comp2[2].result <= Core_28.io.result @[calc6x6.scala 72:24]
    Core_28.io.flag <= comp2[2].flag @[calc6x6.scala 72:24]
    Core_28.io.in_b <= comp2[2].in_b @[calc6x6.scala 72:24]
    Core_28.io.w_a <= comp2[2].w_a @[calc6x6.scala 72:24]
    comp2[3].result <= Core_29.io.result @[calc6x6.scala 72:24]
    Core_29.io.flag <= comp2[3].flag @[calc6x6.scala 72:24]
    Core_29.io.in_b <= comp2[3].in_b @[calc6x6.scala 72:24]
    Core_29.io.w_a <= comp2[3].w_a @[calc6x6.scala 72:24]
    comp2[4].result <= Core_30.io.result @[calc6x6.scala 72:24]
    Core_30.io.flag <= comp2[4].flag @[calc6x6.scala 72:24]
    Core_30.io.in_b <= comp2[4].in_b @[calc6x6.scala 72:24]
    Core_30.io.w_a <= comp2[4].w_a @[calc6x6.scala 72:24]
    comp2[5].result <= Core_31.io.result @[calc6x6.scala 72:24]
    Core_31.io.flag <= comp2[5].flag @[calc6x6.scala 72:24]
    Core_31.io.in_b <= comp2[5].in_b @[calc6x6.scala 72:24]
    Core_31.io.w_a <= comp2[5].w_a @[calc6x6.scala 72:24]
    comp2[6].result <= Core_32.io.result @[calc6x6.scala 72:24]
    Core_32.io.flag <= comp2[6].flag @[calc6x6.scala 72:24]
    Core_32.io.in_b <= comp2[6].in_b @[calc6x6.scala 72:24]
    Core_32.io.w_a <= comp2[6].w_a @[calc6x6.scala 72:24]
    comp2[7].result <= Core_33.io.result @[calc6x6.scala 72:24]
    Core_33.io.flag <= comp2[7].flag @[calc6x6.scala 72:24]
    Core_33.io.in_b <= comp2[7].in_b @[calc6x6.scala 72:24]
    Core_33.io.w_a <= comp2[7].w_a @[calc6x6.scala 72:24]
    comp2[8].result <= Core_34.io.result @[calc6x6.scala 72:24]
    Core_34.io.flag <= comp2[8].flag @[calc6x6.scala 72:24]
    Core_34.io.in_b <= comp2[8].in_b @[calc6x6.scala 72:24]
    Core_34.io.w_a <= comp2[8].w_a @[calc6x6.scala 72:24]
    comp2[9].result <= Core_35.io.result @[calc6x6.scala 72:24]
    Core_35.io.flag <= comp2[9].flag @[calc6x6.scala 72:24]
    Core_35.io.in_b <= comp2[9].in_b @[calc6x6.scala 72:24]
    Core_35.io.w_a <= comp2[9].w_a @[calc6x6.scala 72:24]
    inst Core_36 of Core_128 @[calc6x6.scala 73:44]
    Core_36.clock <= clock
    Core_36.reset <= reset
    inst Core_37 of Core_129 @[calc6x6.scala 73:44]
    Core_37.clock <= clock
    Core_37.reset <= reset
    inst Core_38 of Core_130 @[calc6x6.scala 73:44]
    Core_38.clock <= clock
    Core_38.reset <= reset
    inst Core_39 of Core_131 @[calc6x6.scala 73:44]
    Core_39.clock <= clock
    Core_39.reset <= reset
    inst Core_40 of Core_132 @[calc6x6.scala 73:44]
    Core_40.clock <= clock
    Core_40.reset <= reset
    inst Core_41 of Core_133 @[calc6x6.scala 73:44]
    Core_41.clock <= clock
    Core_41.reset <= reset
    inst Core_42 of Core_134 @[calc6x6.scala 73:44]
    Core_42.clock <= clock
    Core_42.reset <= reset
    inst Core_43 of Core_135 @[calc6x6.scala 73:44]
    Core_43.clock <= clock
    Core_43.reset <= reset
    inst Core_44 of Core_136 @[calc6x6.scala 73:44]
    Core_44.clock <= clock
    Core_44.reset <= reset
    inst Core_45 of Core_137 @[calc6x6.scala 73:44]
    Core_45.clock <= clock
    Core_45.reset <= reset
    wire comp3 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 73:24]
    comp3[0].result <= Core_36.io.result @[calc6x6.scala 73:24]
    Core_36.io.flag <= comp3[0].flag @[calc6x6.scala 73:24]
    Core_36.io.in_b <= comp3[0].in_b @[calc6x6.scala 73:24]
    Core_36.io.w_a <= comp3[0].w_a @[calc6x6.scala 73:24]
    comp3[1].result <= Core_37.io.result @[calc6x6.scala 73:24]
    Core_37.io.flag <= comp3[1].flag @[calc6x6.scala 73:24]
    Core_37.io.in_b <= comp3[1].in_b @[calc6x6.scala 73:24]
    Core_37.io.w_a <= comp3[1].w_a @[calc6x6.scala 73:24]
    comp3[2].result <= Core_38.io.result @[calc6x6.scala 73:24]
    Core_38.io.flag <= comp3[2].flag @[calc6x6.scala 73:24]
    Core_38.io.in_b <= comp3[2].in_b @[calc6x6.scala 73:24]
    Core_38.io.w_a <= comp3[2].w_a @[calc6x6.scala 73:24]
    comp3[3].result <= Core_39.io.result @[calc6x6.scala 73:24]
    Core_39.io.flag <= comp3[3].flag @[calc6x6.scala 73:24]
    Core_39.io.in_b <= comp3[3].in_b @[calc6x6.scala 73:24]
    Core_39.io.w_a <= comp3[3].w_a @[calc6x6.scala 73:24]
    comp3[4].result <= Core_40.io.result @[calc6x6.scala 73:24]
    Core_40.io.flag <= comp3[4].flag @[calc6x6.scala 73:24]
    Core_40.io.in_b <= comp3[4].in_b @[calc6x6.scala 73:24]
    Core_40.io.w_a <= comp3[4].w_a @[calc6x6.scala 73:24]
    comp3[5].result <= Core_41.io.result @[calc6x6.scala 73:24]
    Core_41.io.flag <= comp3[5].flag @[calc6x6.scala 73:24]
    Core_41.io.in_b <= comp3[5].in_b @[calc6x6.scala 73:24]
    Core_41.io.w_a <= comp3[5].w_a @[calc6x6.scala 73:24]
    comp3[6].result <= Core_42.io.result @[calc6x6.scala 73:24]
    Core_42.io.flag <= comp3[6].flag @[calc6x6.scala 73:24]
    Core_42.io.in_b <= comp3[6].in_b @[calc6x6.scala 73:24]
    Core_42.io.w_a <= comp3[6].w_a @[calc6x6.scala 73:24]
    comp3[7].result <= Core_43.io.result @[calc6x6.scala 73:24]
    Core_43.io.flag <= comp3[7].flag @[calc6x6.scala 73:24]
    Core_43.io.in_b <= comp3[7].in_b @[calc6x6.scala 73:24]
    Core_43.io.w_a <= comp3[7].w_a @[calc6x6.scala 73:24]
    comp3[8].result <= Core_44.io.result @[calc6x6.scala 73:24]
    Core_44.io.flag <= comp3[8].flag @[calc6x6.scala 73:24]
    Core_44.io.in_b <= comp3[8].in_b @[calc6x6.scala 73:24]
    Core_44.io.w_a <= comp3[8].w_a @[calc6x6.scala 73:24]
    comp3[9].result <= Core_45.io.result @[calc6x6.scala 73:24]
    Core_45.io.flag <= comp3[9].flag @[calc6x6.scala 73:24]
    Core_45.io.in_b <= comp3[9].in_b @[calc6x6.scala 73:24]
    Core_45.io.w_a <= comp3[9].w_a @[calc6x6.scala 73:24]
    wire _comp1_0_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[0].flag <= _comp1_0_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_0_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_0_w_a_WIRE <= _comp1_0_w_a_T @[calc6x6.scala 78:37]
    comp1[0].w_a <= _comp1_0_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_0_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_0_in_b_WIRE <= _comp1_0_in_b_T @[calc6x6.scala 79:38]
    comp1[0].in_b <= _comp1_0_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_0_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[0].flag <= _comp2_0_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_0_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_0_w_a_WIRE <= _comp2_0_w_a_T @[calc6x6.scala 81:37]
    comp2[0].w_a <= _comp2_0_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_0_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_0_in_b_WIRE <= _comp2_0_in_b_T @[calc6x6.scala 82:38]
    comp2[0].in_b <= _comp2_0_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_0_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[0].flag <= _comp3_0_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_0_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_0_w_a_WIRE <= _comp3_0_w_a_T @[calc6x6.scala 84:37]
    comp3[0].w_a <= _comp3_0_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_0_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_0_in_b_WIRE <= _comp3_0_in_b_T @[calc6x6.scala 85:38]
    comp3[0].in_b <= _comp3_0_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_1_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[1].flag <= _comp1_1_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_1_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_1_w_a_WIRE <= _comp1_1_w_a_T @[calc6x6.scala 78:37]
    comp1[1].w_a <= _comp1_1_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_1_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_1_in_b_WIRE <= _comp1_1_in_b_T @[calc6x6.scala 79:38]
    comp1[1].in_b <= _comp1_1_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_1_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[1].flag <= _comp2_1_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_1_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_1_w_a_WIRE <= _comp2_1_w_a_T @[calc6x6.scala 81:37]
    comp2[1].w_a <= _comp2_1_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_1_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_1_in_b_WIRE <= _comp2_1_in_b_T @[calc6x6.scala 82:38]
    comp2[1].in_b <= _comp2_1_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_1_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[1].flag <= _comp3_1_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_1_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_1_w_a_WIRE <= _comp3_1_w_a_T @[calc6x6.scala 84:37]
    comp3[1].w_a <= _comp3_1_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_1_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_1_in_b_WIRE <= _comp3_1_in_b_T @[calc6x6.scala 85:38]
    comp3[1].in_b <= _comp3_1_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_2_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[2].flag <= _comp1_2_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_2_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_2_w_a_WIRE <= _comp1_2_w_a_T @[calc6x6.scala 78:37]
    comp1[2].w_a <= _comp1_2_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_2_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_2_in_b_WIRE <= _comp1_2_in_b_T @[calc6x6.scala 79:38]
    comp1[2].in_b <= _comp1_2_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_2_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[2].flag <= _comp2_2_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_2_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_2_w_a_WIRE <= _comp2_2_w_a_T @[calc6x6.scala 81:37]
    comp2[2].w_a <= _comp2_2_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_2_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_2_in_b_WIRE <= _comp2_2_in_b_T @[calc6x6.scala 82:38]
    comp2[2].in_b <= _comp2_2_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_2_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[2].flag <= _comp3_2_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_2_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_2_w_a_WIRE <= _comp3_2_w_a_T @[calc6x6.scala 84:37]
    comp3[2].w_a <= _comp3_2_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_2_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_2_in_b_WIRE <= _comp3_2_in_b_T @[calc6x6.scala 85:38]
    comp3[2].in_b <= _comp3_2_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_3_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[3].flag <= _comp1_3_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_3_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_3_w_a_WIRE <= _comp1_3_w_a_T @[calc6x6.scala 78:37]
    comp1[3].w_a <= _comp1_3_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_3_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_3_in_b_WIRE <= _comp1_3_in_b_T @[calc6x6.scala 79:38]
    comp1[3].in_b <= _comp1_3_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_3_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[3].flag <= _comp2_3_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_3_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_3_w_a_WIRE <= _comp2_3_w_a_T @[calc6x6.scala 81:37]
    comp2[3].w_a <= _comp2_3_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_3_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_3_in_b_WIRE <= _comp2_3_in_b_T @[calc6x6.scala 82:38]
    comp2[3].in_b <= _comp2_3_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_3_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[3].flag <= _comp3_3_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_3_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_3_w_a_WIRE <= _comp3_3_w_a_T @[calc6x6.scala 84:37]
    comp3[3].w_a <= _comp3_3_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_3_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_3_in_b_WIRE <= _comp3_3_in_b_T @[calc6x6.scala 85:38]
    comp3[3].in_b <= _comp3_3_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_4_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[4].flag <= _comp1_4_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_4_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_4_w_a_WIRE <= _comp1_4_w_a_T @[calc6x6.scala 78:37]
    comp1[4].w_a <= _comp1_4_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_4_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_4_in_b_WIRE <= _comp1_4_in_b_T @[calc6x6.scala 79:38]
    comp1[4].in_b <= _comp1_4_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_4_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[4].flag <= _comp2_4_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_4_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_4_w_a_WIRE <= _comp2_4_w_a_T @[calc6x6.scala 81:37]
    comp2[4].w_a <= _comp2_4_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_4_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_4_in_b_WIRE <= _comp2_4_in_b_T @[calc6x6.scala 82:38]
    comp2[4].in_b <= _comp2_4_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_4_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[4].flag <= _comp3_4_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_4_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_4_w_a_WIRE <= _comp3_4_w_a_T @[calc6x6.scala 84:37]
    comp3[4].w_a <= _comp3_4_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_4_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_4_in_b_WIRE <= _comp3_4_in_b_T @[calc6x6.scala 85:38]
    comp3[4].in_b <= _comp3_4_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_5_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[5].flag <= _comp1_5_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_5_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_5_w_a_WIRE <= _comp1_5_w_a_T @[calc6x6.scala 78:37]
    comp1[5].w_a <= _comp1_5_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_5_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_5_in_b_WIRE <= _comp1_5_in_b_T @[calc6x6.scala 79:38]
    comp1[5].in_b <= _comp1_5_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_5_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[5].flag <= _comp2_5_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_5_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_5_w_a_WIRE <= _comp2_5_w_a_T @[calc6x6.scala 81:37]
    comp2[5].w_a <= _comp2_5_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_5_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_5_in_b_WIRE <= _comp2_5_in_b_T @[calc6x6.scala 82:38]
    comp2[5].in_b <= _comp2_5_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_5_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[5].flag <= _comp3_5_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_5_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_5_w_a_WIRE <= _comp3_5_w_a_T @[calc6x6.scala 84:37]
    comp3[5].w_a <= _comp3_5_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_5_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_5_in_b_WIRE <= _comp3_5_in_b_T @[calc6x6.scala 85:38]
    comp3[5].in_b <= _comp3_5_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_6_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[6].flag <= _comp1_6_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_6_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_6_w_a_WIRE <= _comp1_6_w_a_T @[calc6x6.scala 78:37]
    comp1[6].w_a <= _comp1_6_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_6_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_6_in_b_WIRE <= _comp1_6_in_b_T @[calc6x6.scala 79:38]
    comp1[6].in_b <= _comp1_6_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_6_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[6].flag <= _comp2_6_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_6_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_6_w_a_WIRE <= _comp2_6_w_a_T @[calc6x6.scala 81:37]
    comp2[6].w_a <= _comp2_6_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_6_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_6_in_b_WIRE <= _comp2_6_in_b_T @[calc6x6.scala 82:38]
    comp2[6].in_b <= _comp2_6_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_6_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[6].flag <= _comp3_6_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_6_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_6_w_a_WIRE <= _comp3_6_w_a_T @[calc6x6.scala 84:37]
    comp3[6].w_a <= _comp3_6_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_6_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_6_in_b_WIRE <= _comp3_6_in_b_T @[calc6x6.scala 85:38]
    comp3[6].in_b <= _comp3_6_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_7_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[7].flag <= _comp1_7_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_7_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_7_w_a_WIRE <= _comp1_7_w_a_T @[calc6x6.scala 78:37]
    comp1[7].w_a <= _comp1_7_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_7_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_7_in_b_WIRE <= _comp1_7_in_b_T @[calc6x6.scala 79:38]
    comp1[7].in_b <= _comp1_7_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_7_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[7].flag <= _comp2_7_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_7_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_7_w_a_WIRE <= _comp2_7_w_a_T @[calc6x6.scala 81:37]
    comp2[7].w_a <= _comp2_7_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_7_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_7_in_b_WIRE <= _comp2_7_in_b_T @[calc6x6.scala 82:38]
    comp2[7].in_b <= _comp2_7_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_7_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[7].flag <= _comp3_7_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_7_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_7_w_a_WIRE <= _comp3_7_w_a_T @[calc6x6.scala 84:37]
    comp3[7].w_a <= _comp3_7_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_7_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_7_in_b_WIRE <= _comp3_7_in_b_T @[calc6x6.scala 85:38]
    comp3[7].in_b <= _comp3_7_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_8_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[8].flag <= _comp1_8_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_8_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_8_w_a_WIRE <= _comp1_8_w_a_T @[calc6x6.scala 78:37]
    comp1[8].w_a <= _comp1_8_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_8_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_8_in_b_WIRE <= _comp1_8_in_b_T @[calc6x6.scala 79:38]
    comp1[8].in_b <= _comp1_8_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_8_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[8].flag <= _comp2_8_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_8_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_8_w_a_WIRE <= _comp2_8_w_a_T @[calc6x6.scala 81:37]
    comp2[8].w_a <= _comp2_8_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_8_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_8_in_b_WIRE <= _comp2_8_in_b_T @[calc6x6.scala 82:38]
    comp2[8].in_b <= _comp2_8_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_8_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[8].flag <= _comp3_8_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_8_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_8_w_a_WIRE <= _comp3_8_w_a_T @[calc6x6.scala 84:37]
    comp3[8].w_a <= _comp3_8_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_8_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_8_in_b_WIRE <= _comp3_8_in_b_T @[calc6x6.scala 85:38]
    comp3[8].in_b <= _comp3_8_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_9_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[9].flag <= _comp1_9_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_9_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_9_w_a_WIRE <= _comp1_9_w_a_T @[calc6x6.scala 78:37]
    comp1[9].w_a <= _comp1_9_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_9_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_9_in_b_WIRE <= _comp1_9_in_b_T @[calc6x6.scala 79:38]
    comp1[9].in_b <= _comp1_9_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_9_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[9].flag <= _comp2_9_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_9_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_9_w_a_WIRE <= _comp2_9_w_a_T @[calc6x6.scala 81:37]
    comp2[9].w_a <= _comp2_9_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_9_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_9_in_b_WIRE <= _comp2_9_in_b_T @[calc6x6.scala 82:38]
    comp2[9].in_b <= _comp2_9_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_9_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[9].flag <= _comp3_9_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_9_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_9_w_a_WIRE <= _comp3_9_w_a_T @[calc6x6.scala 84:37]
    comp3[9].w_a <= _comp3_9_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_9_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_9_in_b_WIRE <= _comp3_9_in_b_T @[calc6x6.scala 85:38]
    comp3[9].in_b <= _comp3_9_in_b_WIRE @[calc6x6.scala 85:23]
    wire _io_output_WIRE : {mat : SInt<37>[16]} @[calc6x6.scala 87:30]
    node _io_output_T = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[0] <= _io_output_T @[calc6x6.scala 87:30]
    node _io_output_T_1 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[1] <= _io_output_T_1 @[calc6x6.scala 87:30]
    node _io_output_T_2 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[2] <= _io_output_T_2 @[calc6x6.scala 87:30]
    node _io_output_T_3 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[3] <= _io_output_T_3 @[calc6x6.scala 87:30]
    node _io_output_T_4 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[4] <= _io_output_T_4 @[calc6x6.scala 87:30]
    node _io_output_T_5 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[5] <= _io_output_T_5 @[calc6x6.scala 87:30]
    node _io_output_T_6 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[6] <= _io_output_T_6 @[calc6x6.scala 87:30]
    node _io_output_T_7 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[7] <= _io_output_T_7 @[calc6x6.scala 87:30]
    node _io_output_T_8 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[8] <= _io_output_T_8 @[calc6x6.scala 87:30]
    node _io_output_T_9 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[9] <= _io_output_T_9 @[calc6x6.scala 87:30]
    node _io_output_T_10 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[10] <= _io_output_T_10 @[calc6x6.scala 87:30]
    node _io_output_T_11 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[11] <= _io_output_T_11 @[calc6x6.scala 87:30]
    node _io_output_T_12 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[12] <= _io_output_T_12 @[calc6x6.scala 87:30]
    node _io_output_T_13 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[13] <= _io_output_T_13 @[calc6x6.scala 87:30]
    node _io_output_T_14 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[14] <= _io_output_T_14 @[calc6x6.scala 87:30]
    node _io_output_T_15 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[15] <= _io_output_T_15 @[calc6x6.scala 87:30]
    io.output.mat[0] <= _io_output_WIRE.mat[0] @[calc6x6.scala 87:15]
    io.output.mat[1] <= _io_output_WIRE.mat[1] @[calc6x6.scala 87:15]
    io.output.mat[2] <= _io_output_WIRE.mat[2] @[calc6x6.scala 87:15]
    io.output.mat[3] <= _io_output_WIRE.mat[3] @[calc6x6.scala 87:15]
    io.output.mat[4] <= _io_output_WIRE.mat[4] @[calc6x6.scala 87:15]
    io.output.mat[5] <= _io_output_WIRE.mat[5] @[calc6x6.scala 87:15]
    io.output.mat[6] <= _io_output_WIRE.mat[6] @[calc6x6.scala 87:15]
    io.output.mat[7] <= _io_output_WIRE.mat[7] @[calc6x6.scala 87:15]
    io.output.mat[8] <= _io_output_WIRE.mat[8] @[calc6x6.scala 87:15]
    io.output.mat[9] <= _io_output_WIRE.mat[9] @[calc6x6.scala 87:15]
    io.output.mat[10] <= _io_output_WIRE.mat[10] @[calc6x6.scala 87:15]
    io.output.mat[11] <= _io_output_WIRE.mat[11] @[calc6x6.scala 87:15]
    io.output.mat[12] <= _io_output_WIRE.mat[12] @[calc6x6.scala 87:15]
    io.output.mat[13] <= _io_output_WIRE.mat[13] @[calc6x6.scala 87:15]
    io.output.mat[14] <= _io_output_WIRE.mat[14] @[calc6x6.scala 87:15]
    io.output.mat[15] <= _io_output_WIRE.mat[15] @[calc6x6.scala 87:15]
    io.valid_out <= UInt<1>("h00") @[calc6x6.scala 88:18]
    wire _reg1_WIRE : {mat_real : SInt<18>[36], mat_comp : SInt<18>[12]} @[calc6x6.scala 91:36]
    node _reg1_T = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[0] <= _reg1_T @[calc6x6.scala 91:36]
    node _reg1_T_1 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[1] <= _reg1_T_1 @[calc6x6.scala 91:36]
    node _reg1_T_2 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[2] <= _reg1_T_2 @[calc6x6.scala 91:36]
    node _reg1_T_3 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[3] <= _reg1_T_3 @[calc6x6.scala 91:36]
    node _reg1_T_4 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[4] <= _reg1_T_4 @[calc6x6.scala 91:36]
    node _reg1_T_5 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[5] <= _reg1_T_5 @[calc6x6.scala 91:36]
    node _reg1_T_6 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[6] <= _reg1_T_6 @[calc6x6.scala 91:36]
    node _reg1_T_7 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[7] <= _reg1_T_7 @[calc6x6.scala 91:36]
    node _reg1_T_8 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[8] <= _reg1_T_8 @[calc6x6.scala 91:36]
    node _reg1_T_9 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[9] <= _reg1_T_9 @[calc6x6.scala 91:36]
    node _reg1_T_10 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[10] <= _reg1_T_10 @[calc6x6.scala 91:36]
    node _reg1_T_11 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[11] <= _reg1_T_11 @[calc6x6.scala 91:36]
    node _reg1_T_12 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[0] <= _reg1_T_12 @[calc6x6.scala 91:36]
    node _reg1_T_13 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[1] <= _reg1_T_13 @[calc6x6.scala 91:36]
    node _reg1_T_14 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[2] <= _reg1_T_14 @[calc6x6.scala 91:36]
    node _reg1_T_15 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[3] <= _reg1_T_15 @[calc6x6.scala 91:36]
    node _reg1_T_16 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[4] <= _reg1_T_16 @[calc6x6.scala 91:36]
    node _reg1_T_17 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[5] <= _reg1_T_17 @[calc6x6.scala 91:36]
    node _reg1_T_18 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[6] <= _reg1_T_18 @[calc6x6.scala 91:36]
    node _reg1_T_19 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[7] <= _reg1_T_19 @[calc6x6.scala 91:36]
    node _reg1_T_20 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[8] <= _reg1_T_20 @[calc6x6.scala 91:36]
    node _reg1_T_21 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[9] <= _reg1_T_21 @[calc6x6.scala 91:36]
    node _reg1_T_22 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[10] <= _reg1_T_22 @[calc6x6.scala 91:36]
    node _reg1_T_23 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[11] <= _reg1_T_23 @[calc6x6.scala 91:36]
    node _reg1_T_24 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[12] <= _reg1_T_24 @[calc6x6.scala 91:36]
    node _reg1_T_25 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[13] <= _reg1_T_25 @[calc6x6.scala 91:36]
    node _reg1_T_26 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[14] <= _reg1_T_26 @[calc6x6.scala 91:36]
    node _reg1_T_27 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[15] <= _reg1_T_27 @[calc6x6.scala 91:36]
    node _reg1_T_28 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[16] <= _reg1_T_28 @[calc6x6.scala 91:36]
    node _reg1_T_29 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[17] <= _reg1_T_29 @[calc6x6.scala 91:36]
    node _reg1_T_30 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[18] <= _reg1_T_30 @[calc6x6.scala 91:36]
    node _reg1_T_31 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[19] <= _reg1_T_31 @[calc6x6.scala 91:36]
    node _reg1_T_32 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[20] <= _reg1_T_32 @[calc6x6.scala 91:36]
    node _reg1_T_33 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[21] <= _reg1_T_33 @[calc6x6.scala 91:36]
    node _reg1_T_34 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[22] <= _reg1_T_34 @[calc6x6.scala 91:36]
    node _reg1_T_35 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[23] <= _reg1_T_35 @[calc6x6.scala 91:36]
    node _reg1_T_36 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[24] <= _reg1_T_36 @[calc6x6.scala 91:36]
    node _reg1_T_37 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[25] <= _reg1_T_37 @[calc6x6.scala 91:36]
    node _reg1_T_38 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[26] <= _reg1_T_38 @[calc6x6.scala 91:36]
    node _reg1_T_39 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[27] <= _reg1_T_39 @[calc6x6.scala 91:36]
    node _reg1_T_40 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[28] <= _reg1_T_40 @[calc6x6.scala 91:36]
    node _reg1_T_41 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[29] <= _reg1_T_41 @[calc6x6.scala 91:36]
    node _reg1_T_42 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[30] <= _reg1_T_42 @[calc6x6.scala 91:36]
    node _reg1_T_43 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[31] <= _reg1_T_43 @[calc6x6.scala 91:36]
    node _reg1_T_44 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[32] <= _reg1_T_44 @[calc6x6.scala 91:36]
    node _reg1_T_45 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[33] <= _reg1_T_45 @[calc6x6.scala 91:36]
    node _reg1_T_46 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[34] <= _reg1_T_46 @[calc6x6.scala 91:36]
    node _reg1_T_47 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[35] <= _reg1_T_47 @[calc6x6.scala 91:36]
    reg reg1 : {mat_real : SInt<18>[36], mat_comp : SInt<18>[12]}, clock with : (reset => (reset, _reg1_WIRE)) @[calc6x6.scala 91:23]
    wire _reg2_WIRE : {mat_real : SInt<20>[36], mat_comp : SInt<20>[10]} @[calc6x6.scala 92:36]
    node _reg2_T = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[0] <= _reg2_T @[calc6x6.scala 92:36]
    node _reg2_T_1 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[1] <= _reg2_T_1 @[calc6x6.scala 92:36]
    node _reg2_T_2 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[2] <= _reg2_T_2 @[calc6x6.scala 92:36]
    node _reg2_T_3 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[3] <= _reg2_T_3 @[calc6x6.scala 92:36]
    node _reg2_T_4 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[4] <= _reg2_T_4 @[calc6x6.scala 92:36]
    node _reg2_T_5 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[5] <= _reg2_T_5 @[calc6x6.scala 92:36]
    node _reg2_T_6 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[6] <= _reg2_T_6 @[calc6x6.scala 92:36]
    node _reg2_T_7 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[7] <= _reg2_T_7 @[calc6x6.scala 92:36]
    node _reg2_T_8 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[8] <= _reg2_T_8 @[calc6x6.scala 92:36]
    node _reg2_T_9 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[9] <= _reg2_T_9 @[calc6x6.scala 92:36]
    node _reg2_T_10 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[0] <= _reg2_T_10 @[calc6x6.scala 92:36]
    node _reg2_T_11 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[1] <= _reg2_T_11 @[calc6x6.scala 92:36]
    node _reg2_T_12 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[2] <= _reg2_T_12 @[calc6x6.scala 92:36]
    node _reg2_T_13 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[3] <= _reg2_T_13 @[calc6x6.scala 92:36]
    node _reg2_T_14 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[4] <= _reg2_T_14 @[calc6x6.scala 92:36]
    node _reg2_T_15 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[5] <= _reg2_T_15 @[calc6x6.scala 92:36]
    node _reg2_T_16 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[6] <= _reg2_T_16 @[calc6x6.scala 92:36]
    node _reg2_T_17 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[7] <= _reg2_T_17 @[calc6x6.scala 92:36]
    node _reg2_T_18 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[8] <= _reg2_T_18 @[calc6x6.scala 92:36]
    node _reg2_T_19 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[9] <= _reg2_T_19 @[calc6x6.scala 92:36]
    node _reg2_T_20 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[10] <= _reg2_T_20 @[calc6x6.scala 92:36]
    node _reg2_T_21 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[11] <= _reg2_T_21 @[calc6x6.scala 92:36]
    node _reg2_T_22 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[12] <= _reg2_T_22 @[calc6x6.scala 92:36]
    node _reg2_T_23 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[13] <= _reg2_T_23 @[calc6x6.scala 92:36]
    node _reg2_T_24 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[14] <= _reg2_T_24 @[calc6x6.scala 92:36]
    node _reg2_T_25 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[15] <= _reg2_T_25 @[calc6x6.scala 92:36]
    node _reg2_T_26 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[16] <= _reg2_T_26 @[calc6x6.scala 92:36]
    node _reg2_T_27 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[17] <= _reg2_T_27 @[calc6x6.scala 92:36]
    node _reg2_T_28 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[18] <= _reg2_T_28 @[calc6x6.scala 92:36]
    node _reg2_T_29 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[19] <= _reg2_T_29 @[calc6x6.scala 92:36]
    node _reg2_T_30 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[20] <= _reg2_T_30 @[calc6x6.scala 92:36]
    node _reg2_T_31 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[21] <= _reg2_T_31 @[calc6x6.scala 92:36]
    node _reg2_T_32 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[22] <= _reg2_T_32 @[calc6x6.scala 92:36]
    node _reg2_T_33 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[23] <= _reg2_T_33 @[calc6x6.scala 92:36]
    node _reg2_T_34 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[24] <= _reg2_T_34 @[calc6x6.scala 92:36]
    node _reg2_T_35 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[25] <= _reg2_T_35 @[calc6x6.scala 92:36]
    node _reg2_T_36 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[26] <= _reg2_T_36 @[calc6x6.scala 92:36]
    node _reg2_T_37 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[27] <= _reg2_T_37 @[calc6x6.scala 92:36]
    node _reg2_T_38 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[28] <= _reg2_T_38 @[calc6x6.scala 92:36]
    node _reg2_T_39 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[29] <= _reg2_T_39 @[calc6x6.scala 92:36]
    node _reg2_T_40 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[30] <= _reg2_T_40 @[calc6x6.scala 92:36]
    node _reg2_T_41 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[31] <= _reg2_T_41 @[calc6x6.scala 92:36]
    node _reg2_T_42 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[32] <= _reg2_T_42 @[calc6x6.scala 92:36]
    node _reg2_T_43 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[33] <= _reg2_T_43 @[calc6x6.scala 92:36]
    node _reg2_T_44 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[34] <= _reg2_T_44 @[calc6x6.scala 92:36]
    node _reg2_T_45 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[35] <= _reg2_T_45 @[calc6x6.scala 92:36]
    reg reg2 : {mat_real : SInt<20>[36], mat_comp : SInt<20>[10]}, clock with : (reset => (reset, _reg2_WIRE)) @[calc6x6.scala 92:23]
    wire _w3_WIRE : {mat_real : SInt<38>[36], mat_comp : SInt<38>[36]} @[calc6x6.scala 93:34]
    node _w3_T = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[0] <= _w3_T @[calc6x6.scala 93:34]
    node _w3_T_1 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[1] <= _w3_T_1 @[calc6x6.scala 93:34]
    node _w3_T_2 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[2] <= _w3_T_2 @[calc6x6.scala 93:34]
    node _w3_T_3 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[3] <= _w3_T_3 @[calc6x6.scala 93:34]
    node _w3_T_4 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[4] <= _w3_T_4 @[calc6x6.scala 93:34]
    node _w3_T_5 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[5] <= _w3_T_5 @[calc6x6.scala 93:34]
    node _w3_T_6 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[6] <= _w3_T_6 @[calc6x6.scala 93:34]
    node _w3_T_7 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[7] <= _w3_T_7 @[calc6x6.scala 93:34]
    node _w3_T_8 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[8] <= _w3_T_8 @[calc6x6.scala 93:34]
    node _w3_T_9 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[9] <= _w3_T_9 @[calc6x6.scala 93:34]
    node _w3_T_10 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[10] <= _w3_T_10 @[calc6x6.scala 93:34]
    node _w3_T_11 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[11] <= _w3_T_11 @[calc6x6.scala 93:34]
    node _w3_T_12 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[12] <= _w3_T_12 @[calc6x6.scala 93:34]
    node _w3_T_13 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[13] <= _w3_T_13 @[calc6x6.scala 93:34]
    node _w3_T_14 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[14] <= _w3_T_14 @[calc6x6.scala 93:34]
    node _w3_T_15 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[15] <= _w3_T_15 @[calc6x6.scala 93:34]
    node _w3_T_16 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[16] <= _w3_T_16 @[calc6x6.scala 93:34]
    node _w3_T_17 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[17] <= _w3_T_17 @[calc6x6.scala 93:34]
    node _w3_T_18 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[18] <= _w3_T_18 @[calc6x6.scala 93:34]
    node _w3_T_19 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[19] <= _w3_T_19 @[calc6x6.scala 93:34]
    node _w3_T_20 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[20] <= _w3_T_20 @[calc6x6.scala 93:34]
    node _w3_T_21 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[21] <= _w3_T_21 @[calc6x6.scala 93:34]
    node _w3_T_22 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[22] <= _w3_T_22 @[calc6x6.scala 93:34]
    node _w3_T_23 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[23] <= _w3_T_23 @[calc6x6.scala 93:34]
    node _w3_T_24 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[24] <= _w3_T_24 @[calc6x6.scala 93:34]
    node _w3_T_25 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[25] <= _w3_T_25 @[calc6x6.scala 93:34]
    node _w3_T_26 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[26] <= _w3_T_26 @[calc6x6.scala 93:34]
    node _w3_T_27 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[27] <= _w3_T_27 @[calc6x6.scala 93:34]
    node _w3_T_28 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[28] <= _w3_T_28 @[calc6x6.scala 93:34]
    node _w3_T_29 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[29] <= _w3_T_29 @[calc6x6.scala 93:34]
    node _w3_T_30 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[30] <= _w3_T_30 @[calc6x6.scala 93:34]
    node _w3_T_31 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[31] <= _w3_T_31 @[calc6x6.scala 93:34]
    node _w3_T_32 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[32] <= _w3_T_32 @[calc6x6.scala 93:34]
    node _w3_T_33 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[33] <= _w3_T_33 @[calc6x6.scala 93:34]
    node _w3_T_34 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[34] <= _w3_T_34 @[calc6x6.scala 93:34]
    node _w3_T_35 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[35] <= _w3_T_35 @[calc6x6.scala 93:34]
    node _w3_T_36 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[0] <= _w3_T_36 @[calc6x6.scala 93:34]
    node _w3_T_37 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[1] <= _w3_T_37 @[calc6x6.scala 93:34]
    node _w3_T_38 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[2] <= _w3_T_38 @[calc6x6.scala 93:34]
    node _w3_T_39 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[3] <= _w3_T_39 @[calc6x6.scala 93:34]
    node _w3_T_40 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[4] <= _w3_T_40 @[calc6x6.scala 93:34]
    node _w3_T_41 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[5] <= _w3_T_41 @[calc6x6.scala 93:34]
    node _w3_T_42 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[6] <= _w3_T_42 @[calc6x6.scala 93:34]
    node _w3_T_43 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[7] <= _w3_T_43 @[calc6x6.scala 93:34]
    node _w3_T_44 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[8] <= _w3_T_44 @[calc6x6.scala 93:34]
    node _w3_T_45 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[9] <= _w3_T_45 @[calc6x6.scala 93:34]
    node _w3_T_46 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[10] <= _w3_T_46 @[calc6x6.scala 93:34]
    node _w3_T_47 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[11] <= _w3_T_47 @[calc6x6.scala 93:34]
    node _w3_T_48 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[12] <= _w3_T_48 @[calc6x6.scala 93:34]
    node _w3_T_49 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[13] <= _w3_T_49 @[calc6x6.scala 93:34]
    node _w3_T_50 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[14] <= _w3_T_50 @[calc6x6.scala 93:34]
    node _w3_T_51 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[15] <= _w3_T_51 @[calc6x6.scala 93:34]
    node _w3_T_52 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[16] <= _w3_T_52 @[calc6x6.scala 93:34]
    node _w3_T_53 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[17] <= _w3_T_53 @[calc6x6.scala 93:34]
    node _w3_T_54 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[18] <= _w3_T_54 @[calc6x6.scala 93:34]
    node _w3_T_55 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[19] <= _w3_T_55 @[calc6x6.scala 93:34]
    node _w3_T_56 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[20] <= _w3_T_56 @[calc6x6.scala 93:34]
    node _w3_T_57 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[21] <= _w3_T_57 @[calc6x6.scala 93:34]
    node _w3_T_58 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[22] <= _w3_T_58 @[calc6x6.scala 93:34]
    node _w3_T_59 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[23] <= _w3_T_59 @[calc6x6.scala 93:34]
    node _w3_T_60 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[24] <= _w3_T_60 @[calc6x6.scala 93:34]
    node _w3_T_61 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[25] <= _w3_T_61 @[calc6x6.scala 93:34]
    node _w3_T_62 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[26] <= _w3_T_62 @[calc6x6.scala 93:34]
    node _w3_T_63 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[27] <= _w3_T_63 @[calc6x6.scala 93:34]
    node _w3_T_64 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[28] <= _w3_T_64 @[calc6x6.scala 93:34]
    node _w3_T_65 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[29] <= _w3_T_65 @[calc6x6.scala 93:34]
    node _w3_T_66 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[30] <= _w3_T_66 @[calc6x6.scala 93:34]
    node _w3_T_67 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[31] <= _w3_T_67 @[calc6x6.scala 93:34]
    node _w3_T_68 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[32] <= _w3_T_68 @[calc6x6.scala 93:34]
    node _w3_T_69 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[33] <= _w3_T_69 @[calc6x6.scala 93:34]
    node _w3_T_70 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[34] <= _w3_T_70 @[calc6x6.scala 93:34]
    node _w3_T_71 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[35] <= _w3_T_71 @[calc6x6.scala 93:34]
    reg w3 : {mat_real : SInt<38>[36], mat_comp : SInt<38>[36]}, clock with : (reset => (reset, _w3_WIRE)) @[calc6x6.scala 93:21]
    wire _reg3_WIRE : {mat_real : SInt<38>[24], mat_comp : SInt<38>[24]} @[calc6x6.scala 94:36]
    node _reg3_T = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[0] <= _reg3_T @[calc6x6.scala 94:36]
    node _reg3_T_1 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[1] <= _reg3_T_1 @[calc6x6.scala 94:36]
    node _reg3_T_2 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[2] <= _reg3_T_2 @[calc6x6.scala 94:36]
    node _reg3_T_3 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[3] <= _reg3_T_3 @[calc6x6.scala 94:36]
    node _reg3_T_4 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[4] <= _reg3_T_4 @[calc6x6.scala 94:36]
    node _reg3_T_5 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[5] <= _reg3_T_5 @[calc6x6.scala 94:36]
    node _reg3_T_6 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[6] <= _reg3_T_6 @[calc6x6.scala 94:36]
    node _reg3_T_7 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[7] <= _reg3_T_7 @[calc6x6.scala 94:36]
    node _reg3_T_8 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[8] <= _reg3_T_8 @[calc6x6.scala 94:36]
    node _reg3_T_9 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[9] <= _reg3_T_9 @[calc6x6.scala 94:36]
    node _reg3_T_10 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[10] <= _reg3_T_10 @[calc6x6.scala 94:36]
    node _reg3_T_11 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[11] <= _reg3_T_11 @[calc6x6.scala 94:36]
    node _reg3_T_12 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[12] <= _reg3_T_12 @[calc6x6.scala 94:36]
    node _reg3_T_13 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[13] <= _reg3_T_13 @[calc6x6.scala 94:36]
    node _reg3_T_14 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[14] <= _reg3_T_14 @[calc6x6.scala 94:36]
    node _reg3_T_15 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[15] <= _reg3_T_15 @[calc6x6.scala 94:36]
    node _reg3_T_16 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[16] <= _reg3_T_16 @[calc6x6.scala 94:36]
    node _reg3_T_17 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[17] <= _reg3_T_17 @[calc6x6.scala 94:36]
    node _reg3_T_18 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[18] <= _reg3_T_18 @[calc6x6.scala 94:36]
    node _reg3_T_19 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[19] <= _reg3_T_19 @[calc6x6.scala 94:36]
    node _reg3_T_20 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[20] <= _reg3_T_20 @[calc6x6.scala 94:36]
    node _reg3_T_21 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[21] <= _reg3_T_21 @[calc6x6.scala 94:36]
    node _reg3_T_22 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[22] <= _reg3_T_22 @[calc6x6.scala 94:36]
    node _reg3_T_23 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[23] <= _reg3_T_23 @[calc6x6.scala 94:36]
    node _reg3_T_24 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[0] <= _reg3_T_24 @[calc6x6.scala 94:36]
    node _reg3_T_25 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[1] <= _reg3_T_25 @[calc6x6.scala 94:36]
    node _reg3_T_26 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[2] <= _reg3_T_26 @[calc6x6.scala 94:36]
    node _reg3_T_27 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[3] <= _reg3_T_27 @[calc6x6.scala 94:36]
    node _reg3_T_28 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[4] <= _reg3_T_28 @[calc6x6.scala 94:36]
    node _reg3_T_29 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[5] <= _reg3_T_29 @[calc6x6.scala 94:36]
    node _reg3_T_30 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[6] <= _reg3_T_30 @[calc6x6.scala 94:36]
    node _reg3_T_31 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[7] <= _reg3_T_31 @[calc6x6.scala 94:36]
    node _reg3_T_32 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[8] <= _reg3_T_32 @[calc6x6.scala 94:36]
    node _reg3_T_33 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[9] <= _reg3_T_33 @[calc6x6.scala 94:36]
    node _reg3_T_34 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[10] <= _reg3_T_34 @[calc6x6.scala 94:36]
    node _reg3_T_35 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[11] <= _reg3_T_35 @[calc6x6.scala 94:36]
    node _reg3_T_36 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[12] <= _reg3_T_36 @[calc6x6.scala 94:36]
    node _reg3_T_37 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[13] <= _reg3_T_37 @[calc6x6.scala 94:36]
    node _reg3_T_38 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[14] <= _reg3_T_38 @[calc6x6.scala 94:36]
    node _reg3_T_39 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[15] <= _reg3_T_39 @[calc6x6.scala 94:36]
    node _reg3_T_40 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[16] <= _reg3_T_40 @[calc6x6.scala 94:36]
    node _reg3_T_41 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[17] <= _reg3_T_41 @[calc6x6.scala 94:36]
    node _reg3_T_42 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[18] <= _reg3_T_42 @[calc6x6.scala 94:36]
    node _reg3_T_43 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[19] <= _reg3_T_43 @[calc6x6.scala 94:36]
    node _reg3_T_44 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[20] <= _reg3_T_44 @[calc6x6.scala 94:36]
    node _reg3_T_45 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[21] <= _reg3_T_45 @[calc6x6.scala 94:36]
    node _reg3_T_46 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[22] <= _reg3_T_46 @[calc6x6.scala 94:36]
    node _reg3_T_47 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[23] <= _reg3_T_47 @[calc6x6.scala 94:36]
    reg reg3 : {mat_real : SInt<38>[24], mat_comp : SInt<38>[24]}, clock with : (reset => (reset, _reg3_WIRE)) @[calc6x6.scala 94:23]
    wire _valid_reg_WIRE : UInt<1>[5] @[calc6x6.scala 172:36]
    _valid_reg_WIRE[0] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[1] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[2] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[3] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[4] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    reg valid_reg : UInt<1>[5], clock with : (reset => (reset, _valid_reg_WIRE)) @[calc6x6.scala 172:28]
    valid_reg[0] <= io.valid_in @[calc6x6.scala 173:18]
    node _reg1_mat_real_0_T = sub(io.input.mat[0], io.input.mat[24]) @[calc6x6.scala 110:56]
    reg1.mat_real[0] <= _reg1_mat_real_0_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_6_T = add(io.input.mat[6], io.input.mat[12]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_6_T_1 = add(_reg1_mat_real_6_T, io.input.mat[18]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_6_T_2 = add(_reg1_mat_real_6_T_1, io.input.mat[24]) @[calc6x6.scala 111:92]
    reg1.mat_real[6] <= _reg1_mat_real_6_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_12_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_1 = tail(_reg1_mat_real_12_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_2 = asSInt(_reg1_mat_real_12_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_3 = add(_reg1_mat_real_12_T_2, io.input.mat[12]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_12_T_4 = sub(_reg1_mat_real_12_T_3, io.input.mat[18]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_12_T_5 = add(_reg1_mat_real_12_T_4, io.input.mat[24]) @[calc6x6.scala 112:93]
    reg1.mat_real[12] <= _reg1_mat_real_12_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_18_T = sub(asSInt(UInt<1>("h00")), io.input.mat[12]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_1 = tail(_reg1_mat_real_18_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_2 = asSInt(_reg1_mat_real_18_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_3 = add(_reg1_mat_real_18_T_2, io.input.mat[24]) @[calc6x6.scala 113:57]
    reg1.mat_real[18] <= _reg1_mat_real_18_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_24_T = sub(asSInt(UInt<1>("h00")), io.input.mat[12]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_1 = tail(_reg1_mat_real_24_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_2 = asSInt(_reg1_mat_real_24_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_3 = add(_reg1_mat_real_24_T_2, io.input.mat[24]) @[calc6x6.scala 114:57]
    reg1.mat_real[24] <= _reg1_mat_real_24_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_30_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_1 = tail(_reg1_mat_real_30_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_2 = asSInt(_reg1_mat_real_30_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_3 = add(_reg1_mat_real_30_T_2, io.input.mat[30]) @[calc6x6.scala 115:57]
    reg1.mat_real[30] <= _reg1_mat_real_30_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_0_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_1 = tail(_reg1_mat_comp_0_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_2 = asSInt(_reg1_mat_comp_0_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_3 = add(_reg1_mat_comp_0_T_2, io.input.mat[18]) @[calc6x6.scala 117:57]
    reg1.mat_comp[0] <= _reg1_mat_comp_0_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_6_T = sub(io.input.mat[6], io.input.mat[18]) @[calc6x6.scala 118:56]
    reg1.mat_comp[6] <= _reg1_mat_comp_6_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_1_T = sub(io.input.mat[1], io.input.mat[25]) @[calc6x6.scala 110:56]
    reg1.mat_real[1] <= _reg1_mat_real_1_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_7_T = add(io.input.mat[7], io.input.mat[13]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_7_T_1 = add(_reg1_mat_real_7_T, io.input.mat[19]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_7_T_2 = add(_reg1_mat_real_7_T_1, io.input.mat[25]) @[calc6x6.scala 111:92]
    reg1.mat_real[7] <= _reg1_mat_real_7_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_13_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_1 = tail(_reg1_mat_real_13_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_2 = asSInt(_reg1_mat_real_13_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_3 = add(_reg1_mat_real_13_T_2, io.input.mat[13]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_13_T_4 = sub(_reg1_mat_real_13_T_3, io.input.mat[19]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_13_T_5 = add(_reg1_mat_real_13_T_4, io.input.mat[25]) @[calc6x6.scala 112:93]
    reg1.mat_real[13] <= _reg1_mat_real_13_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_19_T = sub(asSInt(UInt<1>("h00")), io.input.mat[13]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_1 = tail(_reg1_mat_real_19_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_2 = asSInt(_reg1_mat_real_19_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_3 = add(_reg1_mat_real_19_T_2, io.input.mat[25]) @[calc6x6.scala 113:57]
    reg1.mat_real[19] <= _reg1_mat_real_19_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_25_T = sub(asSInt(UInt<1>("h00")), io.input.mat[13]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_1 = tail(_reg1_mat_real_25_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_2 = asSInt(_reg1_mat_real_25_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_3 = add(_reg1_mat_real_25_T_2, io.input.mat[25]) @[calc6x6.scala 114:57]
    reg1.mat_real[25] <= _reg1_mat_real_25_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_31_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_1 = tail(_reg1_mat_real_31_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_2 = asSInt(_reg1_mat_real_31_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_3 = add(_reg1_mat_real_31_T_2, io.input.mat[31]) @[calc6x6.scala 115:57]
    reg1.mat_real[31] <= _reg1_mat_real_31_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_1_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_1 = tail(_reg1_mat_comp_1_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_2 = asSInt(_reg1_mat_comp_1_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_3 = add(_reg1_mat_comp_1_T_2, io.input.mat[19]) @[calc6x6.scala 117:57]
    reg1.mat_comp[1] <= _reg1_mat_comp_1_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_7_T = sub(io.input.mat[7], io.input.mat[19]) @[calc6x6.scala 118:56]
    reg1.mat_comp[7] <= _reg1_mat_comp_7_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_2_T = sub(io.input.mat[2], io.input.mat[26]) @[calc6x6.scala 110:56]
    reg1.mat_real[2] <= _reg1_mat_real_2_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_8_T = add(io.input.mat[8], io.input.mat[14]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_8_T_1 = add(_reg1_mat_real_8_T, io.input.mat[20]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_8_T_2 = add(_reg1_mat_real_8_T_1, io.input.mat[26]) @[calc6x6.scala 111:92]
    reg1.mat_real[8] <= _reg1_mat_real_8_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_14_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_1 = tail(_reg1_mat_real_14_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_2 = asSInt(_reg1_mat_real_14_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_3 = add(_reg1_mat_real_14_T_2, io.input.mat[14]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_14_T_4 = sub(_reg1_mat_real_14_T_3, io.input.mat[20]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_14_T_5 = add(_reg1_mat_real_14_T_4, io.input.mat[26]) @[calc6x6.scala 112:93]
    reg1.mat_real[14] <= _reg1_mat_real_14_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_20_T = sub(asSInt(UInt<1>("h00")), io.input.mat[14]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_1 = tail(_reg1_mat_real_20_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_2 = asSInt(_reg1_mat_real_20_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_3 = add(_reg1_mat_real_20_T_2, io.input.mat[26]) @[calc6x6.scala 113:57]
    reg1.mat_real[20] <= _reg1_mat_real_20_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_26_T = sub(asSInt(UInt<1>("h00")), io.input.mat[14]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_1 = tail(_reg1_mat_real_26_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_2 = asSInt(_reg1_mat_real_26_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_3 = add(_reg1_mat_real_26_T_2, io.input.mat[26]) @[calc6x6.scala 114:57]
    reg1.mat_real[26] <= _reg1_mat_real_26_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_32_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_1 = tail(_reg1_mat_real_32_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_2 = asSInt(_reg1_mat_real_32_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_3 = add(_reg1_mat_real_32_T_2, io.input.mat[32]) @[calc6x6.scala 115:57]
    reg1.mat_real[32] <= _reg1_mat_real_32_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_2_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_1 = tail(_reg1_mat_comp_2_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_2 = asSInt(_reg1_mat_comp_2_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_3 = add(_reg1_mat_comp_2_T_2, io.input.mat[20]) @[calc6x6.scala 117:57]
    reg1.mat_comp[2] <= _reg1_mat_comp_2_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_8_T = sub(io.input.mat[8], io.input.mat[20]) @[calc6x6.scala 118:56]
    reg1.mat_comp[8] <= _reg1_mat_comp_8_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_3_T = sub(io.input.mat[3], io.input.mat[27]) @[calc6x6.scala 110:56]
    reg1.mat_real[3] <= _reg1_mat_real_3_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_9_T = add(io.input.mat[9], io.input.mat[15]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_9_T_1 = add(_reg1_mat_real_9_T, io.input.mat[21]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_9_T_2 = add(_reg1_mat_real_9_T_1, io.input.mat[27]) @[calc6x6.scala 111:92]
    reg1.mat_real[9] <= _reg1_mat_real_9_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_15_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_1 = tail(_reg1_mat_real_15_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_2 = asSInt(_reg1_mat_real_15_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_3 = add(_reg1_mat_real_15_T_2, io.input.mat[15]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_15_T_4 = sub(_reg1_mat_real_15_T_3, io.input.mat[21]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_15_T_5 = add(_reg1_mat_real_15_T_4, io.input.mat[27]) @[calc6x6.scala 112:93]
    reg1.mat_real[15] <= _reg1_mat_real_15_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_21_T = sub(asSInt(UInt<1>("h00")), io.input.mat[15]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_1 = tail(_reg1_mat_real_21_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_2 = asSInt(_reg1_mat_real_21_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_3 = add(_reg1_mat_real_21_T_2, io.input.mat[27]) @[calc6x6.scala 113:57]
    reg1.mat_real[21] <= _reg1_mat_real_21_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_27_T = sub(asSInt(UInt<1>("h00")), io.input.mat[15]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_1 = tail(_reg1_mat_real_27_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_2 = asSInt(_reg1_mat_real_27_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_3 = add(_reg1_mat_real_27_T_2, io.input.mat[27]) @[calc6x6.scala 114:57]
    reg1.mat_real[27] <= _reg1_mat_real_27_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_33_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_1 = tail(_reg1_mat_real_33_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_2 = asSInt(_reg1_mat_real_33_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_3 = add(_reg1_mat_real_33_T_2, io.input.mat[33]) @[calc6x6.scala 115:57]
    reg1.mat_real[33] <= _reg1_mat_real_33_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_3_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_1 = tail(_reg1_mat_comp_3_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_2 = asSInt(_reg1_mat_comp_3_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_3 = add(_reg1_mat_comp_3_T_2, io.input.mat[21]) @[calc6x6.scala 117:57]
    reg1.mat_comp[3] <= _reg1_mat_comp_3_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_9_T = sub(io.input.mat[9], io.input.mat[21]) @[calc6x6.scala 118:56]
    reg1.mat_comp[9] <= _reg1_mat_comp_9_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_4_T = sub(io.input.mat[4], io.input.mat[28]) @[calc6x6.scala 110:56]
    reg1.mat_real[4] <= _reg1_mat_real_4_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_10_T = add(io.input.mat[10], io.input.mat[16]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_10_T_1 = add(_reg1_mat_real_10_T, io.input.mat[22]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_10_T_2 = add(_reg1_mat_real_10_T_1, io.input.mat[28]) @[calc6x6.scala 111:92]
    reg1.mat_real[10] <= _reg1_mat_real_10_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_16_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_1 = tail(_reg1_mat_real_16_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_2 = asSInt(_reg1_mat_real_16_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_3 = add(_reg1_mat_real_16_T_2, io.input.mat[16]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_16_T_4 = sub(_reg1_mat_real_16_T_3, io.input.mat[22]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_16_T_5 = add(_reg1_mat_real_16_T_4, io.input.mat[28]) @[calc6x6.scala 112:93]
    reg1.mat_real[16] <= _reg1_mat_real_16_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_22_T = sub(asSInt(UInt<1>("h00")), io.input.mat[16]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_1 = tail(_reg1_mat_real_22_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_2 = asSInt(_reg1_mat_real_22_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_3 = add(_reg1_mat_real_22_T_2, io.input.mat[28]) @[calc6x6.scala 113:57]
    reg1.mat_real[22] <= _reg1_mat_real_22_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_28_T = sub(asSInt(UInt<1>("h00")), io.input.mat[16]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_1 = tail(_reg1_mat_real_28_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_2 = asSInt(_reg1_mat_real_28_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_3 = add(_reg1_mat_real_28_T_2, io.input.mat[28]) @[calc6x6.scala 114:57]
    reg1.mat_real[28] <= _reg1_mat_real_28_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_34_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_1 = tail(_reg1_mat_real_34_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_2 = asSInt(_reg1_mat_real_34_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_3 = add(_reg1_mat_real_34_T_2, io.input.mat[34]) @[calc6x6.scala 115:57]
    reg1.mat_real[34] <= _reg1_mat_real_34_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_1 = tail(_reg1_mat_comp_4_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_2 = asSInt(_reg1_mat_comp_4_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_3 = add(_reg1_mat_comp_4_T_2, io.input.mat[22]) @[calc6x6.scala 117:57]
    reg1.mat_comp[4] <= _reg1_mat_comp_4_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_10_T = sub(io.input.mat[10], io.input.mat[22]) @[calc6x6.scala 118:56]
    reg1.mat_comp[10] <= _reg1_mat_comp_10_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_5_T = sub(io.input.mat[5], io.input.mat[29]) @[calc6x6.scala 110:56]
    reg1.mat_real[5] <= _reg1_mat_real_5_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_11_T = add(io.input.mat[11], io.input.mat[17]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_11_T_1 = add(_reg1_mat_real_11_T, io.input.mat[23]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_11_T_2 = add(_reg1_mat_real_11_T_1, io.input.mat[29]) @[calc6x6.scala 111:92]
    reg1.mat_real[11] <= _reg1_mat_real_11_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_17_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_1 = tail(_reg1_mat_real_17_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_2 = asSInt(_reg1_mat_real_17_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_3 = add(_reg1_mat_real_17_T_2, io.input.mat[17]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_17_T_4 = sub(_reg1_mat_real_17_T_3, io.input.mat[23]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_17_T_5 = add(_reg1_mat_real_17_T_4, io.input.mat[29]) @[calc6x6.scala 112:93]
    reg1.mat_real[17] <= _reg1_mat_real_17_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_23_T = sub(asSInt(UInt<1>("h00")), io.input.mat[17]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_1 = tail(_reg1_mat_real_23_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_2 = asSInt(_reg1_mat_real_23_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_3 = add(_reg1_mat_real_23_T_2, io.input.mat[29]) @[calc6x6.scala 113:57]
    reg1.mat_real[23] <= _reg1_mat_real_23_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_29_T = sub(asSInt(UInt<1>("h00")), io.input.mat[17]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_1 = tail(_reg1_mat_real_29_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_2 = asSInt(_reg1_mat_real_29_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_3 = add(_reg1_mat_real_29_T_2, io.input.mat[29]) @[calc6x6.scala 114:57]
    reg1.mat_real[29] <= _reg1_mat_real_29_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_35_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_1 = tail(_reg1_mat_real_35_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_2 = asSInt(_reg1_mat_real_35_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_3 = add(_reg1_mat_real_35_T_2, io.input.mat[35]) @[calc6x6.scala 115:57]
    reg1.mat_real[35] <= _reg1_mat_real_35_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_5_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_1 = tail(_reg1_mat_comp_5_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_2 = asSInt(_reg1_mat_comp_5_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_3 = add(_reg1_mat_comp_5_T_2, io.input.mat[23]) @[calc6x6.scala 117:57]
    reg1.mat_comp[5] <= _reg1_mat_comp_5_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_11_T = sub(io.input.mat[11], io.input.mat[23]) @[calc6x6.scala 118:56]
    reg1.mat_comp[11] <= _reg1_mat_comp_11_T @[calc6x6.scala 118:37]
    valid_reg[1] <= valid_reg[0] @[calc6x6.scala 175:18]
    node _reg2_mat_real_0_T = sub(reg1.mat_real[0], reg1.mat_real[4]) @[calc6x6.scala 124:61]
    reg2.mat_real[0] <= _reg2_mat_real_0_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_1_T = add(reg1.mat_real[1], reg1.mat_real[2]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_1_T_1 = add(_reg2_mat_real_1_T, reg1.mat_real[3]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_1_T_2 = add(_reg2_mat_real_1_T_1, reg1.mat_real[4]) @[calc6x6.scala 125:107]
    reg2.mat_real[1] <= _reg2_mat_real_1_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_2_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_1 = tail(_reg2_mat_real_2_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_2 = asSInt(_reg2_mat_real_2_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_3 = add(_reg2_mat_real_2_T_2, reg1.mat_real[2]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_2_T_4 = sub(_reg2_mat_real_2_T_3, reg1.mat_real[3]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_2_T_5 = add(_reg2_mat_real_2_T_4, reg1.mat_real[4]) @[calc6x6.scala 126:108]
    reg2.mat_real[2] <= _reg2_mat_real_2_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_3_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[2]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_1 = tail(_reg2_mat_real_3_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_2 = asSInt(_reg2_mat_real_3_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_3 = add(_reg2_mat_real_3_T_2, reg1.mat_real[4]) @[calc6x6.scala 127:180]
    reg2.mat_real[3] <= _reg2_mat_real_3_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_4_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[2]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_1 = tail(_reg2_mat_real_4_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_2 = asSInt(_reg2_mat_real_4_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_3 = add(_reg2_mat_real_4_T_2, reg1.mat_real[4]) @[calc6x6.scala 128:180]
    reg2.mat_real[4] <= _reg2_mat_real_4_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_5_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_1 = tail(_reg2_mat_real_5_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_2 = asSInt(_reg2_mat_real_5_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_3 = add(_reg2_mat_real_5_T_2, reg1.mat_real[5]) @[calc6x6.scala 129:62]
    reg2.mat_real[5] <= _reg2_mat_real_5_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_6_T = sub(reg1.mat_real[6], reg1.mat_real[10]) @[calc6x6.scala 124:61]
    reg2.mat_real[6] <= _reg2_mat_real_6_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_7_T = add(reg1.mat_real[7], reg1.mat_real[8]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_7_T_1 = add(_reg2_mat_real_7_T, reg1.mat_real[9]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_7_T_2 = add(_reg2_mat_real_7_T_1, reg1.mat_real[10]) @[calc6x6.scala 125:107]
    reg2.mat_real[7] <= _reg2_mat_real_7_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_8_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_1 = tail(_reg2_mat_real_8_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_2 = asSInt(_reg2_mat_real_8_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_3 = add(_reg2_mat_real_8_T_2, reg1.mat_real[8]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_8_T_4 = sub(_reg2_mat_real_8_T_3, reg1.mat_real[9]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_8_T_5 = add(_reg2_mat_real_8_T_4, reg1.mat_real[10]) @[calc6x6.scala 126:108]
    reg2.mat_real[8] <= _reg2_mat_real_8_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_9_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[8]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_1 = tail(_reg2_mat_real_9_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_2 = asSInt(_reg2_mat_real_9_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_3 = add(_reg2_mat_real_9_T_2, reg1.mat_real[10]) @[calc6x6.scala 127:180]
    reg2.mat_real[9] <= _reg2_mat_real_9_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_10_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[8]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_1 = tail(_reg2_mat_real_10_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_2 = asSInt(_reg2_mat_real_10_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_3 = add(_reg2_mat_real_10_T_2, reg1.mat_real[10]) @[calc6x6.scala 128:180]
    reg2.mat_real[10] <= _reg2_mat_real_10_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_11_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_1 = tail(_reg2_mat_real_11_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_2 = asSInt(_reg2_mat_real_11_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_3 = add(_reg2_mat_real_11_T_2, reg1.mat_real[11]) @[calc6x6.scala 129:62]
    reg2.mat_real[11] <= _reg2_mat_real_11_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_12_T = sub(reg1.mat_real[12], reg1.mat_real[16]) @[calc6x6.scala 124:61]
    reg2.mat_real[12] <= _reg2_mat_real_12_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_13_T = add(reg1.mat_real[13], reg1.mat_real[14]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_13_T_1 = add(_reg2_mat_real_13_T, reg1.mat_real[15]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_13_T_2 = add(_reg2_mat_real_13_T_1, reg1.mat_real[16]) @[calc6x6.scala 125:107]
    reg2.mat_real[13] <= _reg2_mat_real_13_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_14_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_1 = tail(_reg2_mat_real_14_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_2 = asSInt(_reg2_mat_real_14_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_3 = add(_reg2_mat_real_14_T_2, reg1.mat_real[14]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_14_T_4 = sub(_reg2_mat_real_14_T_3, reg1.mat_real[15]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_14_T_5 = add(_reg2_mat_real_14_T_4, reg1.mat_real[16]) @[calc6x6.scala 126:108]
    reg2.mat_real[14] <= _reg2_mat_real_14_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_15_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[14]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_1 = tail(_reg2_mat_real_15_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_2 = asSInt(_reg2_mat_real_15_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_3 = add(_reg2_mat_real_15_T_2, reg1.mat_real[16]) @[calc6x6.scala 127:180]
    reg2.mat_real[15] <= _reg2_mat_real_15_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_16_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[14]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_1 = tail(_reg2_mat_real_16_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_2 = asSInt(_reg2_mat_real_16_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_3 = add(_reg2_mat_real_16_T_2, reg1.mat_real[16]) @[calc6x6.scala 128:180]
    reg2.mat_real[16] <= _reg2_mat_real_16_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_17_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_1 = tail(_reg2_mat_real_17_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_2 = asSInt(_reg2_mat_real_17_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_3 = add(_reg2_mat_real_17_T_2, reg1.mat_real[17]) @[calc6x6.scala 129:62]
    reg2.mat_real[17] <= _reg2_mat_real_17_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_18_T = sub(reg1.mat_real[18], reg1.mat_real[22]) @[calc6x6.scala 124:61]
    reg2.mat_real[18] <= _reg2_mat_real_18_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_19_T = add(reg1.mat_real[19], reg1.mat_real[20]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_19_T_1 = add(_reg2_mat_real_19_T, reg1.mat_real[21]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_19_T_2 = add(_reg2_mat_real_19_T_1, reg1.mat_real[22]) @[calc6x6.scala 125:107]
    reg2.mat_real[19] <= _reg2_mat_real_19_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_20_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[19]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_1 = tail(_reg2_mat_real_20_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_2 = asSInt(_reg2_mat_real_20_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_3 = add(_reg2_mat_real_20_T_2, reg1.mat_real[20]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_20_T_4 = sub(_reg2_mat_real_20_T_3, reg1.mat_real[21]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_20_T_5 = add(_reg2_mat_real_20_T_4, reg1.mat_real[22]) @[calc6x6.scala 126:108]
    reg2.mat_real[20] <= _reg2_mat_real_20_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_21_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[20]) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_1 = tail(_reg2_mat_real_21_T, 1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_2 = asSInt(_reg2_mat_real_21_T_1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_3 = add(_reg2_mat_real_21_T_2, reg1.mat_real[22]) @[calc6x6.scala 127:79]
    node _reg2_mat_real_21_T_4 = sub(_reg2_mat_real_21_T_3, reg1.mat_comp[3]) @[calc6x6.scala 127:102]
    node _reg2_mat_real_21_T_5 = add(_reg2_mat_real_21_T_4, reg1.mat_comp[1]) @[calc6x6.scala 127:127]
    reg2.mat_real[21] <= _reg2_mat_real_21_T_5 @[calc6x6.scala 127:37]
    node _reg2_mat_real_22_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[20]) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_1 = tail(_reg2_mat_real_22_T, 1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_2 = asSInt(_reg2_mat_real_22_T_1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_3 = add(_reg2_mat_real_22_T_2, reg1.mat_real[22]) @[calc6x6.scala 128:79]
    node _reg2_mat_real_22_T_4 = add(_reg2_mat_real_22_T_3, reg1.mat_comp[3]) @[calc6x6.scala 128:102]
    node _reg2_mat_real_22_T_5 = sub(_reg2_mat_real_22_T_4, reg1.mat_comp[1]) @[calc6x6.scala 128:127]
    reg2.mat_real[22] <= _reg2_mat_real_22_T_5 @[calc6x6.scala 128:37]
    node _reg2_mat_real_23_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[19]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_1 = tail(_reg2_mat_real_23_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_2 = asSInt(_reg2_mat_real_23_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_3 = add(_reg2_mat_real_23_T_2, reg1.mat_real[23]) @[calc6x6.scala 129:62]
    reg2.mat_real[23] <= _reg2_mat_real_23_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_24_T = sub(reg1.mat_real[24], reg1.mat_real[28]) @[calc6x6.scala 124:61]
    reg2.mat_real[24] <= _reg2_mat_real_24_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_25_T = add(reg1.mat_real[25], reg1.mat_real[26]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_25_T_1 = add(_reg2_mat_real_25_T, reg1.mat_real[27]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_25_T_2 = add(_reg2_mat_real_25_T_1, reg1.mat_real[28]) @[calc6x6.scala 125:107]
    reg2.mat_real[25] <= _reg2_mat_real_25_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_26_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[25]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_1 = tail(_reg2_mat_real_26_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_2 = asSInt(_reg2_mat_real_26_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_3 = add(_reg2_mat_real_26_T_2, reg1.mat_real[26]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_26_T_4 = sub(_reg2_mat_real_26_T_3, reg1.mat_real[27]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_26_T_5 = add(_reg2_mat_real_26_T_4, reg1.mat_real[28]) @[calc6x6.scala 126:108]
    reg2.mat_real[26] <= _reg2_mat_real_26_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_27_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[26]) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_1 = tail(_reg2_mat_real_27_T, 1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_2 = asSInt(_reg2_mat_real_27_T_1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_3 = add(_reg2_mat_real_27_T_2, reg1.mat_real[28]) @[calc6x6.scala 127:79]
    node _reg2_mat_real_27_T_4 = sub(_reg2_mat_real_27_T_3, reg1.mat_comp[9]) @[calc6x6.scala 127:102]
    node _reg2_mat_real_27_T_5 = add(_reg2_mat_real_27_T_4, reg1.mat_comp[7]) @[calc6x6.scala 127:127]
    reg2.mat_real[27] <= _reg2_mat_real_27_T_5 @[calc6x6.scala 127:37]
    node _reg2_mat_real_28_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[26]) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_1 = tail(_reg2_mat_real_28_T, 1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_2 = asSInt(_reg2_mat_real_28_T_1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_3 = add(_reg2_mat_real_28_T_2, reg1.mat_real[28]) @[calc6x6.scala 128:79]
    node _reg2_mat_real_28_T_4 = add(_reg2_mat_real_28_T_3, reg1.mat_comp[9]) @[calc6x6.scala 128:102]
    node _reg2_mat_real_28_T_5 = sub(_reg2_mat_real_28_T_4, reg1.mat_comp[7]) @[calc6x6.scala 128:127]
    reg2.mat_real[28] <= _reg2_mat_real_28_T_5 @[calc6x6.scala 128:37]
    node _reg2_mat_real_29_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[25]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_1 = tail(_reg2_mat_real_29_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_2 = asSInt(_reg2_mat_real_29_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_3 = add(_reg2_mat_real_29_T_2, reg1.mat_real[29]) @[calc6x6.scala 129:62]
    reg2.mat_real[29] <= _reg2_mat_real_29_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_30_T = sub(reg1.mat_real[30], reg1.mat_real[34]) @[calc6x6.scala 124:61]
    reg2.mat_real[30] <= _reg2_mat_real_30_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_31_T = add(reg1.mat_real[31], reg1.mat_real[32]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_31_T_1 = add(_reg2_mat_real_31_T, reg1.mat_real[33]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_31_T_2 = add(_reg2_mat_real_31_T_1, reg1.mat_real[34]) @[calc6x6.scala 125:107]
    reg2.mat_real[31] <= _reg2_mat_real_31_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_32_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_1 = tail(_reg2_mat_real_32_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_2 = asSInt(_reg2_mat_real_32_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_3 = add(_reg2_mat_real_32_T_2, reg1.mat_real[32]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_32_T_4 = sub(_reg2_mat_real_32_T_3, reg1.mat_real[33]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_32_T_5 = add(_reg2_mat_real_32_T_4, reg1.mat_real[34]) @[calc6x6.scala 126:108]
    reg2.mat_real[32] <= _reg2_mat_real_32_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_33_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[32]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_1 = tail(_reg2_mat_real_33_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_2 = asSInt(_reg2_mat_real_33_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_3 = add(_reg2_mat_real_33_T_2, reg1.mat_real[34]) @[calc6x6.scala 127:180]
    reg2.mat_real[33] <= _reg2_mat_real_33_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_34_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[32]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_1 = tail(_reg2_mat_real_34_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_2 = asSInt(_reg2_mat_real_34_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_3 = add(_reg2_mat_real_34_T_2, reg1.mat_real[34]) @[calc6x6.scala 128:180]
    reg2.mat_real[34] <= _reg2_mat_real_34_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_35_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_1 = tail(_reg2_mat_real_35_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_2 = asSInt(_reg2_mat_real_35_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_3 = add(_reg2_mat_real_35_T_2, reg1.mat_real[35]) @[calc6x6.scala 129:62]
    reg2.mat_real[35] <= _reg2_mat_real_35_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_comp_0_T = sub(reg1.mat_comp[0], reg1.mat_comp[4]) @[calc6x6.scala 132:50]
    reg2.mat_comp[0] <= _reg2_mat_comp_0_T @[calc6x6.scala 132:26]
    node _reg2_mat_comp_1_T = add(reg1.mat_comp[1], reg1.mat_comp[2]) @[calc6x6.scala 133:50]
    node _reg2_mat_comp_1_T_1 = add(_reg2_mat_comp_1_T, reg1.mat_comp[3]) @[calc6x6.scala 133:73]
    node _reg2_mat_comp_1_T_2 = add(_reg2_mat_comp_1_T_1, reg1.mat_comp[4]) @[calc6x6.scala 133:96]
    reg2.mat_comp[1] <= _reg2_mat_comp_1_T_2 @[calc6x6.scala 133:26]
    node _reg2_mat_comp_2_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[1]) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_1 = tail(_reg2_mat_comp_2_T, 1) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_2 = asSInt(_reg2_mat_comp_2_T_1) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_3 = add(_reg2_mat_comp_2_T_2, reg1.mat_comp[2]) @[calc6x6.scala 134:51]
    node _reg2_mat_comp_2_T_4 = sub(_reg2_mat_comp_2_T_3, reg1.mat_comp[3]) @[calc6x6.scala 134:74]
    node _reg2_mat_comp_2_T_5 = add(_reg2_mat_comp_2_T_4, reg1.mat_comp[4]) @[calc6x6.scala 134:97]
    reg2.mat_comp[2] <= _reg2_mat_comp_2_T_5 @[calc6x6.scala 134:26]
    node _reg2_mat_comp_3_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[2]) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_1 = tail(_reg2_mat_comp_3_T, 1) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_2 = asSInt(_reg2_mat_comp_3_T_1) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_3 = add(_reg2_mat_comp_3_T_2, reg1.mat_comp[4]) @[calc6x6.scala 135:51]
    node _reg2_mat_comp_3_T_4 = sub(_reg2_mat_comp_3_T_3, reg1.mat_real[19]) @[calc6x6.scala 135:74]
    node _reg2_mat_comp_3_T_5 = add(_reg2_mat_comp_3_T_4, reg1.mat_real[21]) @[calc6x6.scala 135:97]
    reg2.mat_comp[3] <= _reg2_mat_comp_3_T_5 @[calc6x6.scala 135:26]
    node _reg2_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[2]) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_1 = tail(_reg2_mat_comp_4_T, 1) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_2 = asSInt(_reg2_mat_comp_4_T_1) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_3 = add(_reg2_mat_comp_4_T_2, reg1.mat_comp[4]) @[calc6x6.scala 136:51]
    node _reg2_mat_comp_4_T_4 = add(_reg2_mat_comp_4_T_3, reg1.mat_real[19]) @[calc6x6.scala 136:74]
    node _reg2_mat_comp_4_T_5 = sub(_reg2_mat_comp_4_T_4, reg1.mat_real[21]) @[calc6x6.scala 136:97]
    reg2.mat_comp[4] <= _reg2_mat_comp_4_T_5 @[calc6x6.scala 136:26]
    node _reg2_mat_comp_5_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[1]) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_1 = tail(_reg2_mat_comp_5_T, 1) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_2 = asSInt(_reg2_mat_comp_5_T_1) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_3 = add(_reg2_mat_comp_5_T_2, reg1.mat_comp[5]) @[calc6x6.scala 137:51]
    reg2.mat_comp[5] <= _reg2_mat_comp_5_T_3 @[calc6x6.scala 137:26]
    node _reg2_mat_comp_6_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_1 = tail(_reg2_mat_comp_6_T, 1) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_2 = asSInt(_reg2_mat_comp_6_T_1) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_3 = add(_reg2_mat_comp_6_T_2, reg1.mat_real[3]) @[calc6x6.scala 140:51]
    reg2.mat_comp[6] <= _reg2_mat_comp_6_T_3 @[calc6x6.scala 140:26]
    node _reg2_mat_comp_7_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_1 = tail(_reg2_mat_comp_7_T, 1) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_2 = asSInt(_reg2_mat_comp_7_T_1) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_3 = add(_reg2_mat_comp_7_T_2, reg1.mat_real[9]) @[calc6x6.scala 141:51]
    reg2.mat_comp[7] <= _reg2_mat_comp_7_T_3 @[calc6x6.scala 141:26]
    node _reg2_mat_comp_8_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_1 = tail(_reg2_mat_comp_8_T, 1) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_2 = asSInt(_reg2_mat_comp_8_T_1) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_3 = add(_reg2_mat_comp_8_T_2, reg1.mat_real[15]) @[calc6x6.scala 142:51]
    reg2.mat_comp[8] <= _reg2_mat_comp_8_T_3 @[calc6x6.scala 142:26]
    node _reg2_mat_comp_9_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_1 = tail(_reg2_mat_comp_9_T, 1) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_2 = asSInt(_reg2_mat_comp_9_T_1) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_3 = add(_reg2_mat_comp_9_T_2, reg1.mat_real[33]) @[calc6x6.scala 143:51]
    reg2.mat_comp[9] <= _reg2_mat_comp_9_T_3 @[calc6x6.scala 143:26]
    valid_reg[2] <= valid_reg[1] @[calc6x6.scala 177:18]
    node _reg3_mat_real_0_T = add(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_1 = tail(_reg3_mat_real_0_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_2 = asSInt(_reg3_mat_real_0_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_3 = add(_reg3_mat_real_0_T_2, w3.mat_real[18]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_4 = tail(_reg3_mat_real_0_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_5 = asSInt(_reg3_mat_real_0_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_6 = add(_reg3_mat_real_0_T_5, w3.mat_real[24]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_7 = tail(_reg3_mat_real_0_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_8 = asSInt(_reg3_mat_real_0_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_9 = dshr(_reg3_mat_real_0_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_0_T_10 = add(w3.mat_real[0], _reg3_mat_real_0_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_0_T_11 = tail(_reg3_mat_real_0_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_0_T_12 = asSInt(_reg3_mat_real_0_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[0] <= _reg3_mat_real_0_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_6_T = sub(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_1 = tail(_reg3_mat_real_6_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_2 = asSInt(_reg3_mat_real_6_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_3 = sub(_reg3_mat_real_6_T_2, w3.mat_comp[18]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_4 = tail(_reg3_mat_real_6_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_5 = asSInt(_reg3_mat_real_6_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_6 = add(_reg3_mat_real_6_T_5, w3.mat_comp[24]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_7 = tail(_reg3_mat_real_6_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_8 = asSInt(_reg3_mat_real_6_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_9 = dshr(_reg3_mat_real_6_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[6] <= _reg3_mat_real_6_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_12_T = add(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_1 = tail(_reg3_mat_real_12_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_2 = asSInt(_reg3_mat_real_12_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_3 = sub(_reg3_mat_real_12_T_2, w3.mat_real[18]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_4 = tail(_reg3_mat_real_12_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_5 = asSInt(_reg3_mat_real_12_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_6 = sub(_reg3_mat_real_12_T_5, w3.mat_real[24]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_7 = tail(_reg3_mat_real_12_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_8 = asSInt(_reg3_mat_real_12_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_9 = dshr(_reg3_mat_real_12_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[12] <= _reg3_mat_real_12_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_18_T = sub(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_1 = tail(_reg3_mat_real_18_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_2 = asSInt(_reg3_mat_real_18_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_3 = add(_reg3_mat_real_18_T_2, w3.mat_comp[18]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_4 = tail(_reg3_mat_real_18_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_5 = asSInt(_reg3_mat_real_18_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_6 = sub(_reg3_mat_real_18_T_5, w3.mat_comp[24]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_7 = tail(_reg3_mat_real_18_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_8 = asSInt(_reg3_mat_real_18_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_9 = dshr(_reg3_mat_real_18_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_18_T_10 = add(_reg3_mat_real_18_T_9, w3.mat_real[30]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_18_T_11 = tail(_reg3_mat_real_18_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_18_T_12 = asSInt(_reg3_mat_real_18_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[18] <= _reg3_mat_real_18_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_0_T = add(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_1 = tail(_reg3_mat_comp_0_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_2 = asSInt(_reg3_mat_comp_0_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_3 = add(_reg3_mat_comp_0_T_2, w3.mat_comp[18]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_4 = tail(_reg3_mat_comp_0_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_5 = asSInt(_reg3_mat_comp_0_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_6 = add(_reg3_mat_comp_0_T_5, w3.mat_comp[24]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_7 = tail(_reg3_mat_comp_0_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_8 = asSInt(_reg3_mat_comp_0_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_9 = dshr(_reg3_mat_comp_0_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_0_T_10 = add(w3.mat_comp[0], _reg3_mat_comp_0_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_0_T_11 = tail(_reg3_mat_comp_0_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_0_T_12 = asSInt(_reg3_mat_comp_0_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[0] <= _reg3_mat_comp_0_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_6_T = sub(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_1 = tail(_reg3_mat_comp_6_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_2 = asSInt(_reg3_mat_comp_6_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_3 = add(_reg3_mat_comp_6_T_2, w3.mat_real[18]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_4 = tail(_reg3_mat_comp_6_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_5 = asSInt(_reg3_mat_comp_6_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_6 = sub(_reg3_mat_comp_6_T_5, w3.mat_real[24]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_7 = tail(_reg3_mat_comp_6_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_8 = asSInt(_reg3_mat_comp_6_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_9 = dshr(_reg3_mat_comp_6_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[6] <= _reg3_mat_comp_6_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_12_T = add(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_1 = tail(_reg3_mat_comp_12_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_2 = asSInt(_reg3_mat_comp_12_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_3 = sub(_reg3_mat_comp_12_T_2, w3.mat_comp[18]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_4 = tail(_reg3_mat_comp_12_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_5 = asSInt(_reg3_mat_comp_12_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_6 = sub(_reg3_mat_comp_12_T_5, w3.mat_comp[24]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_7 = tail(_reg3_mat_comp_12_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_8 = asSInt(_reg3_mat_comp_12_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_9 = dshr(_reg3_mat_comp_12_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[12] <= _reg3_mat_comp_12_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_18_T = sub(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_1 = tail(_reg3_mat_comp_18_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_2 = asSInt(_reg3_mat_comp_18_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_3 = sub(_reg3_mat_comp_18_T_2, w3.mat_real[18]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_4 = tail(_reg3_mat_comp_18_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_5 = asSInt(_reg3_mat_comp_18_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_6 = add(_reg3_mat_comp_18_T_5, w3.mat_real[24]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_7 = tail(_reg3_mat_comp_18_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_8 = asSInt(_reg3_mat_comp_18_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_9 = dshr(_reg3_mat_comp_18_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_18_T_10 = add(_reg3_mat_comp_18_T_9, w3.mat_comp[30]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_18_T_11 = tail(_reg3_mat_comp_18_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_18_T_12 = asSInt(_reg3_mat_comp_18_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[18] <= _reg3_mat_comp_18_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_1_T = add(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_1 = tail(_reg3_mat_real_1_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_2 = asSInt(_reg3_mat_real_1_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_3 = add(_reg3_mat_real_1_T_2, w3.mat_real[19]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_4 = tail(_reg3_mat_real_1_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_5 = asSInt(_reg3_mat_real_1_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_6 = add(_reg3_mat_real_1_T_5, w3.mat_real[25]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_7 = tail(_reg3_mat_real_1_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_8 = asSInt(_reg3_mat_real_1_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_9 = dshr(_reg3_mat_real_1_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_1_T_10 = add(w3.mat_real[1], _reg3_mat_real_1_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_1_T_11 = tail(_reg3_mat_real_1_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_1_T_12 = asSInt(_reg3_mat_real_1_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[1] <= _reg3_mat_real_1_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_7_T = sub(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_1 = tail(_reg3_mat_real_7_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_2 = asSInt(_reg3_mat_real_7_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_3 = sub(_reg3_mat_real_7_T_2, w3.mat_comp[19]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_4 = tail(_reg3_mat_real_7_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_5 = asSInt(_reg3_mat_real_7_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_6 = add(_reg3_mat_real_7_T_5, w3.mat_comp[25]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_7 = tail(_reg3_mat_real_7_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_8 = asSInt(_reg3_mat_real_7_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_9 = dshr(_reg3_mat_real_7_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[7] <= _reg3_mat_real_7_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_13_T = add(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_1 = tail(_reg3_mat_real_13_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_2 = asSInt(_reg3_mat_real_13_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_3 = sub(_reg3_mat_real_13_T_2, w3.mat_real[19]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_4 = tail(_reg3_mat_real_13_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_5 = asSInt(_reg3_mat_real_13_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_6 = sub(_reg3_mat_real_13_T_5, w3.mat_real[25]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_7 = tail(_reg3_mat_real_13_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_8 = asSInt(_reg3_mat_real_13_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_9 = dshr(_reg3_mat_real_13_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[13] <= _reg3_mat_real_13_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_19_T = sub(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_1 = tail(_reg3_mat_real_19_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_2 = asSInt(_reg3_mat_real_19_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_3 = add(_reg3_mat_real_19_T_2, w3.mat_comp[19]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_4 = tail(_reg3_mat_real_19_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_5 = asSInt(_reg3_mat_real_19_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_6 = sub(_reg3_mat_real_19_T_5, w3.mat_comp[25]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_7 = tail(_reg3_mat_real_19_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_8 = asSInt(_reg3_mat_real_19_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_9 = dshr(_reg3_mat_real_19_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_19_T_10 = add(_reg3_mat_real_19_T_9, w3.mat_real[31]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_19_T_11 = tail(_reg3_mat_real_19_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_19_T_12 = asSInt(_reg3_mat_real_19_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[19] <= _reg3_mat_real_19_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_1_T = add(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_1 = tail(_reg3_mat_comp_1_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_2 = asSInt(_reg3_mat_comp_1_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_3 = add(_reg3_mat_comp_1_T_2, w3.mat_comp[19]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_4 = tail(_reg3_mat_comp_1_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_5 = asSInt(_reg3_mat_comp_1_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_6 = add(_reg3_mat_comp_1_T_5, w3.mat_comp[25]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_7 = tail(_reg3_mat_comp_1_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_8 = asSInt(_reg3_mat_comp_1_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_9 = dshr(_reg3_mat_comp_1_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_1_T_10 = add(w3.mat_comp[1], _reg3_mat_comp_1_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_1_T_11 = tail(_reg3_mat_comp_1_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_1_T_12 = asSInt(_reg3_mat_comp_1_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[1] <= _reg3_mat_comp_1_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_7_T = sub(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_1 = tail(_reg3_mat_comp_7_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_2 = asSInt(_reg3_mat_comp_7_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_3 = add(_reg3_mat_comp_7_T_2, w3.mat_real[19]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_4 = tail(_reg3_mat_comp_7_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_5 = asSInt(_reg3_mat_comp_7_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_6 = sub(_reg3_mat_comp_7_T_5, w3.mat_real[25]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_7 = tail(_reg3_mat_comp_7_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_8 = asSInt(_reg3_mat_comp_7_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_9 = dshr(_reg3_mat_comp_7_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[7] <= _reg3_mat_comp_7_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_13_T = add(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_1 = tail(_reg3_mat_comp_13_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_2 = asSInt(_reg3_mat_comp_13_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_3 = sub(_reg3_mat_comp_13_T_2, w3.mat_comp[19]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_4 = tail(_reg3_mat_comp_13_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_5 = asSInt(_reg3_mat_comp_13_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_6 = sub(_reg3_mat_comp_13_T_5, w3.mat_comp[25]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_7 = tail(_reg3_mat_comp_13_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_8 = asSInt(_reg3_mat_comp_13_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_9 = dshr(_reg3_mat_comp_13_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[13] <= _reg3_mat_comp_13_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_19_T = sub(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_1 = tail(_reg3_mat_comp_19_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_2 = asSInt(_reg3_mat_comp_19_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_3 = sub(_reg3_mat_comp_19_T_2, w3.mat_real[19]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_4 = tail(_reg3_mat_comp_19_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_5 = asSInt(_reg3_mat_comp_19_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_6 = add(_reg3_mat_comp_19_T_5, w3.mat_real[25]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_7 = tail(_reg3_mat_comp_19_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_8 = asSInt(_reg3_mat_comp_19_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_9 = dshr(_reg3_mat_comp_19_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_19_T_10 = add(_reg3_mat_comp_19_T_9, w3.mat_comp[31]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_19_T_11 = tail(_reg3_mat_comp_19_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_19_T_12 = asSInt(_reg3_mat_comp_19_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[19] <= _reg3_mat_comp_19_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_2_T = add(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_1 = tail(_reg3_mat_real_2_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_2 = asSInt(_reg3_mat_real_2_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_3 = add(_reg3_mat_real_2_T_2, w3.mat_real[20]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_4 = tail(_reg3_mat_real_2_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_5 = asSInt(_reg3_mat_real_2_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_6 = add(_reg3_mat_real_2_T_5, w3.mat_real[26]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_7 = tail(_reg3_mat_real_2_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_8 = asSInt(_reg3_mat_real_2_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_9 = dshr(_reg3_mat_real_2_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_2_T_10 = add(w3.mat_real[2], _reg3_mat_real_2_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_2_T_11 = tail(_reg3_mat_real_2_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_2_T_12 = asSInt(_reg3_mat_real_2_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[2] <= _reg3_mat_real_2_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_8_T = sub(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_1 = tail(_reg3_mat_real_8_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_2 = asSInt(_reg3_mat_real_8_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_3 = sub(_reg3_mat_real_8_T_2, w3.mat_comp[20]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_4 = tail(_reg3_mat_real_8_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_5 = asSInt(_reg3_mat_real_8_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_6 = add(_reg3_mat_real_8_T_5, w3.mat_comp[26]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_7 = tail(_reg3_mat_real_8_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_8 = asSInt(_reg3_mat_real_8_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_9 = dshr(_reg3_mat_real_8_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[8] <= _reg3_mat_real_8_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_14_T = add(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_1 = tail(_reg3_mat_real_14_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_2 = asSInt(_reg3_mat_real_14_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_3 = sub(_reg3_mat_real_14_T_2, w3.mat_real[20]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_4 = tail(_reg3_mat_real_14_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_5 = asSInt(_reg3_mat_real_14_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_6 = sub(_reg3_mat_real_14_T_5, w3.mat_real[26]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_7 = tail(_reg3_mat_real_14_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_8 = asSInt(_reg3_mat_real_14_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_9 = dshr(_reg3_mat_real_14_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[14] <= _reg3_mat_real_14_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_20_T = sub(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_1 = tail(_reg3_mat_real_20_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_2 = asSInt(_reg3_mat_real_20_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_3 = add(_reg3_mat_real_20_T_2, w3.mat_comp[20]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_4 = tail(_reg3_mat_real_20_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_5 = asSInt(_reg3_mat_real_20_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_6 = sub(_reg3_mat_real_20_T_5, w3.mat_comp[26]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_7 = tail(_reg3_mat_real_20_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_8 = asSInt(_reg3_mat_real_20_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_9 = dshr(_reg3_mat_real_20_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_20_T_10 = add(_reg3_mat_real_20_T_9, w3.mat_real[32]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_20_T_11 = tail(_reg3_mat_real_20_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_20_T_12 = asSInt(_reg3_mat_real_20_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[20] <= _reg3_mat_real_20_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_2_T = add(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_1 = tail(_reg3_mat_comp_2_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_2 = asSInt(_reg3_mat_comp_2_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_3 = add(_reg3_mat_comp_2_T_2, w3.mat_comp[20]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_4 = tail(_reg3_mat_comp_2_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_5 = asSInt(_reg3_mat_comp_2_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_6 = add(_reg3_mat_comp_2_T_5, w3.mat_comp[26]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_7 = tail(_reg3_mat_comp_2_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_8 = asSInt(_reg3_mat_comp_2_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_9 = dshr(_reg3_mat_comp_2_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_2_T_10 = add(w3.mat_comp[2], _reg3_mat_comp_2_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_2_T_11 = tail(_reg3_mat_comp_2_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_2_T_12 = asSInt(_reg3_mat_comp_2_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[2] <= _reg3_mat_comp_2_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_8_T = sub(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_1 = tail(_reg3_mat_comp_8_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_2 = asSInt(_reg3_mat_comp_8_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_3 = add(_reg3_mat_comp_8_T_2, w3.mat_real[20]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_4 = tail(_reg3_mat_comp_8_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_5 = asSInt(_reg3_mat_comp_8_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_6 = sub(_reg3_mat_comp_8_T_5, w3.mat_real[26]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_7 = tail(_reg3_mat_comp_8_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_8 = asSInt(_reg3_mat_comp_8_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_9 = dshr(_reg3_mat_comp_8_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[8] <= _reg3_mat_comp_8_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_14_T = add(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_1 = tail(_reg3_mat_comp_14_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_2 = asSInt(_reg3_mat_comp_14_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_3 = sub(_reg3_mat_comp_14_T_2, w3.mat_comp[20]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_4 = tail(_reg3_mat_comp_14_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_5 = asSInt(_reg3_mat_comp_14_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_6 = sub(_reg3_mat_comp_14_T_5, w3.mat_comp[26]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_7 = tail(_reg3_mat_comp_14_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_8 = asSInt(_reg3_mat_comp_14_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_9 = dshr(_reg3_mat_comp_14_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[14] <= _reg3_mat_comp_14_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_20_T = sub(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_1 = tail(_reg3_mat_comp_20_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_2 = asSInt(_reg3_mat_comp_20_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_3 = sub(_reg3_mat_comp_20_T_2, w3.mat_real[20]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_4 = tail(_reg3_mat_comp_20_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_5 = asSInt(_reg3_mat_comp_20_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_6 = add(_reg3_mat_comp_20_T_5, w3.mat_real[26]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_7 = tail(_reg3_mat_comp_20_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_8 = asSInt(_reg3_mat_comp_20_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_9 = dshr(_reg3_mat_comp_20_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_20_T_10 = add(_reg3_mat_comp_20_T_9, w3.mat_comp[32]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_20_T_11 = tail(_reg3_mat_comp_20_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_20_T_12 = asSInt(_reg3_mat_comp_20_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[20] <= _reg3_mat_comp_20_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_3_T = add(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_1 = tail(_reg3_mat_real_3_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_2 = asSInt(_reg3_mat_real_3_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_3 = add(_reg3_mat_real_3_T_2, w3.mat_real[21]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_4 = tail(_reg3_mat_real_3_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_5 = asSInt(_reg3_mat_real_3_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_6 = add(_reg3_mat_real_3_T_5, w3.mat_real[27]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_7 = tail(_reg3_mat_real_3_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_8 = asSInt(_reg3_mat_real_3_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_9 = dshr(_reg3_mat_real_3_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_3_T_10 = add(w3.mat_real[3], _reg3_mat_real_3_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_3_T_11 = tail(_reg3_mat_real_3_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_3_T_12 = asSInt(_reg3_mat_real_3_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[3] <= _reg3_mat_real_3_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_9_T = sub(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_1 = tail(_reg3_mat_real_9_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_2 = asSInt(_reg3_mat_real_9_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_3 = sub(_reg3_mat_real_9_T_2, w3.mat_comp[21]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_4 = tail(_reg3_mat_real_9_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_5 = asSInt(_reg3_mat_real_9_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_6 = add(_reg3_mat_real_9_T_5, w3.mat_comp[27]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_7 = tail(_reg3_mat_real_9_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_8 = asSInt(_reg3_mat_real_9_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_9 = dshr(_reg3_mat_real_9_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[9] <= _reg3_mat_real_9_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_15_T = add(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_1 = tail(_reg3_mat_real_15_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_2 = asSInt(_reg3_mat_real_15_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_3 = sub(_reg3_mat_real_15_T_2, w3.mat_real[21]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_4 = tail(_reg3_mat_real_15_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_5 = asSInt(_reg3_mat_real_15_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_6 = sub(_reg3_mat_real_15_T_5, w3.mat_real[27]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_7 = tail(_reg3_mat_real_15_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_8 = asSInt(_reg3_mat_real_15_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_9 = dshr(_reg3_mat_real_15_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[15] <= _reg3_mat_real_15_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_21_T = sub(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_1 = tail(_reg3_mat_real_21_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_2 = asSInt(_reg3_mat_real_21_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_3 = add(_reg3_mat_real_21_T_2, w3.mat_comp[21]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_4 = tail(_reg3_mat_real_21_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_5 = asSInt(_reg3_mat_real_21_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_6 = sub(_reg3_mat_real_21_T_5, w3.mat_comp[27]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_7 = tail(_reg3_mat_real_21_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_8 = asSInt(_reg3_mat_real_21_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_9 = dshr(_reg3_mat_real_21_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_21_T_10 = add(_reg3_mat_real_21_T_9, w3.mat_real[33]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_21_T_11 = tail(_reg3_mat_real_21_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_21_T_12 = asSInt(_reg3_mat_real_21_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[21] <= _reg3_mat_real_21_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_3_T = add(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_1 = tail(_reg3_mat_comp_3_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_2 = asSInt(_reg3_mat_comp_3_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_3 = add(_reg3_mat_comp_3_T_2, w3.mat_comp[21]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_4 = tail(_reg3_mat_comp_3_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_5 = asSInt(_reg3_mat_comp_3_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_6 = add(_reg3_mat_comp_3_T_5, w3.mat_comp[27]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_7 = tail(_reg3_mat_comp_3_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_8 = asSInt(_reg3_mat_comp_3_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_9 = dshr(_reg3_mat_comp_3_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_3_T_10 = add(w3.mat_comp[3], _reg3_mat_comp_3_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_3_T_11 = tail(_reg3_mat_comp_3_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_3_T_12 = asSInt(_reg3_mat_comp_3_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[3] <= _reg3_mat_comp_3_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_9_T = sub(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_1 = tail(_reg3_mat_comp_9_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_2 = asSInt(_reg3_mat_comp_9_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_3 = add(_reg3_mat_comp_9_T_2, w3.mat_real[21]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_4 = tail(_reg3_mat_comp_9_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_5 = asSInt(_reg3_mat_comp_9_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_6 = sub(_reg3_mat_comp_9_T_5, w3.mat_real[27]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_7 = tail(_reg3_mat_comp_9_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_8 = asSInt(_reg3_mat_comp_9_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_9 = dshr(_reg3_mat_comp_9_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[9] <= _reg3_mat_comp_9_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_15_T = add(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_1 = tail(_reg3_mat_comp_15_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_2 = asSInt(_reg3_mat_comp_15_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_3 = sub(_reg3_mat_comp_15_T_2, w3.mat_comp[21]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_4 = tail(_reg3_mat_comp_15_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_5 = asSInt(_reg3_mat_comp_15_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_6 = sub(_reg3_mat_comp_15_T_5, w3.mat_comp[27]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_7 = tail(_reg3_mat_comp_15_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_8 = asSInt(_reg3_mat_comp_15_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_9 = dshr(_reg3_mat_comp_15_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[15] <= _reg3_mat_comp_15_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_21_T = sub(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_1 = tail(_reg3_mat_comp_21_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_2 = asSInt(_reg3_mat_comp_21_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_3 = sub(_reg3_mat_comp_21_T_2, w3.mat_real[21]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_4 = tail(_reg3_mat_comp_21_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_5 = asSInt(_reg3_mat_comp_21_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_6 = add(_reg3_mat_comp_21_T_5, w3.mat_real[27]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_7 = tail(_reg3_mat_comp_21_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_8 = asSInt(_reg3_mat_comp_21_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_9 = dshr(_reg3_mat_comp_21_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_21_T_10 = add(_reg3_mat_comp_21_T_9, w3.mat_comp[33]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_21_T_11 = tail(_reg3_mat_comp_21_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_21_T_12 = asSInt(_reg3_mat_comp_21_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[21] <= _reg3_mat_comp_21_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_4_T = add(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_1 = tail(_reg3_mat_real_4_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_2 = asSInt(_reg3_mat_real_4_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_3 = add(_reg3_mat_real_4_T_2, w3.mat_real[22]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_4 = tail(_reg3_mat_real_4_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_5 = asSInt(_reg3_mat_real_4_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_6 = add(_reg3_mat_real_4_T_5, w3.mat_real[28]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_7 = tail(_reg3_mat_real_4_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_8 = asSInt(_reg3_mat_real_4_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_9 = dshr(_reg3_mat_real_4_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_4_T_10 = add(w3.mat_real[4], _reg3_mat_real_4_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_4_T_11 = tail(_reg3_mat_real_4_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_4_T_12 = asSInt(_reg3_mat_real_4_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[4] <= _reg3_mat_real_4_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_10_T = sub(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_1 = tail(_reg3_mat_real_10_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_2 = asSInt(_reg3_mat_real_10_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_3 = sub(_reg3_mat_real_10_T_2, w3.mat_comp[22]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_4 = tail(_reg3_mat_real_10_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_5 = asSInt(_reg3_mat_real_10_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_6 = add(_reg3_mat_real_10_T_5, w3.mat_comp[28]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_7 = tail(_reg3_mat_real_10_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_8 = asSInt(_reg3_mat_real_10_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_9 = dshr(_reg3_mat_real_10_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[10] <= _reg3_mat_real_10_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_16_T = add(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_1 = tail(_reg3_mat_real_16_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_2 = asSInt(_reg3_mat_real_16_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_3 = sub(_reg3_mat_real_16_T_2, w3.mat_real[22]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_4 = tail(_reg3_mat_real_16_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_5 = asSInt(_reg3_mat_real_16_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_6 = sub(_reg3_mat_real_16_T_5, w3.mat_real[28]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_7 = tail(_reg3_mat_real_16_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_8 = asSInt(_reg3_mat_real_16_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_9 = dshr(_reg3_mat_real_16_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[16] <= _reg3_mat_real_16_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_22_T = sub(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_1 = tail(_reg3_mat_real_22_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_2 = asSInt(_reg3_mat_real_22_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_3 = add(_reg3_mat_real_22_T_2, w3.mat_comp[22]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_4 = tail(_reg3_mat_real_22_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_5 = asSInt(_reg3_mat_real_22_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_6 = sub(_reg3_mat_real_22_T_5, w3.mat_comp[28]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_7 = tail(_reg3_mat_real_22_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_8 = asSInt(_reg3_mat_real_22_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_9 = dshr(_reg3_mat_real_22_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_22_T_10 = add(_reg3_mat_real_22_T_9, w3.mat_real[34]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_22_T_11 = tail(_reg3_mat_real_22_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_22_T_12 = asSInt(_reg3_mat_real_22_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[22] <= _reg3_mat_real_22_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_4_T = add(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_1 = tail(_reg3_mat_comp_4_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_2 = asSInt(_reg3_mat_comp_4_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_3 = add(_reg3_mat_comp_4_T_2, w3.mat_comp[22]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_4 = tail(_reg3_mat_comp_4_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_5 = asSInt(_reg3_mat_comp_4_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_6 = add(_reg3_mat_comp_4_T_5, w3.mat_comp[28]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_7 = tail(_reg3_mat_comp_4_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_8 = asSInt(_reg3_mat_comp_4_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_9 = dshr(_reg3_mat_comp_4_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_4_T_10 = add(w3.mat_comp[4], _reg3_mat_comp_4_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_4_T_11 = tail(_reg3_mat_comp_4_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_4_T_12 = asSInt(_reg3_mat_comp_4_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[4] <= _reg3_mat_comp_4_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_10_T = sub(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_1 = tail(_reg3_mat_comp_10_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_2 = asSInt(_reg3_mat_comp_10_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_3 = add(_reg3_mat_comp_10_T_2, w3.mat_real[22]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_4 = tail(_reg3_mat_comp_10_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_5 = asSInt(_reg3_mat_comp_10_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_6 = sub(_reg3_mat_comp_10_T_5, w3.mat_real[28]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_7 = tail(_reg3_mat_comp_10_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_8 = asSInt(_reg3_mat_comp_10_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_9 = dshr(_reg3_mat_comp_10_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[10] <= _reg3_mat_comp_10_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_16_T = add(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_1 = tail(_reg3_mat_comp_16_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_2 = asSInt(_reg3_mat_comp_16_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_3 = sub(_reg3_mat_comp_16_T_2, w3.mat_comp[22]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_4 = tail(_reg3_mat_comp_16_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_5 = asSInt(_reg3_mat_comp_16_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_6 = sub(_reg3_mat_comp_16_T_5, w3.mat_comp[28]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_7 = tail(_reg3_mat_comp_16_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_8 = asSInt(_reg3_mat_comp_16_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_9 = dshr(_reg3_mat_comp_16_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[16] <= _reg3_mat_comp_16_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_22_T = sub(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_1 = tail(_reg3_mat_comp_22_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_2 = asSInt(_reg3_mat_comp_22_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_3 = sub(_reg3_mat_comp_22_T_2, w3.mat_real[22]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_4 = tail(_reg3_mat_comp_22_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_5 = asSInt(_reg3_mat_comp_22_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_6 = add(_reg3_mat_comp_22_T_5, w3.mat_real[28]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_7 = tail(_reg3_mat_comp_22_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_8 = asSInt(_reg3_mat_comp_22_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_9 = dshr(_reg3_mat_comp_22_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_22_T_10 = add(_reg3_mat_comp_22_T_9, w3.mat_comp[34]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_22_T_11 = tail(_reg3_mat_comp_22_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_22_T_12 = asSInt(_reg3_mat_comp_22_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[22] <= _reg3_mat_comp_22_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_5_T = add(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_1 = tail(_reg3_mat_real_5_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_2 = asSInt(_reg3_mat_real_5_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_3 = add(_reg3_mat_real_5_T_2, w3.mat_real[23]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_4 = tail(_reg3_mat_real_5_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_5 = asSInt(_reg3_mat_real_5_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_6 = add(_reg3_mat_real_5_T_5, w3.mat_real[29]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_7 = tail(_reg3_mat_real_5_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_8 = asSInt(_reg3_mat_real_5_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_9 = dshr(_reg3_mat_real_5_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_5_T_10 = add(w3.mat_real[5], _reg3_mat_real_5_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_5_T_11 = tail(_reg3_mat_real_5_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_5_T_12 = asSInt(_reg3_mat_real_5_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[5] <= _reg3_mat_real_5_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_11_T = sub(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_1 = tail(_reg3_mat_real_11_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_2 = asSInt(_reg3_mat_real_11_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_3 = sub(_reg3_mat_real_11_T_2, w3.mat_comp[23]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_4 = tail(_reg3_mat_real_11_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_5 = asSInt(_reg3_mat_real_11_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_6 = add(_reg3_mat_real_11_T_5, w3.mat_comp[29]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_7 = tail(_reg3_mat_real_11_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_8 = asSInt(_reg3_mat_real_11_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_9 = dshr(_reg3_mat_real_11_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[11] <= _reg3_mat_real_11_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_17_T = add(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_1 = tail(_reg3_mat_real_17_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_2 = asSInt(_reg3_mat_real_17_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_3 = sub(_reg3_mat_real_17_T_2, w3.mat_real[23]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_4 = tail(_reg3_mat_real_17_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_5 = asSInt(_reg3_mat_real_17_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_6 = sub(_reg3_mat_real_17_T_5, w3.mat_real[29]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_7 = tail(_reg3_mat_real_17_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_8 = asSInt(_reg3_mat_real_17_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_9 = dshr(_reg3_mat_real_17_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[17] <= _reg3_mat_real_17_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_23_T = sub(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_1 = tail(_reg3_mat_real_23_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_2 = asSInt(_reg3_mat_real_23_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_3 = add(_reg3_mat_real_23_T_2, w3.mat_comp[23]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_4 = tail(_reg3_mat_real_23_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_5 = asSInt(_reg3_mat_real_23_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_6 = sub(_reg3_mat_real_23_T_5, w3.mat_comp[29]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_7 = tail(_reg3_mat_real_23_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_8 = asSInt(_reg3_mat_real_23_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_9 = dshr(_reg3_mat_real_23_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_23_T_10 = add(_reg3_mat_real_23_T_9, w3.mat_real[35]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_23_T_11 = tail(_reg3_mat_real_23_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_23_T_12 = asSInt(_reg3_mat_real_23_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[23] <= _reg3_mat_real_23_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_5_T = add(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_1 = tail(_reg3_mat_comp_5_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_2 = asSInt(_reg3_mat_comp_5_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_3 = add(_reg3_mat_comp_5_T_2, w3.mat_comp[23]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_4 = tail(_reg3_mat_comp_5_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_5 = asSInt(_reg3_mat_comp_5_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_6 = add(_reg3_mat_comp_5_T_5, w3.mat_comp[29]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_7 = tail(_reg3_mat_comp_5_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_8 = asSInt(_reg3_mat_comp_5_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_9 = dshr(_reg3_mat_comp_5_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_5_T_10 = add(w3.mat_comp[5], _reg3_mat_comp_5_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_5_T_11 = tail(_reg3_mat_comp_5_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_5_T_12 = asSInt(_reg3_mat_comp_5_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[5] <= _reg3_mat_comp_5_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_11_T = sub(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_1 = tail(_reg3_mat_comp_11_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_2 = asSInt(_reg3_mat_comp_11_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_3 = add(_reg3_mat_comp_11_T_2, w3.mat_real[23]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_4 = tail(_reg3_mat_comp_11_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_5 = asSInt(_reg3_mat_comp_11_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_6 = sub(_reg3_mat_comp_11_T_5, w3.mat_real[29]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_7 = tail(_reg3_mat_comp_11_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_8 = asSInt(_reg3_mat_comp_11_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_9 = dshr(_reg3_mat_comp_11_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[11] <= _reg3_mat_comp_11_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_17_T = add(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_1 = tail(_reg3_mat_comp_17_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_2 = asSInt(_reg3_mat_comp_17_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_3 = sub(_reg3_mat_comp_17_T_2, w3.mat_comp[23]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_4 = tail(_reg3_mat_comp_17_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_5 = asSInt(_reg3_mat_comp_17_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_6 = sub(_reg3_mat_comp_17_T_5, w3.mat_comp[29]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_7 = tail(_reg3_mat_comp_17_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_8 = asSInt(_reg3_mat_comp_17_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_9 = dshr(_reg3_mat_comp_17_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[17] <= _reg3_mat_comp_17_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_23_T = sub(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_1 = tail(_reg3_mat_comp_23_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_2 = asSInt(_reg3_mat_comp_23_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_3 = sub(_reg3_mat_comp_23_T_2, w3.mat_real[23]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_4 = tail(_reg3_mat_comp_23_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_5 = asSInt(_reg3_mat_comp_23_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_6 = add(_reg3_mat_comp_23_T_5, w3.mat_real[29]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_7 = tail(_reg3_mat_comp_23_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_8 = asSInt(_reg3_mat_comp_23_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_9 = dshr(_reg3_mat_comp_23_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_23_T_10 = add(_reg3_mat_comp_23_T_9, w3.mat_comp[35]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_23_T_11 = tail(_reg3_mat_comp_23_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_23_T_12 = asSInt(_reg3_mat_comp_23_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[23] <= _reg3_mat_comp_23_T_12 @[calc6x6.scala 158:37]
    valid_reg[3] <= valid_reg[2] @[calc6x6.scala 179:18]
    io.valid_out <= valid_reg[3] @[calc6x6.scala 180:18]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      real[0].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[0].in_b <= io.input.mat[0] @[calc6x6.scala 186:30]
      io.output.mat[0] <= real[0].result @[calc6x6.scala 187:34]
      real[1].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[1].in_b <= io.input.mat[1] @[calc6x6.scala 186:30]
      io.output.mat[1] <= real[1].result @[calc6x6.scala 187:34]
      real[2].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[2].in_b <= io.input.mat[2] @[calc6x6.scala 186:30]
      io.output.mat[2] <= real[2].result @[calc6x6.scala 187:34]
      real[3].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[3].in_b <= io.input.mat[3] @[calc6x6.scala 186:30]
      io.output.mat[3] <= real[3].result @[calc6x6.scala 187:34]
      real[4].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[4].in_b <= io.input.mat[4] @[calc6x6.scala 186:30]
      io.output.mat[4] <= real[4].result @[calc6x6.scala 187:34]
      real[5].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[5].in_b <= io.input.mat[5] @[calc6x6.scala 186:30]
      io.output.mat[5] <= real[5].result @[calc6x6.scala 187:34]
      real[6].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[6].in_b <= io.input.mat[6] @[calc6x6.scala 186:30]
      io.output.mat[6] <= real[6].result @[calc6x6.scala 187:34]
      real[7].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[7].in_b <= io.input.mat[7] @[calc6x6.scala 186:30]
      io.output.mat[7] <= real[7].result @[calc6x6.scala 187:34]
      real[8].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[8].in_b <= io.input.mat[8] @[calc6x6.scala 186:30]
      io.output.mat[8] <= real[8].result @[calc6x6.scala 187:34]
      real[9].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[9].in_b <= io.input.mat[9] @[calc6x6.scala 186:30]
      io.output.mat[9] <= real[9].result @[calc6x6.scala 187:34]
      real[10].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[10].in_b <= io.input.mat[10] @[calc6x6.scala 186:30]
      io.output.mat[10] <= real[10].result @[calc6x6.scala 187:34]
      real[11].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[11].in_b <= io.input.mat[11] @[calc6x6.scala 186:30]
      io.output.mat[11] <= real[11].result @[calc6x6.scala 187:34]
      real[12].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[12].in_b <= io.input.mat[12] @[calc6x6.scala 186:30]
      io.output.mat[12] <= real[12].result @[calc6x6.scala 187:34]
      real[13].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[13].in_b <= io.input.mat[13] @[calc6x6.scala 186:30]
      io.output.mat[13] <= real[13].result @[calc6x6.scala 187:34]
      real[14].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[14].in_b <= io.input.mat[14] @[calc6x6.scala 186:30]
      io.output.mat[14] <= real[14].result @[calc6x6.scala 187:34]
      real[15].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[15].in_b <= io.input.mat[15] @[calc6x6.scala 186:30]
      io.output.mat[15] <= real[15].result @[calc6x6.scala 187:34]
      io.valid_out <= io.valid_in @[calc6x6.scala 189:26]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_4 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_5 = eq(_T_3, _T_4) @[Conditional.scala 37:30]
      when _T_5 : @[Conditional.scala 39:67]
        real[0].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[0].in_b <= io.input.mat[0] @[calc6x6.scala 196:30]
        real[0].w_a <= io.weight.real[0] @[calc6x6.scala 197:29]
        io.output.mat[0] <= real[0].result @[calc6x6.scala 198:34]
        real[1].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[1].in_b <= io.input.mat[1] @[calc6x6.scala 196:30]
        real[1].w_a <= io.weight.real[1] @[calc6x6.scala 197:29]
        io.output.mat[1] <= real[1].result @[calc6x6.scala 198:34]
        real[2].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[2].in_b <= io.input.mat[2] @[calc6x6.scala 196:30]
        real[2].w_a <= io.weight.real[2] @[calc6x6.scala 197:29]
        io.output.mat[2] <= real[2].result @[calc6x6.scala 198:34]
        real[3].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[3].in_b <= io.input.mat[3] @[calc6x6.scala 196:30]
        real[3].w_a <= io.weight.real[3] @[calc6x6.scala 197:29]
        io.output.mat[3] <= real[3].result @[calc6x6.scala 198:34]
        real[4].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[4].in_b <= io.input.mat[4] @[calc6x6.scala 196:30]
        real[4].w_a <= io.weight.real[4] @[calc6x6.scala 197:29]
        io.output.mat[4] <= real[4].result @[calc6x6.scala 198:34]
        real[5].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[5].in_b <= io.input.mat[5] @[calc6x6.scala 196:30]
        real[5].w_a <= io.weight.real[5] @[calc6x6.scala 197:29]
        io.output.mat[5] <= real[5].result @[calc6x6.scala 198:34]
        real[6].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[6].in_b <= io.input.mat[6] @[calc6x6.scala 196:30]
        real[6].w_a <= io.weight.real[6] @[calc6x6.scala 197:29]
        io.output.mat[6] <= real[6].result @[calc6x6.scala 198:34]
        real[7].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[7].in_b <= io.input.mat[7] @[calc6x6.scala 196:30]
        real[7].w_a <= io.weight.real[7] @[calc6x6.scala 197:29]
        io.output.mat[7] <= real[7].result @[calc6x6.scala 198:34]
        real[8].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[8].in_b <= io.input.mat[8] @[calc6x6.scala 196:30]
        real[8].w_a <= io.weight.real[8] @[calc6x6.scala 197:29]
        io.output.mat[8] <= real[8].result @[calc6x6.scala 198:34]
        real[9].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[9].in_b <= io.input.mat[9] @[calc6x6.scala 196:30]
        real[9].w_a <= io.weight.real[9] @[calc6x6.scala 197:29]
        io.output.mat[9] <= real[9].result @[calc6x6.scala 198:34]
        real[10].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[10].in_b <= io.input.mat[10] @[calc6x6.scala 196:30]
        real[10].w_a <= io.weight.real[10] @[calc6x6.scala 197:29]
        io.output.mat[10] <= real[10].result @[calc6x6.scala 198:34]
        real[11].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[11].in_b <= io.input.mat[11] @[calc6x6.scala 196:30]
        real[11].w_a <= io.weight.real[11] @[calc6x6.scala 197:29]
        io.output.mat[11] <= real[11].result @[calc6x6.scala 198:34]
        real[12].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[12].in_b <= io.input.mat[12] @[calc6x6.scala 196:30]
        real[12].w_a <= io.weight.real[12] @[calc6x6.scala 197:29]
        io.output.mat[12] <= real[12].result @[calc6x6.scala 198:34]
        real[13].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[13].in_b <= io.input.mat[13] @[calc6x6.scala 196:30]
        real[13].w_a <= io.weight.real[13] @[calc6x6.scala 197:29]
        io.output.mat[13] <= real[13].result @[calc6x6.scala 198:34]
        real[14].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[14].in_b <= io.input.mat[14] @[calc6x6.scala 196:30]
        real[14].w_a <= io.weight.real[14] @[calc6x6.scala 197:29]
        io.output.mat[14] <= real[14].result @[calc6x6.scala 198:34]
        real[15].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[15].in_b <= io.input.mat[15] @[calc6x6.scala 196:30]
        real[15].w_a <= io.weight.real[15] @[calc6x6.scala 197:29]
        io.output.mat[15] <= real[15].result @[calc6x6.scala 198:34]
        io.valid_out <= io.valid_in @[calc6x6.scala 201:25]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_6 = asUInt(UInt<2>("h02")) @[Conditional.scala 37:23]
        node _T_7 = asUInt(io.flag) @[Conditional.scala 37:39]
        node _T_8 = eq(_T_6, _T_7) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          node _io_output_mat_0_T = add(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_1 = tail(_io_output_mat_0_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_2 = asSInt(_io_output_mat_0_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_3 = add(_io_output_mat_0_T_2, reg3.mat_real[3]) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_4 = tail(_io_output_mat_0_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_5 = asSInt(_io_output_mat_0_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_6 = add(_io_output_mat_0_T_5, reg3.mat_real[4]) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_7 = tail(_io_output_mat_0_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_8 = asSInt(_io_output_mat_0_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_9 = dshr(_io_output_mat_0_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_0_T_10 = add(reg3.mat_real[0], _io_output_mat_0_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_0_T_11 = tail(_io_output_mat_0_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_0_T_12 = asSInt(_io_output_mat_0_T_11) @[calc6x6.scala 164:61]
          io.output.mat[0] <= _io_output_mat_0_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_1_T = sub(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_1 = tail(_io_output_mat_1_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_2 = asSInt(_io_output_mat_1_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_3 = sub(_io_output_mat_1_T_2, reg3.mat_comp[3]) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_4 = tail(_io_output_mat_1_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_5 = asSInt(_io_output_mat_1_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_6 = add(_io_output_mat_1_T_5, reg3.mat_comp[4]) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_7 = tail(_io_output_mat_1_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_8 = asSInt(_io_output_mat_1_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_9 = dshr(_io_output_mat_1_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[1] <= _io_output_mat_1_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_2_T = add(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_1 = tail(_io_output_mat_2_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_2 = asSInt(_io_output_mat_2_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_3 = sub(_io_output_mat_2_T_2, reg3.mat_real[3]) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_4 = tail(_io_output_mat_2_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_5 = asSInt(_io_output_mat_2_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_6 = sub(_io_output_mat_2_T_5, reg3.mat_real[4]) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_7 = tail(_io_output_mat_2_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_8 = asSInt(_io_output_mat_2_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_9 = dshr(_io_output_mat_2_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[2] <= _io_output_mat_2_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_3_T = sub(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_1 = tail(_io_output_mat_3_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_2 = asSInt(_io_output_mat_3_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_3 = add(_io_output_mat_3_T_2, reg3.mat_comp[3]) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_4 = tail(_io_output_mat_3_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_5 = asSInt(_io_output_mat_3_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_6 = sub(_io_output_mat_3_T_5, reg3.mat_comp[4]) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_7 = tail(_io_output_mat_3_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_8 = asSInt(_io_output_mat_3_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_9 = dshr(_io_output_mat_3_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_3_T_10 = add(_io_output_mat_3_T_9, reg3.mat_real[5]) @[calc6x6.scala 168:136]
          node _io_output_mat_3_T_11 = tail(_io_output_mat_3_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_3_T_12 = asSInt(_io_output_mat_3_T_11) @[calc6x6.scala 168:136]
          io.output.mat[3] <= _io_output_mat_3_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_4_T = add(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_1 = tail(_io_output_mat_4_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_2 = asSInt(_io_output_mat_4_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_3 = add(_io_output_mat_4_T_2, reg3.mat_real[9]) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_4 = tail(_io_output_mat_4_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_5 = asSInt(_io_output_mat_4_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_6 = add(_io_output_mat_4_T_5, reg3.mat_real[10]) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_7 = tail(_io_output_mat_4_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_8 = asSInt(_io_output_mat_4_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_9 = dshr(_io_output_mat_4_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_4_T_10 = add(reg3.mat_real[6], _io_output_mat_4_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_4_T_11 = tail(_io_output_mat_4_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_4_T_12 = asSInt(_io_output_mat_4_T_11) @[calc6x6.scala 164:61]
          io.output.mat[4] <= _io_output_mat_4_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_5_T = sub(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_1 = tail(_io_output_mat_5_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_2 = asSInt(_io_output_mat_5_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_3 = sub(_io_output_mat_5_T_2, reg3.mat_comp[9]) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_4 = tail(_io_output_mat_5_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_5 = asSInt(_io_output_mat_5_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_6 = add(_io_output_mat_5_T_5, reg3.mat_comp[10]) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_7 = tail(_io_output_mat_5_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_8 = asSInt(_io_output_mat_5_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_9 = dshr(_io_output_mat_5_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[5] <= _io_output_mat_5_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_6_T = add(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_1 = tail(_io_output_mat_6_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_2 = asSInt(_io_output_mat_6_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_3 = sub(_io_output_mat_6_T_2, reg3.mat_real[9]) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_4 = tail(_io_output_mat_6_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_5 = asSInt(_io_output_mat_6_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_6 = sub(_io_output_mat_6_T_5, reg3.mat_real[10]) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_7 = tail(_io_output_mat_6_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_8 = asSInt(_io_output_mat_6_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_9 = dshr(_io_output_mat_6_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[6] <= _io_output_mat_6_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_7_T = sub(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_1 = tail(_io_output_mat_7_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_2 = asSInt(_io_output_mat_7_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_3 = add(_io_output_mat_7_T_2, reg3.mat_comp[9]) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_4 = tail(_io_output_mat_7_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_5 = asSInt(_io_output_mat_7_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_6 = sub(_io_output_mat_7_T_5, reg3.mat_comp[10]) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_7 = tail(_io_output_mat_7_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_8 = asSInt(_io_output_mat_7_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_9 = dshr(_io_output_mat_7_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_7_T_10 = add(_io_output_mat_7_T_9, reg3.mat_real[11]) @[calc6x6.scala 168:136]
          node _io_output_mat_7_T_11 = tail(_io_output_mat_7_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_7_T_12 = asSInt(_io_output_mat_7_T_11) @[calc6x6.scala 168:136]
          io.output.mat[7] <= _io_output_mat_7_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_8_T = add(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_1 = tail(_io_output_mat_8_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_2 = asSInt(_io_output_mat_8_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_3 = add(_io_output_mat_8_T_2, reg3.mat_real[15]) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_4 = tail(_io_output_mat_8_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_5 = asSInt(_io_output_mat_8_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_6 = add(_io_output_mat_8_T_5, reg3.mat_real[16]) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_7 = tail(_io_output_mat_8_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_8 = asSInt(_io_output_mat_8_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_9 = dshr(_io_output_mat_8_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_8_T_10 = add(reg3.mat_real[12], _io_output_mat_8_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_8_T_11 = tail(_io_output_mat_8_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_8_T_12 = asSInt(_io_output_mat_8_T_11) @[calc6x6.scala 164:61]
          io.output.mat[8] <= _io_output_mat_8_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_9_T = sub(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_1 = tail(_io_output_mat_9_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_2 = asSInt(_io_output_mat_9_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_3 = sub(_io_output_mat_9_T_2, reg3.mat_comp[15]) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_4 = tail(_io_output_mat_9_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_5 = asSInt(_io_output_mat_9_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_6 = add(_io_output_mat_9_T_5, reg3.mat_comp[16]) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_7 = tail(_io_output_mat_9_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_8 = asSInt(_io_output_mat_9_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_9 = dshr(_io_output_mat_9_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[9] <= _io_output_mat_9_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_10_T = add(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_1 = tail(_io_output_mat_10_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_2 = asSInt(_io_output_mat_10_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_3 = sub(_io_output_mat_10_T_2, reg3.mat_real[15]) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_4 = tail(_io_output_mat_10_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_5 = asSInt(_io_output_mat_10_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_6 = sub(_io_output_mat_10_T_5, reg3.mat_real[16]) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_7 = tail(_io_output_mat_10_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_8 = asSInt(_io_output_mat_10_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_9 = dshr(_io_output_mat_10_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[10] <= _io_output_mat_10_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_11_T = sub(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_1 = tail(_io_output_mat_11_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_2 = asSInt(_io_output_mat_11_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_3 = add(_io_output_mat_11_T_2, reg3.mat_comp[15]) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_4 = tail(_io_output_mat_11_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_5 = asSInt(_io_output_mat_11_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_6 = sub(_io_output_mat_11_T_5, reg3.mat_comp[16]) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_7 = tail(_io_output_mat_11_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_8 = asSInt(_io_output_mat_11_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_9 = dshr(_io_output_mat_11_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_11_T_10 = add(_io_output_mat_11_T_9, reg3.mat_real[17]) @[calc6x6.scala 168:136]
          node _io_output_mat_11_T_11 = tail(_io_output_mat_11_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_11_T_12 = asSInt(_io_output_mat_11_T_11) @[calc6x6.scala 168:136]
          io.output.mat[11] <= _io_output_mat_11_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_12_T = add(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_1 = tail(_io_output_mat_12_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_2 = asSInt(_io_output_mat_12_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_3 = add(_io_output_mat_12_T_2, reg3.mat_real[21]) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_4 = tail(_io_output_mat_12_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_5 = asSInt(_io_output_mat_12_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_6 = add(_io_output_mat_12_T_5, reg3.mat_real[22]) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_7 = tail(_io_output_mat_12_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_8 = asSInt(_io_output_mat_12_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_9 = dshr(_io_output_mat_12_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_12_T_10 = add(reg3.mat_real[18], _io_output_mat_12_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_12_T_11 = tail(_io_output_mat_12_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_12_T_12 = asSInt(_io_output_mat_12_T_11) @[calc6x6.scala 164:61]
          io.output.mat[12] <= _io_output_mat_12_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_13_T = sub(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_1 = tail(_io_output_mat_13_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_2 = asSInt(_io_output_mat_13_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_3 = sub(_io_output_mat_13_T_2, reg3.mat_comp[21]) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_4 = tail(_io_output_mat_13_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_5 = asSInt(_io_output_mat_13_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_6 = add(_io_output_mat_13_T_5, reg3.mat_comp[22]) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_7 = tail(_io_output_mat_13_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_8 = asSInt(_io_output_mat_13_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_9 = dshr(_io_output_mat_13_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[13] <= _io_output_mat_13_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_14_T = add(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_1 = tail(_io_output_mat_14_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_2 = asSInt(_io_output_mat_14_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_3 = sub(_io_output_mat_14_T_2, reg3.mat_real[21]) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_4 = tail(_io_output_mat_14_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_5 = asSInt(_io_output_mat_14_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_6 = sub(_io_output_mat_14_T_5, reg3.mat_real[22]) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_7 = tail(_io_output_mat_14_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_8 = asSInt(_io_output_mat_14_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_9 = dshr(_io_output_mat_14_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[14] <= _io_output_mat_14_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_15_T = sub(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_1 = tail(_io_output_mat_15_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_2 = asSInt(_io_output_mat_15_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_3 = add(_io_output_mat_15_T_2, reg3.mat_comp[21]) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_4 = tail(_io_output_mat_15_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_5 = asSInt(_io_output_mat_15_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_6 = sub(_io_output_mat_15_T_5, reg3.mat_comp[22]) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_7 = tail(_io_output_mat_15_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_8 = asSInt(_io_output_mat_15_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_9 = dshr(_io_output_mat_15_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_15_T_10 = add(_io_output_mat_15_T_9, reg3.mat_real[23]) @[calc6x6.scala 168:136]
          node _io_output_mat_15_T_11 = tail(_io_output_mat_15_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_15_T_12 = asSInt(_io_output_mat_15_T_11) @[calc6x6.scala 168:136]
          io.output.mat[15] <= _io_output_mat_15_T_12 @[calc6x6.scala 168:37]
          real[0].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[0].in_b <= reg2.mat_real[0] @[calc6x6.scala 225:38]
          real[0].w_a <= io.weight.real[0] @[calc6x6.scala 226:37]
          w3.mat_real[0] <= real[0].result @[calc6x6.scala 227:47]
          real[1].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[1].in_b <= reg2.mat_real[1] @[calc6x6.scala 225:38]
          real[1].w_a <= io.weight.real[1] @[calc6x6.scala 226:37]
          w3.mat_real[1] <= real[1].result @[calc6x6.scala 227:47]
          real[2].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[2].in_b <= reg2.mat_real[2] @[calc6x6.scala 225:38]
          real[2].w_a <= io.weight.real[2] @[calc6x6.scala 226:37]
          w3.mat_real[2] <= real[2].result @[calc6x6.scala 227:47]
          comp1[0].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[0].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[0].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[0].w_a <= io.weight.comp1[0] @[calc6x6.scala 257:38]
          comp2[0].w_a <= io.weight.comp2[0] @[calc6x6.scala 258:38]
          comp3[0].w_a <= io.weight.comp3[0] @[calc6x6.scala 259:38]
          node _comp1_0_in_b_T_1 = add(reg2.mat_real[3], reg2.mat_comp[6]) @[calc6x6.scala 261:65]
          node _comp1_0_in_b_T_2 = tail(_comp1_0_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_0_in_b_T_3 = asSInt(_comp1_0_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[0].in_b <= _comp1_0_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[0].in_b <= reg2.mat_real[3] @[calc6x6.scala 262:39]
          comp3[0].in_b <= reg2.mat_comp[6] @[calc6x6.scala 263:39]
          node _w3_mat_real_3_T = sub(comp2[0].result, comp3[0].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_3_T_1 = tail(_w3_mat_real_3_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_3_T_2 = asSInt(_w3_mat_real_3_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[3] <= _w3_mat_real_3_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_3_T = sub(comp1[0].result, comp2[0].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_1 = tail(_w3_mat_comp_3_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_2 = asSInt(_w3_mat_comp_3_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_3 = sub(_w3_mat_comp_3_T_2, comp3[0].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_3_T_4 = tail(_w3_mat_comp_3_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_3_T_5 = asSInt(_w3_mat_comp_3_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[3] <= _w3_mat_comp_3_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_4_T = sub(comp2[0].result, comp3[0].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_4_T_1 = tail(_w3_mat_real_4_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_4_T_2 = asSInt(_w3_mat_real_4_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[4] <= _w3_mat_real_4_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), comp1[0].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_1 = tail(_w3_mat_comp_4_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_2 = asSInt(_w3_mat_comp_4_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_3 = add(_w3_mat_comp_4_T_2, comp2[0].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_4 = tail(_w3_mat_comp_4_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_5 = asSInt(_w3_mat_comp_4_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_6 = add(_w3_mat_comp_4_T_5, comp3[0].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_4_T_7 = tail(_w3_mat_comp_4_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_4_T_8 = asSInt(_w3_mat_comp_4_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[4] <= _w3_mat_comp_4_T_8 @[calc6x6.scala 272:47]
          real[3].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[3].in_b <= reg2.mat_real[5] @[calc6x6.scala 225:38]
          real[3].w_a <= io.weight.real[3] @[calc6x6.scala 226:37]
          w3.mat_real[5] <= real[3].result @[calc6x6.scala 227:47]
          real[4].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[4].in_b <= reg2.mat_real[6] @[calc6x6.scala 225:38]
          real[4].w_a <= io.weight.real[4] @[calc6x6.scala 226:37]
          w3.mat_real[6] <= real[4].result @[calc6x6.scala 227:47]
          real[5].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[5].in_b <= reg2.mat_real[7] @[calc6x6.scala 225:38]
          real[5].w_a <= io.weight.real[5] @[calc6x6.scala 226:37]
          w3.mat_real[7] <= real[5].result @[calc6x6.scala 227:47]
          real[6].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[6].in_b <= reg2.mat_real[8] @[calc6x6.scala 225:38]
          real[6].w_a <= io.weight.real[6] @[calc6x6.scala 226:37]
          w3.mat_real[8] <= real[6].result @[calc6x6.scala 227:47]
          comp1[1].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[1].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[1].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[1].w_a <= io.weight.comp1[1] @[calc6x6.scala 257:38]
          comp2[1].w_a <= io.weight.comp2[1] @[calc6x6.scala 258:38]
          comp3[1].w_a <= io.weight.comp3[1] @[calc6x6.scala 259:38]
          node _comp1_1_in_b_T_1 = add(reg2.mat_real[9], reg2.mat_comp[7]) @[calc6x6.scala 261:65]
          node _comp1_1_in_b_T_2 = tail(_comp1_1_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_1_in_b_T_3 = asSInt(_comp1_1_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[1].in_b <= _comp1_1_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[1].in_b <= reg2.mat_real[9] @[calc6x6.scala 262:39]
          comp3[1].in_b <= reg2.mat_comp[7] @[calc6x6.scala 263:39]
          node _w3_mat_real_9_T = sub(comp2[1].result, comp3[1].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_9_T_1 = tail(_w3_mat_real_9_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_9_T_2 = asSInt(_w3_mat_real_9_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[9] <= _w3_mat_real_9_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_9_T = sub(comp1[1].result, comp2[1].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_1 = tail(_w3_mat_comp_9_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_2 = asSInt(_w3_mat_comp_9_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_3 = sub(_w3_mat_comp_9_T_2, comp3[1].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_9_T_4 = tail(_w3_mat_comp_9_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_9_T_5 = asSInt(_w3_mat_comp_9_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[9] <= _w3_mat_comp_9_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_10_T = sub(comp2[1].result, comp3[1].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_10_T_1 = tail(_w3_mat_real_10_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_10_T_2 = asSInt(_w3_mat_real_10_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[10] <= _w3_mat_real_10_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_10_T = sub(asSInt(UInt<1>("h00")), comp1[1].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_1 = tail(_w3_mat_comp_10_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_2 = asSInt(_w3_mat_comp_10_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_3 = add(_w3_mat_comp_10_T_2, comp2[1].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_4 = tail(_w3_mat_comp_10_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_5 = asSInt(_w3_mat_comp_10_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_6 = add(_w3_mat_comp_10_T_5, comp3[1].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_10_T_7 = tail(_w3_mat_comp_10_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_10_T_8 = asSInt(_w3_mat_comp_10_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[10] <= _w3_mat_comp_10_T_8 @[calc6x6.scala 272:47]
          real[7].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[7].in_b <= reg2.mat_real[11] @[calc6x6.scala 225:38]
          real[7].w_a <= io.weight.real[7] @[calc6x6.scala 226:37]
          w3.mat_real[11] <= real[7].result @[calc6x6.scala 227:47]
          real[8].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[8].in_b <= reg2.mat_real[12] @[calc6x6.scala 225:38]
          real[8].w_a <= io.weight.real[8] @[calc6x6.scala 226:37]
          w3.mat_real[12] <= real[8].result @[calc6x6.scala 227:47]
          real[9].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[9].in_b <= reg2.mat_real[13] @[calc6x6.scala 225:38]
          real[9].w_a <= io.weight.real[9] @[calc6x6.scala 226:37]
          w3.mat_real[13] <= real[9].result @[calc6x6.scala 227:47]
          real[10].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[10].in_b <= reg2.mat_real[14] @[calc6x6.scala 225:38]
          real[10].w_a <= io.weight.real[10] @[calc6x6.scala 226:37]
          w3.mat_real[14] <= real[10].result @[calc6x6.scala 227:47]
          comp1[2].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[2].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[2].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[2].w_a <= io.weight.comp1[2] @[calc6x6.scala 257:38]
          comp2[2].w_a <= io.weight.comp2[2] @[calc6x6.scala 258:38]
          comp3[2].w_a <= io.weight.comp3[2] @[calc6x6.scala 259:38]
          node _comp1_2_in_b_T_1 = add(reg2.mat_real[15], reg2.mat_comp[8]) @[calc6x6.scala 261:65]
          node _comp1_2_in_b_T_2 = tail(_comp1_2_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_2_in_b_T_3 = asSInt(_comp1_2_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[2].in_b <= _comp1_2_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[2].in_b <= reg2.mat_real[15] @[calc6x6.scala 262:39]
          comp3[2].in_b <= reg2.mat_comp[8] @[calc6x6.scala 263:39]
          node _w3_mat_real_15_T = sub(comp2[2].result, comp3[2].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_15_T_1 = tail(_w3_mat_real_15_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_15_T_2 = asSInt(_w3_mat_real_15_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[15] <= _w3_mat_real_15_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_15_T = sub(comp1[2].result, comp2[2].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_1 = tail(_w3_mat_comp_15_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_2 = asSInt(_w3_mat_comp_15_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_3 = sub(_w3_mat_comp_15_T_2, comp3[2].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_15_T_4 = tail(_w3_mat_comp_15_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_15_T_5 = asSInt(_w3_mat_comp_15_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[15] <= _w3_mat_comp_15_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_16_T = sub(comp2[2].result, comp3[2].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_16_T_1 = tail(_w3_mat_real_16_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_16_T_2 = asSInt(_w3_mat_real_16_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[16] <= _w3_mat_real_16_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_16_T = sub(asSInt(UInt<1>("h00")), comp1[2].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_1 = tail(_w3_mat_comp_16_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_2 = asSInt(_w3_mat_comp_16_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_3 = add(_w3_mat_comp_16_T_2, comp2[2].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_4 = tail(_w3_mat_comp_16_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_5 = asSInt(_w3_mat_comp_16_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_6 = add(_w3_mat_comp_16_T_5, comp3[2].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_16_T_7 = tail(_w3_mat_comp_16_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_16_T_8 = asSInt(_w3_mat_comp_16_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[16] <= _w3_mat_comp_16_T_8 @[calc6x6.scala 272:47]
          real[11].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[11].in_b <= reg2.mat_real[17] @[calc6x6.scala 225:38]
          real[11].w_a <= io.weight.real[11] @[calc6x6.scala 226:37]
          w3.mat_real[17] <= real[11].result @[calc6x6.scala 227:47]
          comp1[3].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[3].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[3].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[3].w_a <= io.weight.comp1[3] @[calc6x6.scala 234:38]
          comp2[3].w_a <= io.weight.comp2[3] @[calc6x6.scala 235:38]
          comp3[3].w_a <= io.weight.comp3[3] @[calc6x6.scala 236:38]
          node _comp1_3_in_b_T_1 = add(reg2.mat_real[18], reg2.mat_comp[0]) @[calc6x6.scala 238:65]
          node _comp1_3_in_b_T_2 = tail(_comp1_3_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_3_in_b_T_3 = asSInt(_comp1_3_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[3].in_b <= _comp1_3_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[3].in_b <= reg2.mat_real[18] @[calc6x6.scala 239:39]
          comp3[3].in_b <= reg2.mat_comp[0] @[calc6x6.scala 240:39]
          node _w3_mat_real_18_T = sub(comp2[3].result, comp3[3].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_18_T_1 = tail(_w3_mat_real_18_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_18_T_2 = asSInt(_w3_mat_real_18_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[18] <= _w3_mat_real_18_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_18_T = sub(comp1[3].result, comp2[3].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_1 = tail(_w3_mat_comp_18_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_2 = asSInt(_w3_mat_comp_18_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_3 = sub(_w3_mat_comp_18_T_2, comp3[3].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_18_T_4 = tail(_w3_mat_comp_18_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_18_T_5 = asSInt(_w3_mat_comp_18_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[18] <= _w3_mat_comp_18_T_5 @[calc6x6.scala 242:47]
          comp1[4].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[4].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[4].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[4].w_a <= io.weight.comp1[4] @[calc6x6.scala 234:38]
          comp2[4].w_a <= io.weight.comp2[4] @[calc6x6.scala 235:38]
          comp3[4].w_a <= io.weight.comp3[4] @[calc6x6.scala 236:38]
          node _comp1_4_in_b_T_1 = add(reg2.mat_real[19], reg2.mat_comp[1]) @[calc6x6.scala 238:65]
          node _comp1_4_in_b_T_2 = tail(_comp1_4_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_4_in_b_T_3 = asSInt(_comp1_4_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[4].in_b <= _comp1_4_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[4].in_b <= reg2.mat_real[19] @[calc6x6.scala 239:39]
          comp3[4].in_b <= reg2.mat_comp[1] @[calc6x6.scala 240:39]
          node _w3_mat_real_19_T = sub(comp2[4].result, comp3[4].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_19_T_1 = tail(_w3_mat_real_19_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_19_T_2 = asSInt(_w3_mat_real_19_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[19] <= _w3_mat_real_19_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_19_T = sub(comp1[4].result, comp2[4].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_1 = tail(_w3_mat_comp_19_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_2 = asSInt(_w3_mat_comp_19_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_3 = sub(_w3_mat_comp_19_T_2, comp3[4].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_19_T_4 = tail(_w3_mat_comp_19_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_19_T_5 = asSInt(_w3_mat_comp_19_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[19] <= _w3_mat_comp_19_T_5 @[calc6x6.scala 242:47]
          comp1[5].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[5].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[5].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[5].w_a <= io.weight.comp1[5] @[calc6x6.scala 234:38]
          comp2[5].w_a <= io.weight.comp2[5] @[calc6x6.scala 235:38]
          comp3[5].w_a <= io.weight.comp3[5] @[calc6x6.scala 236:38]
          node _comp1_5_in_b_T_1 = add(reg2.mat_real[20], reg2.mat_comp[2]) @[calc6x6.scala 238:65]
          node _comp1_5_in_b_T_2 = tail(_comp1_5_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_5_in_b_T_3 = asSInt(_comp1_5_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[5].in_b <= _comp1_5_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[5].in_b <= reg2.mat_real[20] @[calc6x6.scala 239:39]
          comp3[5].in_b <= reg2.mat_comp[2] @[calc6x6.scala 240:39]
          node _w3_mat_real_20_T = sub(comp2[5].result, comp3[5].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_20_T_1 = tail(_w3_mat_real_20_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_20_T_2 = asSInt(_w3_mat_real_20_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[20] <= _w3_mat_real_20_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_20_T = sub(comp1[5].result, comp2[5].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_1 = tail(_w3_mat_comp_20_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_2 = asSInt(_w3_mat_comp_20_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_3 = sub(_w3_mat_comp_20_T_2, comp3[5].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_20_T_4 = tail(_w3_mat_comp_20_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_20_T_5 = asSInt(_w3_mat_comp_20_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[20] <= _w3_mat_comp_20_T_5 @[calc6x6.scala 242:47]
          comp1[6].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[6].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[6].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[6].w_a <= io.weight.comp1[6] @[calc6x6.scala 234:38]
          comp2[6].w_a <= io.weight.comp2[6] @[calc6x6.scala 235:38]
          comp3[6].w_a <= io.weight.comp3[6] @[calc6x6.scala 236:38]
          node _comp1_6_in_b_T_1 = add(reg2.mat_real[21], reg2.mat_comp[3]) @[calc6x6.scala 238:65]
          node _comp1_6_in_b_T_2 = tail(_comp1_6_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_6_in_b_T_3 = asSInt(_comp1_6_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[6].in_b <= _comp1_6_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[6].in_b <= reg2.mat_real[21] @[calc6x6.scala 239:39]
          comp3[6].in_b <= reg2.mat_comp[3] @[calc6x6.scala 240:39]
          node _w3_mat_real_21_T = sub(comp2[6].result, comp3[6].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_21_T_1 = tail(_w3_mat_real_21_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_21_T_2 = asSInt(_w3_mat_real_21_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[21] <= _w3_mat_real_21_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_21_T = sub(comp1[6].result, comp2[6].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_1 = tail(_w3_mat_comp_21_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_2 = asSInt(_w3_mat_comp_21_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_3 = sub(_w3_mat_comp_21_T_2, comp3[6].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_21_T_4 = tail(_w3_mat_comp_21_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_21_T_5 = asSInt(_w3_mat_comp_21_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[21] <= _w3_mat_comp_21_T_5 @[calc6x6.scala 242:47]
          comp1[7].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[7].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[7].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[7].w_a <= io.weight.comp1[7] @[calc6x6.scala 234:38]
          comp2[7].w_a <= io.weight.comp2[7] @[calc6x6.scala 235:38]
          comp3[7].w_a <= io.weight.comp3[7] @[calc6x6.scala 236:38]
          node _comp1_7_in_b_T_1 = add(reg2.mat_real[22], reg2.mat_comp[4]) @[calc6x6.scala 238:65]
          node _comp1_7_in_b_T_2 = tail(_comp1_7_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_7_in_b_T_3 = asSInt(_comp1_7_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[7].in_b <= _comp1_7_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[7].in_b <= reg2.mat_real[22] @[calc6x6.scala 239:39]
          comp3[7].in_b <= reg2.mat_comp[4] @[calc6x6.scala 240:39]
          node _w3_mat_real_22_T = sub(comp2[7].result, comp3[7].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_22_T_1 = tail(_w3_mat_real_22_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_22_T_2 = asSInt(_w3_mat_real_22_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[22] <= _w3_mat_real_22_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_22_T = sub(comp1[7].result, comp2[7].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_1 = tail(_w3_mat_comp_22_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_2 = asSInt(_w3_mat_comp_22_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_3 = sub(_w3_mat_comp_22_T_2, comp3[7].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_22_T_4 = tail(_w3_mat_comp_22_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_22_T_5 = asSInt(_w3_mat_comp_22_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[22] <= _w3_mat_comp_22_T_5 @[calc6x6.scala 242:47]
          comp1[8].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[8].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[8].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[8].w_a <= io.weight.comp1[8] @[calc6x6.scala 234:38]
          comp2[8].w_a <= io.weight.comp2[8] @[calc6x6.scala 235:38]
          comp3[8].w_a <= io.weight.comp3[8] @[calc6x6.scala 236:38]
          node _comp1_8_in_b_T_1 = add(reg2.mat_real[23], reg2.mat_comp[5]) @[calc6x6.scala 238:65]
          node _comp1_8_in_b_T_2 = tail(_comp1_8_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_8_in_b_T_3 = asSInt(_comp1_8_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[8].in_b <= _comp1_8_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[8].in_b <= reg2.mat_real[23] @[calc6x6.scala 239:39]
          comp3[8].in_b <= reg2.mat_comp[5] @[calc6x6.scala 240:39]
          node _w3_mat_real_23_T = sub(comp2[8].result, comp3[8].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_23_T_1 = tail(_w3_mat_real_23_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_23_T_2 = asSInt(_w3_mat_real_23_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[23] <= _w3_mat_real_23_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_23_T = sub(comp1[8].result, comp2[8].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_1 = tail(_w3_mat_comp_23_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_2 = asSInt(_w3_mat_comp_23_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_3 = sub(_w3_mat_comp_23_T_2, comp3[8].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_23_T_4 = tail(_w3_mat_comp_23_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_23_T_5 = asSInt(_w3_mat_comp_23_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[23] <= _w3_mat_comp_23_T_5 @[calc6x6.scala 242:47]
          node _w3_mat_real_24_T = sub(comp2[3].result, comp3[3].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_24_T_1 = tail(_w3_mat_real_24_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_24_T_2 = asSInt(_w3_mat_real_24_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[24] <= _w3_mat_real_24_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_24_T = sub(asSInt(UInt<1>("h00")), comp1[3].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_1 = tail(_w3_mat_comp_24_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_2 = asSInt(_w3_mat_comp_24_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_3 = add(_w3_mat_comp_24_T_2, comp2[3].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_4 = tail(_w3_mat_comp_24_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_5 = asSInt(_w3_mat_comp_24_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_6 = add(_w3_mat_comp_24_T_5, comp3[3].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_24_T_7 = tail(_w3_mat_comp_24_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_24_T_8 = asSInt(_w3_mat_comp_24_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[24] <= _w3_mat_comp_24_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_25_T = sub(comp2[4].result, comp3[4].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_25_T_1 = tail(_w3_mat_real_25_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_25_T_2 = asSInt(_w3_mat_real_25_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[25] <= _w3_mat_real_25_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_25_T = sub(asSInt(UInt<1>("h00")), comp1[4].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_1 = tail(_w3_mat_comp_25_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_2 = asSInt(_w3_mat_comp_25_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_3 = add(_w3_mat_comp_25_T_2, comp2[4].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_4 = tail(_w3_mat_comp_25_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_5 = asSInt(_w3_mat_comp_25_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_6 = add(_w3_mat_comp_25_T_5, comp3[4].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_25_T_7 = tail(_w3_mat_comp_25_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_25_T_8 = asSInt(_w3_mat_comp_25_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[25] <= _w3_mat_comp_25_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_26_T = sub(comp2[5].result, comp3[5].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_26_T_1 = tail(_w3_mat_real_26_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_26_T_2 = asSInt(_w3_mat_real_26_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[26] <= _w3_mat_real_26_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_26_T = sub(asSInt(UInt<1>("h00")), comp1[5].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_1 = tail(_w3_mat_comp_26_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_2 = asSInt(_w3_mat_comp_26_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_3 = add(_w3_mat_comp_26_T_2, comp2[5].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_4 = tail(_w3_mat_comp_26_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_5 = asSInt(_w3_mat_comp_26_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_6 = add(_w3_mat_comp_26_T_5, comp3[5].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_26_T_7 = tail(_w3_mat_comp_26_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_26_T_8 = asSInt(_w3_mat_comp_26_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[26] <= _w3_mat_comp_26_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_27_T = sub(comp2[7].result, comp3[7].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_27_T_1 = tail(_w3_mat_real_27_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_27_T_2 = asSInt(_w3_mat_real_27_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[27] <= _w3_mat_real_27_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_27_T = sub(asSInt(UInt<1>("h00")), comp1[7].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_1 = tail(_w3_mat_comp_27_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_2 = asSInt(_w3_mat_comp_27_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_3 = add(_w3_mat_comp_27_T_2, comp2[7].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_4 = tail(_w3_mat_comp_27_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_5 = asSInt(_w3_mat_comp_27_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_6 = add(_w3_mat_comp_27_T_5, comp3[7].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_27_T_7 = tail(_w3_mat_comp_27_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_27_T_8 = asSInt(_w3_mat_comp_27_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[27] <= _w3_mat_comp_27_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_28_T = sub(comp2[6].result, comp3[6].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_28_T_1 = tail(_w3_mat_real_28_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_28_T_2 = asSInt(_w3_mat_real_28_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[28] <= _w3_mat_real_28_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_28_T = sub(asSInt(UInt<1>("h00")), comp1[6].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_1 = tail(_w3_mat_comp_28_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_2 = asSInt(_w3_mat_comp_28_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_3 = add(_w3_mat_comp_28_T_2, comp2[6].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_4 = tail(_w3_mat_comp_28_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_5 = asSInt(_w3_mat_comp_28_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_6 = add(_w3_mat_comp_28_T_5, comp3[6].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_28_T_7 = tail(_w3_mat_comp_28_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_28_T_8 = asSInt(_w3_mat_comp_28_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[28] <= _w3_mat_comp_28_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_29_T = sub(comp2[8].result, comp3[8].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_29_T_1 = tail(_w3_mat_real_29_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_29_T_2 = asSInt(_w3_mat_real_29_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[29] <= _w3_mat_real_29_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_29_T = sub(asSInt(UInt<1>("h00")), comp1[8].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_1 = tail(_w3_mat_comp_29_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_2 = asSInt(_w3_mat_comp_29_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_3 = add(_w3_mat_comp_29_T_2, comp2[8].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_4 = tail(_w3_mat_comp_29_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_5 = asSInt(_w3_mat_comp_29_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_6 = add(_w3_mat_comp_29_T_5, comp3[8].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_29_T_7 = tail(_w3_mat_comp_29_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_29_T_8 = asSInt(_w3_mat_comp_29_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[29] <= _w3_mat_comp_29_T_8 @[calc6x6.scala 250:47]
          real[12].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[12].in_b <= reg2.mat_real[30] @[calc6x6.scala 225:38]
          real[12].w_a <= io.weight.real[12] @[calc6x6.scala 226:37]
          w3.mat_real[30] <= real[12].result @[calc6x6.scala 227:47]
          real[13].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[13].in_b <= reg2.mat_real[31] @[calc6x6.scala 225:38]
          real[13].w_a <= io.weight.real[13] @[calc6x6.scala 226:37]
          w3.mat_real[31] <= real[13].result @[calc6x6.scala 227:47]
          real[14].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[14].in_b <= reg2.mat_real[32] @[calc6x6.scala 225:38]
          real[14].w_a <= io.weight.real[14] @[calc6x6.scala 226:37]
          w3.mat_real[32] <= real[14].result @[calc6x6.scala 227:47]
          comp1[9].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[9].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[9].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[9].w_a <= io.weight.comp1[9] @[calc6x6.scala 257:38]
          comp2[9].w_a <= io.weight.comp2[9] @[calc6x6.scala 258:38]
          comp3[9].w_a <= io.weight.comp3[9] @[calc6x6.scala 259:38]
          node _comp1_9_in_b_T_1 = add(reg2.mat_real[33], reg2.mat_comp[9]) @[calc6x6.scala 261:65]
          node _comp1_9_in_b_T_2 = tail(_comp1_9_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_9_in_b_T_3 = asSInt(_comp1_9_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[9].in_b <= _comp1_9_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[9].in_b <= reg2.mat_real[33] @[calc6x6.scala 262:39]
          comp3[9].in_b <= reg2.mat_comp[9] @[calc6x6.scala 263:39]
          node _w3_mat_real_33_T = sub(comp2[9].result, comp3[9].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_33_T_1 = tail(_w3_mat_real_33_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_33_T_2 = asSInt(_w3_mat_real_33_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[33] <= _w3_mat_real_33_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_33_T = sub(comp1[9].result, comp2[9].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_1 = tail(_w3_mat_comp_33_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_2 = asSInt(_w3_mat_comp_33_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_3 = sub(_w3_mat_comp_33_T_2, comp3[9].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_33_T_4 = tail(_w3_mat_comp_33_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_33_T_5 = asSInt(_w3_mat_comp_33_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[33] <= _w3_mat_comp_33_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_34_T = sub(comp2[9].result, comp3[9].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_34_T_1 = tail(_w3_mat_real_34_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_34_T_2 = asSInt(_w3_mat_real_34_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[34] <= _w3_mat_real_34_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_34_T = sub(asSInt(UInt<1>("h00")), comp1[9].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_1 = tail(_w3_mat_comp_34_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_2 = asSInt(_w3_mat_comp_34_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_3 = add(_w3_mat_comp_34_T_2, comp2[9].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_4 = tail(_w3_mat_comp_34_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_5 = asSInt(_w3_mat_comp_34_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_6 = add(_w3_mat_comp_34_T_5, comp3[9].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_34_T_7 = tail(_w3_mat_comp_34_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_34_T_8 = asSInt(_w3_mat_comp_34_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[34] <= _w3_mat_comp_34_T_8 @[calc6x6.scala 272:47]
          real[15].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[15].in_b <= reg2.mat_real[35] @[calc6x6.scala 225:38]
          real[15].w_a <= io.weight.real[15] @[calc6x6.scala 226:37]
          w3.mat_real[35] <= real[15].result @[calc6x6.scala 227:47]
          skip @[Conditional.scala 39:67]
    
  module DSP48_138 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_138 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_138 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_139 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_139 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_139 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_140 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_140 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_140 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_141 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_141 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_141 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_142 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_142 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_142 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_143 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_143 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_143 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_144 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_144 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_144 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_145 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_145 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_145 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_146 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_146 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_146 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_147 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_147 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_147 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_148 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_148 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_148 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_149 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_149 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_149 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_150 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_150 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_150 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_151 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_151 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_151 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_152 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_152 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_152 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_153 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_153 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_153 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_154 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_154 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_154 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_155 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_155 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_155 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_156 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_156 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_156 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_157 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_157 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_157 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_158 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_158 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_158 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_159 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_159 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_159 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_160 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_160 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_160 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_161 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_161 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_161 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_162 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_162 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_162 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_163 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_163 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_163 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_164 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_164 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_164 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_165 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_165 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_165 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_166 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_166 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_166 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_167 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_167 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_167 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_168 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_168 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_168 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_169 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_169 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_169 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_170 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_170 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_170 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_171 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_171 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_171 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_172 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_172 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_172 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_173 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_173 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_173 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_174 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_174 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_174 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_175 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_175 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_175 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_176 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_176 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_176 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_177 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_177 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_177 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_178 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_178 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_178 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_179 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_179 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_179 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_180 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_180 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_180 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_181 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_181 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_181 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_182 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_182 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_182 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module DSP48_183 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_a : SInt<18>, flip in_b : SInt<25>, out : SInt<43>}
    
    node _io_out_T = mul(io.in_a, io.in_b) @[core.scala 53:22]
    io.out <= _io_out_T @[core.scala 53:12]
    
  module Core_183 : 
    input clock : Clock
    input reset : Reset
    output io : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}
    
    inst dsp48 of DSP48_183 @[core.scala 21:23]
    dsp48.clock <= clock
    dsp48.reset <= reset
    dsp48.io.in_b <= io.in_b @[core.scala 22:19]
    dsp48.io.in_a <= asSInt(UInt<1>("h00")) @[core.scala 23:19]
    io.result <= dsp48.io.out @[core.scala 24:15]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      node _T_3 = bits(io.in_b, 24, 24) @[core.scala 27:25]
      when _T_3 : @[core.scala 27:30]
        dsp48.io.in_a <= asSInt(UInt<16>("h07fff")) @[core.scala 28:31]
        skip @[core.scala 27:30]
      else : @[core.scala 29:24]
        dsp48.io.in_a <= asSInt(UInt<14>("h0199a")) @[core.scala 30:31]
        skip @[core.scala 29:24]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_4 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_5 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_6 = eq(_T_4, _T_5) @[Conditional.scala 37:30]
      when _T_6 : @[Conditional.scala 39:67]
        dsp48.io.in_a <= io.w_a @[core.scala 34:27]
        skip @[Conditional.scala 39:67]
    
  module Calc6x6_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip input : {mat : SInt<16>[36]}, flip flag : UInt<2>, flip weight : {real : SInt<18>[16], comp1 : SInt<18>[10], comp2 : SInt<18>[10], comp3 : SInt<18>[10]}, output : {mat : SInt<37>[16]}, flip valid_in : UInt<1>, valid_out : UInt<1>}
    
    inst Core of Core_138 @[calc6x6.scala 64:43]
    Core.clock <= clock
    Core.reset <= reset
    inst Core_1 of Core_139 @[calc6x6.scala 64:43]
    Core_1.clock <= clock
    Core_1.reset <= reset
    inst Core_2 of Core_140 @[calc6x6.scala 64:43]
    Core_2.clock <= clock
    Core_2.reset <= reset
    inst Core_3 of Core_141 @[calc6x6.scala 64:43]
    Core_3.clock <= clock
    Core_3.reset <= reset
    inst Core_4 of Core_142 @[calc6x6.scala 64:43]
    Core_4.clock <= clock
    Core_4.reset <= reset
    inst Core_5 of Core_143 @[calc6x6.scala 64:43]
    Core_5.clock <= clock
    Core_5.reset <= reset
    inst Core_6 of Core_144 @[calc6x6.scala 64:43]
    Core_6.clock <= clock
    Core_6.reset <= reset
    inst Core_7 of Core_145 @[calc6x6.scala 64:43]
    Core_7.clock <= clock
    Core_7.reset <= reset
    inst Core_8 of Core_146 @[calc6x6.scala 64:43]
    Core_8.clock <= clock
    Core_8.reset <= reset
    inst Core_9 of Core_147 @[calc6x6.scala 64:43]
    Core_9.clock <= clock
    Core_9.reset <= reset
    inst Core_10 of Core_148 @[calc6x6.scala 64:43]
    Core_10.clock <= clock
    Core_10.reset <= reset
    inst Core_11 of Core_149 @[calc6x6.scala 64:43]
    Core_11.clock <= clock
    Core_11.reset <= reset
    inst Core_12 of Core_150 @[calc6x6.scala 64:43]
    Core_12.clock <= clock
    Core_12.reset <= reset
    inst Core_13 of Core_151 @[calc6x6.scala 64:43]
    Core_13.clock <= clock
    Core_13.reset <= reset
    inst Core_14 of Core_152 @[calc6x6.scala 64:43]
    Core_14.clock <= clock
    Core_14.reset <= reset
    inst Core_15 of Core_153 @[calc6x6.scala 64:43]
    Core_15.clock <= clock
    Core_15.reset <= reset
    wire real : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[16] @[calc6x6.scala 64:23]
    real[0].result <= Core.io.result @[calc6x6.scala 64:23]
    Core.io.flag <= real[0].flag @[calc6x6.scala 64:23]
    Core.io.in_b <= real[0].in_b @[calc6x6.scala 64:23]
    Core.io.w_a <= real[0].w_a @[calc6x6.scala 64:23]
    real[1].result <= Core_1.io.result @[calc6x6.scala 64:23]
    Core_1.io.flag <= real[1].flag @[calc6x6.scala 64:23]
    Core_1.io.in_b <= real[1].in_b @[calc6x6.scala 64:23]
    Core_1.io.w_a <= real[1].w_a @[calc6x6.scala 64:23]
    real[2].result <= Core_2.io.result @[calc6x6.scala 64:23]
    Core_2.io.flag <= real[2].flag @[calc6x6.scala 64:23]
    Core_2.io.in_b <= real[2].in_b @[calc6x6.scala 64:23]
    Core_2.io.w_a <= real[2].w_a @[calc6x6.scala 64:23]
    real[3].result <= Core_3.io.result @[calc6x6.scala 64:23]
    Core_3.io.flag <= real[3].flag @[calc6x6.scala 64:23]
    Core_3.io.in_b <= real[3].in_b @[calc6x6.scala 64:23]
    Core_3.io.w_a <= real[3].w_a @[calc6x6.scala 64:23]
    real[4].result <= Core_4.io.result @[calc6x6.scala 64:23]
    Core_4.io.flag <= real[4].flag @[calc6x6.scala 64:23]
    Core_4.io.in_b <= real[4].in_b @[calc6x6.scala 64:23]
    Core_4.io.w_a <= real[4].w_a @[calc6x6.scala 64:23]
    real[5].result <= Core_5.io.result @[calc6x6.scala 64:23]
    Core_5.io.flag <= real[5].flag @[calc6x6.scala 64:23]
    Core_5.io.in_b <= real[5].in_b @[calc6x6.scala 64:23]
    Core_5.io.w_a <= real[5].w_a @[calc6x6.scala 64:23]
    real[6].result <= Core_6.io.result @[calc6x6.scala 64:23]
    Core_6.io.flag <= real[6].flag @[calc6x6.scala 64:23]
    Core_6.io.in_b <= real[6].in_b @[calc6x6.scala 64:23]
    Core_6.io.w_a <= real[6].w_a @[calc6x6.scala 64:23]
    real[7].result <= Core_7.io.result @[calc6x6.scala 64:23]
    Core_7.io.flag <= real[7].flag @[calc6x6.scala 64:23]
    Core_7.io.in_b <= real[7].in_b @[calc6x6.scala 64:23]
    Core_7.io.w_a <= real[7].w_a @[calc6x6.scala 64:23]
    real[8].result <= Core_8.io.result @[calc6x6.scala 64:23]
    Core_8.io.flag <= real[8].flag @[calc6x6.scala 64:23]
    Core_8.io.in_b <= real[8].in_b @[calc6x6.scala 64:23]
    Core_8.io.w_a <= real[8].w_a @[calc6x6.scala 64:23]
    real[9].result <= Core_9.io.result @[calc6x6.scala 64:23]
    Core_9.io.flag <= real[9].flag @[calc6x6.scala 64:23]
    Core_9.io.in_b <= real[9].in_b @[calc6x6.scala 64:23]
    Core_9.io.w_a <= real[9].w_a @[calc6x6.scala 64:23]
    real[10].result <= Core_10.io.result @[calc6x6.scala 64:23]
    Core_10.io.flag <= real[10].flag @[calc6x6.scala 64:23]
    Core_10.io.in_b <= real[10].in_b @[calc6x6.scala 64:23]
    Core_10.io.w_a <= real[10].w_a @[calc6x6.scala 64:23]
    real[11].result <= Core_11.io.result @[calc6x6.scala 64:23]
    Core_11.io.flag <= real[11].flag @[calc6x6.scala 64:23]
    Core_11.io.in_b <= real[11].in_b @[calc6x6.scala 64:23]
    Core_11.io.w_a <= real[11].w_a @[calc6x6.scala 64:23]
    real[12].result <= Core_12.io.result @[calc6x6.scala 64:23]
    Core_12.io.flag <= real[12].flag @[calc6x6.scala 64:23]
    Core_12.io.in_b <= real[12].in_b @[calc6x6.scala 64:23]
    Core_12.io.w_a <= real[12].w_a @[calc6x6.scala 64:23]
    real[13].result <= Core_13.io.result @[calc6x6.scala 64:23]
    Core_13.io.flag <= real[13].flag @[calc6x6.scala 64:23]
    Core_13.io.in_b <= real[13].in_b @[calc6x6.scala 64:23]
    Core_13.io.w_a <= real[13].w_a @[calc6x6.scala 64:23]
    real[14].result <= Core_14.io.result @[calc6x6.scala 64:23]
    Core_14.io.flag <= real[14].flag @[calc6x6.scala 64:23]
    Core_14.io.in_b <= real[14].in_b @[calc6x6.scala 64:23]
    Core_14.io.w_a <= real[14].w_a @[calc6x6.scala 64:23]
    real[15].result <= Core_15.io.result @[calc6x6.scala 64:23]
    Core_15.io.flag <= real[15].flag @[calc6x6.scala 64:23]
    Core_15.io.in_b <= real[15].in_b @[calc6x6.scala 64:23]
    Core_15.io.w_a <= real[15].w_a @[calc6x6.scala 64:23]
    wire _real_0_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[0].flag <= _real_0_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_0_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_0_w_a_WIRE <= _real_0_w_a_T @[calc6x6.scala 67:36]
    real[0].w_a <= _real_0_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_0_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_0_in_b_WIRE <= _real_0_in_b_T @[calc6x6.scala 68:37]
    real[0].in_b <= _real_0_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_1_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[1].flag <= _real_1_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_1_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_1_w_a_WIRE <= _real_1_w_a_T @[calc6x6.scala 67:36]
    real[1].w_a <= _real_1_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_1_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_1_in_b_WIRE <= _real_1_in_b_T @[calc6x6.scala 68:37]
    real[1].in_b <= _real_1_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_2_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[2].flag <= _real_2_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_2_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_2_w_a_WIRE <= _real_2_w_a_T @[calc6x6.scala 67:36]
    real[2].w_a <= _real_2_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_2_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_2_in_b_WIRE <= _real_2_in_b_T @[calc6x6.scala 68:37]
    real[2].in_b <= _real_2_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_3_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[3].flag <= _real_3_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_3_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_3_w_a_WIRE <= _real_3_w_a_T @[calc6x6.scala 67:36]
    real[3].w_a <= _real_3_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_3_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_3_in_b_WIRE <= _real_3_in_b_T @[calc6x6.scala 68:37]
    real[3].in_b <= _real_3_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_4_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[4].flag <= _real_4_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_4_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_4_w_a_WIRE <= _real_4_w_a_T @[calc6x6.scala 67:36]
    real[4].w_a <= _real_4_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_4_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_4_in_b_WIRE <= _real_4_in_b_T @[calc6x6.scala 68:37]
    real[4].in_b <= _real_4_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_5_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[5].flag <= _real_5_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_5_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_5_w_a_WIRE <= _real_5_w_a_T @[calc6x6.scala 67:36]
    real[5].w_a <= _real_5_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_5_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_5_in_b_WIRE <= _real_5_in_b_T @[calc6x6.scala 68:37]
    real[5].in_b <= _real_5_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_6_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[6].flag <= _real_6_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_6_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_6_w_a_WIRE <= _real_6_w_a_T @[calc6x6.scala 67:36]
    real[6].w_a <= _real_6_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_6_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_6_in_b_WIRE <= _real_6_in_b_T @[calc6x6.scala 68:37]
    real[6].in_b <= _real_6_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_7_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[7].flag <= _real_7_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_7_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_7_w_a_WIRE <= _real_7_w_a_T @[calc6x6.scala 67:36]
    real[7].w_a <= _real_7_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_7_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_7_in_b_WIRE <= _real_7_in_b_T @[calc6x6.scala 68:37]
    real[7].in_b <= _real_7_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_8_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[8].flag <= _real_8_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_8_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_8_w_a_WIRE <= _real_8_w_a_T @[calc6x6.scala 67:36]
    real[8].w_a <= _real_8_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_8_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_8_in_b_WIRE <= _real_8_in_b_T @[calc6x6.scala 68:37]
    real[8].in_b <= _real_8_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_9_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[9].flag <= _real_9_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_9_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_9_w_a_WIRE <= _real_9_w_a_T @[calc6x6.scala 67:36]
    real[9].w_a <= _real_9_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_9_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_9_in_b_WIRE <= _real_9_in_b_T @[calc6x6.scala 68:37]
    real[9].in_b <= _real_9_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_10_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_10_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[10].flag <= _real_10_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_10_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_10_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_10_w_a_WIRE <= _real_10_w_a_T @[calc6x6.scala 67:36]
    real[10].w_a <= _real_10_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_10_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_10_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_10_in_b_WIRE <= _real_10_in_b_T @[calc6x6.scala 68:37]
    real[10].in_b <= _real_10_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_11_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_11_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[11].flag <= _real_11_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_11_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_11_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_11_w_a_WIRE <= _real_11_w_a_T @[calc6x6.scala 67:36]
    real[11].w_a <= _real_11_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_11_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_11_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_11_in_b_WIRE <= _real_11_in_b_T @[calc6x6.scala 68:37]
    real[11].in_b <= _real_11_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_12_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_12_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[12].flag <= _real_12_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_12_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_12_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_12_w_a_WIRE <= _real_12_w_a_T @[calc6x6.scala 67:36]
    real[12].w_a <= _real_12_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_12_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_12_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_12_in_b_WIRE <= _real_12_in_b_T @[calc6x6.scala 68:37]
    real[12].in_b <= _real_12_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_13_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_13_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[13].flag <= _real_13_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_13_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_13_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_13_w_a_WIRE <= _real_13_w_a_T @[calc6x6.scala 67:36]
    real[13].w_a <= _real_13_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_13_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_13_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_13_in_b_WIRE <= _real_13_in_b_T @[calc6x6.scala 68:37]
    real[13].in_b <= _real_13_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_14_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_14_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[14].flag <= _real_14_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_14_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_14_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_14_w_a_WIRE <= _real_14_w_a_T @[calc6x6.scala 67:36]
    real[14].w_a <= _real_14_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_14_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_14_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_14_in_b_WIRE <= _real_14_in_b_T @[calc6x6.scala 68:37]
    real[14].in_b <= _real_14_in_b_WIRE @[calc6x6.scala 68:22]
    wire _real_15_flag_WIRE : UInt<1> @[calc6x6.scala 66:37]
    _real_15_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 66:37]
    real[15].flag <= _real_15_flag_WIRE @[calc6x6.scala 66:22]
    wire _real_15_w_a_WIRE : SInt<18> @[calc6x6.scala 67:36]
    node _real_15_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 67:36]
    _real_15_w_a_WIRE <= _real_15_w_a_T @[calc6x6.scala 67:36]
    real[15].w_a <= _real_15_w_a_WIRE @[calc6x6.scala 67:21]
    wire _real_15_in_b_WIRE : SInt<25> @[calc6x6.scala 68:37]
    node _real_15_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 68:37]
    _real_15_in_b_WIRE <= _real_15_in_b_T @[calc6x6.scala 68:37]
    real[15].in_b <= _real_15_in_b_WIRE @[calc6x6.scala 68:22]
    inst Core_16 of Core_154 @[calc6x6.scala 71:44]
    Core_16.clock <= clock
    Core_16.reset <= reset
    inst Core_17 of Core_155 @[calc6x6.scala 71:44]
    Core_17.clock <= clock
    Core_17.reset <= reset
    inst Core_18 of Core_156 @[calc6x6.scala 71:44]
    Core_18.clock <= clock
    Core_18.reset <= reset
    inst Core_19 of Core_157 @[calc6x6.scala 71:44]
    Core_19.clock <= clock
    Core_19.reset <= reset
    inst Core_20 of Core_158 @[calc6x6.scala 71:44]
    Core_20.clock <= clock
    Core_20.reset <= reset
    inst Core_21 of Core_159 @[calc6x6.scala 71:44]
    Core_21.clock <= clock
    Core_21.reset <= reset
    inst Core_22 of Core_160 @[calc6x6.scala 71:44]
    Core_22.clock <= clock
    Core_22.reset <= reset
    inst Core_23 of Core_161 @[calc6x6.scala 71:44]
    Core_23.clock <= clock
    Core_23.reset <= reset
    inst Core_24 of Core_162 @[calc6x6.scala 71:44]
    Core_24.clock <= clock
    Core_24.reset <= reset
    inst Core_25 of Core_163 @[calc6x6.scala 71:44]
    Core_25.clock <= clock
    Core_25.reset <= reset
    wire comp1 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 71:24]
    comp1[0].result <= Core_16.io.result @[calc6x6.scala 71:24]
    Core_16.io.flag <= comp1[0].flag @[calc6x6.scala 71:24]
    Core_16.io.in_b <= comp1[0].in_b @[calc6x6.scala 71:24]
    Core_16.io.w_a <= comp1[0].w_a @[calc6x6.scala 71:24]
    comp1[1].result <= Core_17.io.result @[calc6x6.scala 71:24]
    Core_17.io.flag <= comp1[1].flag @[calc6x6.scala 71:24]
    Core_17.io.in_b <= comp1[1].in_b @[calc6x6.scala 71:24]
    Core_17.io.w_a <= comp1[1].w_a @[calc6x6.scala 71:24]
    comp1[2].result <= Core_18.io.result @[calc6x6.scala 71:24]
    Core_18.io.flag <= comp1[2].flag @[calc6x6.scala 71:24]
    Core_18.io.in_b <= comp1[2].in_b @[calc6x6.scala 71:24]
    Core_18.io.w_a <= comp1[2].w_a @[calc6x6.scala 71:24]
    comp1[3].result <= Core_19.io.result @[calc6x6.scala 71:24]
    Core_19.io.flag <= comp1[3].flag @[calc6x6.scala 71:24]
    Core_19.io.in_b <= comp1[3].in_b @[calc6x6.scala 71:24]
    Core_19.io.w_a <= comp1[3].w_a @[calc6x6.scala 71:24]
    comp1[4].result <= Core_20.io.result @[calc6x6.scala 71:24]
    Core_20.io.flag <= comp1[4].flag @[calc6x6.scala 71:24]
    Core_20.io.in_b <= comp1[4].in_b @[calc6x6.scala 71:24]
    Core_20.io.w_a <= comp1[4].w_a @[calc6x6.scala 71:24]
    comp1[5].result <= Core_21.io.result @[calc6x6.scala 71:24]
    Core_21.io.flag <= comp1[5].flag @[calc6x6.scala 71:24]
    Core_21.io.in_b <= comp1[5].in_b @[calc6x6.scala 71:24]
    Core_21.io.w_a <= comp1[5].w_a @[calc6x6.scala 71:24]
    comp1[6].result <= Core_22.io.result @[calc6x6.scala 71:24]
    Core_22.io.flag <= comp1[6].flag @[calc6x6.scala 71:24]
    Core_22.io.in_b <= comp1[6].in_b @[calc6x6.scala 71:24]
    Core_22.io.w_a <= comp1[6].w_a @[calc6x6.scala 71:24]
    comp1[7].result <= Core_23.io.result @[calc6x6.scala 71:24]
    Core_23.io.flag <= comp1[7].flag @[calc6x6.scala 71:24]
    Core_23.io.in_b <= comp1[7].in_b @[calc6x6.scala 71:24]
    Core_23.io.w_a <= comp1[7].w_a @[calc6x6.scala 71:24]
    comp1[8].result <= Core_24.io.result @[calc6x6.scala 71:24]
    Core_24.io.flag <= comp1[8].flag @[calc6x6.scala 71:24]
    Core_24.io.in_b <= comp1[8].in_b @[calc6x6.scala 71:24]
    Core_24.io.w_a <= comp1[8].w_a @[calc6x6.scala 71:24]
    comp1[9].result <= Core_25.io.result @[calc6x6.scala 71:24]
    Core_25.io.flag <= comp1[9].flag @[calc6x6.scala 71:24]
    Core_25.io.in_b <= comp1[9].in_b @[calc6x6.scala 71:24]
    Core_25.io.w_a <= comp1[9].w_a @[calc6x6.scala 71:24]
    inst Core_26 of Core_164 @[calc6x6.scala 72:44]
    Core_26.clock <= clock
    Core_26.reset <= reset
    inst Core_27 of Core_165 @[calc6x6.scala 72:44]
    Core_27.clock <= clock
    Core_27.reset <= reset
    inst Core_28 of Core_166 @[calc6x6.scala 72:44]
    Core_28.clock <= clock
    Core_28.reset <= reset
    inst Core_29 of Core_167 @[calc6x6.scala 72:44]
    Core_29.clock <= clock
    Core_29.reset <= reset
    inst Core_30 of Core_168 @[calc6x6.scala 72:44]
    Core_30.clock <= clock
    Core_30.reset <= reset
    inst Core_31 of Core_169 @[calc6x6.scala 72:44]
    Core_31.clock <= clock
    Core_31.reset <= reset
    inst Core_32 of Core_170 @[calc6x6.scala 72:44]
    Core_32.clock <= clock
    Core_32.reset <= reset
    inst Core_33 of Core_171 @[calc6x6.scala 72:44]
    Core_33.clock <= clock
    Core_33.reset <= reset
    inst Core_34 of Core_172 @[calc6x6.scala 72:44]
    Core_34.clock <= clock
    Core_34.reset <= reset
    inst Core_35 of Core_173 @[calc6x6.scala 72:44]
    Core_35.clock <= clock
    Core_35.reset <= reset
    wire comp2 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 72:24]
    comp2[0].result <= Core_26.io.result @[calc6x6.scala 72:24]
    Core_26.io.flag <= comp2[0].flag @[calc6x6.scala 72:24]
    Core_26.io.in_b <= comp2[0].in_b @[calc6x6.scala 72:24]
    Core_26.io.w_a <= comp2[0].w_a @[calc6x6.scala 72:24]
    comp2[1].result <= Core_27.io.result @[calc6x6.scala 72:24]
    Core_27.io.flag <= comp2[1].flag @[calc6x6.scala 72:24]
    Core_27.io.in_b <= comp2[1].in_b @[calc6x6.scala 72:24]
    Core_27.io.w_a <= comp2[1].w_a @[calc6x6.scala 72:24]
    comp2[2].result <= Core_28.io.result @[calc6x6.scala 72:24]
    Core_28.io.flag <= comp2[2].flag @[calc6x6.scala 72:24]
    Core_28.io.in_b <= comp2[2].in_b @[calc6x6.scala 72:24]
    Core_28.io.w_a <= comp2[2].w_a @[calc6x6.scala 72:24]
    comp2[3].result <= Core_29.io.result @[calc6x6.scala 72:24]
    Core_29.io.flag <= comp2[3].flag @[calc6x6.scala 72:24]
    Core_29.io.in_b <= comp2[3].in_b @[calc6x6.scala 72:24]
    Core_29.io.w_a <= comp2[3].w_a @[calc6x6.scala 72:24]
    comp2[4].result <= Core_30.io.result @[calc6x6.scala 72:24]
    Core_30.io.flag <= comp2[4].flag @[calc6x6.scala 72:24]
    Core_30.io.in_b <= comp2[4].in_b @[calc6x6.scala 72:24]
    Core_30.io.w_a <= comp2[4].w_a @[calc6x6.scala 72:24]
    comp2[5].result <= Core_31.io.result @[calc6x6.scala 72:24]
    Core_31.io.flag <= comp2[5].flag @[calc6x6.scala 72:24]
    Core_31.io.in_b <= comp2[5].in_b @[calc6x6.scala 72:24]
    Core_31.io.w_a <= comp2[5].w_a @[calc6x6.scala 72:24]
    comp2[6].result <= Core_32.io.result @[calc6x6.scala 72:24]
    Core_32.io.flag <= comp2[6].flag @[calc6x6.scala 72:24]
    Core_32.io.in_b <= comp2[6].in_b @[calc6x6.scala 72:24]
    Core_32.io.w_a <= comp2[6].w_a @[calc6x6.scala 72:24]
    comp2[7].result <= Core_33.io.result @[calc6x6.scala 72:24]
    Core_33.io.flag <= comp2[7].flag @[calc6x6.scala 72:24]
    Core_33.io.in_b <= comp2[7].in_b @[calc6x6.scala 72:24]
    Core_33.io.w_a <= comp2[7].w_a @[calc6x6.scala 72:24]
    comp2[8].result <= Core_34.io.result @[calc6x6.scala 72:24]
    Core_34.io.flag <= comp2[8].flag @[calc6x6.scala 72:24]
    Core_34.io.in_b <= comp2[8].in_b @[calc6x6.scala 72:24]
    Core_34.io.w_a <= comp2[8].w_a @[calc6x6.scala 72:24]
    comp2[9].result <= Core_35.io.result @[calc6x6.scala 72:24]
    Core_35.io.flag <= comp2[9].flag @[calc6x6.scala 72:24]
    Core_35.io.in_b <= comp2[9].in_b @[calc6x6.scala 72:24]
    Core_35.io.w_a <= comp2[9].w_a @[calc6x6.scala 72:24]
    inst Core_36 of Core_174 @[calc6x6.scala 73:44]
    Core_36.clock <= clock
    Core_36.reset <= reset
    inst Core_37 of Core_175 @[calc6x6.scala 73:44]
    Core_37.clock <= clock
    Core_37.reset <= reset
    inst Core_38 of Core_176 @[calc6x6.scala 73:44]
    Core_38.clock <= clock
    Core_38.reset <= reset
    inst Core_39 of Core_177 @[calc6x6.scala 73:44]
    Core_39.clock <= clock
    Core_39.reset <= reset
    inst Core_40 of Core_178 @[calc6x6.scala 73:44]
    Core_40.clock <= clock
    Core_40.reset <= reset
    inst Core_41 of Core_179 @[calc6x6.scala 73:44]
    Core_41.clock <= clock
    Core_41.reset <= reset
    inst Core_42 of Core_180 @[calc6x6.scala 73:44]
    Core_42.clock <= clock
    Core_42.reset <= reset
    inst Core_43 of Core_181 @[calc6x6.scala 73:44]
    Core_43.clock <= clock
    Core_43.reset <= reset
    inst Core_44 of Core_182 @[calc6x6.scala 73:44]
    Core_44.clock <= clock
    Core_44.reset <= reset
    inst Core_45 of Core_183 @[calc6x6.scala 73:44]
    Core_45.clock <= clock
    Core_45.reset <= reset
    wire comp3 : {flip w_a : SInt<18>, flip in_b : SInt<25>, flip flag : UInt<1>, result : SInt<43>}[10] @[calc6x6.scala 73:24]
    comp3[0].result <= Core_36.io.result @[calc6x6.scala 73:24]
    Core_36.io.flag <= comp3[0].flag @[calc6x6.scala 73:24]
    Core_36.io.in_b <= comp3[0].in_b @[calc6x6.scala 73:24]
    Core_36.io.w_a <= comp3[0].w_a @[calc6x6.scala 73:24]
    comp3[1].result <= Core_37.io.result @[calc6x6.scala 73:24]
    Core_37.io.flag <= comp3[1].flag @[calc6x6.scala 73:24]
    Core_37.io.in_b <= comp3[1].in_b @[calc6x6.scala 73:24]
    Core_37.io.w_a <= comp3[1].w_a @[calc6x6.scala 73:24]
    comp3[2].result <= Core_38.io.result @[calc6x6.scala 73:24]
    Core_38.io.flag <= comp3[2].flag @[calc6x6.scala 73:24]
    Core_38.io.in_b <= comp3[2].in_b @[calc6x6.scala 73:24]
    Core_38.io.w_a <= comp3[2].w_a @[calc6x6.scala 73:24]
    comp3[3].result <= Core_39.io.result @[calc6x6.scala 73:24]
    Core_39.io.flag <= comp3[3].flag @[calc6x6.scala 73:24]
    Core_39.io.in_b <= comp3[3].in_b @[calc6x6.scala 73:24]
    Core_39.io.w_a <= comp3[3].w_a @[calc6x6.scala 73:24]
    comp3[4].result <= Core_40.io.result @[calc6x6.scala 73:24]
    Core_40.io.flag <= comp3[4].flag @[calc6x6.scala 73:24]
    Core_40.io.in_b <= comp3[4].in_b @[calc6x6.scala 73:24]
    Core_40.io.w_a <= comp3[4].w_a @[calc6x6.scala 73:24]
    comp3[5].result <= Core_41.io.result @[calc6x6.scala 73:24]
    Core_41.io.flag <= comp3[5].flag @[calc6x6.scala 73:24]
    Core_41.io.in_b <= comp3[5].in_b @[calc6x6.scala 73:24]
    Core_41.io.w_a <= comp3[5].w_a @[calc6x6.scala 73:24]
    comp3[6].result <= Core_42.io.result @[calc6x6.scala 73:24]
    Core_42.io.flag <= comp3[6].flag @[calc6x6.scala 73:24]
    Core_42.io.in_b <= comp3[6].in_b @[calc6x6.scala 73:24]
    Core_42.io.w_a <= comp3[6].w_a @[calc6x6.scala 73:24]
    comp3[7].result <= Core_43.io.result @[calc6x6.scala 73:24]
    Core_43.io.flag <= comp3[7].flag @[calc6x6.scala 73:24]
    Core_43.io.in_b <= comp3[7].in_b @[calc6x6.scala 73:24]
    Core_43.io.w_a <= comp3[7].w_a @[calc6x6.scala 73:24]
    comp3[8].result <= Core_44.io.result @[calc6x6.scala 73:24]
    Core_44.io.flag <= comp3[8].flag @[calc6x6.scala 73:24]
    Core_44.io.in_b <= comp3[8].in_b @[calc6x6.scala 73:24]
    Core_44.io.w_a <= comp3[8].w_a @[calc6x6.scala 73:24]
    comp3[9].result <= Core_45.io.result @[calc6x6.scala 73:24]
    Core_45.io.flag <= comp3[9].flag @[calc6x6.scala 73:24]
    Core_45.io.in_b <= comp3[9].in_b @[calc6x6.scala 73:24]
    Core_45.io.w_a <= comp3[9].w_a @[calc6x6.scala 73:24]
    wire _comp1_0_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[0].flag <= _comp1_0_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_0_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_0_w_a_WIRE <= _comp1_0_w_a_T @[calc6x6.scala 78:37]
    comp1[0].w_a <= _comp1_0_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_0_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_0_in_b_WIRE <= _comp1_0_in_b_T @[calc6x6.scala 79:38]
    comp1[0].in_b <= _comp1_0_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_0_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[0].flag <= _comp2_0_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_0_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_0_w_a_WIRE <= _comp2_0_w_a_T @[calc6x6.scala 81:37]
    comp2[0].w_a <= _comp2_0_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_0_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_0_in_b_WIRE <= _comp2_0_in_b_T @[calc6x6.scala 82:38]
    comp2[0].in_b <= _comp2_0_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_0_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_0_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[0].flag <= _comp3_0_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_0_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_0_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_0_w_a_WIRE <= _comp3_0_w_a_T @[calc6x6.scala 84:37]
    comp3[0].w_a <= _comp3_0_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_0_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_0_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_0_in_b_WIRE <= _comp3_0_in_b_T @[calc6x6.scala 85:38]
    comp3[0].in_b <= _comp3_0_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_1_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[1].flag <= _comp1_1_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_1_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_1_w_a_WIRE <= _comp1_1_w_a_T @[calc6x6.scala 78:37]
    comp1[1].w_a <= _comp1_1_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_1_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_1_in_b_WIRE <= _comp1_1_in_b_T @[calc6x6.scala 79:38]
    comp1[1].in_b <= _comp1_1_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_1_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[1].flag <= _comp2_1_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_1_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_1_w_a_WIRE <= _comp2_1_w_a_T @[calc6x6.scala 81:37]
    comp2[1].w_a <= _comp2_1_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_1_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_1_in_b_WIRE <= _comp2_1_in_b_T @[calc6x6.scala 82:38]
    comp2[1].in_b <= _comp2_1_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_1_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_1_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[1].flag <= _comp3_1_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_1_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_1_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_1_w_a_WIRE <= _comp3_1_w_a_T @[calc6x6.scala 84:37]
    comp3[1].w_a <= _comp3_1_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_1_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_1_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_1_in_b_WIRE <= _comp3_1_in_b_T @[calc6x6.scala 85:38]
    comp3[1].in_b <= _comp3_1_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_2_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[2].flag <= _comp1_2_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_2_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_2_w_a_WIRE <= _comp1_2_w_a_T @[calc6x6.scala 78:37]
    comp1[2].w_a <= _comp1_2_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_2_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_2_in_b_WIRE <= _comp1_2_in_b_T @[calc6x6.scala 79:38]
    comp1[2].in_b <= _comp1_2_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_2_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[2].flag <= _comp2_2_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_2_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_2_w_a_WIRE <= _comp2_2_w_a_T @[calc6x6.scala 81:37]
    comp2[2].w_a <= _comp2_2_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_2_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_2_in_b_WIRE <= _comp2_2_in_b_T @[calc6x6.scala 82:38]
    comp2[2].in_b <= _comp2_2_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_2_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_2_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[2].flag <= _comp3_2_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_2_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_2_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_2_w_a_WIRE <= _comp3_2_w_a_T @[calc6x6.scala 84:37]
    comp3[2].w_a <= _comp3_2_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_2_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_2_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_2_in_b_WIRE <= _comp3_2_in_b_T @[calc6x6.scala 85:38]
    comp3[2].in_b <= _comp3_2_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_3_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[3].flag <= _comp1_3_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_3_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_3_w_a_WIRE <= _comp1_3_w_a_T @[calc6x6.scala 78:37]
    comp1[3].w_a <= _comp1_3_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_3_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_3_in_b_WIRE <= _comp1_3_in_b_T @[calc6x6.scala 79:38]
    comp1[3].in_b <= _comp1_3_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_3_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[3].flag <= _comp2_3_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_3_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_3_w_a_WIRE <= _comp2_3_w_a_T @[calc6x6.scala 81:37]
    comp2[3].w_a <= _comp2_3_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_3_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_3_in_b_WIRE <= _comp2_3_in_b_T @[calc6x6.scala 82:38]
    comp2[3].in_b <= _comp2_3_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_3_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_3_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[3].flag <= _comp3_3_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_3_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_3_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_3_w_a_WIRE <= _comp3_3_w_a_T @[calc6x6.scala 84:37]
    comp3[3].w_a <= _comp3_3_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_3_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_3_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_3_in_b_WIRE <= _comp3_3_in_b_T @[calc6x6.scala 85:38]
    comp3[3].in_b <= _comp3_3_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_4_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[4].flag <= _comp1_4_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_4_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_4_w_a_WIRE <= _comp1_4_w_a_T @[calc6x6.scala 78:37]
    comp1[4].w_a <= _comp1_4_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_4_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_4_in_b_WIRE <= _comp1_4_in_b_T @[calc6x6.scala 79:38]
    comp1[4].in_b <= _comp1_4_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_4_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[4].flag <= _comp2_4_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_4_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_4_w_a_WIRE <= _comp2_4_w_a_T @[calc6x6.scala 81:37]
    comp2[4].w_a <= _comp2_4_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_4_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_4_in_b_WIRE <= _comp2_4_in_b_T @[calc6x6.scala 82:38]
    comp2[4].in_b <= _comp2_4_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_4_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_4_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[4].flag <= _comp3_4_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_4_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_4_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_4_w_a_WIRE <= _comp3_4_w_a_T @[calc6x6.scala 84:37]
    comp3[4].w_a <= _comp3_4_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_4_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_4_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_4_in_b_WIRE <= _comp3_4_in_b_T @[calc6x6.scala 85:38]
    comp3[4].in_b <= _comp3_4_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_5_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[5].flag <= _comp1_5_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_5_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_5_w_a_WIRE <= _comp1_5_w_a_T @[calc6x6.scala 78:37]
    comp1[5].w_a <= _comp1_5_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_5_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_5_in_b_WIRE <= _comp1_5_in_b_T @[calc6x6.scala 79:38]
    comp1[5].in_b <= _comp1_5_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_5_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[5].flag <= _comp2_5_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_5_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_5_w_a_WIRE <= _comp2_5_w_a_T @[calc6x6.scala 81:37]
    comp2[5].w_a <= _comp2_5_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_5_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_5_in_b_WIRE <= _comp2_5_in_b_T @[calc6x6.scala 82:38]
    comp2[5].in_b <= _comp2_5_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_5_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_5_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[5].flag <= _comp3_5_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_5_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_5_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_5_w_a_WIRE <= _comp3_5_w_a_T @[calc6x6.scala 84:37]
    comp3[5].w_a <= _comp3_5_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_5_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_5_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_5_in_b_WIRE <= _comp3_5_in_b_T @[calc6x6.scala 85:38]
    comp3[5].in_b <= _comp3_5_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_6_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[6].flag <= _comp1_6_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_6_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_6_w_a_WIRE <= _comp1_6_w_a_T @[calc6x6.scala 78:37]
    comp1[6].w_a <= _comp1_6_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_6_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_6_in_b_WIRE <= _comp1_6_in_b_T @[calc6x6.scala 79:38]
    comp1[6].in_b <= _comp1_6_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_6_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[6].flag <= _comp2_6_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_6_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_6_w_a_WIRE <= _comp2_6_w_a_T @[calc6x6.scala 81:37]
    comp2[6].w_a <= _comp2_6_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_6_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_6_in_b_WIRE <= _comp2_6_in_b_T @[calc6x6.scala 82:38]
    comp2[6].in_b <= _comp2_6_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_6_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_6_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[6].flag <= _comp3_6_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_6_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_6_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_6_w_a_WIRE <= _comp3_6_w_a_T @[calc6x6.scala 84:37]
    comp3[6].w_a <= _comp3_6_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_6_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_6_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_6_in_b_WIRE <= _comp3_6_in_b_T @[calc6x6.scala 85:38]
    comp3[6].in_b <= _comp3_6_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_7_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[7].flag <= _comp1_7_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_7_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_7_w_a_WIRE <= _comp1_7_w_a_T @[calc6x6.scala 78:37]
    comp1[7].w_a <= _comp1_7_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_7_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_7_in_b_WIRE <= _comp1_7_in_b_T @[calc6x6.scala 79:38]
    comp1[7].in_b <= _comp1_7_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_7_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[7].flag <= _comp2_7_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_7_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_7_w_a_WIRE <= _comp2_7_w_a_T @[calc6x6.scala 81:37]
    comp2[7].w_a <= _comp2_7_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_7_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_7_in_b_WIRE <= _comp2_7_in_b_T @[calc6x6.scala 82:38]
    comp2[7].in_b <= _comp2_7_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_7_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_7_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[7].flag <= _comp3_7_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_7_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_7_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_7_w_a_WIRE <= _comp3_7_w_a_T @[calc6x6.scala 84:37]
    comp3[7].w_a <= _comp3_7_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_7_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_7_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_7_in_b_WIRE <= _comp3_7_in_b_T @[calc6x6.scala 85:38]
    comp3[7].in_b <= _comp3_7_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_8_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[8].flag <= _comp1_8_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_8_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_8_w_a_WIRE <= _comp1_8_w_a_T @[calc6x6.scala 78:37]
    comp1[8].w_a <= _comp1_8_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_8_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_8_in_b_WIRE <= _comp1_8_in_b_T @[calc6x6.scala 79:38]
    comp1[8].in_b <= _comp1_8_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_8_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[8].flag <= _comp2_8_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_8_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_8_w_a_WIRE <= _comp2_8_w_a_T @[calc6x6.scala 81:37]
    comp2[8].w_a <= _comp2_8_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_8_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_8_in_b_WIRE <= _comp2_8_in_b_T @[calc6x6.scala 82:38]
    comp2[8].in_b <= _comp2_8_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_8_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_8_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[8].flag <= _comp3_8_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_8_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_8_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_8_w_a_WIRE <= _comp3_8_w_a_T @[calc6x6.scala 84:37]
    comp3[8].w_a <= _comp3_8_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_8_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_8_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_8_in_b_WIRE <= _comp3_8_in_b_T @[calc6x6.scala 85:38]
    comp3[8].in_b <= _comp3_8_in_b_WIRE @[calc6x6.scala 85:23]
    wire _comp1_9_flag_WIRE : UInt<1> @[calc6x6.scala 77:38]
    _comp1_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 77:38]
    comp1[9].flag <= _comp1_9_flag_WIRE @[calc6x6.scala 77:23]
    wire _comp1_9_w_a_WIRE : SInt<18> @[calc6x6.scala 78:37]
    node _comp1_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 78:37]
    _comp1_9_w_a_WIRE <= _comp1_9_w_a_T @[calc6x6.scala 78:37]
    comp1[9].w_a <= _comp1_9_w_a_WIRE @[calc6x6.scala 78:22]
    wire _comp1_9_in_b_WIRE : SInt<25> @[calc6x6.scala 79:38]
    node _comp1_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 79:38]
    _comp1_9_in_b_WIRE <= _comp1_9_in_b_T @[calc6x6.scala 79:38]
    comp1[9].in_b <= _comp1_9_in_b_WIRE @[calc6x6.scala 79:23]
    wire _comp2_9_flag_WIRE : UInt<1> @[calc6x6.scala 80:38]
    _comp2_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 80:38]
    comp2[9].flag <= _comp2_9_flag_WIRE @[calc6x6.scala 80:23]
    wire _comp2_9_w_a_WIRE : SInt<18> @[calc6x6.scala 81:37]
    node _comp2_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 81:37]
    _comp2_9_w_a_WIRE <= _comp2_9_w_a_T @[calc6x6.scala 81:37]
    comp2[9].w_a <= _comp2_9_w_a_WIRE @[calc6x6.scala 81:22]
    wire _comp2_9_in_b_WIRE : SInt<25> @[calc6x6.scala 82:38]
    node _comp2_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 82:38]
    _comp2_9_in_b_WIRE <= _comp2_9_in_b_T @[calc6x6.scala 82:38]
    comp2[9].in_b <= _comp2_9_in_b_WIRE @[calc6x6.scala 82:23]
    wire _comp3_9_flag_WIRE : UInt<1> @[calc6x6.scala 83:38]
    _comp3_9_flag_WIRE <= UInt<1>("h00") @[calc6x6.scala 83:38]
    comp3[9].flag <= _comp3_9_flag_WIRE @[calc6x6.scala 83:23]
    wire _comp3_9_w_a_WIRE : SInt<18> @[calc6x6.scala 84:37]
    node _comp3_9_w_a_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 84:37]
    _comp3_9_w_a_WIRE <= _comp3_9_w_a_T @[calc6x6.scala 84:37]
    comp3[9].w_a <= _comp3_9_w_a_WIRE @[calc6x6.scala 84:22]
    wire _comp3_9_in_b_WIRE : SInt<25> @[calc6x6.scala 85:38]
    node _comp3_9_in_b_T = asSInt(UInt<1>("h00")) @[calc6x6.scala 85:38]
    _comp3_9_in_b_WIRE <= _comp3_9_in_b_T @[calc6x6.scala 85:38]
    comp3[9].in_b <= _comp3_9_in_b_WIRE @[calc6x6.scala 85:23]
    wire _io_output_WIRE : {mat : SInt<37>[16]} @[calc6x6.scala 87:30]
    node _io_output_T = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[0] <= _io_output_T @[calc6x6.scala 87:30]
    node _io_output_T_1 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[1] <= _io_output_T_1 @[calc6x6.scala 87:30]
    node _io_output_T_2 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[2] <= _io_output_T_2 @[calc6x6.scala 87:30]
    node _io_output_T_3 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[3] <= _io_output_T_3 @[calc6x6.scala 87:30]
    node _io_output_T_4 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[4] <= _io_output_T_4 @[calc6x6.scala 87:30]
    node _io_output_T_5 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[5] <= _io_output_T_5 @[calc6x6.scala 87:30]
    node _io_output_T_6 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[6] <= _io_output_T_6 @[calc6x6.scala 87:30]
    node _io_output_T_7 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[7] <= _io_output_T_7 @[calc6x6.scala 87:30]
    node _io_output_T_8 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[8] <= _io_output_T_8 @[calc6x6.scala 87:30]
    node _io_output_T_9 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[9] <= _io_output_T_9 @[calc6x6.scala 87:30]
    node _io_output_T_10 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[10] <= _io_output_T_10 @[calc6x6.scala 87:30]
    node _io_output_T_11 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[11] <= _io_output_T_11 @[calc6x6.scala 87:30]
    node _io_output_T_12 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[12] <= _io_output_T_12 @[calc6x6.scala 87:30]
    node _io_output_T_13 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[13] <= _io_output_T_13 @[calc6x6.scala 87:30]
    node _io_output_T_14 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[14] <= _io_output_T_14 @[calc6x6.scala 87:30]
    node _io_output_T_15 = asSInt(UInt<37>("h00")) @[calc6x6.scala 87:30]
    _io_output_WIRE.mat[15] <= _io_output_T_15 @[calc6x6.scala 87:30]
    io.output.mat[0] <= _io_output_WIRE.mat[0] @[calc6x6.scala 87:15]
    io.output.mat[1] <= _io_output_WIRE.mat[1] @[calc6x6.scala 87:15]
    io.output.mat[2] <= _io_output_WIRE.mat[2] @[calc6x6.scala 87:15]
    io.output.mat[3] <= _io_output_WIRE.mat[3] @[calc6x6.scala 87:15]
    io.output.mat[4] <= _io_output_WIRE.mat[4] @[calc6x6.scala 87:15]
    io.output.mat[5] <= _io_output_WIRE.mat[5] @[calc6x6.scala 87:15]
    io.output.mat[6] <= _io_output_WIRE.mat[6] @[calc6x6.scala 87:15]
    io.output.mat[7] <= _io_output_WIRE.mat[7] @[calc6x6.scala 87:15]
    io.output.mat[8] <= _io_output_WIRE.mat[8] @[calc6x6.scala 87:15]
    io.output.mat[9] <= _io_output_WIRE.mat[9] @[calc6x6.scala 87:15]
    io.output.mat[10] <= _io_output_WIRE.mat[10] @[calc6x6.scala 87:15]
    io.output.mat[11] <= _io_output_WIRE.mat[11] @[calc6x6.scala 87:15]
    io.output.mat[12] <= _io_output_WIRE.mat[12] @[calc6x6.scala 87:15]
    io.output.mat[13] <= _io_output_WIRE.mat[13] @[calc6x6.scala 87:15]
    io.output.mat[14] <= _io_output_WIRE.mat[14] @[calc6x6.scala 87:15]
    io.output.mat[15] <= _io_output_WIRE.mat[15] @[calc6x6.scala 87:15]
    io.valid_out <= UInt<1>("h00") @[calc6x6.scala 88:18]
    wire _reg1_WIRE : {mat_real : SInt<18>[36], mat_comp : SInt<18>[12]} @[calc6x6.scala 91:36]
    node _reg1_T = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[0] <= _reg1_T @[calc6x6.scala 91:36]
    node _reg1_T_1 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[1] <= _reg1_T_1 @[calc6x6.scala 91:36]
    node _reg1_T_2 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[2] <= _reg1_T_2 @[calc6x6.scala 91:36]
    node _reg1_T_3 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[3] <= _reg1_T_3 @[calc6x6.scala 91:36]
    node _reg1_T_4 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[4] <= _reg1_T_4 @[calc6x6.scala 91:36]
    node _reg1_T_5 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[5] <= _reg1_T_5 @[calc6x6.scala 91:36]
    node _reg1_T_6 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[6] <= _reg1_T_6 @[calc6x6.scala 91:36]
    node _reg1_T_7 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[7] <= _reg1_T_7 @[calc6x6.scala 91:36]
    node _reg1_T_8 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[8] <= _reg1_T_8 @[calc6x6.scala 91:36]
    node _reg1_T_9 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[9] <= _reg1_T_9 @[calc6x6.scala 91:36]
    node _reg1_T_10 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[10] <= _reg1_T_10 @[calc6x6.scala 91:36]
    node _reg1_T_11 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_comp[11] <= _reg1_T_11 @[calc6x6.scala 91:36]
    node _reg1_T_12 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[0] <= _reg1_T_12 @[calc6x6.scala 91:36]
    node _reg1_T_13 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[1] <= _reg1_T_13 @[calc6x6.scala 91:36]
    node _reg1_T_14 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[2] <= _reg1_T_14 @[calc6x6.scala 91:36]
    node _reg1_T_15 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[3] <= _reg1_T_15 @[calc6x6.scala 91:36]
    node _reg1_T_16 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[4] <= _reg1_T_16 @[calc6x6.scala 91:36]
    node _reg1_T_17 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[5] <= _reg1_T_17 @[calc6x6.scala 91:36]
    node _reg1_T_18 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[6] <= _reg1_T_18 @[calc6x6.scala 91:36]
    node _reg1_T_19 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[7] <= _reg1_T_19 @[calc6x6.scala 91:36]
    node _reg1_T_20 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[8] <= _reg1_T_20 @[calc6x6.scala 91:36]
    node _reg1_T_21 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[9] <= _reg1_T_21 @[calc6x6.scala 91:36]
    node _reg1_T_22 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[10] <= _reg1_T_22 @[calc6x6.scala 91:36]
    node _reg1_T_23 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[11] <= _reg1_T_23 @[calc6x6.scala 91:36]
    node _reg1_T_24 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[12] <= _reg1_T_24 @[calc6x6.scala 91:36]
    node _reg1_T_25 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[13] <= _reg1_T_25 @[calc6x6.scala 91:36]
    node _reg1_T_26 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[14] <= _reg1_T_26 @[calc6x6.scala 91:36]
    node _reg1_T_27 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[15] <= _reg1_T_27 @[calc6x6.scala 91:36]
    node _reg1_T_28 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[16] <= _reg1_T_28 @[calc6x6.scala 91:36]
    node _reg1_T_29 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[17] <= _reg1_T_29 @[calc6x6.scala 91:36]
    node _reg1_T_30 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[18] <= _reg1_T_30 @[calc6x6.scala 91:36]
    node _reg1_T_31 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[19] <= _reg1_T_31 @[calc6x6.scala 91:36]
    node _reg1_T_32 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[20] <= _reg1_T_32 @[calc6x6.scala 91:36]
    node _reg1_T_33 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[21] <= _reg1_T_33 @[calc6x6.scala 91:36]
    node _reg1_T_34 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[22] <= _reg1_T_34 @[calc6x6.scala 91:36]
    node _reg1_T_35 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[23] <= _reg1_T_35 @[calc6x6.scala 91:36]
    node _reg1_T_36 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[24] <= _reg1_T_36 @[calc6x6.scala 91:36]
    node _reg1_T_37 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[25] <= _reg1_T_37 @[calc6x6.scala 91:36]
    node _reg1_T_38 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[26] <= _reg1_T_38 @[calc6x6.scala 91:36]
    node _reg1_T_39 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[27] <= _reg1_T_39 @[calc6x6.scala 91:36]
    node _reg1_T_40 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[28] <= _reg1_T_40 @[calc6x6.scala 91:36]
    node _reg1_T_41 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[29] <= _reg1_T_41 @[calc6x6.scala 91:36]
    node _reg1_T_42 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[30] <= _reg1_T_42 @[calc6x6.scala 91:36]
    node _reg1_T_43 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[31] <= _reg1_T_43 @[calc6x6.scala 91:36]
    node _reg1_T_44 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[32] <= _reg1_T_44 @[calc6x6.scala 91:36]
    node _reg1_T_45 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[33] <= _reg1_T_45 @[calc6x6.scala 91:36]
    node _reg1_T_46 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[34] <= _reg1_T_46 @[calc6x6.scala 91:36]
    node _reg1_T_47 = asSInt(UInt<18>("h00")) @[calc6x6.scala 91:36]
    _reg1_WIRE.mat_real[35] <= _reg1_T_47 @[calc6x6.scala 91:36]
    reg reg1 : {mat_real : SInt<18>[36], mat_comp : SInt<18>[12]}, clock with : (reset => (reset, _reg1_WIRE)) @[calc6x6.scala 91:23]
    wire _reg2_WIRE : {mat_real : SInt<20>[36], mat_comp : SInt<20>[10]} @[calc6x6.scala 92:36]
    node _reg2_T = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[0] <= _reg2_T @[calc6x6.scala 92:36]
    node _reg2_T_1 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[1] <= _reg2_T_1 @[calc6x6.scala 92:36]
    node _reg2_T_2 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[2] <= _reg2_T_2 @[calc6x6.scala 92:36]
    node _reg2_T_3 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[3] <= _reg2_T_3 @[calc6x6.scala 92:36]
    node _reg2_T_4 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[4] <= _reg2_T_4 @[calc6x6.scala 92:36]
    node _reg2_T_5 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[5] <= _reg2_T_5 @[calc6x6.scala 92:36]
    node _reg2_T_6 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[6] <= _reg2_T_6 @[calc6x6.scala 92:36]
    node _reg2_T_7 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[7] <= _reg2_T_7 @[calc6x6.scala 92:36]
    node _reg2_T_8 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[8] <= _reg2_T_8 @[calc6x6.scala 92:36]
    node _reg2_T_9 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_comp[9] <= _reg2_T_9 @[calc6x6.scala 92:36]
    node _reg2_T_10 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[0] <= _reg2_T_10 @[calc6x6.scala 92:36]
    node _reg2_T_11 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[1] <= _reg2_T_11 @[calc6x6.scala 92:36]
    node _reg2_T_12 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[2] <= _reg2_T_12 @[calc6x6.scala 92:36]
    node _reg2_T_13 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[3] <= _reg2_T_13 @[calc6x6.scala 92:36]
    node _reg2_T_14 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[4] <= _reg2_T_14 @[calc6x6.scala 92:36]
    node _reg2_T_15 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[5] <= _reg2_T_15 @[calc6x6.scala 92:36]
    node _reg2_T_16 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[6] <= _reg2_T_16 @[calc6x6.scala 92:36]
    node _reg2_T_17 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[7] <= _reg2_T_17 @[calc6x6.scala 92:36]
    node _reg2_T_18 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[8] <= _reg2_T_18 @[calc6x6.scala 92:36]
    node _reg2_T_19 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[9] <= _reg2_T_19 @[calc6x6.scala 92:36]
    node _reg2_T_20 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[10] <= _reg2_T_20 @[calc6x6.scala 92:36]
    node _reg2_T_21 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[11] <= _reg2_T_21 @[calc6x6.scala 92:36]
    node _reg2_T_22 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[12] <= _reg2_T_22 @[calc6x6.scala 92:36]
    node _reg2_T_23 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[13] <= _reg2_T_23 @[calc6x6.scala 92:36]
    node _reg2_T_24 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[14] <= _reg2_T_24 @[calc6x6.scala 92:36]
    node _reg2_T_25 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[15] <= _reg2_T_25 @[calc6x6.scala 92:36]
    node _reg2_T_26 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[16] <= _reg2_T_26 @[calc6x6.scala 92:36]
    node _reg2_T_27 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[17] <= _reg2_T_27 @[calc6x6.scala 92:36]
    node _reg2_T_28 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[18] <= _reg2_T_28 @[calc6x6.scala 92:36]
    node _reg2_T_29 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[19] <= _reg2_T_29 @[calc6x6.scala 92:36]
    node _reg2_T_30 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[20] <= _reg2_T_30 @[calc6x6.scala 92:36]
    node _reg2_T_31 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[21] <= _reg2_T_31 @[calc6x6.scala 92:36]
    node _reg2_T_32 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[22] <= _reg2_T_32 @[calc6x6.scala 92:36]
    node _reg2_T_33 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[23] <= _reg2_T_33 @[calc6x6.scala 92:36]
    node _reg2_T_34 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[24] <= _reg2_T_34 @[calc6x6.scala 92:36]
    node _reg2_T_35 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[25] <= _reg2_T_35 @[calc6x6.scala 92:36]
    node _reg2_T_36 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[26] <= _reg2_T_36 @[calc6x6.scala 92:36]
    node _reg2_T_37 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[27] <= _reg2_T_37 @[calc6x6.scala 92:36]
    node _reg2_T_38 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[28] <= _reg2_T_38 @[calc6x6.scala 92:36]
    node _reg2_T_39 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[29] <= _reg2_T_39 @[calc6x6.scala 92:36]
    node _reg2_T_40 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[30] <= _reg2_T_40 @[calc6x6.scala 92:36]
    node _reg2_T_41 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[31] <= _reg2_T_41 @[calc6x6.scala 92:36]
    node _reg2_T_42 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[32] <= _reg2_T_42 @[calc6x6.scala 92:36]
    node _reg2_T_43 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[33] <= _reg2_T_43 @[calc6x6.scala 92:36]
    node _reg2_T_44 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[34] <= _reg2_T_44 @[calc6x6.scala 92:36]
    node _reg2_T_45 = asSInt(UInt<20>("h00")) @[calc6x6.scala 92:36]
    _reg2_WIRE.mat_real[35] <= _reg2_T_45 @[calc6x6.scala 92:36]
    reg reg2 : {mat_real : SInt<20>[36], mat_comp : SInt<20>[10]}, clock with : (reset => (reset, _reg2_WIRE)) @[calc6x6.scala 92:23]
    wire _w3_WIRE : {mat_real : SInt<38>[36], mat_comp : SInt<38>[36]} @[calc6x6.scala 93:34]
    node _w3_T = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[0] <= _w3_T @[calc6x6.scala 93:34]
    node _w3_T_1 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[1] <= _w3_T_1 @[calc6x6.scala 93:34]
    node _w3_T_2 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[2] <= _w3_T_2 @[calc6x6.scala 93:34]
    node _w3_T_3 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[3] <= _w3_T_3 @[calc6x6.scala 93:34]
    node _w3_T_4 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[4] <= _w3_T_4 @[calc6x6.scala 93:34]
    node _w3_T_5 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[5] <= _w3_T_5 @[calc6x6.scala 93:34]
    node _w3_T_6 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[6] <= _w3_T_6 @[calc6x6.scala 93:34]
    node _w3_T_7 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[7] <= _w3_T_7 @[calc6x6.scala 93:34]
    node _w3_T_8 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[8] <= _w3_T_8 @[calc6x6.scala 93:34]
    node _w3_T_9 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[9] <= _w3_T_9 @[calc6x6.scala 93:34]
    node _w3_T_10 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[10] <= _w3_T_10 @[calc6x6.scala 93:34]
    node _w3_T_11 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[11] <= _w3_T_11 @[calc6x6.scala 93:34]
    node _w3_T_12 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[12] <= _w3_T_12 @[calc6x6.scala 93:34]
    node _w3_T_13 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[13] <= _w3_T_13 @[calc6x6.scala 93:34]
    node _w3_T_14 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[14] <= _w3_T_14 @[calc6x6.scala 93:34]
    node _w3_T_15 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[15] <= _w3_T_15 @[calc6x6.scala 93:34]
    node _w3_T_16 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[16] <= _w3_T_16 @[calc6x6.scala 93:34]
    node _w3_T_17 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[17] <= _w3_T_17 @[calc6x6.scala 93:34]
    node _w3_T_18 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[18] <= _w3_T_18 @[calc6x6.scala 93:34]
    node _w3_T_19 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[19] <= _w3_T_19 @[calc6x6.scala 93:34]
    node _w3_T_20 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[20] <= _w3_T_20 @[calc6x6.scala 93:34]
    node _w3_T_21 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[21] <= _w3_T_21 @[calc6x6.scala 93:34]
    node _w3_T_22 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[22] <= _w3_T_22 @[calc6x6.scala 93:34]
    node _w3_T_23 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[23] <= _w3_T_23 @[calc6x6.scala 93:34]
    node _w3_T_24 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[24] <= _w3_T_24 @[calc6x6.scala 93:34]
    node _w3_T_25 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[25] <= _w3_T_25 @[calc6x6.scala 93:34]
    node _w3_T_26 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[26] <= _w3_T_26 @[calc6x6.scala 93:34]
    node _w3_T_27 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[27] <= _w3_T_27 @[calc6x6.scala 93:34]
    node _w3_T_28 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[28] <= _w3_T_28 @[calc6x6.scala 93:34]
    node _w3_T_29 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[29] <= _w3_T_29 @[calc6x6.scala 93:34]
    node _w3_T_30 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[30] <= _w3_T_30 @[calc6x6.scala 93:34]
    node _w3_T_31 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[31] <= _w3_T_31 @[calc6x6.scala 93:34]
    node _w3_T_32 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[32] <= _w3_T_32 @[calc6x6.scala 93:34]
    node _w3_T_33 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[33] <= _w3_T_33 @[calc6x6.scala 93:34]
    node _w3_T_34 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[34] <= _w3_T_34 @[calc6x6.scala 93:34]
    node _w3_T_35 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_comp[35] <= _w3_T_35 @[calc6x6.scala 93:34]
    node _w3_T_36 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[0] <= _w3_T_36 @[calc6x6.scala 93:34]
    node _w3_T_37 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[1] <= _w3_T_37 @[calc6x6.scala 93:34]
    node _w3_T_38 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[2] <= _w3_T_38 @[calc6x6.scala 93:34]
    node _w3_T_39 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[3] <= _w3_T_39 @[calc6x6.scala 93:34]
    node _w3_T_40 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[4] <= _w3_T_40 @[calc6x6.scala 93:34]
    node _w3_T_41 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[5] <= _w3_T_41 @[calc6x6.scala 93:34]
    node _w3_T_42 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[6] <= _w3_T_42 @[calc6x6.scala 93:34]
    node _w3_T_43 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[7] <= _w3_T_43 @[calc6x6.scala 93:34]
    node _w3_T_44 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[8] <= _w3_T_44 @[calc6x6.scala 93:34]
    node _w3_T_45 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[9] <= _w3_T_45 @[calc6x6.scala 93:34]
    node _w3_T_46 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[10] <= _w3_T_46 @[calc6x6.scala 93:34]
    node _w3_T_47 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[11] <= _w3_T_47 @[calc6x6.scala 93:34]
    node _w3_T_48 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[12] <= _w3_T_48 @[calc6x6.scala 93:34]
    node _w3_T_49 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[13] <= _w3_T_49 @[calc6x6.scala 93:34]
    node _w3_T_50 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[14] <= _w3_T_50 @[calc6x6.scala 93:34]
    node _w3_T_51 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[15] <= _w3_T_51 @[calc6x6.scala 93:34]
    node _w3_T_52 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[16] <= _w3_T_52 @[calc6x6.scala 93:34]
    node _w3_T_53 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[17] <= _w3_T_53 @[calc6x6.scala 93:34]
    node _w3_T_54 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[18] <= _w3_T_54 @[calc6x6.scala 93:34]
    node _w3_T_55 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[19] <= _w3_T_55 @[calc6x6.scala 93:34]
    node _w3_T_56 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[20] <= _w3_T_56 @[calc6x6.scala 93:34]
    node _w3_T_57 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[21] <= _w3_T_57 @[calc6x6.scala 93:34]
    node _w3_T_58 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[22] <= _w3_T_58 @[calc6x6.scala 93:34]
    node _w3_T_59 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[23] <= _w3_T_59 @[calc6x6.scala 93:34]
    node _w3_T_60 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[24] <= _w3_T_60 @[calc6x6.scala 93:34]
    node _w3_T_61 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[25] <= _w3_T_61 @[calc6x6.scala 93:34]
    node _w3_T_62 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[26] <= _w3_T_62 @[calc6x6.scala 93:34]
    node _w3_T_63 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[27] <= _w3_T_63 @[calc6x6.scala 93:34]
    node _w3_T_64 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[28] <= _w3_T_64 @[calc6x6.scala 93:34]
    node _w3_T_65 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[29] <= _w3_T_65 @[calc6x6.scala 93:34]
    node _w3_T_66 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[30] <= _w3_T_66 @[calc6x6.scala 93:34]
    node _w3_T_67 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[31] <= _w3_T_67 @[calc6x6.scala 93:34]
    node _w3_T_68 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[32] <= _w3_T_68 @[calc6x6.scala 93:34]
    node _w3_T_69 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[33] <= _w3_T_69 @[calc6x6.scala 93:34]
    node _w3_T_70 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[34] <= _w3_T_70 @[calc6x6.scala 93:34]
    node _w3_T_71 = asSInt(UInt<38>("h00")) @[calc6x6.scala 93:34]
    _w3_WIRE.mat_real[35] <= _w3_T_71 @[calc6x6.scala 93:34]
    reg w3 : {mat_real : SInt<38>[36], mat_comp : SInt<38>[36]}, clock with : (reset => (reset, _w3_WIRE)) @[calc6x6.scala 93:21]
    wire _reg3_WIRE : {mat_real : SInt<38>[24], mat_comp : SInt<38>[24]} @[calc6x6.scala 94:36]
    node _reg3_T = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[0] <= _reg3_T @[calc6x6.scala 94:36]
    node _reg3_T_1 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[1] <= _reg3_T_1 @[calc6x6.scala 94:36]
    node _reg3_T_2 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[2] <= _reg3_T_2 @[calc6x6.scala 94:36]
    node _reg3_T_3 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[3] <= _reg3_T_3 @[calc6x6.scala 94:36]
    node _reg3_T_4 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[4] <= _reg3_T_4 @[calc6x6.scala 94:36]
    node _reg3_T_5 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[5] <= _reg3_T_5 @[calc6x6.scala 94:36]
    node _reg3_T_6 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[6] <= _reg3_T_6 @[calc6x6.scala 94:36]
    node _reg3_T_7 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[7] <= _reg3_T_7 @[calc6x6.scala 94:36]
    node _reg3_T_8 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[8] <= _reg3_T_8 @[calc6x6.scala 94:36]
    node _reg3_T_9 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[9] <= _reg3_T_9 @[calc6x6.scala 94:36]
    node _reg3_T_10 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[10] <= _reg3_T_10 @[calc6x6.scala 94:36]
    node _reg3_T_11 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[11] <= _reg3_T_11 @[calc6x6.scala 94:36]
    node _reg3_T_12 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[12] <= _reg3_T_12 @[calc6x6.scala 94:36]
    node _reg3_T_13 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[13] <= _reg3_T_13 @[calc6x6.scala 94:36]
    node _reg3_T_14 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[14] <= _reg3_T_14 @[calc6x6.scala 94:36]
    node _reg3_T_15 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[15] <= _reg3_T_15 @[calc6x6.scala 94:36]
    node _reg3_T_16 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[16] <= _reg3_T_16 @[calc6x6.scala 94:36]
    node _reg3_T_17 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[17] <= _reg3_T_17 @[calc6x6.scala 94:36]
    node _reg3_T_18 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[18] <= _reg3_T_18 @[calc6x6.scala 94:36]
    node _reg3_T_19 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[19] <= _reg3_T_19 @[calc6x6.scala 94:36]
    node _reg3_T_20 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[20] <= _reg3_T_20 @[calc6x6.scala 94:36]
    node _reg3_T_21 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[21] <= _reg3_T_21 @[calc6x6.scala 94:36]
    node _reg3_T_22 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[22] <= _reg3_T_22 @[calc6x6.scala 94:36]
    node _reg3_T_23 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_comp[23] <= _reg3_T_23 @[calc6x6.scala 94:36]
    node _reg3_T_24 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[0] <= _reg3_T_24 @[calc6x6.scala 94:36]
    node _reg3_T_25 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[1] <= _reg3_T_25 @[calc6x6.scala 94:36]
    node _reg3_T_26 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[2] <= _reg3_T_26 @[calc6x6.scala 94:36]
    node _reg3_T_27 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[3] <= _reg3_T_27 @[calc6x6.scala 94:36]
    node _reg3_T_28 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[4] <= _reg3_T_28 @[calc6x6.scala 94:36]
    node _reg3_T_29 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[5] <= _reg3_T_29 @[calc6x6.scala 94:36]
    node _reg3_T_30 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[6] <= _reg3_T_30 @[calc6x6.scala 94:36]
    node _reg3_T_31 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[7] <= _reg3_T_31 @[calc6x6.scala 94:36]
    node _reg3_T_32 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[8] <= _reg3_T_32 @[calc6x6.scala 94:36]
    node _reg3_T_33 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[9] <= _reg3_T_33 @[calc6x6.scala 94:36]
    node _reg3_T_34 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[10] <= _reg3_T_34 @[calc6x6.scala 94:36]
    node _reg3_T_35 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[11] <= _reg3_T_35 @[calc6x6.scala 94:36]
    node _reg3_T_36 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[12] <= _reg3_T_36 @[calc6x6.scala 94:36]
    node _reg3_T_37 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[13] <= _reg3_T_37 @[calc6x6.scala 94:36]
    node _reg3_T_38 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[14] <= _reg3_T_38 @[calc6x6.scala 94:36]
    node _reg3_T_39 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[15] <= _reg3_T_39 @[calc6x6.scala 94:36]
    node _reg3_T_40 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[16] <= _reg3_T_40 @[calc6x6.scala 94:36]
    node _reg3_T_41 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[17] <= _reg3_T_41 @[calc6x6.scala 94:36]
    node _reg3_T_42 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[18] <= _reg3_T_42 @[calc6x6.scala 94:36]
    node _reg3_T_43 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[19] <= _reg3_T_43 @[calc6x6.scala 94:36]
    node _reg3_T_44 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[20] <= _reg3_T_44 @[calc6x6.scala 94:36]
    node _reg3_T_45 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[21] <= _reg3_T_45 @[calc6x6.scala 94:36]
    node _reg3_T_46 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[22] <= _reg3_T_46 @[calc6x6.scala 94:36]
    node _reg3_T_47 = asSInt(UInt<38>("h00")) @[calc6x6.scala 94:36]
    _reg3_WIRE.mat_real[23] <= _reg3_T_47 @[calc6x6.scala 94:36]
    reg reg3 : {mat_real : SInt<38>[24], mat_comp : SInt<38>[24]}, clock with : (reset => (reset, _reg3_WIRE)) @[calc6x6.scala 94:23]
    wire _valid_reg_WIRE : UInt<1>[5] @[calc6x6.scala 172:36]
    _valid_reg_WIRE[0] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[1] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[2] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[3] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    _valid_reg_WIRE[4] <= UInt<1>("h00") @[calc6x6.scala 172:36]
    reg valid_reg : UInt<1>[5], clock with : (reset => (reset, _valid_reg_WIRE)) @[calc6x6.scala 172:28]
    valid_reg[0] <= io.valid_in @[calc6x6.scala 173:18]
    node _reg1_mat_real_0_T = sub(io.input.mat[0], io.input.mat[24]) @[calc6x6.scala 110:56]
    reg1.mat_real[0] <= _reg1_mat_real_0_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_6_T = add(io.input.mat[6], io.input.mat[12]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_6_T_1 = add(_reg1_mat_real_6_T, io.input.mat[18]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_6_T_2 = add(_reg1_mat_real_6_T_1, io.input.mat[24]) @[calc6x6.scala 111:92]
    reg1.mat_real[6] <= _reg1_mat_real_6_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_12_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_1 = tail(_reg1_mat_real_12_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_2 = asSInt(_reg1_mat_real_12_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_12_T_3 = add(_reg1_mat_real_12_T_2, io.input.mat[12]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_12_T_4 = sub(_reg1_mat_real_12_T_3, io.input.mat[18]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_12_T_5 = add(_reg1_mat_real_12_T_4, io.input.mat[24]) @[calc6x6.scala 112:93]
    reg1.mat_real[12] <= _reg1_mat_real_12_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_18_T = sub(asSInt(UInt<1>("h00")), io.input.mat[12]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_1 = tail(_reg1_mat_real_18_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_2 = asSInt(_reg1_mat_real_18_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_18_T_3 = add(_reg1_mat_real_18_T_2, io.input.mat[24]) @[calc6x6.scala 113:57]
    reg1.mat_real[18] <= _reg1_mat_real_18_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_24_T = sub(asSInt(UInt<1>("h00")), io.input.mat[12]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_1 = tail(_reg1_mat_real_24_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_2 = asSInt(_reg1_mat_real_24_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_24_T_3 = add(_reg1_mat_real_24_T_2, io.input.mat[24]) @[calc6x6.scala 114:57]
    reg1.mat_real[24] <= _reg1_mat_real_24_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_30_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_1 = tail(_reg1_mat_real_30_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_2 = asSInt(_reg1_mat_real_30_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_30_T_3 = add(_reg1_mat_real_30_T_2, io.input.mat[30]) @[calc6x6.scala 115:57]
    reg1.mat_real[30] <= _reg1_mat_real_30_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_0_T = sub(asSInt(UInt<1>("h00")), io.input.mat[6]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_1 = tail(_reg1_mat_comp_0_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_2 = asSInt(_reg1_mat_comp_0_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_0_T_3 = add(_reg1_mat_comp_0_T_2, io.input.mat[18]) @[calc6x6.scala 117:57]
    reg1.mat_comp[0] <= _reg1_mat_comp_0_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_6_T = sub(io.input.mat[6], io.input.mat[18]) @[calc6x6.scala 118:56]
    reg1.mat_comp[6] <= _reg1_mat_comp_6_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_1_T = sub(io.input.mat[1], io.input.mat[25]) @[calc6x6.scala 110:56]
    reg1.mat_real[1] <= _reg1_mat_real_1_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_7_T = add(io.input.mat[7], io.input.mat[13]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_7_T_1 = add(_reg1_mat_real_7_T, io.input.mat[19]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_7_T_2 = add(_reg1_mat_real_7_T_1, io.input.mat[25]) @[calc6x6.scala 111:92]
    reg1.mat_real[7] <= _reg1_mat_real_7_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_13_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_1 = tail(_reg1_mat_real_13_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_2 = asSInt(_reg1_mat_real_13_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_13_T_3 = add(_reg1_mat_real_13_T_2, io.input.mat[13]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_13_T_4 = sub(_reg1_mat_real_13_T_3, io.input.mat[19]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_13_T_5 = add(_reg1_mat_real_13_T_4, io.input.mat[25]) @[calc6x6.scala 112:93]
    reg1.mat_real[13] <= _reg1_mat_real_13_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_19_T = sub(asSInt(UInt<1>("h00")), io.input.mat[13]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_1 = tail(_reg1_mat_real_19_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_2 = asSInt(_reg1_mat_real_19_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_19_T_3 = add(_reg1_mat_real_19_T_2, io.input.mat[25]) @[calc6x6.scala 113:57]
    reg1.mat_real[19] <= _reg1_mat_real_19_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_25_T = sub(asSInt(UInt<1>("h00")), io.input.mat[13]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_1 = tail(_reg1_mat_real_25_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_2 = asSInt(_reg1_mat_real_25_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_25_T_3 = add(_reg1_mat_real_25_T_2, io.input.mat[25]) @[calc6x6.scala 114:57]
    reg1.mat_real[25] <= _reg1_mat_real_25_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_31_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_1 = tail(_reg1_mat_real_31_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_2 = asSInt(_reg1_mat_real_31_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_31_T_3 = add(_reg1_mat_real_31_T_2, io.input.mat[31]) @[calc6x6.scala 115:57]
    reg1.mat_real[31] <= _reg1_mat_real_31_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_1_T = sub(asSInt(UInt<1>("h00")), io.input.mat[7]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_1 = tail(_reg1_mat_comp_1_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_2 = asSInt(_reg1_mat_comp_1_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_1_T_3 = add(_reg1_mat_comp_1_T_2, io.input.mat[19]) @[calc6x6.scala 117:57]
    reg1.mat_comp[1] <= _reg1_mat_comp_1_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_7_T = sub(io.input.mat[7], io.input.mat[19]) @[calc6x6.scala 118:56]
    reg1.mat_comp[7] <= _reg1_mat_comp_7_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_2_T = sub(io.input.mat[2], io.input.mat[26]) @[calc6x6.scala 110:56]
    reg1.mat_real[2] <= _reg1_mat_real_2_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_8_T = add(io.input.mat[8], io.input.mat[14]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_8_T_1 = add(_reg1_mat_real_8_T, io.input.mat[20]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_8_T_2 = add(_reg1_mat_real_8_T_1, io.input.mat[26]) @[calc6x6.scala 111:92]
    reg1.mat_real[8] <= _reg1_mat_real_8_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_14_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_1 = tail(_reg1_mat_real_14_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_2 = asSInt(_reg1_mat_real_14_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_14_T_3 = add(_reg1_mat_real_14_T_2, io.input.mat[14]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_14_T_4 = sub(_reg1_mat_real_14_T_3, io.input.mat[20]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_14_T_5 = add(_reg1_mat_real_14_T_4, io.input.mat[26]) @[calc6x6.scala 112:93]
    reg1.mat_real[14] <= _reg1_mat_real_14_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_20_T = sub(asSInt(UInt<1>("h00")), io.input.mat[14]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_1 = tail(_reg1_mat_real_20_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_2 = asSInt(_reg1_mat_real_20_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_20_T_3 = add(_reg1_mat_real_20_T_2, io.input.mat[26]) @[calc6x6.scala 113:57]
    reg1.mat_real[20] <= _reg1_mat_real_20_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_26_T = sub(asSInt(UInt<1>("h00")), io.input.mat[14]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_1 = tail(_reg1_mat_real_26_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_2 = asSInt(_reg1_mat_real_26_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_26_T_3 = add(_reg1_mat_real_26_T_2, io.input.mat[26]) @[calc6x6.scala 114:57]
    reg1.mat_real[26] <= _reg1_mat_real_26_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_32_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_1 = tail(_reg1_mat_real_32_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_2 = asSInt(_reg1_mat_real_32_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_32_T_3 = add(_reg1_mat_real_32_T_2, io.input.mat[32]) @[calc6x6.scala 115:57]
    reg1.mat_real[32] <= _reg1_mat_real_32_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_2_T = sub(asSInt(UInt<1>("h00")), io.input.mat[8]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_1 = tail(_reg1_mat_comp_2_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_2 = asSInt(_reg1_mat_comp_2_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_2_T_3 = add(_reg1_mat_comp_2_T_2, io.input.mat[20]) @[calc6x6.scala 117:57]
    reg1.mat_comp[2] <= _reg1_mat_comp_2_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_8_T = sub(io.input.mat[8], io.input.mat[20]) @[calc6x6.scala 118:56]
    reg1.mat_comp[8] <= _reg1_mat_comp_8_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_3_T = sub(io.input.mat[3], io.input.mat[27]) @[calc6x6.scala 110:56]
    reg1.mat_real[3] <= _reg1_mat_real_3_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_9_T = add(io.input.mat[9], io.input.mat[15]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_9_T_1 = add(_reg1_mat_real_9_T, io.input.mat[21]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_9_T_2 = add(_reg1_mat_real_9_T_1, io.input.mat[27]) @[calc6x6.scala 111:92]
    reg1.mat_real[9] <= _reg1_mat_real_9_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_15_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_1 = tail(_reg1_mat_real_15_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_2 = asSInt(_reg1_mat_real_15_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_15_T_3 = add(_reg1_mat_real_15_T_2, io.input.mat[15]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_15_T_4 = sub(_reg1_mat_real_15_T_3, io.input.mat[21]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_15_T_5 = add(_reg1_mat_real_15_T_4, io.input.mat[27]) @[calc6x6.scala 112:93]
    reg1.mat_real[15] <= _reg1_mat_real_15_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_21_T = sub(asSInt(UInt<1>("h00")), io.input.mat[15]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_1 = tail(_reg1_mat_real_21_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_2 = asSInt(_reg1_mat_real_21_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_21_T_3 = add(_reg1_mat_real_21_T_2, io.input.mat[27]) @[calc6x6.scala 113:57]
    reg1.mat_real[21] <= _reg1_mat_real_21_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_27_T = sub(asSInt(UInt<1>("h00")), io.input.mat[15]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_1 = tail(_reg1_mat_real_27_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_2 = asSInt(_reg1_mat_real_27_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_27_T_3 = add(_reg1_mat_real_27_T_2, io.input.mat[27]) @[calc6x6.scala 114:57]
    reg1.mat_real[27] <= _reg1_mat_real_27_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_33_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_1 = tail(_reg1_mat_real_33_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_2 = asSInt(_reg1_mat_real_33_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_33_T_3 = add(_reg1_mat_real_33_T_2, io.input.mat[33]) @[calc6x6.scala 115:57]
    reg1.mat_real[33] <= _reg1_mat_real_33_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_3_T = sub(asSInt(UInt<1>("h00")), io.input.mat[9]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_1 = tail(_reg1_mat_comp_3_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_2 = asSInt(_reg1_mat_comp_3_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_3_T_3 = add(_reg1_mat_comp_3_T_2, io.input.mat[21]) @[calc6x6.scala 117:57]
    reg1.mat_comp[3] <= _reg1_mat_comp_3_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_9_T = sub(io.input.mat[9], io.input.mat[21]) @[calc6x6.scala 118:56]
    reg1.mat_comp[9] <= _reg1_mat_comp_9_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_4_T = sub(io.input.mat[4], io.input.mat[28]) @[calc6x6.scala 110:56]
    reg1.mat_real[4] <= _reg1_mat_real_4_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_10_T = add(io.input.mat[10], io.input.mat[16]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_10_T_1 = add(_reg1_mat_real_10_T, io.input.mat[22]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_10_T_2 = add(_reg1_mat_real_10_T_1, io.input.mat[28]) @[calc6x6.scala 111:92]
    reg1.mat_real[10] <= _reg1_mat_real_10_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_16_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_1 = tail(_reg1_mat_real_16_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_2 = asSInt(_reg1_mat_real_16_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_16_T_3 = add(_reg1_mat_real_16_T_2, io.input.mat[16]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_16_T_4 = sub(_reg1_mat_real_16_T_3, io.input.mat[22]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_16_T_5 = add(_reg1_mat_real_16_T_4, io.input.mat[28]) @[calc6x6.scala 112:93]
    reg1.mat_real[16] <= _reg1_mat_real_16_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_22_T = sub(asSInt(UInt<1>("h00")), io.input.mat[16]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_1 = tail(_reg1_mat_real_22_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_2 = asSInt(_reg1_mat_real_22_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_22_T_3 = add(_reg1_mat_real_22_T_2, io.input.mat[28]) @[calc6x6.scala 113:57]
    reg1.mat_real[22] <= _reg1_mat_real_22_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_28_T = sub(asSInt(UInt<1>("h00")), io.input.mat[16]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_1 = tail(_reg1_mat_real_28_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_2 = asSInt(_reg1_mat_real_28_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_28_T_3 = add(_reg1_mat_real_28_T_2, io.input.mat[28]) @[calc6x6.scala 114:57]
    reg1.mat_real[28] <= _reg1_mat_real_28_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_34_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_1 = tail(_reg1_mat_real_34_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_2 = asSInt(_reg1_mat_real_34_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_34_T_3 = add(_reg1_mat_real_34_T_2, io.input.mat[34]) @[calc6x6.scala 115:57]
    reg1.mat_real[34] <= _reg1_mat_real_34_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), io.input.mat[10]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_1 = tail(_reg1_mat_comp_4_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_2 = asSInt(_reg1_mat_comp_4_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_4_T_3 = add(_reg1_mat_comp_4_T_2, io.input.mat[22]) @[calc6x6.scala 117:57]
    reg1.mat_comp[4] <= _reg1_mat_comp_4_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_10_T = sub(io.input.mat[10], io.input.mat[22]) @[calc6x6.scala 118:56]
    reg1.mat_comp[10] <= _reg1_mat_comp_10_T @[calc6x6.scala 118:37]
    node _reg1_mat_real_5_T = sub(io.input.mat[5], io.input.mat[29]) @[calc6x6.scala 110:56]
    reg1.mat_real[5] <= _reg1_mat_real_5_T @[calc6x6.scala 110:37]
    node _reg1_mat_real_11_T = add(io.input.mat[11], io.input.mat[17]) @[calc6x6.scala 111:56]
    node _reg1_mat_real_11_T_1 = add(_reg1_mat_real_11_T, io.input.mat[23]) @[calc6x6.scala 111:74]
    node _reg1_mat_real_11_T_2 = add(_reg1_mat_real_11_T_1, io.input.mat[29]) @[calc6x6.scala 111:92]
    reg1.mat_real[11] <= _reg1_mat_real_11_T_2 @[calc6x6.scala 111:37]
    node _reg1_mat_real_17_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_1 = tail(_reg1_mat_real_17_T, 1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_2 = asSInt(_reg1_mat_real_17_T_1) @[calc6x6.scala 112:40]
    node _reg1_mat_real_17_T_3 = add(_reg1_mat_real_17_T_2, io.input.mat[17]) @[calc6x6.scala 112:57]
    node _reg1_mat_real_17_T_4 = sub(_reg1_mat_real_17_T_3, io.input.mat[23]) @[calc6x6.scala 112:75]
    node _reg1_mat_real_17_T_5 = add(_reg1_mat_real_17_T_4, io.input.mat[29]) @[calc6x6.scala 112:93]
    reg1.mat_real[17] <= _reg1_mat_real_17_T_5 @[calc6x6.scala 112:37]
    node _reg1_mat_real_23_T = sub(asSInt(UInt<1>("h00")), io.input.mat[17]) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_1 = tail(_reg1_mat_real_23_T, 1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_2 = asSInt(_reg1_mat_real_23_T_1) @[calc6x6.scala 113:40]
    node _reg1_mat_real_23_T_3 = add(_reg1_mat_real_23_T_2, io.input.mat[29]) @[calc6x6.scala 113:57]
    reg1.mat_real[23] <= _reg1_mat_real_23_T_3 @[calc6x6.scala 113:37]
    node _reg1_mat_real_29_T = sub(asSInt(UInt<1>("h00")), io.input.mat[17]) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_1 = tail(_reg1_mat_real_29_T, 1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_2 = asSInt(_reg1_mat_real_29_T_1) @[calc6x6.scala 114:40]
    node _reg1_mat_real_29_T_3 = add(_reg1_mat_real_29_T_2, io.input.mat[29]) @[calc6x6.scala 114:57]
    reg1.mat_real[29] <= _reg1_mat_real_29_T_3 @[calc6x6.scala 114:37]
    node _reg1_mat_real_35_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_1 = tail(_reg1_mat_real_35_T, 1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_2 = asSInt(_reg1_mat_real_35_T_1) @[calc6x6.scala 115:40]
    node _reg1_mat_real_35_T_3 = add(_reg1_mat_real_35_T_2, io.input.mat[35]) @[calc6x6.scala 115:57]
    reg1.mat_real[35] <= _reg1_mat_real_35_T_3 @[calc6x6.scala 115:37]
    node _reg1_mat_comp_5_T = sub(asSInt(UInt<1>("h00")), io.input.mat[11]) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_1 = tail(_reg1_mat_comp_5_T, 1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_2 = asSInt(_reg1_mat_comp_5_T_1) @[calc6x6.scala 117:40]
    node _reg1_mat_comp_5_T_3 = add(_reg1_mat_comp_5_T_2, io.input.mat[23]) @[calc6x6.scala 117:57]
    reg1.mat_comp[5] <= _reg1_mat_comp_5_T_3 @[calc6x6.scala 117:37]
    node _reg1_mat_comp_11_T = sub(io.input.mat[11], io.input.mat[23]) @[calc6x6.scala 118:56]
    reg1.mat_comp[11] <= _reg1_mat_comp_11_T @[calc6x6.scala 118:37]
    valid_reg[1] <= valid_reg[0] @[calc6x6.scala 175:18]
    node _reg2_mat_real_0_T = sub(reg1.mat_real[0], reg1.mat_real[4]) @[calc6x6.scala 124:61]
    reg2.mat_real[0] <= _reg2_mat_real_0_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_1_T = add(reg1.mat_real[1], reg1.mat_real[2]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_1_T_1 = add(_reg2_mat_real_1_T, reg1.mat_real[3]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_1_T_2 = add(_reg2_mat_real_1_T_1, reg1.mat_real[4]) @[calc6x6.scala 125:107]
    reg2.mat_real[1] <= _reg2_mat_real_1_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_2_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_1 = tail(_reg2_mat_real_2_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_2 = asSInt(_reg2_mat_real_2_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_2_T_3 = add(_reg2_mat_real_2_T_2, reg1.mat_real[2]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_2_T_4 = sub(_reg2_mat_real_2_T_3, reg1.mat_real[3]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_2_T_5 = add(_reg2_mat_real_2_T_4, reg1.mat_real[4]) @[calc6x6.scala 126:108]
    reg2.mat_real[2] <= _reg2_mat_real_2_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_3_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[2]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_1 = tail(_reg2_mat_real_3_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_2 = asSInt(_reg2_mat_real_3_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_3_T_3 = add(_reg2_mat_real_3_T_2, reg1.mat_real[4]) @[calc6x6.scala 127:180]
    reg2.mat_real[3] <= _reg2_mat_real_3_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_4_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[2]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_1 = tail(_reg2_mat_real_4_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_2 = asSInt(_reg2_mat_real_4_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_4_T_3 = add(_reg2_mat_real_4_T_2, reg1.mat_real[4]) @[calc6x6.scala 128:180]
    reg2.mat_real[4] <= _reg2_mat_real_4_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_5_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_1 = tail(_reg2_mat_real_5_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_2 = asSInt(_reg2_mat_real_5_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_5_T_3 = add(_reg2_mat_real_5_T_2, reg1.mat_real[5]) @[calc6x6.scala 129:62]
    reg2.mat_real[5] <= _reg2_mat_real_5_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_6_T = sub(reg1.mat_real[6], reg1.mat_real[10]) @[calc6x6.scala 124:61]
    reg2.mat_real[6] <= _reg2_mat_real_6_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_7_T = add(reg1.mat_real[7], reg1.mat_real[8]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_7_T_1 = add(_reg2_mat_real_7_T, reg1.mat_real[9]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_7_T_2 = add(_reg2_mat_real_7_T_1, reg1.mat_real[10]) @[calc6x6.scala 125:107]
    reg2.mat_real[7] <= _reg2_mat_real_7_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_8_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_1 = tail(_reg2_mat_real_8_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_2 = asSInt(_reg2_mat_real_8_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_8_T_3 = add(_reg2_mat_real_8_T_2, reg1.mat_real[8]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_8_T_4 = sub(_reg2_mat_real_8_T_3, reg1.mat_real[9]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_8_T_5 = add(_reg2_mat_real_8_T_4, reg1.mat_real[10]) @[calc6x6.scala 126:108]
    reg2.mat_real[8] <= _reg2_mat_real_8_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_9_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[8]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_1 = tail(_reg2_mat_real_9_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_2 = asSInt(_reg2_mat_real_9_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_9_T_3 = add(_reg2_mat_real_9_T_2, reg1.mat_real[10]) @[calc6x6.scala 127:180]
    reg2.mat_real[9] <= _reg2_mat_real_9_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_10_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[8]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_1 = tail(_reg2_mat_real_10_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_2 = asSInt(_reg2_mat_real_10_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_10_T_3 = add(_reg2_mat_real_10_T_2, reg1.mat_real[10]) @[calc6x6.scala 128:180]
    reg2.mat_real[10] <= _reg2_mat_real_10_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_11_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_1 = tail(_reg2_mat_real_11_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_2 = asSInt(_reg2_mat_real_11_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_11_T_3 = add(_reg2_mat_real_11_T_2, reg1.mat_real[11]) @[calc6x6.scala 129:62]
    reg2.mat_real[11] <= _reg2_mat_real_11_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_12_T = sub(reg1.mat_real[12], reg1.mat_real[16]) @[calc6x6.scala 124:61]
    reg2.mat_real[12] <= _reg2_mat_real_12_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_13_T = add(reg1.mat_real[13], reg1.mat_real[14]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_13_T_1 = add(_reg2_mat_real_13_T, reg1.mat_real[15]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_13_T_2 = add(_reg2_mat_real_13_T_1, reg1.mat_real[16]) @[calc6x6.scala 125:107]
    reg2.mat_real[13] <= _reg2_mat_real_13_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_14_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_1 = tail(_reg2_mat_real_14_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_2 = asSInt(_reg2_mat_real_14_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_14_T_3 = add(_reg2_mat_real_14_T_2, reg1.mat_real[14]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_14_T_4 = sub(_reg2_mat_real_14_T_3, reg1.mat_real[15]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_14_T_5 = add(_reg2_mat_real_14_T_4, reg1.mat_real[16]) @[calc6x6.scala 126:108]
    reg2.mat_real[14] <= _reg2_mat_real_14_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_15_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[14]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_1 = tail(_reg2_mat_real_15_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_2 = asSInt(_reg2_mat_real_15_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_15_T_3 = add(_reg2_mat_real_15_T_2, reg1.mat_real[16]) @[calc6x6.scala 127:180]
    reg2.mat_real[15] <= _reg2_mat_real_15_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_16_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[14]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_1 = tail(_reg2_mat_real_16_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_2 = asSInt(_reg2_mat_real_16_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_16_T_3 = add(_reg2_mat_real_16_T_2, reg1.mat_real[16]) @[calc6x6.scala 128:180]
    reg2.mat_real[16] <= _reg2_mat_real_16_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_17_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_1 = tail(_reg2_mat_real_17_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_2 = asSInt(_reg2_mat_real_17_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_17_T_3 = add(_reg2_mat_real_17_T_2, reg1.mat_real[17]) @[calc6x6.scala 129:62]
    reg2.mat_real[17] <= _reg2_mat_real_17_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_18_T = sub(reg1.mat_real[18], reg1.mat_real[22]) @[calc6x6.scala 124:61]
    reg2.mat_real[18] <= _reg2_mat_real_18_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_19_T = add(reg1.mat_real[19], reg1.mat_real[20]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_19_T_1 = add(_reg2_mat_real_19_T, reg1.mat_real[21]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_19_T_2 = add(_reg2_mat_real_19_T_1, reg1.mat_real[22]) @[calc6x6.scala 125:107]
    reg2.mat_real[19] <= _reg2_mat_real_19_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_20_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[19]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_1 = tail(_reg2_mat_real_20_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_2 = asSInt(_reg2_mat_real_20_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_20_T_3 = add(_reg2_mat_real_20_T_2, reg1.mat_real[20]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_20_T_4 = sub(_reg2_mat_real_20_T_3, reg1.mat_real[21]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_20_T_5 = add(_reg2_mat_real_20_T_4, reg1.mat_real[22]) @[calc6x6.scala 126:108]
    reg2.mat_real[20] <= _reg2_mat_real_20_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_21_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[20]) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_1 = tail(_reg2_mat_real_21_T, 1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_2 = asSInt(_reg2_mat_real_21_T_1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_21_T_3 = add(_reg2_mat_real_21_T_2, reg1.mat_real[22]) @[calc6x6.scala 127:79]
    node _reg2_mat_real_21_T_4 = sub(_reg2_mat_real_21_T_3, reg1.mat_comp[3]) @[calc6x6.scala 127:102]
    node _reg2_mat_real_21_T_5 = add(_reg2_mat_real_21_T_4, reg1.mat_comp[1]) @[calc6x6.scala 127:127]
    reg2.mat_real[21] <= _reg2_mat_real_21_T_5 @[calc6x6.scala 127:37]
    node _reg2_mat_real_22_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[20]) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_1 = tail(_reg2_mat_real_22_T, 1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_2 = asSInt(_reg2_mat_real_22_T_1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_22_T_3 = add(_reg2_mat_real_22_T_2, reg1.mat_real[22]) @[calc6x6.scala 128:79]
    node _reg2_mat_real_22_T_4 = add(_reg2_mat_real_22_T_3, reg1.mat_comp[3]) @[calc6x6.scala 128:102]
    node _reg2_mat_real_22_T_5 = sub(_reg2_mat_real_22_T_4, reg1.mat_comp[1]) @[calc6x6.scala 128:127]
    reg2.mat_real[22] <= _reg2_mat_real_22_T_5 @[calc6x6.scala 128:37]
    node _reg2_mat_real_23_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[19]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_1 = tail(_reg2_mat_real_23_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_2 = asSInt(_reg2_mat_real_23_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_23_T_3 = add(_reg2_mat_real_23_T_2, reg1.mat_real[23]) @[calc6x6.scala 129:62]
    reg2.mat_real[23] <= _reg2_mat_real_23_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_24_T = sub(reg1.mat_real[24], reg1.mat_real[28]) @[calc6x6.scala 124:61]
    reg2.mat_real[24] <= _reg2_mat_real_24_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_25_T = add(reg1.mat_real[25], reg1.mat_real[26]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_25_T_1 = add(_reg2_mat_real_25_T, reg1.mat_real[27]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_25_T_2 = add(_reg2_mat_real_25_T_1, reg1.mat_real[28]) @[calc6x6.scala 125:107]
    reg2.mat_real[25] <= _reg2_mat_real_25_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_26_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[25]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_1 = tail(_reg2_mat_real_26_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_2 = asSInt(_reg2_mat_real_26_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_26_T_3 = add(_reg2_mat_real_26_T_2, reg1.mat_real[26]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_26_T_4 = sub(_reg2_mat_real_26_T_3, reg1.mat_real[27]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_26_T_5 = add(_reg2_mat_real_26_T_4, reg1.mat_real[28]) @[calc6x6.scala 126:108]
    reg2.mat_real[26] <= _reg2_mat_real_26_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_27_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[26]) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_1 = tail(_reg2_mat_real_27_T, 1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_2 = asSInt(_reg2_mat_real_27_T_1) @[calc6x6.scala 127:57]
    node _reg2_mat_real_27_T_3 = add(_reg2_mat_real_27_T_2, reg1.mat_real[28]) @[calc6x6.scala 127:79]
    node _reg2_mat_real_27_T_4 = sub(_reg2_mat_real_27_T_3, reg1.mat_comp[9]) @[calc6x6.scala 127:102]
    node _reg2_mat_real_27_T_5 = add(_reg2_mat_real_27_T_4, reg1.mat_comp[7]) @[calc6x6.scala 127:127]
    reg2.mat_real[27] <= _reg2_mat_real_27_T_5 @[calc6x6.scala 127:37]
    node _reg2_mat_real_28_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[26]) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_1 = tail(_reg2_mat_real_28_T, 1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_2 = asSInt(_reg2_mat_real_28_T_1) @[calc6x6.scala 128:57]
    node _reg2_mat_real_28_T_3 = add(_reg2_mat_real_28_T_2, reg1.mat_real[28]) @[calc6x6.scala 128:79]
    node _reg2_mat_real_28_T_4 = add(_reg2_mat_real_28_T_3, reg1.mat_comp[9]) @[calc6x6.scala 128:102]
    node _reg2_mat_real_28_T_5 = sub(_reg2_mat_real_28_T_4, reg1.mat_comp[7]) @[calc6x6.scala 128:127]
    reg2.mat_real[28] <= _reg2_mat_real_28_T_5 @[calc6x6.scala 128:37]
    node _reg2_mat_real_29_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[25]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_1 = tail(_reg2_mat_real_29_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_2 = asSInt(_reg2_mat_real_29_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_29_T_3 = add(_reg2_mat_real_29_T_2, reg1.mat_real[29]) @[calc6x6.scala 129:62]
    reg2.mat_real[29] <= _reg2_mat_real_29_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_real_30_T = sub(reg1.mat_real[30], reg1.mat_real[34]) @[calc6x6.scala 124:61]
    reg2.mat_real[30] <= _reg2_mat_real_30_T @[calc6x6.scala 124:37]
    node _reg2_mat_real_31_T = add(reg1.mat_real[31], reg1.mat_real[32]) @[calc6x6.scala 125:61]
    node _reg2_mat_real_31_T_1 = add(_reg2_mat_real_31_T, reg1.mat_real[33]) @[calc6x6.scala 125:84]
    node _reg2_mat_real_31_T_2 = add(_reg2_mat_real_31_T_1, reg1.mat_real[34]) @[calc6x6.scala 125:107]
    reg2.mat_real[31] <= _reg2_mat_real_31_T_2 @[calc6x6.scala 125:37]
    node _reg2_mat_real_32_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_1 = tail(_reg2_mat_real_32_T, 1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_2 = asSInt(_reg2_mat_real_32_T_1) @[calc6x6.scala 126:40]
    node _reg2_mat_real_32_T_3 = add(_reg2_mat_real_32_T_2, reg1.mat_real[32]) @[calc6x6.scala 126:62]
    node _reg2_mat_real_32_T_4 = sub(_reg2_mat_real_32_T_3, reg1.mat_real[33]) @[calc6x6.scala 126:85]
    node _reg2_mat_real_32_T_5 = add(_reg2_mat_real_32_T_4, reg1.mat_real[34]) @[calc6x6.scala 126:108]
    reg2.mat_real[32] <= _reg2_mat_real_32_T_5 @[calc6x6.scala 126:37]
    node _reg2_mat_real_33_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[32]) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_1 = tail(_reg2_mat_real_33_T, 1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_2 = asSInt(_reg2_mat_real_33_T_1) @[calc6x6.scala 127:158]
    node _reg2_mat_real_33_T_3 = add(_reg2_mat_real_33_T_2, reg1.mat_real[34]) @[calc6x6.scala 127:180]
    reg2.mat_real[33] <= _reg2_mat_real_33_T_3 @[calc6x6.scala 127:37]
    node _reg2_mat_real_34_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[32]) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_1 = tail(_reg2_mat_real_34_T, 1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_2 = asSInt(_reg2_mat_real_34_T_1) @[calc6x6.scala 128:158]
    node _reg2_mat_real_34_T_3 = add(_reg2_mat_real_34_T_2, reg1.mat_real[34]) @[calc6x6.scala 128:180]
    reg2.mat_real[34] <= _reg2_mat_real_34_T_3 @[calc6x6.scala 128:37]
    node _reg2_mat_real_35_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_1 = tail(_reg2_mat_real_35_T, 1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_2 = asSInt(_reg2_mat_real_35_T_1) @[calc6x6.scala 129:40]
    node _reg2_mat_real_35_T_3 = add(_reg2_mat_real_35_T_2, reg1.mat_real[35]) @[calc6x6.scala 129:62]
    reg2.mat_real[35] <= _reg2_mat_real_35_T_3 @[calc6x6.scala 129:37]
    node _reg2_mat_comp_0_T = sub(reg1.mat_comp[0], reg1.mat_comp[4]) @[calc6x6.scala 132:50]
    reg2.mat_comp[0] <= _reg2_mat_comp_0_T @[calc6x6.scala 132:26]
    node _reg2_mat_comp_1_T = add(reg1.mat_comp[1], reg1.mat_comp[2]) @[calc6x6.scala 133:50]
    node _reg2_mat_comp_1_T_1 = add(_reg2_mat_comp_1_T, reg1.mat_comp[3]) @[calc6x6.scala 133:73]
    node _reg2_mat_comp_1_T_2 = add(_reg2_mat_comp_1_T_1, reg1.mat_comp[4]) @[calc6x6.scala 133:96]
    reg2.mat_comp[1] <= _reg2_mat_comp_1_T_2 @[calc6x6.scala 133:26]
    node _reg2_mat_comp_2_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[1]) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_1 = tail(_reg2_mat_comp_2_T, 1) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_2 = asSInt(_reg2_mat_comp_2_T_1) @[calc6x6.scala 134:29]
    node _reg2_mat_comp_2_T_3 = add(_reg2_mat_comp_2_T_2, reg1.mat_comp[2]) @[calc6x6.scala 134:51]
    node _reg2_mat_comp_2_T_4 = sub(_reg2_mat_comp_2_T_3, reg1.mat_comp[3]) @[calc6x6.scala 134:74]
    node _reg2_mat_comp_2_T_5 = add(_reg2_mat_comp_2_T_4, reg1.mat_comp[4]) @[calc6x6.scala 134:97]
    reg2.mat_comp[2] <= _reg2_mat_comp_2_T_5 @[calc6x6.scala 134:26]
    node _reg2_mat_comp_3_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[2]) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_1 = tail(_reg2_mat_comp_3_T, 1) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_2 = asSInt(_reg2_mat_comp_3_T_1) @[calc6x6.scala 135:29]
    node _reg2_mat_comp_3_T_3 = add(_reg2_mat_comp_3_T_2, reg1.mat_comp[4]) @[calc6x6.scala 135:51]
    node _reg2_mat_comp_3_T_4 = sub(_reg2_mat_comp_3_T_3, reg1.mat_real[19]) @[calc6x6.scala 135:74]
    node _reg2_mat_comp_3_T_5 = add(_reg2_mat_comp_3_T_4, reg1.mat_real[21]) @[calc6x6.scala 135:97]
    reg2.mat_comp[3] <= _reg2_mat_comp_3_T_5 @[calc6x6.scala 135:26]
    node _reg2_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[2]) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_1 = tail(_reg2_mat_comp_4_T, 1) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_2 = asSInt(_reg2_mat_comp_4_T_1) @[calc6x6.scala 136:29]
    node _reg2_mat_comp_4_T_3 = add(_reg2_mat_comp_4_T_2, reg1.mat_comp[4]) @[calc6x6.scala 136:51]
    node _reg2_mat_comp_4_T_4 = add(_reg2_mat_comp_4_T_3, reg1.mat_real[19]) @[calc6x6.scala 136:74]
    node _reg2_mat_comp_4_T_5 = sub(_reg2_mat_comp_4_T_4, reg1.mat_real[21]) @[calc6x6.scala 136:97]
    reg2.mat_comp[4] <= _reg2_mat_comp_4_T_5 @[calc6x6.scala 136:26]
    node _reg2_mat_comp_5_T = sub(asSInt(UInt<1>("h00")), reg1.mat_comp[1]) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_1 = tail(_reg2_mat_comp_5_T, 1) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_2 = asSInt(_reg2_mat_comp_5_T_1) @[calc6x6.scala 137:29]
    node _reg2_mat_comp_5_T_3 = add(_reg2_mat_comp_5_T_2, reg1.mat_comp[5]) @[calc6x6.scala 137:51]
    reg2.mat_comp[5] <= _reg2_mat_comp_5_T_3 @[calc6x6.scala 137:26]
    node _reg2_mat_comp_6_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[1]) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_1 = tail(_reg2_mat_comp_6_T, 1) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_2 = asSInt(_reg2_mat_comp_6_T_1) @[calc6x6.scala 140:29]
    node _reg2_mat_comp_6_T_3 = add(_reg2_mat_comp_6_T_2, reg1.mat_real[3]) @[calc6x6.scala 140:51]
    reg2.mat_comp[6] <= _reg2_mat_comp_6_T_3 @[calc6x6.scala 140:26]
    node _reg2_mat_comp_7_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[7]) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_1 = tail(_reg2_mat_comp_7_T, 1) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_2 = asSInt(_reg2_mat_comp_7_T_1) @[calc6x6.scala 141:29]
    node _reg2_mat_comp_7_T_3 = add(_reg2_mat_comp_7_T_2, reg1.mat_real[9]) @[calc6x6.scala 141:51]
    reg2.mat_comp[7] <= _reg2_mat_comp_7_T_3 @[calc6x6.scala 141:26]
    node _reg2_mat_comp_8_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[13]) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_1 = tail(_reg2_mat_comp_8_T, 1) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_2 = asSInt(_reg2_mat_comp_8_T_1) @[calc6x6.scala 142:29]
    node _reg2_mat_comp_8_T_3 = add(_reg2_mat_comp_8_T_2, reg1.mat_real[15]) @[calc6x6.scala 142:51]
    reg2.mat_comp[8] <= _reg2_mat_comp_8_T_3 @[calc6x6.scala 142:26]
    node _reg2_mat_comp_9_T = sub(asSInt(UInt<1>("h00")), reg1.mat_real[31]) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_1 = tail(_reg2_mat_comp_9_T, 1) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_2 = asSInt(_reg2_mat_comp_9_T_1) @[calc6x6.scala 143:29]
    node _reg2_mat_comp_9_T_3 = add(_reg2_mat_comp_9_T_2, reg1.mat_real[33]) @[calc6x6.scala 143:51]
    reg2.mat_comp[9] <= _reg2_mat_comp_9_T_3 @[calc6x6.scala 143:26]
    valid_reg[2] <= valid_reg[1] @[calc6x6.scala 177:18]
    node _reg3_mat_real_0_T = add(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_1 = tail(_reg3_mat_real_0_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_2 = asSInt(_reg3_mat_real_0_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_0_T_3 = add(_reg3_mat_real_0_T_2, w3.mat_real[18]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_4 = tail(_reg3_mat_real_0_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_5 = asSInt(_reg3_mat_real_0_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_0_T_6 = add(_reg3_mat_real_0_T_5, w3.mat_real[24]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_7 = tail(_reg3_mat_real_0_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_8 = asSInt(_reg3_mat_real_0_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_0_T_9 = dshr(_reg3_mat_real_0_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_0_T_10 = add(w3.mat_real[0], _reg3_mat_real_0_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_0_T_11 = tail(_reg3_mat_real_0_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_0_T_12 = asSInt(_reg3_mat_real_0_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[0] <= _reg3_mat_real_0_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_6_T = sub(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_1 = tail(_reg3_mat_real_6_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_2 = asSInt(_reg3_mat_real_6_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_6_T_3 = sub(_reg3_mat_real_6_T_2, w3.mat_comp[18]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_4 = tail(_reg3_mat_real_6_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_5 = asSInt(_reg3_mat_real_6_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_6_T_6 = add(_reg3_mat_real_6_T_5, w3.mat_comp[24]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_7 = tail(_reg3_mat_real_6_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_8 = asSInt(_reg3_mat_real_6_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_6_T_9 = dshr(_reg3_mat_real_6_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[6] <= _reg3_mat_real_6_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_12_T = add(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_1 = tail(_reg3_mat_real_12_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_2 = asSInt(_reg3_mat_real_12_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_12_T_3 = sub(_reg3_mat_real_12_T_2, w3.mat_real[18]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_4 = tail(_reg3_mat_real_12_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_5 = asSInt(_reg3_mat_real_12_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_12_T_6 = sub(_reg3_mat_real_12_T_5, w3.mat_real[24]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_7 = tail(_reg3_mat_real_12_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_8 = asSInt(_reg3_mat_real_12_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_12_T_9 = dshr(_reg3_mat_real_12_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[12] <= _reg3_mat_real_12_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_18_T = sub(w3.mat_real[6], w3.mat_real[12]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_1 = tail(_reg3_mat_real_18_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_2 = asSInt(_reg3_mat_real_18_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_18_T_3 = add(_reg3_mat_real_18_T_2, w3.mat_comp[18]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_4 = tail(_reg3_mat_real_18_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_5 = asSInt(_reg3_mat_real_18_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_18_T_6 = sub(_reg3_mat_real_18_T_5, w3.mat_comp[24]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_7 = tail(_reg3_mat_real_18_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_8 = asSInt(_reg3_mat_real_18_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_18_T_9 = dshr(_reg3_mat_real_18_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_18_T_10 = add(_reg3_mat_real_18_T_9, w3.mat_real[30]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_18_T_11 = tail(_reg3_mat_real_18_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_18_T_12 = asSInt(_reg3_mat_real_18_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[18] <= _reg3_mat_real_18_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_0_T = add(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_1 = tail(_reg3_mat_comp_0_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_2 = asSInt(_reg3_mat_comp_0_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_0_T_3 = add(_reg3_mat_comp_0_T_2, w3.mat_comp[18]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_4 = tail(_reg3_mat_comp_0_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_5 = asSInt(_reg3_mat_comp_0_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_0_T_6 = add(_reg3_mat_comp_0_T_5, w3.mat_comp[24]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_7 = tail(_reg3_mat_comp_0_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_8 = asSInt(_reg3_mat_comp_0_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_0_T_9 = dshr(_reg3_mat_comp_0_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_0_T_10 = add(w3.mat_comp[0], _reg3_mat_comp_0_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_0_T_11 = tail(_reg3_mat_comp_0_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_0_T_12 = asSInt(_reg3_mat_comp_0_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[0] <= _reg3_mat_comp_0_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_6_T = sub(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_1 = tail(_reg3_mat_comp_6_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_2 = asSInt(_reg3_mat_comp_6_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_6_T_3 = add(_reg3_mat_comp_6_T_2, w3.mat_real[18]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_4 = tail(_reg3_mat_comp_6_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_5 = asSInt(_reg3_mat_comp_6_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_6_T_6 = sub(_reg3_mat_comp_6_T_5, w3.mat_real[24]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_7 = tail(_reg3_mat_comp_6_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_8 = asSInt(_reg3_mat_comp_6_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_6_T_9 = dshr(_reg3_mat_comp_6_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[6] <= _reg3_mat_comp_6_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_12_T = add(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_1 = tail(_reg3_mat_comp_12_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_2 = asSInt(_reg3_mat_comp_12_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_12_T_3 = sub(_reg3_mat_comp_12_T_2, w3.mat_comp[18]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_4 = tail(_reg3_mat_comp_12_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_5 = asSInt(_reg3_mat_comp_12_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_12_T_6 = sub(_reg3_mat_comp_12_T_5, w3.mat_comp[24]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_7 = tail(_reg3_mat_comp_12_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_8 = asSInt(_reg3_mat_comp_12_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_12_T_9 = dshr(_reg3_mat_comp_12_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[12] <= _reg3_mat_comp_12_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_18_T = sub(w3.mat_comp[6], w3.mat_comp[12]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_1 = tail(_reg3_mat_comp_18_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_2 = asSInt(_reg3_mat_comp_18_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_18_T_3 = sub(_reg3_mat_comp_18_T_2, w3.mat_real[18]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_4 = tail(_reg3_mat_comp_18_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_5 = asSInt(_reg3_mat_comp_18_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_18_T_6 = add(_reg3_mat_comp_18_T_5, w3.mat_real[24]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_7 = tail(_reg3_mat_comp_18_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_8 = asSInt(_reg3_mat_comp_18_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_18_T_9 = dshr(_reg3_mat_comp_18_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_18_T_10 = add(_reg3_mat_comp_18_T_9, w3.mat_comp[30]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_18_T_11 = tail(_reg3_mat_comp_18_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_18_T_12 = asSInt(_reg3_mat_comp_18_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[18] <= _reg3_mat_comp_18_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_1_T = add(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_1 = tail(_reg3_mat_real_1_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_2 = asSInt(_reg3_mat_real_1_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_1_T_3 = add(_reg3_mat_real_1_T_2, w3.mat_real[19]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_4 = tail(_reg3_mat_real_1_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_5 = asSInt(_reg3_mat_real_1_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_1_T_6 = add(_reg3_mat_real_1_T_5, w3.mat_real[25]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_7 = tail(_reg3_mat_real_1_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_8 = asSInt(_reg3_mat_real_1_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_1_T_9 = dshr(_reg3_mat_real_1_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_1_T_10 = add(w3.mat_real[1], _reg3_mat_real_1_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_1_T_11 = tail(_reg3_mat_real_1_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_1_T_12 = asSInt(_reg3_mat_real_1_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[1] <= _reg3_mat_real_1_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_7_T = sub(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_1 = tail(_reg3_mat_real_7_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_2 = asSInt(_reg3_mat_real_7_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_7_T_3 = sub(_reg3_mat_real_7_T_2, w3.mat_comp[19]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_4 = tail(_reg3_mat_real_7_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_5 = asSInt(_reg3_mat_real_7_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_7_T_6 = add(_reg3_mat_real_7_T_5, w3.mat_comp[25]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_7 = tail(_reg3_mat_real_7_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_8 = asSInt(_reg3_mat_real_7_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_7_T_9 = dshr(_reg3_mat_real_7_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[7] <= _reg3_mat_real_7_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_13_T = add(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_1 = tail(_reg3_mat_real_13_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_2 = asSInt(_reg3_mat_real_13_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_13_T_3 = sub(_reg3_mat_real_13_T_2, w3.mat_real[19]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_4 = tail(_reg3_mat_real_13_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_5 = asSInt(_reg3_mat_real_13_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_13_T_6 = sub(_reg3_mat_real_13_T_5, w3.mat_real[25]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_7 = tail(_reg3_mat_real_13_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_8 = asSInt(_reg3_mat_real_13_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_13_T_9 = dshr(_reg3_mat_real_13_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[13] <= _reg3_mat_real_13_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_19_T = sub(w3.mat_real[7], w3.mat_real[13]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_1 = tail(_reg3_mat_real_19_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_2 = asSInt(_reg3_mat_real_19_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_19_T_3 = add(_reg3_mat_real_19_T_2, w3.mat_comp[19]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_4 = tail(_reg3_mat_real_19_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_5 = asSInt(_reg3_mat_real_19_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_19_T_6 = sub(_reg3_mat_real_19_T_5, w3.mat_comp[25]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_7 = tail(_reg3_mat_real_19_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_8 = asSInt(_reg3_mat_real_19_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_19_T_9 = dshr(_reg3_mat_real_19_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_19_T_10 = add(_reg3_mat_real_19_T_9, w3.mat_real[31]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_19_T_11 = tail(_reg3_mat_real_19_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_19_T_12 = asSInt(_reg3_mat_real_19_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[19] <= _reg3_mat_real_19_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_1_T = add(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_1 = tail(_reg3_mat_comp_1_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_2 = asSInt(_reg3_mat_comp_1_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_1_T_3 = add(_reg3_mat_comp_1_T_2, w3.mat_comp[19]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_4 = tail(_reg3_mat_comp_1_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_5 = asSInt(_reg3_mat_comp_1_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_1_T_6 = add(_reg3_mat_comp_1_T_5, w3.mat_comp[25]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_7 = tail(_reg3_mat_comp_1_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_8 = asSInt(_reg3_mat_comp_1_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_1_T_9 = dshr(_reg3_mat_comp_1_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_1_T_10 = add(w3.mat_comp[1], _reg3_mat_comp_1_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_1_T_11 = tail(_reg3_mat_comp_1_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_1_T_12 = asSInt(_reg3_mat_comp_1_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[1] <= _reg3_mat_comp_1_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_7_T = sub(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_1 = tail(_reg3_mat_comp_7_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_2 = asSInt(_reg3_mat_comp_7_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_7_T_3 = add(_reg3_mat_comp_7_T_2, w3.mat_real[19]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_4 = tail(_reg3_mat_comp_7_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_5 = asSInt(_reg3_mat_comp_7_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_7_T_6 = sub(_reg3_mat_comp_7_T_5, w3.mat_real[25]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_7 = tail(_reg3_mat_comp_7_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_8 = asSInt(_reg3_mat_comp_7_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_7_T_9 = dshr(_reg3_mat_comp_7_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[7] <= _reg3_mat_comp_7_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_13_T = add(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_1 = tail(_reg3_mat_comp_13_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_2 = asSInt(_reg3_mat_comp_13_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_13_T_3 = sub(_reg3_mat_comp_13_T_2, w3.mat_comp[19]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_4 = tail(_reg3_mat_comp_13_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_5 = asSInt(_reg3_mat_comp_13_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_13_T_6 = sub(_reg3_mat_comp_13_T_5, w3.mat_comp[25]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_7 = tail(_reg3_mat_comp_13_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_8 = asSInt(_reg3_mat_comp_13_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_13_T_9 = dshr(_reg3_mat_comp_13_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[13] <= _reg3_mat_comp_13_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_19_T = sub(w3.mat_comp[7], w3.mat_comp[13]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_1 = tail(_reg3_mat_comp_19_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_2 = asSInt(_reg3_mat_comp_19_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_19_T_3 = sub(_reg3_mat_comp_19_T_2, w3.mat_real[19]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_4 = tail(_reg3_mat_comp_19_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_5 = asSInt(_reg3_mat_comp_19_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_19_T_6 = add(_reg3_mat_comp_19_T_5, w3.mat_real[25]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_7 = tail(_reg3_mat_comp_19_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_8 = asSInt(_reg3_mat_comp_19_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_19_T_9 = dshr(_reg3_mat_comp_19_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_19_T_10 = add(_reg3_mat_comp_19_T_9, w3.mat_comp[31]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_19_T_11 = tail(_reg3_mat_comp_19_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_19_T_12 = asSInt(_reg3_mat_comp_19_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[19] <= _reg3_mat_comp_19_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_2_T = add(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_1 = tail(_reg3_mat_real_2_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_2 = asSInt(_reg3_mat_real_2_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_2_T_3 = add(_reg3_mat_real_2_T_2, w3.mat_real[20]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_4 = tail(_reg3_mat_real_2_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_5 = asSInt(_reg3_mat_real_2_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_2_T_6 = add(_reg3_mat_real_2_T_5, w3.mat_real[26]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_7 = tail(_reg3_mat_real_2_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_8 = asSInt(_reg3_mat_real_2_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_2_T_9 = dshr(_reg3_mat_real_2_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_2_T_10 = add(w3.mat_real[2], _reg3_mat_real_2_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_2_T_11 = tail(_reg3_mat_real_2_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_2_T_12 = asSInt(_reg3_mat_real_2_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[2] <= _reg3_mat_real_2_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_8_T = sub(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_1 = tail(_reg3_mat_real_8_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_2 = asSInt(_reg3_mat_real_8_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_8_T_3 = sub(_reg3_mat_real_8_T_2, w3.mat_comp[20]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_4 = tail(_reg3_mat_real_8_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_5 = asSInt(_reg3_mat_real_8_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_8_T_6 = add(_reg3_mat_real_8_T_5, w3.mat_comp[26]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_7 = tail(_reg3_mat_real_8_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_8 = asSInt(_reg3_mat_real_8_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_8_T_9 = dshr(_reg3_mat_real_8_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[8] <= _reg3_mat_real_8_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_14_T = add(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_1 = tail(_reg3_mat_real_14_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_2 = asSInt(_reg3_mat_real_14_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_14_T_3 = sub(_reg3_mat_real_14_T_2, w3.mat_real[20]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_4 = tail(_reg3_mat_real_14_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_5 = asSInt(_reg3_mat_real_14_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_14_T_6 = sub(_reg3_mat_real_14_T_5, w3.mat_real[26]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_7 = tail(_reg3_mat_real_14_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_8 = asSInt(_reg3_mat_real_14_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_14_T_9 = dshr(_reg3_mat_real_14_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[14] <= _reg3_mat_real_14_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_20_T = sub(w3.mat_real[8], w3.mat_real[14]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_1 = tail(_reg3_mat_real_20_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_2 = asSInt(_reg3_mat_real_20_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_20_T_3 = add(_reg3_mat_real_20_T_2, w3.mat_comp[20]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_4 = tail(_reg3_mat_real_20_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_5 = asSInt(_reg3_mat_real_20_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_20_T_6 = sub(_reg3_mat_real_20_T_5, w3.mat_comp[26]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_7 = tail(_reg3_mat_real_20_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_8 = asSInt(_reg3_mat_real_20_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_20_T_9 = dshr(_reg3_mat_real_20_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_20_T_10 = add(_reg3_mat_real_20_T_9, w3.mat_real[32]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_20_T_11 = tail(_reg3_mat_real_20_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_20_T_12 = asSInt(_reg3_mat_real_20_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[20] <= _reg3_mat_real_20_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_2_T = add(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_1 = tail(_reg3_mat_comp_2_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_2 = asSInt(_reg3_mat_comp_2_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_2_T_3 = add(_reg3_mat_comp_2_T_2, w3.mat_comp[20]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_4 = tail(_reg3_mat_comp_2_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_5 = asSInt(_reg3_mat_comp_2_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_2_T_6 = add(_reg3_mat_comp_2_T_5, w3.mat_comp[26]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_7 = tail(_reg3_mat_comp_2_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_8 = asSInt(_reg3_mat_comp_2_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_2_T_9 = dshr(_reg3_mat_comp_2_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_2_T_10 = add(w3.mat_comp[2], _reg3_mat_comp_2_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_2_T_11 = tail(_reg3_mat_comp_2_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_2_T_12 = asSInt(_reg3_mat_comp_2_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[2] <= _reg3_mat_comp_2_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_8_T = sub(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_1 = tail(_reg3_mat_comp_8_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_2 = asSInt(_reg3_mat_comp_8_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_8_T_3 = add(_reg3_mat_comp_8_T_2, w3.mat_real[20]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_4 = tail(_reg3_mat_comp_8_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_5 = asSInt(_reg3_mat_comp_8_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_8_T_6 = sub(_reg3_mat_comp_8_T_5, w3.mat_real[26]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_7 = tail(_reg3_mat_comp_8_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_8 = asSInt(_reg3_mat_comp_8_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_8_T_9 = dshr(_reg3_mat_comp_8_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[8] <= _reg3_mat_comp_8_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_14_T = add(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_1 = tail(_reg3_mat_comp_14_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_2 = asSInt(_reg3_mat_comp_14_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_14_T_3 = sub(_reg3_mat_comp_14_T_2, w3.mat_comp[20]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_4 = tail(_reg3_mat_comp_14_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_5 = asSInt(_reg3_mat_comp_14_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_14_T_6 = sub(_reg3_mat_comp_14_T_5, w3.mat_comp[26]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_7 = tail(_reg3_mat_comp_14_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_8 = asSInt(_reg3_mat_comp_14_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_14_T_9 = dshr(_reg3_mat_comp_14_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[14] <= _reg3_mat_comp_14_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_20_T = sub(w3.mat_comp[8], w3.mat_comp[14]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_1 = tail(_reg3_mat_comp_20_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_2 = asSInt(_reg3_mat_comp_20_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_20_T_3 = sub(_reg3_mat_comp_20_T_2, w3.mat_real[20]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_4 = tail(_reg3_mat_comp_20_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_5 = asSInt(_reg3_mat_comp_20_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_20_T_6 = add(_reg3_mat_comp_20_T_5, w3.mat_real[26]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_7 = tail(_reg3_mat_comp_20_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_8 = asSInt(_reg3_mat_comp_20_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_20_T_9 = dshr(_reg3_mat_comp_20_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_20_T_10 = add(_reg3_mat_comp_20_T_9, w3.mat_comp[32]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_20_T_11 = tail(_reg3_mat_comp_20_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_20_T_12 = asSInt(_reg3_mat_comp_20_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[20] <= _reg3_mat_comp_20_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_3_T = add(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_1 = tail(_reg3_mat_real_3_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_2 = asSInt(_reg3_mat_real_3_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_3_T_3 = add(_reg3_mat_real_3_T_2, w3.mat_real[21]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_4 = tail(_reg3_mat_real_3_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_5 = asSInt(_reg3_mat_real_3_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_3_T_6 = add(_reg3_mat_real_3_T_5, w3.mat_real[27]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_7 = tail(_reg3_mat_real_3_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_8 = asSInt(_reg3_mat_real_3_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_3_T_9 = dshr(_reg3_mat_real_3_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_3_T_10 = add(w3.mat_real[3], _reg3_mat_real_3_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_3_T_11 = tail(_reg3_mat_real_3_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_3_T_12 = asSInt(_reg3_mat_real_3_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[3] <= _reg3_mat_real_3_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_9_T = sub(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_1 = tail(_reg3_mat_real_9_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_2 = asSInt(_reg3_mat_real_9_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_9_T_3 = sub(_reg3_mat_real_9_T_2, w3.mat_comp[21]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_4 = tail(_reg3_mat_real_9_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_5 = asSInt(_reg3_mat_real_9_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_9_T_6 = add(_reg3_mat_real_9_T_5, w3.mat_comp[27]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_7 = tail(_reg3_mat_real_9_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_8 = asSInt(_reg3_mat_real_9_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_9_T_9 = dshr(_reg3_mat_real_9_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[9] <= _reg3_mat_real_9_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_15_T = add(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_1 = tail(_reg3_mat_real_15_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_2 = asSInt(_reg3_mat_real_15_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_15_T_3 = sub(_reg3_mat_real_15_T_2, w3.mat_real[21]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_4 = tail(_reg3_mat_real_15_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_5 = asSInt(_reg3_mat_real_15_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_15_T_6 = sub(_reg3_mat_real_15_T_5, w3.mat_real[27]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_7 = tail(_reg3_mat_real_15_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_8 = asSInt(_reg3_mat_real_15_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_15_T_9 = dshr(_reg3_mat_real_15_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[15] <= _reg3_mat_real_15_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_21_T = sub(w3.mat_real[9], w3.mat_real[15]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_1 = tail(_reg3_mat_real_21_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_2 = asSInt(_reg3_mat_real_21_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_21_T_3 = add(_reg3_mat_real_21_T_2, w3.mat_comp[21]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_4 = tail(_reg3_mat_real_21_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_5 = asSInt(_reg3_mat_real_21_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_21_T_6 = sub(_reg3_mat_real_21_T_5, w3.mat_comp[27]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_7 = tail(_reg3_mat_real_21_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_8 = asSInt(_reg3_mat_real_21_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_21_T_9 = dshr(_reg3_mat_real_21_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_21_T_10 = add(_reg3_mat_real_21_T_9, w3.mat_real[33]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_21_T_11 = tail(_reg3_mat_real_21_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_21_T_12 = asSInt(_reg3_mat_real_21_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[21] <= _reg3_mat_real_21_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_3_T = add(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_1 = tail(_reg3_mat_comp_3_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_2 = asSInt(_reg3_mat_comp_3_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_3_T_3 = add(_reg3_mat_comp_3_T_2, w3.mat_comp[21]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_4 = tail(_reg3_mat_comp_3_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_5 = asSInt(_reg3_mat_comp_3_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_3_T_6 = add(_reg3_mat_comp_3_T_5, w3.mat_comp[27]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_7 = tail(_reg3_mat_comp_3_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_8 = asSInt(_reg3_mat_comp_3_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_3_T_9 = dshr(_reg3_mat_comp_3_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_3_T_10 = add(w3.mat_comp[3], _reg3_mat_comp_3_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_3_T_11 = tail(_reg3_mat_comp_3_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_3_T_12 = asSInt(_reg3_mat_comp_3_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[3] <= _reg3_mat_comp_3_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_9_T = sub(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_1 = tail(_reg3_mat_comp_9_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_2 = asSInt(_reg3_mat_comp_9_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_9_T_3 = add(_reg3_mat_comp_9_T_2, w3.mat_real[21]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_4 = tail(_reg3_mat_comp_9_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_5 = asSInt(_reg3_mat_comp_9_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_9_T_6 = sub(_reg3_mat_comp_9_T_5, w3.mat_real[27]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_7 = tail(_reg3_mat_comp_9_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_8 = asSInt(_reg3_mat_comp_9_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_9_T_9 = dshr(_reg3_mat_comp_9_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[9] <= _reg3_mat_comp_9_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_15_T = add(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_1 = tail(_reg3_mat_comp_15_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_2 = asSInt(_reg3_mat_comp_15_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_15_T_3 = sub(_reg3_mat_comp_15_T_2, w3.mat_comp[21]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_4 = tail(_reg3_mat_comp_15_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_5 = asSInt(_reg3_mat_comp_15_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_15_T_6 = sub(_reg3_mat_comp_15_T_5, w3.mat_comp[27]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_7 = tail(_reg3_mat_comp_15_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_8 = asSInt(_reg3_mat_comp_15_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_15_T_9 = dshr(_reg3_mat_comp_15_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[15] <= _reg3_mat_comp_15_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_21_T = sub(w3.mat_comp[9], w3.mat_comp[15]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_1 = tail(_reg3_mat_comp_21_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_2 = asSInt(_reg3_mat_comp_21_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_21_T_3 = sub(_reg3_mat_comp_21_T_2, w3.mat_real[21]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_4 = tail(_reg3_mat_comp_21_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_5 = asSInt(_reg3_mat_comp_21_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_21_T_6 = add(_reg3_mat_comp_21_T_5, w3.mat_real[27]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_7 = tail(_reg3_mat_comp_21_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_8 = asSInt(_reg3_mat_comp_21_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_21_T_9 = dshr(_reg3_mat_comp_21_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_21_T_10 = add(_reg3_mat_comp_21_T_9, w3.mat_comp[33]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_21_T_11 = tail(_reg3_mat_comp_21_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_21_T_12 = asSInt(_reg3_mat_comp_21_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[21] <= _reg3_mat_comp_21_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_4_T = add(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_1 = tail(_reg3_mat_real_4_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_2 = asSInt(_reg3_mat_real_4_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_4_T_3 = add(_reg3_mat_real_4_T_2, w3.mat_real[22]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_4 = tail(_reg3_mat_real_4_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_5 = asSInt(_reg3_mat_real_4_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_4_T_6 = add(_reg3_mat_real_4_T_5, w3.mat_real[28]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_7 = tail(_reg3_mat_real_4_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_8 = asSInt(_reg3_mat_real_4_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_4_T_9 = dshr(_reg3_mat_real_4_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_4_T_10 = add(w3.mat_real[4], _reg3_mat_real_4_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_4_T_11 = tail(_reg3_mat_real_4_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_4_T_12 = asSInt(_reg3_mat_real_4_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[4] <= _reg3_mat_real_4_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_10_T = sub(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_1 = tail(_reg3_mat_real_10_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_2 = asSInt(_reg3_mat_real_10_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_10_T_3 = sub(_reg3_mat_real_10_T_2, w3.mat_comp[22]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_4 = tail(_reg3_mat_real_10_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_5 = asSInt(_reg3_mat_real_10_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_10_T_6 = add(_reg3_mat_real_10_T_5, w3.mat_comp[28]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_7 = tail(_reg3_mat_real_10_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_8 = asSInt(_reg3_mat_real_10_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_10_T_9 = dshr(_reg3_mat_real_10_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[10] <= _reg3_mat_real_10_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_16_T = add(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_1 = tail(_reg3_mat_real_16_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_2 = asSInt(_reg3_mat_real_16_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_16_T_3 = sub(_reg3_mat_real_16_T_2, w3.mat_real[22]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_4 = tail(_reg3_mat_real_16_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_5 = asSInt(_reg3_mat_real_16_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_16_T_6 = sub(_reg3_mat_real_16_T_5, w3.mat_real[28]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_7 = tail(_reg3_mat_real_16_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_8 = asSInt(_reg3_mat_real_16_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_16_T_9 = dshr(_reg3_mat_real_16_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[16] <= _reg3_mat_real_16_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_22_T = sub(w3.mat_real[10], w3.mat_real[16]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_1 = tail(_reg3_mat_real_22_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_2 = asSInt(_reg3_mat_real_22_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_22_T_3 = add(_reg3_mat_real_22_T_2, w3.mat_comp[22]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_4 = tail(_reg3_mat_real_22_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_5 = asSInt(_reg3_mat_real_22_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_22_T_6 = sub(_reg3_mat_real_22_T_5, w3.mat_comp[28]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_7 = tail(_reg3_mat_real_22_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_8 = asSInt(_reg3_mat_real_22_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_22_T_9 = dshr(_reg3_mat_real_22_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_22_T_10 = add(_reg3_mat_real_22_T_9, w3.mat_real[34]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_22_T_11 = tail(_reg3_mat_real_22_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_22_T_12 = asSInt(_reg3_mat_real_22_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[22] <= _reg3_mat_real_22_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_4_T = add(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_1 = tail(_reg3_mat_comp_4_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_2 = asSInt(_reg3_mat_comp_4_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_4_T_3 = add(_reg3_mat_comp_4_T_2, w3.mat_comp[22]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_4 = tail(_reg3_mat_comp_4_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_5 = asSInt(_reg3_mat_comp_4_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_4_T_6 = add(_reg3_mat_comp_4_T_5, w3.mat_comp[28]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_7 = tail(_reg3_mat_comp_4_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_8 = asSInt(_reg3_mat_comp_4_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_4_T_9 = dshr(_reg3_mat_comp_4_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_4_T_10 = add(w3.mat_comp[4], _reg3_mat_comp_4_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_4_T_11 = tail(_reg3_mat_comp_4_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_4_T_12 = asSInt(_reg3_mat_comp_4_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[4] <= _reg3_mat_comp_4_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_10_T = sub(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_1 = tail(_reg3_mat_comp_10_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_2 = asSInt(_reg3_mat_comp_10_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_10_T_3 = add(_reg3_mat_comp_10_T_2, w3.mat_real[22]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_4 = tail(_reg3_mat_comp_10_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_5 = asSInt(_reg3_mat_comp_10_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_10_T_6 = sub(_reg3_mat_comp_10_T_5, w3.mat_real[28]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_7 = tail(_reg3_mat_comp_10_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_8 = asSInt(_reg3_mat_comp_10_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_10_T_9 = dshr(_reg3_mat_comp_10_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[10] <= _reg3_mat_comp_10_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_16_T = add(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_1 = tail(_reg3_mat_comp_16_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_2 = asSInt(_reg3_mat_comp_16_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_16_T_3 = sub(_reg3_mat_comp_16_T_2, w3.mat_comp[22]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_4 = tail(_reg3_mat_comp_16_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_5 = asSInt(_reg3_mat_comp_16_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_16_T_6 = sub(_reg3_mat_comp_16_T_5, w3.mat_comp[28]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_7 = tail(_reg3_mat_comp_16_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_8 = asSInt(_reg3_mat_comp_16_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_16_T_9 = dshr(_reg3_mat_comp_16_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[16] <= _reg3_mat_comp_16_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_22_T = sub(w3.mat_comp[10], w3.mat_comp[16]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_1 = tail(_reg3_mat_comp_22_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_2 = asSInt(_reg3_mat_comp_22_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_22_T_3 = sub(_reg3_mat_comp_22_T_2, w3.mat_real[22]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_4 = tail(_reg3_mat_comp_22_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_5 = asSInt(_reg3_mat_comp_22_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_22_T_6 = add(_reg3_mat_comp_22_T_5, w3.mat_real[28]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_7 = tail(_reg3_mat_comp_22_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_8 = asSInt(_reg3_mat_comp_22_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_22_T_9 = dshr(_reg3_mat_comp_22_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_22_T_10 = add(_reg3_mat_comp_22_T_9, w3.mat_comp[34]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_22_T_11 = tail(_reg3_mat_comp_22_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_22_T_12 = asSInt(_reg3_mat_comp_22_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[22] <= _reg3_mat_comp_22_T_12 @[calc6x6.scala 158:37]
    node _reg3_mat_real_5_T = add(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_1 = tail(_reg3_mat_real_5_T, 1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_2 = asSInt(_reg3_mat_real_5_T_1) @[calc6x6.scala 148:85]
    node _reg3_mat_real_5_T_3 = add(_reg3_mat_real_5_T_2, w3.mat_real[23]) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_4 = tail(_reg3_mat_real_5_T_3, 1) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_5 = asSInt(_reg3_mat_real_5_T_4) @[calc6x6.scala 149:62]
    node _reg3_mat_real_5_T_6 = add(_reg3_mat_real_5_T_5, w3.mat_real[29]) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_7 = tail(_reg3_mat_real_5_T_6, 1) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_8 = asSInt(_reg3_mat_real_5_T_7) @[calc6x6.scala 149:84]
    node _reg3_mat_real_5_T_9 = dshr(_reg3_mat_real_5_T_8, UInt<2>("h02")) @[calc6x6.scala 149:107]
    node _reg3_mat_real_5_T_10 = add(w3.mat_real[5], _reg3_mat_real_5_T_9) @[calc6x6.scala 148:61]
    node _reg3_mat_real_5_T_11 = tail(_reg3_mat_real_5_T_10, 1) @[calc6x6.scala 148:61]
    node _reg3_mat_real_5_T_12 = asSInt(_reg3_mat_real_5_T_11) @[calc6x6.scala 148:61]
    reg3.mat_real[5] <= _reg3_mat_real_5_T_12 @[calc6x6.scala 148:37]
    node _reg3_mat_real_11_T = sub(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_1 = tail(_reg3_mat_real_11_T, 1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_2 = asSInt(_reg3_mat_real_11_T_1) @[calc6x6.scala 150:62]
    node _reg3_mat_real_11_T_3 = sub(_reg3_mat_real_11_T_2, w3.mat_comp[23]) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_4 = tail(_reg3_mat_real_11_T_3, 1) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_5 = asSInt(_reg3_mat_real_11_T_4) @[calc6x6.scala 150:84]
    node _reg3_mat_real_11_T_6 = add(_reg3_mat_real_11_T_5, w3.mat_comp[29]) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_7 = tail(_reg3_mat_real_11_T_6, 1) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_8 = asSInt(_reg3_mat_real_11_T_7) @[calc6x6.scala 150:106]
    node _reg3_mat_real_11_T_9 = dshr(_reg3_mat_real_11_T_8, UInt<2>("h02")) @[calc6x6.scala 150:129]
    reg3.mat_real[11] <= _reg3_mat_real_11_T_9 @[calc6x6.scala 150:37]
    node _reg3_mat_real_17_T = add(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_1 = tail(_reg3_mat_real_17_T, 1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_2 = asSInt(_reg3_mat_real_17_T_1) @[calc6x6.scala 151:62]
    node _reg3_mat_real_17_T_3 = sub(_reg3_mat_real_17_T_2, w3.mat_real[23]) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_4 = tail(_reg3_mat_real_17_T_3, 1) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_5 = asSInt(_reg3_mat_real_17_T_4) @[calc6x6.scala 151:84]
    node _reg3_mat_real_17_T_6 = sub(_reg3_mat_real_17_T_5, w3.mat_real[29]) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_7 = tail(_reg3_mat_real_17_T_6, 1) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_8 = asSInt(_reg3_mat_real_17_T_7) @[calc6x6.scala 151:106]
    node _reg3_mat_real_17_T_9 = dshr(_reg3_mat_real_17_T_8, UInt<2>("h02")) @[calc6x6.scala 151:129]
    reg3.mat_real[17] <= _reg3_mat_real_17_T_9 @[calc6x6.scala 151:37]
    node _reg3_mat_real_23_T = sub(w3.mat_real[11], w3.mat_real[17]) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_1 = tail(_reg3_mat_real_23_T, 1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_2 = asSInt(_reg3_mat_real_23_T_1) @[calc6x6.scala 152:63]
    node _reg3_mat_real_23_T_3 = add(_reg3_mat_real_23_T_2, w3.mat_comp[23]) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_4 = tail(_reg3_mat_real_23_T_3, 1) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_5 = asSInt(_reg3_mat_real_23_T_4) @[calc6x6.scala 152:85]
    node _reg3_mat_real_23_T_6 = sub(_reg3_mat_real_23_T_5, w3.mat_comp[29]) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_7 = tail(_reg3_mat_real_23_T_6, 1) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_8 = asSInt(_reg3_mat_real_23_T_7) @[calc6x6.scala 152:107]
    node _reg3_mat_real_23_T_9 = dshr(_reg3_mat_real_23_T_8, UInt<2>("h02")) @[calc6x6.scala 152:130]
    node _reg3_mat_real_23_T_10 = add(_reg3_mat_real_23_T_9, w3.mat_real[35]) @[calc6x6.scala 152:136]
    node _reg3_mat_real_23_T_11 = tail(_reg3_mat_real_23_T_10, 1) @[calc6x6.scala 152:136]
    node _reg3_mat_real_23_T_12 = asSInt(_reg3_mat_real_23_T_11) @[calc6x6.scala 152:136]
    reg3.mat_real[23] <= _reg3_mat_real_23_T_12 @[calc6x6.scala 152:37]
    node _reg3_mat_comp_5_T = add(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_1 = tail(_reg3_mat_comp_5_T, 1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_2 = asSInt(_reg3_mat_comp_5_T_1) @[calc6x6.scala 154:85]
    node _reg3_mat_comp_5_T_3 = add(_reg3_mat_comp_5_T_2, w3.mat_comp[23]) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_4 = tail(_reg3_mat_comp_5_T_3, 1) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_5 = asSInt(_reg3_mat_comp_5_T_4) @[calc6x6.scala 155:62]
    node _reg3_mat_comp_5_T_6 = add(_reg3_mat_comp_5_T_5, w3.mat_comp[29]) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_7 = tail(_reg3_mat_comp_5_T_6, 1) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_8 = asSInt(_reg3_mat_comp_5_T_7) @[calc6x6.scala 155:84]
    node _reg3_mat_comp_5_T_9 = dshr(_reg3_mat_comp_5_T_8, UInt<2>("h02")) @[calc6x6.scala 155:107]
    node _reg3_mat_comp_5_T_10 = add(w3.mat_comp[5], _reg3_mat_comp_5_T_9) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_5_T_11 = tail(_reg3_mat_comp_5_T_10, 1) @[calc6x6.scala 154:61]
    node _reg3_mat_comp_5_T_12 = asSInt(_reg3_mat_comp_5_T_11) @[calc6x6.scala 154:61]
    reg3.mat_comp[5] <= _reg3_mat_comp_5_T_12 @[calc6x6.scala 154:37]
    node _reg3_mat_comp_11_T = sub(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_1 = tail(_reg3_mat_comp_11_T, 1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_2 = asSInt(_reg3_mat_comp_11_T_1) @[calc6x6.scala 156:62]
    node _reg3_mat_comp_11_T_3 = add(_reg3_mat_comp_11_T_2, w3.mat_real[23]) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_4 = tail(_reg3_mat_comp_11_T_3, 1) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_5 = asSInt(_reg3_mat_comp_11_T_4) @[calc6x6.scala 156:84]
    node _reg3_mat_comp_11_T_6 = sub(_reg3_mat_comp_11_T_5, w3.mat_real[29]) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_7 = tail(_reg3_mat_comp_11_T_6, 1) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_8 = asSInt(_reg3_mat_comp_11_T_7) @[calc6x6.scala 156:106]
    node _reg3_mat_comp_11_T_9 = dshr(_reg3_mat_comp_11_T_8, UInt<2>("h02")) @[calc6x6.scala 156:129]
    reg3.mat_comp[11] <= _reg3_mat_comp_11_T_9 @[calc6x6.scala 156:37]
    node _reg3_mat_comp_17_T = add(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_1 = tail(_reg3_mat_comp_17_T, 1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_2 = asSInt(_reg3_mat_comp_17_T_1) @[calc6x6.scala 157:62]
    node _reg3_mat_comp_17_T_3 = sub(_reg3_mat_comp_17_T_2, w3.mat_comp[23]) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_4 = tail(_reg3_mat_comp_17_T_3, 1) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_5 = asSInt(_reg3_mat_comp_17_T_4) @[calc6x6.scala 157:84]
    node _reg3_mat_comp_17_T_6 = sub(_reg3_mat_comp_17_T_5, w3.mat_comp[29]) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_7 = tail(_reg3_mat_comp_17_T_6, 1) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_8 = asSInt(_reg3_mat_comp_17_T_7) @[calc6x6.scala 157:106]
    node _reg3_mat_comp_17_T_9 = dshr(_reg3_mat_comp_17_T_8, UInt<2>("h02")) @[calc6x6.scala 157:129]
    reg3.mat_comp[17] <= _reg3_mat_comp_17_T_9 @[calc6x6.scala 157:37]
    node _reg3_mat_comp_23_T = sub(w3.mat_comp[11], w3.mat_comp[17]) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_1 = tail(_reg3_mat_comp_23_T, 1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_2 = asSInt(_reg3_mat_comp_23_T_1) @[calc6x6.scala 158:63]
    node _reg3_mat_comp_23_T_3 = sub(_reg3_mat_comp_23_T_2, w3.mat_real[23]) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_4 = tail(_reg3_mat_comp_23_T_3, 1) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_5 = asSInt(_reg3_mat_comp_23_T_4) @[calc6x6.scala 158:85]
    node _reg3_mat_comp_23_T_6 = add(_reg3_mat_comp_23_T_5, w3.mat_real[29]) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_7 = tail(_reg3_mat_comp_23_T_6, 1) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_8 = asSInt(_reg3_mat_comp_23_T_7) @[calc6x6.scala 158:107]
    node _reg3_mat_comp_23_T_9 = dshr(_reg3_mat_comp_23_T_8, UInt<2>("h02")) @[calc6x6.scala 158:130]
    node _reg3_mat_comp_23_T_10 = add(_reg3_mat_comp_23_T_9, w3.mat_comp[35]) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_23_T_11 = tail(_reg3_mat_comp_23_T_10, 1) @[calc6x6.scala 158:136]
    node _reg3_mat_comp_23_T_12 = asSInt(_reg3_mat_comp_23_T_11) @[calc6x6.scala 158:136]
    reg3.mat_comp[23] <= _reg3_mat_comp_23_T_12 @[calc6x6.scala 158:37]
    valid_reg[3] <= valid_reg[2] @[calc6x6.scala 179:18]
    io.valid_out <= valid_reg[3] @[calc6x6.scala 180:18]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      real[0].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[0].in_b <= io.input.mat[0] @[calc6x6.scala 186:30]
      io.output.mat[0] <= real[0].result @[calc6x6.scala 187:34]
      real[1].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[1].in_b <= io.input.mat[1] @[calc6x6.scala 186:30]
      io.output.mat[1] <= real[1].result @[calc6x6.scala 187:34]
      real[2].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[2].in_b <= io.input.mat[2] @[calc6x6.scala 186:30]
      io.output.mat[2] <= real[2].result @[calc6x6.scala 187:34]
      real[3].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[3].in_b <= io.input.mat[3] @[calc6x6.scala 186:30]
      io.output.mat[3] <= real[3].result @[calc6x6.scala 187:34]
      real[4].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[4].in_b <= io.input.mat[4] @[calc6x6.scala 186:30]
      io.output.mat[4] <= real[4].result @[calc6x6.scala 187:34]
      real[5].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[5].in_b <= io.input.mat[5] @[calc6x6.scala 186:30]
      io.output.mat[5] <= real[5].result @[calc6x6.scala 187:34]
      real[6].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[6].in_b <= io.input.mat[6] @[calc6x6.scala 186:30]
      io.output.mat[6] <= real[6].result @[calc6x6.scala 187:34]
      real[7].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[7].in_b <= io.input.mat[7] @[calc6x6.scala 186:30]
      io.output.mat[7] <= real[7].result @[calc6x6.scala 187:34]
      real[8].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[8].in_b <= io.input.mat[8] @[calc6x6.scala 186:30]
      io.output.mat[8] <= real[8].result @[calc6x6.scala 187:34]
      real[9].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[9].in_b <= io.input.mat[9] @[calc6x6.scala 186:30]
      io.output.mat[9] <= real[9].result @[calc6x6.scala 187:34]
      real[10].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[10].in_b <= io.input.mat[10] @[calc6x6.scala 186:30]
      io.output.mat[10] <= real[10].result @[calc6x6.scala 187:34]
      real[11].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[11].in_b <= io.input.mat[11] @[calc6x6.scala 186:30]
      io.output.mat[11] <= real[11].result @[calc6x6.scala 187:34]
      real[12].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[12].in_b <= io.input.mat[12] @[calc6x6.scala 186:30]
      io.output.mat[12] <= real[12].result @[calc6x6.scala 187:34]
      real[13].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[13].in_b <= io.input.mat[13] @[calc6x6.scala 186:30]
      io.output.mat[13] <= real[13].result @[calc6x6.scala 187:34]
      real[14].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[14].in_b <= io.input.mat[14] @[calc6x6.scala 186:30]
      io.output.mat[14] <= real[14].result @[calc6x6.scala 187:34]
      real[15].flag <= UInt<1>("h00") @[calc6x6.scala 185:30]
      real[15].in_b <= io.input.mat[15] @[calc6x6.scala 186:30]
      io.output.mat[15] <= real[15].result @[calc6x6.scala 187:34]
      io.valid_out <= io.valid_in @[calc6x6.scala 189:26]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_4 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_5 = eq(_T_3, _T_4) @[Conditional.scala 37:30]
      when _T_5 : @[Conditional.scala 39:67]
        real[0].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[0].in_b <= io.input.mat[0] @[calc6x6.scala 196:30]
        real[0].w_a <= io.weight.real[0] @[calc6x6.scala 197:29]
        io.output.mat[0] <= real[0].result @[calc6x6.scala 198:34]
        real[1].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[1].in_b <= io.input.mat[1] @[calc6x6.scala 196:30]
        real[1].w_a <= io.weight.real[1] @[calc6x6.scala 197:29]
        io.output.mat[1] <= real[1].result @[calc6x6.scala 198:34]
        real[2].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[2].in_b <= io.input.mat[2] @[calc6x6.scala 196:30]
        real[2].w_a <= io.weight.real[2] @[calc6x6.scala 197:29]
        io.output.mat[2] <= real[2].result @[calc6x6.scala 198:34]
        real[3].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[3].in_b <= io.input.mat[3] @[calc6x6.scala 196:30]
        real[3].w_a <= io.weight.real[3] @[calc6x6.scala 197:29]
        io.output.mat[3] <= real[3].result @[calc6x6.scala 198:34]
        real[4].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[4].in_b <= io.input.mat[4] @[calc6x6.scala 196:30]
        real[4].w_a <= io.weight.real[4] @[calc6x6.scala 197:29]
        io.output.mat[4] <= real[4].result @[calc6x6.scala 198:34]
        real[5].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[5].in_b <= io.input.mat[5] @[calc6x6.scala 196:30]
        real[5].w_a <= io.weight.real[5] @[calc6x6.scala 197:29]
        io.output.mat[5] <= real[5].result @[calc6x6.scala 198:34]
        real[6].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[6].in_b <= io.input.mat[6] @[calc6x6.scala 196:30]
        real[6].w_a <= io.weight.real[6] @[calc6x6.scala 197:29]
        io.output.mat[6] <= real[6].result @[calc6x6.scala 198:34]
        real[7].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[7].in_b <= io.input.mat[7] @[calc6x6.scala 196:30]
        real[7].w_a <= io.weight.real[7] @[calc6x6.scala 197:29]
        io.output.mat[7] <= real[7].result @[calc6x6.scala 198:34]
        real[8].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[8].in_b <= io.input.mat[8] @[calc6x6.scala 196:30]
        real[8].w_a <= io.weight.real[8] @[calc6x6.scala 197:29]
        io.output.mat[8] <= real[8].result @[calc6x6.scala 198:34]
        real[9].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[9].in_b <= io.input.mat[9] @[calc6x6.scala 196:30]
        real[9].w_a <= io.weight.real[9] @[calc6x6.scala 197:29]
        io.output.mat[9] <= real[9].result @[calc6x6.scala 198:34]
        real[10].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[10].in_b <= io.input.mat[10] @[calc6x6.scala 196:30]
        real[10].w_a <= io.weight.real[10] @[calc6x6.scala 197:29]
        io.output.mat[10] <= real[10].result @[calc6x6.scala 198:34]
        real[11].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[11].in_b <= io.input.mat[11] @[calc6x6.scala 196:30]
        real[11].w_a <= io.weight.real[11] @[calc6x6.scala 197:29]
        io.output.mat[11] <= real[11].result @[calc6x6.scala 198:34]
        real[12].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[12].in_b <= io.input.mat[12] @[calc6x6.scala 196:30]
        real[12].w_a <= io.weight.real[12] @[calc6x6.scala 197:29]
        io.output.mat[12] <= real[12].result @[calc6x6.scala 198:34]
        real[13].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[13].in_b <= io.input.mat[13] @[calc6x6.scala 196:30]
        real[13].w_a <= io.weight.real[13] @[calc6x6.scala 197:29]
        io.output.mat[13] <= real[13].result @[calc6x6.scala 198:34]
        real[14].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[14].in_b <= io.input.mat[14] @[calc6x6.scala 196:30]
        real[14].w_a <= io.weight.real[14] @[calc6x6.scala 197:29]
        io.output.mat[14] <= real[14].result @[calc6x6.scala 198:34]
        real[15].flag <= UInt<1>("h01") @[calc6x6.scala 195:30]
        real[15].in_b <= io.input.mat[15] @[calc6x6.scala 196:30]
        real[15].w_a <= io.weight.real[15] @[calc6x6.scala 197:29]
        io.output.mat[15] <= real[15].result @[calc6x6.scala 198:34]
        io.valid_out <= io.valid_in @[calc6x6.scala 201:25]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_6 = asUInt(UInt<2>("h02")) @[Conditional.scala 37:23]
        node _T_7 = asUInt(io.flag) @[Conditional.scala 37:39]
        node _T_8 = eq(_T_6, _T_7) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          node _io_output_mat_0_T = add(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_1 = tail(_io_output_mat_0_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_2 = asSInt(_io_output_mat_0_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_0_T_3 = add(_io_output_mat_0_T_2, reg3.mat_real[3]) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_4 = tail(_io_output_mat_0_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_5 = asSInt(_io_output_mat_0_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_0_T_6 = add(_io_output_mat_0_T_5, reg3.mat_real[4]) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_7 = tail(_io_output_mat_0_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_8 = asSInt(_io_output_mat_0_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_0_T_9 = dshr(_io_output_mat_0_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_0_T_10 = add(reg3.mat_real[0], _io_output_mat_0_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_0_T_11 = tail(_io_output_mat_0_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_0_T_12 = asSInt(_io_output_mat_0_T_11) @[calc6x6.scala 164:61]
          io.output.mat[0] <= _io_output_mat_0_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_1_T = sub(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_1 = tail(_io_output_mat_1_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_2 = asSInt(_io_output_mat_1_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_1_T_3 = sub(_io_output_mat_1_T_2, reg3.mat_comp[3]) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_4 = tail(_io_output_mat_1_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_5 = asSInt(_io_output_mat_1_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_1_T_6 = add(_io_output_mat_1_T_5, reg3.mat_comp[4]) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_7 = tail(_io_output_mat_1_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_8 = asSInt(_io_output_mat_1_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_1_T_9 = dshr(_io_output_mat_1_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[1] <= _io_output_mat_1_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_2_T = add(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_1 = tail(_io_output_mat_2_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_2 = asSInt(_io_output_mat_2_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_2_T_3 = sub(_io_output_mat_2_T_2, reg3.mat_real[3]) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_4 = tail(_io_output_mat_2_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_5 = asSInt(_io_output_mat_2_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_2_T_6 = sub(_io_output_mat_2_T_5, reg3.mat_real[4]) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_7 = tail(_io_output_mat_2_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_8 = asSInt(_io_output_mat_2_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_2_T_9 = dshr(_io_output_mat_2_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[2] <= _io_output_mat_2_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_3_T = sub(reg3.mat_real[1], reg3.mat_real[2]) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_1 = tail(_io_output_mat_3_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_2 = asSInt(_io_output_mat_3_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_3_T_3 = add(_io_output_mat_3_T_2, reg3.mat_comp[3]) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_4 = tail(_io_output_mat_3_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_5 = asSInt(_io_output_mat_3_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_3_T_6 = sub(_io_output_mat_3_T_5, reg3.mat_comp[4]) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_7 = tail(_io_output_mat_3_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_8 = asSInt(_io_output_mat_3_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_3_T_9 = dshr(_io_output_mat_3_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_3_T_10 = add(_io_output_mat_3_T_9, reg3.mat_real[5]) @[calc6x6.scala 168:136]
          node _io_output_mat_3_T_11 = tail(_io_output_mat_3_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_3_T_12 = asSInt(_io_output_mat_3_T_11) @[calc6x6.scala 168:136]
          io.output.mat[3] <= _io_output_mat_3_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_4_T = add(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_1 = tail(_io_output_mat_4_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_2 = asSInt(_io_output_mat_4_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_4_T_3 = add(_io_output_mat_4_T_2, reg3.mat_real[9]) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_4 = tail(_io_output_mat_4_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_5 = asSInt(_io_output_mat_4_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_4_T_6 = add(_io_output_mat_4_T_5, reg3.mat_real[10]) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_7 = tail(_io_output_mat_4_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_8 = asSInt(_io_output_mat_4_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_4_T_9 = dshr(_io_output_mat_4_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_4_T_10 = add(reg3.mat_real[6], _io_output_mat_4_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_4_T_11 = tail(_io_output_mat_4_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_4_T_12 = asSInt(_io_output_mat_4_T_11) @[calc6x6.scala 164:61]
          io.output.mat[4] <= _io_output_mat_4_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_5_T = sub(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_1 = tail(_io_output_mat_5_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_2 = asSInt(_io_output_mat_5_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_5_T_3 = sub(_io_output_mat_5_T_2, reg3.mat_comp[9]) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_4 = tail(_io_output_mat_5_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_5 = asSInt(_io_output_mat_5_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_5_T_6 = add(_io_output_mat_5_T_5, reg3.mat_comp[10]) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_7 = tail(_io_output_mat_5_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_8 = asSInt(_io_output_mat_5_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_5_T_9 = dshr(_io_output_mat_5_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[5] <= _io_output_mat_5_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_6_T = add(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_1 = tail(_io_output_mat_6_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_2 = asSInt(_io_output_mat_6_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_6_T_3 = sub(_io_output_mat_6_T_2, reg3.mat_real[9]) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_4 = tail(_io_output_mat_6_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_5 = asSInt(_io_output_mat_6_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_6_T_6 = sub(_io_output_mat_6_T_5, reg3.mat_real[10]) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_7 = tail(_io_output_mat_6_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_8 = asSInt(_io_output_mat_6_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_6_T_9 = dshr(_io_output_mat_6_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[6] <= _io_output_mat_6_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_7_T = sub(reg3.mat_real[7], reg3.mat_real[8]) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_1 = tail(_io_output_mat_7_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_2 = asSInt(_io_output_mat_7_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_7_T_3 = add(_io_output_mat_7_T_2, reg3.mat_comp[9]) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_4 = tail(_io_output_mat_7_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_5 = asSInt(_io_output_mat_7_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_7_T_6 = sub(_io_output_mat_7_T_5, reg3.mat_comp[10]) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_7 = tail(_io_output_mat_7_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_8 = asSInt(_io_output_mat_7_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_7_T_9 = dshr(_io_output_mat_7_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_7_T_10 = add(_io_output_mat_7_T_9, reg3.mat_real[11]) @[calc6x6.scala 168:136]
          node _io_output_mat_7_T_11 = tail(_io_output_mat_7_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_7_T_12 = asSInt(_io_output_mat_7_T_11) @[calc6x6.scala 168:136]
          io.output.mat[7] <= _io_output_mat_7_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_8_T = add(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_1 = tail(_io_output_mat_8_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_2 = asSInt(_io_output_mat_8_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_8_T_3 = add(_io_output_mat_8_T_2, reg3.mat_real[15]) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_4 = tail(_io_output_mat_8_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_5 = asSInt(_io_output_mat_8_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_8_T_6 = add(_io_output_mat_8_T_5, reg3.mat_real[16]) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_7 = tail(_io_output_mat_8_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_8 = asSInt(_io_output_mat_8_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_8_T_9 = dshr(_io_output_mat_8_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_8_T_10 = add(reg3.mat_real[12], _io_output_mat_8_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_8_T_11 = tail(_io_output_mat_8_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_8_T_12 = asSInt(_io_output_mat_8_T_11) @[calc6x6.scala 164:61]
          io.output.mat[8] <= _io_output_mat_8_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_9_T = sub(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_1 = tail(_io_output_mat_9_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_2 = asSInt(_io_output_mat_9_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_9_T_3 = sub(_io_output_mat_9_T_2, reg3.mat_comp[15]) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_4 = tail(_io_output_mat_9_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_5 = asSInt(_io_output_mat_9_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_9_T_6 = add(_io_output_mat_9_T_5, reg3.mat_comp[16]) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_7 = tail(_io_output_mat_9_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_8 = asSInt(_io_output_mat_9_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_9_T_9 = dshr(_io_output_mat_9_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[9] <= _io_output_mat_9_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_10_T = add(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_1 = tail(_io_output_mat_10_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_2 = asSInt(_io_output_mat_10_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_10_T_3 = sub(_io_output_mat_10_T_2, reg3.mat_real[15]) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_4 = tail(_io_output_mat_10_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_5 = asSInt(_io_output_mat_10_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_10_T_6 = sub(_io_output_mat_10_T_5, reg3.mat_real[16]) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_7 = tail(_io_output_mat_10_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_8 = asSInt(_io_output_mat_10_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_10_T_9 = dshr(_io_output_mat_10_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[10] <= _io_output_mat_10_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_11_T = sub(reg3.mat_real[13], reg3.mat_real[14]) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_1 = tail(_io_output_mat_11_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_2 = asSInt(_io_output_mat_11_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_11_T_3 = add(_io_output_mat_11_T_2, reg3.mat_comp[15]) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_4 = tail(_io_output_mat_11_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_5 = asSInt(_io_output_mat_11_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_11_T_6 = sub(_io_output_mat_11_T_5, reg3.mat_comp[16]) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_7 = tail(_io_output_mat_11_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_8 = asSInt(_io_output_mat_11_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_11_T_9 = dshr(_io_output_mat_11_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_11_T_10 = add(_io_output_mat_11_T_9, reg3.mat_real[17]) @[calc6x6.scala 168:136]
          node _io_output_mat_11_T_11 = tail(_io_output_mat_11_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_11_T_12 = asSInt(_io_output_mat_11_T_11) @[calc6x6.scala 168:136]
          io.output.mat[11] <= _io_output_mat_11_T_12 @[calc6x6.scala 168:37]
          node _io_output_mat_12_T = add(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_1 = tail(_io_output_mat_12_T, 1) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_2 = asSInt(_io_output_mat_12_T_1) @[calc6x6.scala 164:85]
          node _io_output_mat_12_T_3 = add(_io_output_mat_12_T_2, reg3.mat_real[21]) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_4 = tail(_io_output_mat_12_T_3, 1) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_5 = asSInt(_io_output_mat_12_T_4) @[calc6x6.scala 165:62]
          node _io_output_mat_12_T_6 = add(_io_output_mat_12_T_5, reg3.mat_real[22]) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_7 = tail(_io_output_mat_12_T_6, 1) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_8 = asSInt(_io_output_mat_12_T_7) @[calc6x6.scala 165:84]
          node _io_output_mat_12_T_9 = dshr(_io_output_mat_12_T_8, UInt<2>("h02")) @[calc6x6.scala 165:107]
          node _io_output_mat_12_T_10 = add(reg3.mat_real[18], _io_output_mat_12_T_9) @[calc6x6.scala 164:61]
          node _io_output_mat_12_T_11 = tail(_io_output_mat_12_T_10, 1) @[calc6x6.scala 164:61]
          node _io_output_mat_12_T_12 = asSInt(_io_output_mat_12_T_11) @[calc6x6.scala 164:61]
          io.output.mat[12] <= _io_output_mat_12_T_12 @[calc6x6.scala 164:37]
          node _io_output_mat_13_T = sub(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_1 = tail(_io_output_mat_13_T, 1) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_2 = asSInt(_io_output_mat_13_T_1) @[calc6x6.scala 166:63]
          node _io_output_mat_13_T_3 = sub(_io_output_mat_13_T_2, reg3.mat_comp[21]) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_4 = tail(_io_output_mat_13_T_3, 1) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_5 = asSInt(_io_output_mat_13_T_4) @[calc6x6.scala 166:85]
          node _io_output_mat_13_T_6 = add(_io_output_mat_13_T_5, reg3.mat_comp[22]) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_7 = tail(_io_output_mat_13_T_6, 1) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_8 = asSInt(_io_output_mat_13_T_7) @[calc6x6.scala 166:107]
          node _io_output_mat_13_T_9 = dshr(_io_output_mat_13_T_8, UInt<2>("h02")) @[calc6x6.scala 166:130]
          io.output.mat[13] <= _io_output_mat_13_T_9 @[calc6x6.scala 166:37]
          node _io_output_mat_14_T = add(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_1 = tail(_io_output_mat_14_T, 1) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_2 = asSInt(_io_output_mat_14_T_1) @[calc6x6.scala 167:63]
          node _io_output_mat_14_T_3 = sub(_io_output_mat_14_T_2, reg3.mat_real[21]) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_4 = tail(_io_output_mat_14_T_3, 1) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_5 = asSInt(_io_output_mat_14_T_4) @[calc6x6.scala 167:85]
          node _io_output_mat_14_T_6 = sub(_io_output_mat_14_T_5, reg3.mat_real[22]) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_7 = tail(_io_output_mat_14_T_6, 1) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_8 = asSInt(_io_output_mat_14_T_7) @[calc6x6.scala 167:107]
          node _io_output_mat_14_T_9 = dshr(_io_output_mat_14_T_8, UInt<2>("h02")) @[calc6x6.scala 167:130]
          io.output.mat[14] <= _io_output_mat_14_T_9 @[calc6x6.scala 167:37]
          node _io_output_mat_15_T = sub(reg3.mat_real[19], reg3.mat_real[20]) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_1 = tail(_io_output_mat_15_T, 1) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_2 = asSInt(_io_output_mat_15_T_1) @[calc6x6.scala 168:63]
          node _io_output_mat_15_T_3 = add(_io_output_mat_15_T_2, reg3.mat_comp[21]) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_4 = tail(_io_output_mat_15_T_3, 1) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_5 = asSInt(_io_output_mat_15_T_4) @[calc6x6.scala 168:85]
          node _io_output_mat_15_T_6 = sub(_io_output_mat_15_T_5, reg3.mat_comp[22]) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_7 = tail(_io_output_mat_15_T_6, 1) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_8 = asSInt(_io_output_mat_15_T_7) @[calc6x6.scala 168:107]
          node _io_output_mat_15_T_9 = dshr(_io_output_mat_15_T_8, UInt<2>("h02")) @[calc6x6.scala 168:130]
          node _io_output_mat_15_T_10 = add(_io_output_mat_15_T_9, reg3.mat_real[23]) @[calc6x6.scala 168:136]
          node _io_output_mat_15_T_11 = tail(_io_output_mat_15_T_10, 1) @[calc6x6.scala 168:136]
          node _io_output_mat_15_T_12 = asSInt(_io_output_mat_15_T_11) @[calc6x6.scala 168:136]
          io.output.mat[15] <= _io_output_mat_15_T_12 @[calc6x6.scala 168:37]
          real[0].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[0].in_b <= reg2.mat_real[0] @[calc6x6.scala 225:38]
          real[0].w_a <= io.weight.real[0] @[calc6x6.scala 226:37]
          w3.mat_real[0] <= real[0].result @[calc6x6.scala 227:47]
          real[1].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[1].in_b <= reg2.mat_real[1] @[calc6x6.scala 225:38]
          real[1].w_a <= io.weight.real[1] @[calc6x6.scala 226:37]
          w3.mat_real[1] <= real[1].result @[calc6x6.scala 227:47]
          real[2].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[2].in_b <= reg2.mat_real[2] @[calc6x6.scala 225:38]
          real[2].w_a <= io.weight.real[2] @[calc6x6.scala 226:37]
          w3.mat_real[2] <= real[2].result @[calc6x6.scala 227:47]
          comp1[0].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[0].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[0].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[0].w_a <= io.weight.comp1[0] @[calc6x6.scala 257:38]
          comp2[0].w_a <= io.weight.comp2[0] @[calc6x6.scala 258:38]
          comp3[0].w_a <= io.weight.comp3[0] @[calc6x6.scala 259:38]
          node _comp1_0_in_b_T_1 = add(reg2.mat_real[3], reg2.mat_comp[6]) @[calc6x6.scala 261:65]
          node _comp1_0_in_b_T_2 = tail(_comp1_0_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_0_in_b_T_3 = asSInt(_comp1_0_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[0].in_b <= _comp1_0_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[0].in_b <= reg2.mat_real[3] @[calc6x6.scala 262:39]
          comp3[0].in_b <= reg2.mat_comp[6] @[calc6x6.scala 263:39]
          node _w3_mat_real_3_T = sub(comp2[0].result, comp3[0].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_3_T_1 = tail(_w3_mat_real_3_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_3_T_2 = asSInt(_w3_mat_real_3_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[3] <= _w3_mat_real_3_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_3_T = sub(comp1[0].result, comp2[0].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_1 = tail(_w3_mat_comp_3_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_2 = asSInt(_w3_mat_comp_3_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_3_T_3 = sub(_w3_mat_comp_3_T_2, comp3[0].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_3_T_4 = tail(_w3_mat_comp_3_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_3_T_5 = asSInt(_w3_mat_comp_3_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[3] <= _w3_mat_comp_3_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_4_T = sub(comp2[0].result, comp3[0].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_4_T_1 = tail(_w3_mat_real_4_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_4_T_2 = asSInt(_w3_mat_real_4_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[4] <= _w3_mat_real_4_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_4_T = sub(asSInt(UInt<1>("h00")), comp1[0].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_1 = tail(_w3_mat_comp_4_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_2 = asSInt(_w3_mat_comp_4_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_4_T_3 = add(_w3_mat_comp_4_T_2, comp2[0].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_4 = tail(_w3_mat_comp_4_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_5 = asSInt(_w3_mat_comp_4_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_4_T_6 = add(_w3_mat_comp_4_T_5, comp3[0].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_4_T_7 = tail(_w3_mat_comp_4_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_4_T_8 = asSInt(_w3_mat_comp_4_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[4] <= _w3_mat_comp_4_T_8 @[calc6x6.scala 272:47]
          real[3].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[3].in_b <= reg2.mat_real[5] @[calc6x6.scala 225:38]
          real[3].w_a <= io.weight.real[3] @[calc6x6.scala 226:37]
          w3.mat_real[5] <= real[3].result @[calc6x6.scala 227:47]
          real[4].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[4].in_b <= reg2.mat_real[6] @[calc6x6.scala 225:38]
          real[4].w_a <= io.weight.real[4] @[calc6x6.scala 226:37]
          w3.mat_real[6] <= real[4].result @[calc6x6.scala 227:47]
          real[5].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[5].in_b <= reg2.mat_real[7] @[calc6x6.scala 225:38]
          real[5].w_a <= io.weight.real[5] @[calc6x6.scala 226:37]
          w3.mat_real[7] <= real[5].result @[calc6x6.scala 227:47]
          real[6].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[6].in_b <= reg2.mat_real[8] @[calc6x6.scala 225:38]
          real[6].w_a <= io.weight.real[6] @[calc6x6.scala 226:37]
          w3.mat_real[8] <= real[6].result @[calc6x6.scala 227:47]
          comp1[1].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[1].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[1].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[1].w_a <= io.weight.comp1[1] @[calc6x6.scala 257:38]
          comp2[1].w_a <= io.weight.comp2[1] @[calc6x6.scala 258:38]
          comp3[1].w_a <= io.weight.comp3[1] @[calc6x6.scala 259:38]
          node _comp1_1_in_b_T_1 = add(reg2.mat_real[9], reg2.mat_comp[7]) @[calc6x6.scala 261:65]
          node _comp1_1_in_b_T_2 = tail(_comp1_1_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_1_in_b_T_3 = asSInt(_comp1_1_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[1].in_b <= _comp1_1_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[1].in_b <= reg2.mat_real[9] @[calc6x6.scala 262:39]
          comp3[1].in_b <= reg2.mat_comp[7] @[calc6x6.scala 263:39]
          node _w3_mat_real_9_T = sub(comp2[1].result, comp3[1].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_9_T_1 = tail(_w3_mat_real_9_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_9_T_2 = asSInt(_w3_mat_real_9_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[9] <= _w3_mat_real_9_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_9_T = sub(comp1[1].result, comp2[1].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_1 = tail(_w3_mat_comp_9_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_2 = asSInt(_w3_mat_comp_9_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_9_T_3 = sub(_w3_mat_comp_9_T_2, comp3[1].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_9_T_4 = tail(_w3_mat_comp_9_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_9_T_5 = asSInt(_w3_mat_comp_9_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[9] <= _w3_mat_comp_9_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_10_T = sub(comp2[1].result, comp3[1].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_10_T_1 = tail(_w3_mat_real_10_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_10_T_2 = asSInt(_w3_mat_real_10_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[10] <= _w3_mat_real_10_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_10_T = sub(asSInt(UInt<1>("h00")), comp1[1].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_1 = tail(_w3_mat_comp_10_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_2 = asSInt(_w3_mat_comp_10_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_10_T_3 = add(_w3_mat_comp_10_T_2, comp2[1].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_4 = tail(_w3_mat_comp_10_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_5 = asSInt(_w3_mat_comp_10_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_10_T_6 = add(_w3_mat_comp_10_T_5, comp3[1].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_10_T_7 = tail(_w3_mat_comp_10_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_10_T_8 = asSInt(_w3_mat_comp_10_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[10] <= _w3_mat_comp_10_T_8 @[calc6x6.scala 272:47]
          real[7].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[7].in_b <= reg2.mat_real[11] @[calc6x6.scala 225:38]
          real[7].w_a <= io.weight.real[7] @[calc6x6.scala 226:37]
          w3.mat_real[11] <= real[7].result @[calc6x6.scala 227:47]
          real[8].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[8].in_b <= reg2.mat_real[12] @[calc6x6.scala 225:38]
          real[8].w_a <= io.weight.real[8] @[calc6x6.scala 226:37]
          w3.mat_real[12] <= real[8].result @[calc6x6.scala 227:47]
          real[9].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[9].in_b <= reg2.mat_real[13] @[calc6x6.scala 225:38]
          real[9].w_a <= io.weight.real[9] @[calc6x6.scala 226:37]
          w3.mat_real[13] <= real[9].result @[calc6x6.scala 227:47]
          real[10].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[10].in_b <= reg2.mat_real[14] @[calc6x6.scala 225:38]
          real[10].w_a <= io.weight.real[10] @[calc6x6.scala 226:37]
          w3.mat_real[14] <= real[10].result @[calc6x6.scala 227:47]
          comp1[2].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[2].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[2].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[2].w_a <= io.weight.comp1[2] @[calc6x6.scala 257:38]
          comp2[2].w_a <= io.weight.comp2[2] @[calc6x6.scala 258:38]
          comp3[2].w_a <= io.weight.comp3[2] @[calc6x6.scala 259:38]
          node _comp1_2_in_b_T_1 = add(reg2.mat_real[15], reg2.mat_comp[8]) @[calc6x6.scala 261:65]
          node _comp1_2_in_b_T_2 = tail(_comp1_2_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_2_in_b_T_3 = asSInt(_comp1_2_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[2].in_b <= _comp1_2_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[2].in_b <= reg2.mat_real[15] @[calc6x6.scala 262:39]
          comp3[2].in_b <= reg2.mat_comp[8] @[calc6x6.scala 263:39]
          node _w3_mat_real_15_T = sub(comp2[2].result, comp3[2].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_15_T_1 = tail(_w3_mat_real_15_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_15_T_2 = asSInt(_w3_mat_real_15_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[15] <= _w3_mat_real_15_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_15_T = sub(comp1[2].result, comp2[2].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_1 = tail(_w3_mat_comp_15_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_2 = asSInt(_w3_mat_comp_15_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_15_T_3 = sub(_w3_mat_comp_15_T_2, comp3[2].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_15_T_4 = tail(_w3_mat_comp_15_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_15_T_5 = asSInt(_w3_mat_comp_15_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[15] <= _w3_mat_comp_15_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_16_T = sub(comp2[2].result, comp3[2].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_16_T_1 = tail(_w3_mat_real_16_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_16_T_2 = asSInt(_w3_mat_real_16_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[16] <= _w3_mat_real_16_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_16_T = sub(asSInt(UInt<1>("h00")), comp1[2].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_1 = tail(_w3_mat_comp_16_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_2 = asSInt(_w3_mat_comp_16_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_16_T_3 = add(_w3_mat_comp_16_T_2, comp2[2].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_4 = tail(_w3_mat_comp_16_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_5 = asSInt(_w3_mat_comp_16_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_16_T_6 = add(_w3_mat_comp_16_T_5, comp3[2].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_16_T_7 = tail(_w3_mat_comp_16_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_16_T_8 = asSInt(_w3_mat_comp_16_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[16] <= _w3_mat_comp_16_T_8 @[calc6x6.scala 272:47]
          real[11].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[11].in_b <= reg2.mat_real[17] @[calc6x6.scala 225:38]
          real[11].w_a <= io.weight.real[11] @[calc6x6.scala 226:37]
          w3.mat_real[17] <= real[11].result @[calc6x6.scala 227:47]
          comp1[3].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[3].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[3].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[3].w_a <= io.weight.comp1[3] @[calc6x6.scala 234:38]
          comp2[3].w_a <= io.weight.comp2[3] @[calc6x6.scala 235:38]
          comp3[3].w_a <= io.weight.comp3[3] @[calc6x6.scala 236:38]
          node _comp1_3_in_b_T_1 = add(reg2.mat_real[18], reg2.mat_comp[0]) @[calc6x6.scala 238:65]
          node _comp1_3_in_b_T_2 = tail(_comp1_3_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_3_in_b_T_3 = asSInt(_comp1_3_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[3].in_b <= _comp1_3_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[3].in_b <= reg2.mat_real[18] @[calc6x6.scala 239:39]
          comp3[3].in_b <= reg2.mat_comp[0] @[calc6x6.scala 240:39]
          node _w3_mat_real_18_T = sub(comp2[3].result, comp3[3].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_18_T_1 = tail(_w3_mat_real_18_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_18_T_2 = asSInt(_w3_mat_real_18_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[18] <= _w3_mat_real_18_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_18_T = sub(comp1[3].result, comp2[3].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_1 = tail(_w3_mat_comp_18_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_2 = asSInt(_w3_mat_comp_18_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_18_T_3 = sub(_w3_mat_comp_18_T_2, comp3[3].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_18_T_4 = tail(_w3_mat_comp_18_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_18_T_5 = asSInt(_w3_mat_comp_18_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[18] <= _w3_mat_comp_18_T_5 @[calc6x6.scala 242:47]
          comp1[4].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[4].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[4].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[4].w_a <= io.weight.comp1[4] @[calc6x6.scala 234:38]
          comp2[4].w_a <= io.weight.comp2[4] @[calc6x6.scala 235:38]
          comp3[4].w_a <= io.weight.comp3[4] @[calc6x6.scala 236:38]
          node _comp1_4_in_b_T_1 = add(reg2.mat_real[19], reg2.mat_comp[1]) @[calc6x6.scala 238:65]
          node _comp1_4_in_b_T_2 = tail(_comp1_4_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_4_in_b_T_3 = asSInt(_comp1_4_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[4].in_b <= _comp1_4_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[4].in_b <= reg2.mat_real[19] @[calc6x6.scala 239:39]
          comp3[4].in_b <= reg2.mat_comp[1] @[calc6x6.scala 240:39]
          node _w3_mat_real_19_T = sub(comp2[4].result, comp3[4].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_19_T_1 = tail(_w3_mat_real_19_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_19_T_2 = asSInt(_w3_mat_real_19_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[19] <= _w3_mat_real_19_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_19_T = sub(comp1[4].result, comp2[4].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_1 = tail(_w3_mat_comp_19_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_2 = asSInt(_w3_mat_comp_19_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_19_T_3 = sub(_w3_mat_comp_19_T_2, comp3[4].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_19_T_4 = tail(_w3_mat_comp_19_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_19_T_5 = asSInt(_w3_mat_comp_19_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[19] <= _w3_mat_comp_19_T_5 @[calc6x6.scala 242:47]
          comp1[5].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[5].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[5].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[5].w_a <= io.weight.comp1[5] @[calc6x6.scala 234:38]
          comp2[5].w_a <= io.weight.comp2[5] @[calc6x6.scala 235:38]
          comp3[5].w_a <= io.weight.comp3[5] @[calc6x6.scala 236:38]
          node _comp1_5_in_b_T_1 = add(reg2.mat_real[20], reg2.mat_comp[2]) @[calc6x6.scala 238:65]
          node _comp1_5_in_b_T_2 = tail(_comp1_5_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_5_in_b_T_3 = asSInt(_comp1_5_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[5].in_b <= _comp1_5_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[5].in_b <= reg2.mat_real[20] @[calc6x6.scala 239:39]
          comp3[5].in_b <= reg2.mat_comp[2] @[calc6x6.scala 240:39]
          node _w3_mat_real_20_T = sub(comp2[5].result, comp3[5].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_20_T_1 = tail(_w3_mat_real_20_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_20_T_2 = asSInt(_w3_mat_real_20_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[20] <= _w3_mat_real_20_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_20_T = sub(comp1[5].result, comp2[5].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_1 = tail(_w3_mat_comp_20_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_2 = asSInt(_w3_mat_comp_20_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_20_T_3 = sub(_w3_mat_comp_20_T_2, comp3[5].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_20_T_4 = tail(_w3_mat_comp_20_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_20_T_5 = asSInt(_w3_mat_comp_20_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[20] <= _w3_mat_comp_20_T_5 @[calc6x6.scala 242:47]
          comp1[6].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[6].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[6].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[6].w_a <= io.weight.comp1[6] @[calc6x6.scala 234:38]
          comp2[6].w_a <= io.weight.comp2[6] @[calc6x6.scala 235:38]
          comp3[6].w_a <= io.weight.comp3[6] @[calc6x6.scala 236:38]
          node _comp1_6_in_b_T_1 = add(reg2.mat_real[21], reg2.mat_comp[3]) @[calc6x6.scala 238:65]
          node _comp1_6_in_b_T_2 = tail(_comp1_6_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_6_in_b_T_3 = asSInt(_comp1_6_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[6].in_b <= _comp1_6_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[6].in_b <= reg2.mat_real[21] @[calc6x6.scala 239:39]
          comp3[6].in_b <= reg2.mat_comp[3] @[calc6x6.scala 240:39]
          node _w3_mat_real_21_T = sub(comp2[6].result, comp3[6].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_21_T_1 = tail(_w3_mat_real_21_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_21_T_2 = asSInt(_w3_mat_real_21_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[21] <= _w3_mat_real_21_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_21_T = sub(comp1[6].result, comp2[6].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_1 = tail(_w3_mat_comp_21_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_2 = asSInt(_w3_mat_comp_21_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_21_T_3 = sub(_w3_mat_comp_21_T_2, comp3[6].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_21_T_4 = tail(_w3_mat_comp_21_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_21_T_5 = asSInt(_w3_mat_comp_21_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[21] <= _w3_mat_comp_21_T_5 @[calc6x6.scala 242:47]
          comp1[7].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[7].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[7].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[7].w_a <= io.weight.comp1[7] @[calc6x6.scala 234:38]
          comp2[7].w_a <= io.weight.comp2[7] @[calc6x6.scala 235:38]
          comp3[7].w_a <= io.weight.comp3[7] @[calc6x6.scala 236:38]
          node _comp1_7_in_b_T_1 = add(reg2.mat_real[22], reg2.mat_comp[4]) @[calc6x6.scala 238:65]
          node _comp1_7_in_b_T_2 = tail(_comp1_7_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_7_in_b_T_3 = asSInt(_comp1_7_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[7].in_b <= _comp1_7_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[7].in_b <= reg2.mat_real[22] @[calc6x6.scala 239:39]
          comp3[7].in_b <= reg2.mat_comp[4] @[calc6x6.scala 240:39]
          node _w3_mat_real_22_T = sub(comp2[7].result, comp3[7].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_22_T_1 = tail(_w3_mat_real_22_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_22_T_2 = asSInt(_w3_mat_real_22_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[22] <= _w3_mat_real_22_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_22_T = sub(comp1[7].result, comp2[7].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_1 = tail(_w3_mat_comp_22_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_2 = asSInt(_w3_mat_comp_22_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_22_T_3 = sub(_w3_mat_comp_22_T_2, comp3[7].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_22_T_4 = tail(_w3_mat_comp_22_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_22_T_5 = asSInt(_w3_mat_comp_22_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[22] <= _w3_mat_comp_22_T_5 @[calc6x6.scala 242:47]
          comp1[8].flag <= UInt<1>("h01") @[calc6x6.scala 230:39]
          comp2[8].flag <= UInt<1>("h01") @[calc6x6.scala 231:39]
          comp3[8].flag <= UInt<1>("h01") @[calc6x6.scala 232:39]
          comp1[8].w_a <= io.weight.comp1[8] @[calc6x6.scala 234:38]
          comp2[8].w_a <= io.weight.comp2[8] @[calc6x6.scala 235:38]
          comp3[8].w_a <= io.weight.comp3[8] @[calc6x6.scala 236:38]
          node _comp1_8_in_b_T_1 = add(reg2.mat_real[23], reg2.mat_comp[5]) @[calc6x6.scala 238:65]
          node _comp1_8_in_b_T_2 = tail(_comp1_8_in_b_T_1, 1) @[calc6x6.scala 238:65]
          node _comp1_8_in_b_T_3 = asSInt(_comp1_8_in_b_T_2) @[calc6x6.scala 238:65]
          comp1[8].in_b <= _comp1_8_in_b_T_3 @[calc6x6.scala 238:39]
          comp2[8].in_b <= reg2.mat_real[23] @[calc6x6.scala 239:39]
          comp3[8].in_b <= reg2.mat_comp[5] @[calc6x6.scala 240:39]
          node _w3_mat_real_23_T = sub(comp2[8].result, comp3[8].result) @[calc6x6.scala 241:65]
          node _w3_mat_real_23_T_1 = tail(_w3_mat_real_23_T, 1) @[calc6x6.scala 241:65]
          node _w3_mat_real_23_T_2 = asSInt(_w3_mat_real_23_T_1) @[calc6x6.scala 241:65]
          w3.mat_real[23] <= _w3_mat_real_23_T_2 @[calc6x6.scala 241:47]
          node _w3_mat_comp_23_T = sub(comp1[8].result, comp2[8].result) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_1 = tail(_w3_mat_comp_23_T, 1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_2 = asSInt(_w3_mat_comp_23_T_1) @[calc6x6.scala 242:65]
          node _w3_mat_comp_23_T_3 = sub(_w3_mat_comp_23_T_2, comp3[8].result) @[calc6x6.scala 242:81]
          node _w3_mat_comp_23_T_4 = tail(_w3_mat_comp_23_T_3, 1) @[calc6x6.scala 242:81]
          node _w3_mat_comp_23_T_5 = asSInt(_w3_mat_comp_23_T_4) @[calc6x6.scala 242:81]
          w3.mat_comp[23] <= _w3_mat_comp_23_T_5 @[calc6x6.scala 242:47]
          node _w3_mat_real_24_T = sub(comp2[3].result, comp3[3].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_24_T_1 = tail(_w3_mat_real_24_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_24_T_2 = asSInt(_w3_mat_real_24_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[24] <= _w3_mat_real_24_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_24_T = sub(asSInt(UInt<1>("h00")), comp1[3].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_1 = tail(_w3_mat_comp_24_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_2 = asSInt(_w3_mat_comp_24_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_24_T_3 = add(_w3_mat_comp_24_T_2, comp2[3].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_4 = tail(_w3_mat_comp_24_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_5 = asSInt(_w3_mat_comp_24_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_24_T_6 = add(_w3_mat_comp_24_T_5, comp3[3].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_24_T_7 = tail(_w3_mat_comp_24_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_24_T_8 = asSInt(_w3_mat_comp_24_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[24] <= _w3_mat_comp_24_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_25_T = sub(comp2[4].result, comp3[4].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_25_T_1 = tail(_w3_mat_real_25_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_25_T_2 = asSInt(_w3_mat_real_25_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[25] <= _w3_mat_real_25_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_25_T = sub(asSInt(UInt<1>("h00")), comp1[4].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_1 = tail(_w3_mat_comp_25_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_2 = asSInt(_w3_mat_comp_25_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_25_T_3 = add(_w3_mat_comp_25_T_2, comp2[4].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_4 = tail(_w3_mat_comp_25_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_5 = asSInt(_w3_mat_comp_25_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_25_T_6 = add(_w3_mat_comp_25_T_5, comp3[4].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_25_T_7 = tail(_w3_mat_comp_25_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_25_T_8 = asSInt(_w3_mat_comp_25_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[25] <= _w3_mat_comp_25_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_26_T = sub(comp2[5].result, comp3[5].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_26_T_1 = tail(_w3_mat_real_26_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_26_T_2 = asSInt(_w3_mat_real_26_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[26] <= _w3_mat_real_26_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_26_T = sub(asSInt(UInt<1>("h00")), comp1[5].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_1 = tail(_w3_mat_comp_26_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_2 = asSInt(_w3_mat_comp_26_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_26_T_3 = add(_w3_mat_comp_26_T_2, comp2[5].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_4 = tail(_w3_mat_comp_26_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_5 = asSInt(_w3_mat_comp_26_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_26_T_6 = add(_w3_mat_comp_26_T_5, comp3[5].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_26_T_7 = tail(_w3_mat_comp_26_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_26_T_8 = asSInt(_w3_mat_comp_26_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[26] <= _w3_mat_comp_26_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_27_T = sub(comp2[7].result, comp3[7].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_27_T_1 = tail(_w3_mat_real_27_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_27_T_2 = asSInt(_w3_mat_real_27_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[27] <= _w3_mat_real_27_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_27_T = sub(asSInt(UInt<1>("h00")), comp1[7].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_1 = tail(_w3_mat_comp_27_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_2 = asSInt(_w3_mat_comp_27_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_27_T_3 = add(_w3_mat_comp_27_T_2, comp2[7].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_4 = tail(_w3_mat_comp_27_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_5 = asSInt(_w3_mat_comp_27_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_27_T_6 = add(_w3_mat_comp_27_T_5, comp3[7].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_27_T_7 = tail(_w3_mat_comp_27_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_27_T_8 = asSInt(_w3_mat_comp_27_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[27] <= _w3_mat_comp_27_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_28_T = sub(comp2[6].result, comp3[6].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_28_T_1 = tail(_w3_mat_real_28_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_28_T_2 = asSInt(_w3_mat_real_28_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[28] <= _w3_mat_real_28_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_28_T = sub(asSInt(UInt<1>("h00")), comp1[6].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_1 = tail(_w3_mat_comp_28_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_2 = asSInt(_w3_mat_comp_28_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_28_T_3 = add(_w3_mat_comp_28_T_2, comp2[6].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_4 = tail(_w3_mat_comp_28_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_5 = asSInt(_w3_mat_comp_28_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_28_T_6 = add(_w3_mat_comp_28_T_5, comp3[6].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_28_T_7 = tail(_w3_mat_comp_28_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_28_T_8 = asSInt(_w3_mat_comp_28_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[28] <= _w3_mat_comp_28_T_8 @[calc6x6.scala 250:47]
          node _w3_mat_real_29_T = sub(comp2[8].result, comp3[8].result) @[calc6x6.scala 249:70]
          node _w3_mat_real_29_T_1 = tail(_w3_mat_real_29_T, 1) @[calc6x6.scala 249:70]
          node _w3_mat_real_29_T_2 = asSInt(_w3_mat_real_29_T_1) @[calc6x6.scala 249:70]
          w3.mat_real[29] <= _w3_mat_real_29_T_2 @[calc6x6.scala 249:47]
          node _w3_mat_comp_29_T = sub(asSInt(UInt<1>("h00")), comp1[8].result) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_1 = tail(_w3_mat_comp_29_T, 1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_2 = asSInt(_w3_mat_comp_29_T_1) @[calc6x6.scala 250:50]
          node _w3_mat_comp_29_T_3 = add(_w3_mat_comp_29_T_2, comp2[8].result) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_4 = tail(_w3_mat_comp_29_T_3, 1) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_5 = asSInt(_w3_mat_comp_29_T_4) @[calc6x6.scala 250:71]
          node _w3_mat_comp_29_T_6 = add(_w3_mat_comp_29_T_5, comp3[8].result) @[calc6x6.scala 250:92]
          node _w3_mat_comp_29_T_7 = tail(_w3_mat_comp_29_T_6, 1) @[calc6x6.scala 250:92]
          node _w3_mat_comp_29_T_8 = asSInt(_w3_mat_comp_29_T_7) @[calc6x6.scala 250:92]
          w3.mat_comp[29] <= _w3_mat_comp_29_T_8 @[calc6x6.scala 250:47]
          real[12].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[12].in_b <= reg2.mat_real[30] @[calc6x6.scala 225:38]
          real[12].w_a <= io.weight.real[12] @[calc6x6.scala 226:37]
          w3.mat_real[30] <= real[12].result @[calc6x6.scala 227:47]
          real[13].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[13].in_b <= reg2.mat_real[31] @[calc6x6.scala 225:38]
          real[13].w_a <= io.weight.real[13] @[calc6x6.scala 226:37]
          w3.mat_real[31] <= real[13].result @[calc6x6.scala 227:47]
          real[14].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[14].in_b <= reg2.mat_real[32] @[calc6x6.scala 225:38]
          real[14].w_a <= io.weight.real[14] @[calc6x6.scala 226:37]
          w3.mat_real[32] <= real[14].result @[calc6x6.scala 227:47]
          comp1[9].flag <= UInt<1>("h01") @[calc6x6.scala 253:39]
          comp2[9].flag <= UInt<1>("h01") @[calc6x6.scala 254:39]
          comp3[9].flag <= UInt<1>("h01") @[calc6x6.scala 255:39]
          comp1[9].w_a <= io.weight.comp1[9] @[calc6x6.scala 257:38]
          comp2[9].w_a <= io.weight.comp2[9] @[calc6x6.scala 258:38]
          comp3[9].w_a <= io.weight.comp3[9] @[calc6x6.scala 259:38]
          node _comp1_9_in_b_T_1 = add(reg2.mat_real[33], reg2.mat_comp[9]) @[calc6x6.scala 261:65]
          node _comp1_9_in_b_T_2 = tail(_comp1_9_in_b_T_1, 1) @[calc6x6.scala 261:65]
          node _comp1_9_in_b_T_3 = asSInt(_comp1_9_in_b_T_2) @[calc6x6.scala 261:65]
          comp1[9].in_b <= _comp1_9_in_b_T_3 @[calc6x6.scala 261:39]
          comp2[9].in_b <= reg2.mat_real[33] @[calc6x6.scala 262:39]
          comp3[9].in_b <= reg2.mat_comp[9] @[calc6x6.scala 263:39]
          node _w3_mat_real_33_T = sub(comp2[9].result, comp3[9].result) @[calc6x6.scala 264:65]
          node _w3_mat_real_33_T_1 = tail(_w3_mat_real_33_T, 1) @[calc6x6.scala 264:65]
          node _w3_mat_real_33_T_2 = asSInt(_w3_mat_real_33_T_1) @[calc6x6.scala 264:65]
          w3.mat_real[33] <= _w3_mat_real_33_T_2 @[calc6x6.scala 264:47]
          node _w3_mat_comp_33_T = sub(comp1[9].result, comp2[9].result) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_1 = tail(_w3_mat_comp_33_T, 1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_2 = asSInt(_w3_mat_comp_33_T_1) @[calc6x6.scala 265:65]
          node _w3_mat_comp_33_T_3 = sub(_w3_mat_comp_33_T_2, comp3[9].result) @[calc6x6.scala 265:81]
          node _w3_mat_comp_33_T_4 = tail(_w3_mat_comp_33_T_3, 1) @[calc6x6.scala 265:81]
          node _w3_mat_comp_33_T_5 = asSInt(_w3_mat_comp_33_T_4) @[calc6x6.scala 265:81]
          w3.mat_comp[33] <= _w3_mat_comp_33_T_5 @[calc6x6.scala 265:47]
          node _w3_mat_real_34_T = sub(comp2[9].result, comp3[9].result) @[calc6x6.scala 271:70]
          node _w3_mat_real_34_T_1 = tail(_w3_mat_real_34_T, 1) @[calc6x6.scala 271:70]
          node _w3_mat_real_34_T_2 = asSInt(_w3_mat_real_34_T_1) @[calc6x6.scala 271:70]
          w3.mat_real[34] <= _w3_mat_real_34_T_2 @[calc6x6.scala 271:47]
          node _w3_mat_comp_34_T = sub(asSInt(UInt<1>("h00")), comp1[9].result) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_1 = tail(_w3_mat_comp_34_T, 1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_2 = asSInt(_w3_mat_comp_34_T_1) @[calc6x6.scala 272:50]
          node _w3_mat_comp_34_T_3 = add(_w3_mat_comp_34_T_2, comp2[9].result) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_4 = tail(_w3_mat_comp_34_T_3, 1) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_5 = asSInt(_w3_mat_comp_34_T_4) @[calc6x6.scala 272:71]
          node _w3_mat_comp_34_T_6 = add(_w3_mat_comp_34_T_5, comp3[9].result) @[calc6x6.scala 272:92]
          node _w3_mat_comp_34_T_7 = tail(_w3_mat_comp_34_T_6, 1) @[calc6x6.scala 272:92]
          node _w3_mat_comp_34_T_8 = asSInt(_w3_mat_comp_34_T_7) @[calc6x6.scala 272:92]
          w3.mat_comp[34] <= _w3_mat_comp_34_T_8 @[calc6x6.scala 272:47]
          real[15].flag <= UInt<1>("h01") @[calc6x6.scala 224:38]
          real[15].in_b <= reg2.mat_real[35] @[calc6x6.scala 225:38]
          real[15].w_a <= io.weight.real[15] @[calc6x6.scala 226:37]
          w3.mat_real[35] <= real[15].result @[calc6x6.scala 227:47]
          skip @[Conditional.scala 39:67]
    
  module Calc8x8 : 
    input clock : Clock
    input reset : Reset
    output io : {flip input : {mat : SInt<16>[64], up : SInt<16>[10], down : SInt<16>[10], left : SInt<16>[8], right : SInt<16>[8]}, flip flag : UInt<2>, flip weight : {real : SInt<16>[16]}[4], output : {mat : SInt<37>[64]}, flip valid_in : UInt<1>, valid_out : UInt<1>}
    
    inst Calc6x6 of Calc6x6 @[calc8x8.scala 59:39]
    Calc6x6.clock <= clock
    Calc6x6.reset <= reset
    inst Calc6x6_1 of Calc6x6_1 @[calc8x8.scala 59:39]
    Calc6x6_1.clock <= clock
    Calc6x6_1.reset <= reset
    inst Calc6x6_2 of Calc6x6_2 @[calc8x8.scala 59:39]
    Calc6x6_2.clock <= clock
    Calc6x6_2.reset <= reset
    inst Calc6x6_3 of Calc6x6_3 @[calc8x8.scala 59:39]
    Calc6x6_3.clock <= clock
    Calc6x6_3.reset <= reset
    wire A : {flip input : {mat : SInt<16>[36]}, flip flag : UInt<2>, flip weight : {real : SInt<18>[16], comp1 : SInt<18>[10], comp2 : SInt<18>[10], comp3 : SInt<18>[10]}, output : {mat : SInt<37>[16]}, flip valid_in : UInt<1>, valid_out : UInt<1>}[4] @[calc8x8.scala 59:20]
    A[0].valid_out <= Calc6x6.io.valid_out @[calc8x8.scala 59:20]
    Calc6x6.io.valid_in <= A[0].valid_in @[calc8x8.scala 59:20]
    A[0].output.mat[0] <= Calc6x6.io.output.mat[0] @[calc8x8.scala 59:20]
    A[0].output.mat[1] <= Calc6x6.io.output.mat[1] @[calc8x8.scala 59:20]
    A[0].output.mat[2] <= Calc6x6.io.output.mat[2] @[calc8x8.scala 59:20]
    A[0].output.mat[3] <= Calc6x6.io.output.mat[3] @[calc8x8.scala 59:20]
    A[0].output.mat[4] <= Calc6x6.io.output.mat[4] @[calc8x8.scala 59:20]
    A[0].output.mat[5] <= Calc6x6.io.output.mat[5] @[calc8x8.scala 59:20]
    A[0].output.mat[6] <= Calc6x6.io.output.mat[6] @[calc8x8.scala 59:20]
    A[0].output.mat[7] <= Calc6x6.io.output.mat[7] @[calc8x8.scala 59:20]
    A[0].output.mat[8] <= Calc6x6.io.output.mat[8] @[calc8x8.scala 59:20]
    A[0].output.mat[9] <= Calc6x6.io.output.mat[9] @[calc8x8.scala 59:20]
    A[0].output.mat[10] <= Calc6x6.io.output.mat[10] @[calc8x8.scala 59:20]
    A[0].output.mat[11] <= Calc6x6.io.output.mat[11] @[calc8x8.scala 59:20]
    A[0].output.mat[12] <= Calc6x6.io.output.mat[12] @[calc8x8.scala 59:20]
    A[0].output.mat[13] <= Calc6x6.io.output.mat[13] @[calc8x8.scala 59:20]
    A[0].output.mat[14] <= Calc6x6.io.output.mat[14] @[calc8x8.scala 59:20]
    A[0].output.mat[15] <= Calc6x6.io.output.mat[15] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp3[0] <= A[0].weight.comp3[0] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp3[1] <= A[0].weight.comp3[1] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp3[2] <= A[0].weight.comp3[2] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp3[3] <= A[0].weight.comp3[3] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp3[4] <= A[0].weight.comp3[4] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp3[5] <= A[0].weight.comp3[5] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp3[6] <= A[0].weight.comp3[6] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp3[7] <= A[0].weight.comp3[7] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp3[8] <= A[0].weight.comp3[8] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp3[9] <= A[0].weight.comp3[9] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp2[0] <= A[0].weight.comp2[0] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp2[1] <= A[0].weight.comp2[1] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp2[2] <= A[0].weight.comp2[2] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp2[3] <= A[0].weight.comp2[3] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp2[4] <= A[0].weight.comp2[4] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp2[5] <= A[0].weight.comp2[5] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp2[6] <= A[0].weight.comp2[6] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp2[7] <= A[0].weight.comp2[7] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp2[8] <= A[0].weight.comp2[8] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp2[9] <= A[0].weight.comp2[9] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp1[0] <= A[0].weight.comp1[0] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp1[1] <= A[0].weight.comp1[1] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp1[2] <= A[0].weight.comp1[2] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp1[3] <= A[0].weight.comp1[3] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp1[4] <= A[0].weight.comp1[4] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp1[5] <= A[0].weight.comp1[5] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp1[6] <= A[0].weight.comp1[6] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp1[7] <= A[0].weight.comp1[7] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp1[8] <= A[0].weight.comp1[8] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.comp1[9] <= A[0].weight.comp1[9] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[0] <= A[0].weight.real[0] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[1] <= A[0].weight.real[1] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[2] <= A[0].weight.real[2] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[3] <= A[0].weight.real[3] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[4] <= A[0].weight.real[4] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[5] <= A[0].weight.real[5] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[6] <= A[0].weight.real[6] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[7] <= A[0].weight.real[7] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[8] <= A[0].weight.real[8] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[9] <= A[0].weight.real[9] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[10] <= A[0].weight.real[10] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[11] <= A[0].weight.real[11] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[12] <= A[0].weight.real[12] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[13] <= A[0].weight.real[13] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[14] <= A[0].weight.real[14] @[calc8x8.scala 59:20]
    Calc6x6.io.weight.real[15] <= A[0].weight.real[15] @[calc8x8.scala 59:20]
    Calc6x6.io.flag <= A[0].flag @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[0] <= A[0].input.mat[0] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[1] <= A[0].input.mat[1] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[2] <= A[0].input.mat[2] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[3] <= A[0].input.mat[3] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[4] <= A[0].input.mat[4] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[5] <= A[0].input.mat[5] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[6] <= A[0].input.mat[6] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[7] <= A[0].input.mat[7] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[8] <= A[0].input.mat[8] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[9] <= A[0].input.mat[9] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[10] <= A[0].input.mat[10] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[11] <= A[0].input.mat[11] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[12] <= A[0].input.mat[12] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[13] <= A[0].input.mat[13] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[14] <= A[0].input.mat[14] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[15] <= A[0].input.mat[15] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[16] <= A[0].input.mat[16] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[17] <= A[0].input.mat[17] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[18] <= A[0].input.mat[18] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[19] <= A[0].input.mat[19] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[20] <= A[0].input.mat[20] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[21] <= A[0].input.mat[21] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[22] <= A[0].input.mat[22] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[23] <= A[0].input.mat[23] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[24] <= A[0].input.mat[24] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[25] <= A[0].input.mat[25] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[26] <= A[0].input.mat[26] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[27] <= A[0].input.mat[27] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[28] <= A[0].input.mat[28] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[29] <= A[0].input.mat[29] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[30] <= A[0].input.mat[30] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[31] <= A[0].input.mat[31] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[32] <= A[0].input.mat[32] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[33] <= A[0].input.mat[33] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[34] <= A[0].input.mat[34] @[calc8x8.scala 59:20]
    Calc6x6.io.input.mat[35] <= A[0].input.mat[35] @[calc8x8.scala 59:20]
    A[1].valid_out <= Calc6x6_1.io.valid_out @[calc8x8.scala 59:20]
    Calc6x6_1.io.valid_in <= A[1].valid_in @[calc8x8.scala 59:20]
    A[1].output.mat[0] <= Calc6x6_1.io.output.mat[0] @[calc8x8.scala 59:20]
    A[1].output.mat[1] <= Calc6x6_1.io.output.mat[1] @[calc8x8.scala 59:20]
    A[1].output.mat[2] <= Calc6x6_1.io.output.mat[2] @[calc8x8.scala 59:20]
    A[1].output.mat[3] <= Calc6x6_1.io.output.mat[3] @[calc8x8.scala 59:20]
    A[1].output.mat[4] <= Calc6x6_1.io.output.mat[4] @[calc8x8.scala 59:20]
    A[1].output.mat[5] <= Calc6x6_1.io.output.mat[5] @[calc8x8.scala 59:20]
    A[1].output.mat[6] <= Calc6x6_1.io.output.mat[6] @[calc8x8.scala 59:20]
    A[1].output.mat[7] <= Calc6x6_1.io.output.mat[7] @[calc8x8.scala 59:20]
    A[1].output.mat[8] <= Calc6x6_1.io.output.mat[8] @[calc8x8.scala 59:20]
    A[1].output.mat[9] <= Calc6x6_1.io.output.mat[9] @[calc8x8.scala 59:20]
    A[1].output.mat[10] <= Calc6x6_1.io.output.mat[10] @[calc8x8.scala 59:20]
    A[1].output.mat[11] <= Calc6x6_1.io.output.mat[11] @[calc8x8.scala 59:20]
    A[1].output.mat[12] <= Calc6x6_1.io.output.mat[12] @[calc8x8.scala 59:20]
    A[1].output.mat[13] <= Calc6x6_1.io.output.mat[13] @[calc8x8.scala 59:20]
    A[1].output.mat[14] <= Calc6x6_1.io.output.mat[14] @[calc8x8.scala 59:20]
    A[1].output.mat[15] <= Calc6x6_1.io.output.mat[15] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp3[0] <= A[1].weight.comp3[0] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp3[1] <= A[1].weight.comp3[1] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp3[2] <= A[1].weight.comp3[2] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp3[3] <= A[1].weight.comp3[3] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp3[4] <= A[1].weight.comp3[4] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp3[5] <= A[1].weight.comp3[5] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp3[6] <= A[1].weight.comp3[6] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp3[7] <= A[1].weight.comp3[7] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp3[8] <= A[1].weight.comp3[8] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp3[9] <= A[1].weight.comp3[9] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp2[0] <= A[1].weight.comp2[0] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp2[1] <= A[1].weight.comp2[1] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp2[2] <= A[1].weight.comp2[2] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp2[3] <= A[1].weight.comp2[3] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp2[4] <= A[1].weight.comp2[4] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp2[5] <= A[1].weight.comp2[5] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp2[6] <= A[1].weight.comp2[6] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp2[7] <= A[1].weight.comp2[7] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp2[8] <= A[1].weight.comp2[8] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp2[9] <= A[1].weight.comp2[9] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp1[0] <= A[1].weight.comp1[0] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp1[1] <= A[1].weight.comp1[1] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp1[2] <= A[1].weight.comp1[2] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp1[3] <= A[1].weight.comp1[3] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp1[4] <= A[1].weight.comp1[4] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp1[5] <= A[1].weight.comp1[5] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp1[6] <= A[1].weight.comp1[6] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp1[7] <= A[1].weight.comp1[7] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp1[8] <= A[1].weight.comp1[8] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.comp1[9] <= A[1].weight.comp1[9] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[0] <= A[1].weight.real[0] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[1] <= A[1].weight.real[1] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[2] <= A[1].weight.real[2] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[3] <= A[1].weight.real[3] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[4] <= A[1].weight.real[4] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[5] <= A[1].weight.real[5] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[6] <= A[1].weight.real[6] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[7] <= A[1].weight.real[7] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[8] <= A[1].weight.real[8] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[9] <= A[1].weight.real[9] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[10] <= A[1].weight.real[10] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[11] <= A[1].weight.real[11] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[12] <= A[1].weight.real[12] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[13] <= A[1].weight.real[13] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[14] <= A[1].weight.real[14] @[calc8x8.scala 59:20]
    Calc6x6_1.io.weight.real[15] <= A[1].weight.real[15] @[calc8x8.scala 59:20]
    Calc6x6_1.io.flag <= A[1].flag @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[0] <= A[1].input.mat[0] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[1] <= A[1].input.mat[1] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[2] <= A[1].input.mat[2] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[3] <= A[1].input.mat[3] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[4] <= A[1].input.mat[4] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[5] <= A[1].input.mat[5] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[6] <= A[1].input.mat[6] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[7] <= A[1].input.mat[7] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[8] <= A[1].input.mat[8] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[9] <= A[1].input.mat[9] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[10] <= A[1].input.mat[10] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[11] <= A[1].input.mat[11] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[12] <= A[1].input.mat[12] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[13] <= A[1].input.mat[13] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[14] <= A[1].input.mat[14] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[15] <= A[1].input.mat[15] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[16] <= A[1].input.mat[16] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[17] <= A[1].input.mat[17] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[18] <= A[1].input.mat[18] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[19] <= A[1].input.mat[19] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[20] <= A[1].input.mat[20] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[21] <= A[1].input.mat[21] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[22] <= A[1].input.mat[22] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[23] <= A[1].input.mat[23] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[24] <= A[1].input.mat[24] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[25] <= A[1].input.mat[25] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[26] <= A[1].input.mat[26] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[27] <= A[1].input.mat[27] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[28] <= A[1].input.mat[28] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[29] <= A[1].input.mat[29] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[30] <= A[1].input.mat[30] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[31] <= A[1].input.mat[31] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[32] <= A[1].input.mat[32] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[33] <= A[1].input.mat[33] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[34] <= A[1].input.mat[34] @[calc8x8.scala 59:20]
    Calc6x6_1.io.input.mat[35] <= A[1].input.mat[35] @[calc8x8.scala 59:20]
    A[2].valid_out <= Calc6x6_2.io.valid_out @[calc8x8.scala 59:20]
    Calc6x6_2.io.valid_in <= A[2].valid_in @[calc8x8.scala 59:20]
    A[2].output.mat[0] <= Calc6x6_2.io.output.mat[0] @[calc8x8.scala 59:20]
    A[2].output.mat[1] <= Calc6x6_2.io.output.mat[1] @[calc8x8.scala 59:20]
    A[2].output.mat[2] <= Calc6x6_2.io.output.mat[2] @[calc8x8.scala 59:20]
    A[2].output.mat[3] <= Calc6x6_2.io.output.mat[3] @[calc8x8.scala 59:20]
    A[2].output.mat[4] <= Calc6x6_2.io.output.mat[4] @[calc8x8.scala 59:20]
    A[2].output.mat[5] <= Calc6x6_2.io.output.mat[5] @[calc8x8.scala 59:20]
    A[2].output.mat[6] <= Calc6x6_2.io.output.mat[6] @[calc8x8.scala 59:20]
    A[2].output.mat[7] <= Calc6x6_2.io.output.mat[7] @[calc8x8.scala 59:20]
    A[2].output.mat[8] <= Calc6x6_2.io.output.mat[8] @[calc8x8.scala 59:20]
    A[2].output.mat[9] <= Calc6x6_2.io.output.mat[9] @[calc8x8.scala 59:20]
    A[2].output.mat[10] <= Calc6x6_2.io.output.mat[10] @[calc8x8.scala 59:20]
    A[2].output.mat[11] <= Calc6x6_2.io.output.mat[11] @[calc8x8.scala 59:20]
    A[2].output.mat[12] <= Calc6x6_2.io.output.mat[12] @[calc8x8.scala 59:20]
    A[2].output.mat[13] <= Calc6x6_2.io.output.mat[13] @[calc8x8.scala 59:20]
    A[2].output.mat[14] <= Calc6x6_2.io.output.mat[14] @[calc8x8.scala 59:20]
    A[2].output.mat[15] <= Calc6x6_2.io.output.mat[15] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp3[0] <= A[2].weight.comp3[0] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp3[1] <= A[2].weight.comp3[1] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp3[2] <= A[2].weight.comp3[2] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp3[3] <= A[2].weight.comp3[3] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp3[4] <= A[2].weight.comp3[4] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp3[5] <= A[2].weight.comp3[5] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp3[6] <= A[2].weight.comp3[6] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp3[7] <= A[2].weight.comp3[7] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp3[8] <= A[2].weight.comp3[8] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp3[9] <= A[2].weight.comp3[9] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp2[0] <= A[2].weight.comp2[0] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp2[1] <= A[2].weight.comp2[1] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp2[2] <= A[2].weight.comp2[2] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp2[3] <= A[2].weight.comp2[3] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp2[4] <= A[2].weight.comp2[4] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp2[5] <= A[2].weight.comp2[5] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp2[6] <= A[2].weight.comp2[6] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp2[7] <= A[2].weight.comp2[7] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp2[8] <= A[2].weight.comp2[8] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp2[9] <= A[2].weight.comp2[9] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp1[0] <= A[2].weight.comp1[0] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp1[1] <= A[2].weight.comp1[1] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp1[2] <= A[2].weight.comp1[2] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp1[3] <= A[2].weight.comp1[3] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp1[4] <= A[2].weight.comp1[4] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp1[5] <= A[2].weight.comp1[5] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp1[6] <= A[2].weight.comp1[6] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp1[7] <= A[2].weight.comp1[7] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp1[8] <= A[2].weight.comp1[8] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.comp1[9] <= A[2].weight.comp1[9] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[0] <= A[2].weight.real[0] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[1] <= A[2].weight.real[1] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[2] <= A[2].weight.real[2] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[3] <= A[2].weight.real[3] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[4] <= A[2].weight.real[4] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[5] <= A[2].weight.real[5] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[6] <= A[2].weight.real[6] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[7] <= A[2].weight.real[7] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[8] <= A[2].weight.real[8] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[9] <= A[2].weight.real[9] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[10] <= A[2].weight.real[10] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[11] <= A[2].weight.real[11] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[12] <= A[2].weight.real[12] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[13] <= A[2].weight.real[13] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[14] <= A[2].weight.real[14] @[calc8x8.scala 59:20]
    Calc6x6_2.io.weight.real[15] <= A[2].weight.real[15] @[calc8x8.scala 59:20]
    Calc6x6_2.io.flag <= A[2].flag @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[0] <= A[2].input.mat[0] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[1] <= A[2].input.mat[1] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[2] <= A[2].input.mat[2] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[3] <= A[2].input.mat[3] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[4] <= A[2].input.mat[4] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[5] <= A[2].input.mat[5] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[6] <= A[2].input.mat[6] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[7] <= A[2].input.mat[7] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[8] <= A[2].input.mat[8] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[9] <= A[2].input.mat[9] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[10] <= A[2].input.mat[10] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[11] <= A[2].input.mat[11] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[12] <= A[2].input.mat[12] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[13] <= A[2].input.mat[13] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[14] <= A[2].input.mat[14] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[15] <= A[2].input.mat[15] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[16] <= A[2].input.mat[16] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[17] <= A[2].input.mat[17] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[18] <= A[2].input.mat[18] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[19] <= A[2].input.mat[19] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[20] <= A[2].input.mat[20] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[21] <= A[2].input.mat[21] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[22] <= A[2].input.mat[22] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[23] <= A[2].input.mat[23] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[24] <= A[2].input.mat[24] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[25] <= A[2].input.mat[25] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[26] <= A[2].input.mat[26] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[27] <= A[2].input.mat[27] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[28] <= A[2].input.mat[28] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[29] <= A[2].input.mat[29] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[30] <= A[2].input.mat[30] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[31] <= A[2].input.mat[31] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[32] <= A[2].input.mat[32] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[33] <= A[2].input.mat[33] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[34] <= A[2].input.mat[34] @[calc8x8.scala 59:20]
    Calc6x6_2.io.input.mat[35] <= A[2].input.mat[35] @[calc8x8.scala 59:20]
    A[3].valid_out <= Calc6x6_3.io.valid_out @[calc8x8.scala 59:20]
    Calc6x6_3.io.valid_in <= A[3].valid_in @[calc8x8.scala 59:20]
    A[3].output.mat[0] <= Calc6x6_3.io.output.mat[0] @[calc8x8.scala 59:20]
    A[3].output.mat[1] <= Calc6x6_3.io.output.mat[1] @[calc8x8.scala 59:20]
    A[3].output.mat[2] <= Calc6x6_3.io.output.mat[2] @[calc8x8.scala 59:20]
    A[3].output.mat[3] <= Calc6x6_3.io.output.mat[3] @[calc8x8.scala 59:20]
    A[3].output.mat[4] <= Calc6x6_3.io.output.mat[4] @[calc8x8.scala 59:20]
    A[3].output.mat[5] <= Calc6x6_3.io.output.mat[5] @[calc8x8.scala 59:20]
    A[3].output.mat[6] <= Calc6x6_3.io.output.mat[6] @[calc8x8.scala 59:20]
    A[3].output.mat[7] <= Calc6x6_3.io.output.mat[7] @[calc8x8.scala 59:20]
    A[3].output.mat[8] <= Calc6x6_3.io.output.mat[8] @[calc8x8.scala 59:20]
    A[3].output.mat[9] <= Calc6x6_3.io.output.mat[9] @[calc8x8.scala 59:20]
    A[3].output.mat[10] <= Calc6x6_3.io.output.mat[10] @[calc8x8.scala 59:20]
    A[3].output.mat[11] <= Calc6x6_3.io.output.mat[11] @[calc8x8.scala 59:20]
    A[3].output.mat[12] <= Calc6x6_3.io.output.mat[12] @[calc8x8.scala 59:20]
    A[3].output.mat[13] <= Calc6x6_3.io.output.mat[13] @[calc8x8.scala 59:20]
    A[3].output.mat[14] <= Calc6x6_3.io.output.mat[14] @[calc8x8.scala 59:20]
    A[3].output.mat[15] <= Calc6x6_3.io.output.mat[15] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp3[0] <= A[3].weight.comp3[0] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp3[1] <= A[3].weight.comp3[1] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp3[2] <= A[3].weight.comp3[2] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp3[3] <= A[3].weight.comp3[3] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp3[4] <= A[3].weight.comp3[4] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp3[5] <= A[3].weight.comp3[5] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp3[6] <= A[3].weight.comp3[6] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp3[7] <= A[3].weight.comp3[7] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp3[8] <= A[3].weight.comp3[8] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp3[9] <= A[3].weight.comp3[9] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp2[0] <= A[3].weight.comp2[0] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp2[1] <= A[3].weight.comp2[1] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp2[2] <= A[3].weight.comp2[2] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp2[3] <= A[3].weight.comp2[3] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp2[4] <= A[3].weight.comp2[4] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp2[5] <= A[3].weight.comp2[5] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp2[6] <= A[3].weight.comp2[6] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp2[7] <= A[3].weight.comp2[7] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp2[8] <= A[3].weight.comp2[8] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp2[9] <= A[3].weight.comp2[9] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp1[0] <= A[3].weight.comp1[0] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp1[1] <= A[3].weight.comp1[1] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp1[2] <= A[3].weight.comp1[2] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp1[3] <= A[3].weight.comp1[3] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp1[4] <= A[3].weight.comp1[4] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp1[5] <= A[3].weight.comp1[5] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp1[6] <= A[3].weight.comp1[6] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp1[7] <= A[3].weight.comp1[7] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp1[8] <= A[3].weight.comp1[8] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.comp1[9] <= A[3].weight.comp1[9] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[0] <= A[3].weight.real[0] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[1] <= A[3].weight.real[1] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[2] <= A[3].weight.real[2] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[3] <= A[3].weight.real[3] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[4] <= A[3].weight.real[4] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[5] <= A[3].weight.real[5] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[6] <= A[3].weight.real[6] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[7] <= A[3].weight.real[7] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[8] <= A[3].weight.real[8] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[9] <= A[3].weight.real[9] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[10] <= A[3].weight.real[10] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[11] <= A[3].weight.real[11] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[12] <= A[3].weight.real[12] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[13] <= A[3].weight.real[13] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[14] <= A[3].weight.real[14] @[calc8x8.scala 59:20]
    Calc6x6_3.io.weight.real[15] <= A[3].weight.real[15] @[calc8x8.scala 59:20]
    Calc6x6_3.io.flag <= A[3].flag @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[0] <= A[3].input.mat[0] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[1] <= A[3].input.mat[1] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[2] <= A[3].input.mat[2] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[3] <= A[3].input.mat[3] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[4] <= A[3].input.mat[4] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[5] <= A[3].input.mat[5] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[6] <= A[3].input.mat[6] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[7] <= A[3].input.mat[7] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[8] <= A[3].input.mat[8] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[9] <= A[3].input.mat[9] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[10] <= A[3].input.mat[10] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[11] <= A[3].input.mat[11] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[12] <= A[3].input.mat[12] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[13] <= A[3].input.mat[13] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[14] <= A[3].input.mat[14] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[15] <= A[3].input.mat[15] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[16] <= A[3].input.mat[16] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[17] <= A[3].input.mat[17] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[18] <= A[3].input.mat[18] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[19] <= A[3].input.mat[19] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[20] <= A[3].input.mat[20] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[21] <= A[3].input.mat[21] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[22] <= A[3].input.mat[22] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[23] <= A[3].input.mat[23] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[24] <= A[3].input.mat[24] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[25] <= A[3].input.mat[25] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[26] <= A[3].input.mat[26] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[27] <= A[3].input.mat[27] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[28] <= A[3].input.mat[28] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[29] <= A[3].input.mat[29] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[30] <= A[3].input.mat[30] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[31] <= A[3].input.mat[31] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[32] <= A[3].input.mat[32] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[33] <= A[3].input.mat[33] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[34] <= A[3].input.mat[34] @[calc8x8.scala 59:20]
    Calc6x6_3.io.input.mat[35] <= A[3].input.mat[35] @[calc8x8.scala 59:20]
    wire _A_0_input_WIRE : {mat : SInt<16>[36]} @[calc8x8.scala 61:35]
    node _A_0_input_T = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[0] <= _A_0_input_T @[calc8x8.scala 61:35]
    node _A_0_input_T_1 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[1] <= _A_0_input_T_1 @[calc8x8.scala 61:35]
    node _A_0_input_T_2 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[2] <= _A_0_input_T_2 @[calc8x8.scala 61:35]
    node _A_0_input_T_3 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[3] <= _A_0_input_T_3 @[calc8x8.scala 61:35]
    node _A_0_input_T_4 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[4] <= _A_0_input_T_4 @[calc8x8.scala 61:35]
    node _A_0_input_T_5 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[5] <= _A_0_input_T_5 @[calc8x8.scala 61:35]
    node _A_0_input_T_6 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[6] <= _A_0_input_T_6 @[calc8x8.scala 61:35]
    node _A_0_input_T_7 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[7] <= _A_0_input_T_7 @[calc8x8.scala 61:35]
    node _A_0_input_T_8 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[8] <= _A_0_input_T_8 @[calc8x8.scala 61:35]
    node _A_0_input_T_9 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[9] <= _A_0_input_T_9 @[calc8x8.scala 61:35]
    node _A_0_input_T_10 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[10] <= _A_0_input_T_10 @[calc8x8.scala 61:35]
    node _A_0_input_T_11 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[11] <= _A_0_input_T_11 @[calc8x8.scala 61:35]
    node _A_0_input_T_12 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[12] <= _A_0_input_T_12 @[calc8x8.scala 61:35]
    node _A_0_input_T_13 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[13] <= _A_0_input_T_13 @[calc8x8.scala 61:35]
    node _A_0_input_T_14 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[14] <= _A_0_input_T_14 @[calc8x8.scala 61:35]
    node _A_0_input_T_15 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[15] <= _A_0_input_T_15 @[calc8x8.scala 61:35]
    node _A_0_input_T_16 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[16] <= _A_0_input_T_16 @[calc8x8.scala 61:35]
    node _A_0_input_T_17 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[17] <= _A_0_input_T_17 @[calc8x8.scala 61:35]
    node _A_0_input_T_18 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[18] <= _A_0_input_T_18 @[calc8x8.scala 61:35]
    node _A_0_input_T_19 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[19] <= _A_0_input_T_19 @[calc8x8.scala 61:35]
    node _A_0_input_T_20 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[20] <= _A_0_input_T_20 @[calc8x8.scala 61:35]
    node _A_0_input_T_21 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[21] <= _A_0_input_T_21 @[calc8x8.scala 61:35]
    node _A_0_input_T_22 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[22] <= _A_0_input_T_22 @[calc8x8.scala 61:35]
    node _A_0_input_T_23 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[23] <= _A_0_input_T_23 @[calc8x8.scala 61:35]
    node _A_0_input_T_24 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[24] <= _A_0_input_T_24 @[calc8x8.scala 61:35]
    node _A_0_input_T_25 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[25] <= _A_0_input_T_25 @[calc8x8.scala 61:35]
    node _A_0_input_T_26 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[26] <= _A_0_input_T_26 @[calc8x8.scala 61:35]
    node _A_0_input_T_27 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[27] <= _A_0_input_T_27 @[calc8x8.scala 61:35]
    node _A_0_input_T_28 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[28] <= _A_0_input_T_28 @[calc8x8.scala 61:35]
    node _A_0_input_T_29 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[29] <= _A_0_input_T_29 @[calc8x8.scala 61:35]
    node _A_0_input_T_30 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[30] <= _A_0_input_T_30 @[calc8x8.scala 61:35]
    node _A_0_input_T_31 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[31] <= _A_0_input_T_31 @[calc8x8.scala 61:35]
    node _A_0_input_T_32 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[32] <= _A_0_input_T_32 @[calc8x8.scala 61:35]
    node _A_0_input_T_33 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[33] <= _A_0_input_T_33 @[calc8x8.scala 61:35]
    node _A_0_input_T_34 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[34] <= _A_0_input_T_34 @[calc8x8.scala 61:35]
    node _A_0_input_T_35 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_0_input_WIRE.mat[35] <= _A_0_input_T_35 @[calc8x8.scala 61:35]
    A[0].input.mat[0] <= _A_0_input_WIRE.mat[0] @[calc8x8.scala 61:20]
    A[0].input.mat[1] <= _A_0_input_WIRE.mat[1] @[calc8x8.scala 61:20]
    A[0].input.mat[2] <= _A_0_input_WIRE.mat[2] @[calc8x8.scala 61:20]
    A[0].input.mat[3] <= _A_0_input_WIRE.mat[3] @[calc8x8.scala 61:20]
    A[0].input.mat[4] <= _A_0_input_WIRE.mat[4] @[calc8x8.scala 61:20]
    A[0].input.mat[5] <= _A_0_input_WIRE.mat[5] @[calc8x8.scala 61:20]
    A[0].input.mat[6] <= _A_0_input_WIRE.mat[6] @[calc8x8.scala 61:20]
    A[0].input.mat[7] <= _A_0_input_WIRE.mat[7] @[calc8x8.scala 61:20]
    A[0].input.mat[8] <= _A_0_input_WIRE.mat[8] @[calc8x8.scala 61:20]
    A[0].input.mat[9] <= _A_0_input_WIRE.mat[9] @[calc8x8.scala 61:20]
    A[0].input.mat[10] <= _A_0_input_WIRE.mat[10] @[calc8x8.scala 61:20]
    A[0].input.mat[11] <= _A_0_input_WIRE.mat[11] @[calc8x8.scala 61:20]
    A[0].input.mat[12] <= _A_0_input_WIRE.mat[12] @[calc8x8.scala 61:20]
    A[0].input.mat[13] <= _A_0_input_WIRE.mat[13] @[calc8x8.scala 61:20]
    A[0].input.mat[14] <= _A_0_input_WIRE.mat[14] @[calc8x8.scala 61:20]
    A[0].input.mat[15] <= _A_0_input_WIRE.mat[15] @[calc8x8.scala 61:20]
    A[0].input.mat[16] <= _A_0_input_WIRE.mat[16] @[calc8x8.scala 61:20]
    A[0].input.mat[17] <= _A_0_input_WIRE.mat[17] @[calc8x8.scala 61:20]
    A[0].input.mat[18] <= _A_0_input_WIRE.mat[18] @[calc8x8.scala 61:20]
    A[0].input.mat[19] <= _A_0_input_WIRE.mat[19] @[calc8x8.scala 61:20]
    A[0].input.mat[20] <= _A_0_input_WIRE.mat[20] @[calc8x8.scala 61:20]
    A[0].input.mat[21] <= _A_0_input_WIRE.mat[21] @[calc8x8.scala 61:20]
    A[0].input.mat[22] <= _A_0_input_WIRE.mat[22] @[calc8x8.scala 61:20]
    A[0].input.mat[23] <= _A_0_input_WIRE.mat[23] @[calc8x8.scala 61:20]
    A[0].input.mat[24] <= _A_0_input_WIRE.mat[24] @[calc8x8.scala 61:20]
    A[0].input.mat[25] <= _A_0_input_WIRE.mat[25] @[calc8x8.scala 61:20]
    A[0].input.mat[26] <= _A_0_input_WIRE.mat[26] @[calc8x8.scala 61:20]
    A[0].input.mat[27] <= _A_0_input_WIRE.mat[27] @[calc8x8.scala 61:20]
    A[0].input.mat[28] <= _A_0_input_WIRE.mat[28] @[calc8x8.scala 61:20]
    A[0].input.mat[29] <= _A_0_input_WIRE.mat[29] @[calc8x8.scala 61:20]
    A[0].input.mat[30] <= _A_0_input_WIRE.mat[30] @[calc8x8.scala 61:20]
    A[0].input.mat[31] <= _A_0_input_WIRE.mat[31] @[calc8x8.scala 61:20]
    A[0].input.mat[32] <= _A_0_input_WIRE.mat[32] @[calc8x8.scala 61:20]
    A[0].input.mat[33] <= _A_0_input_WIRE.mat[33] @[calc8x8.scala 61:20]
    A[0].input.mat[34] <= _A_0_input_WIRE.mat[34] @[calc8x8.scala 61:20]
    A[0].input.mat[35] <= _A_0_input_WIRE.mat[35] @[calc8x8.scala 61:20]
    wire _A_0_flag_WIRE : UInt<2> @[calc8x8.scala 62:34]
    _A_0_flag_WIRE <= UInt<1>("h00") @[calc8x8.scala 62:34]
    A[0].flag <= _A_0_flag_WIRE @[calc8x8.scala 62:19]
    wire _A_0_weight_WIRE : {real : SInt<18>[16], comp1 : SInt<18>[10], comp2 : SInt<18>[10], comp3 : SInt<18>[10]} @[calc8x8.scala 63:36]
    node _A_0_weight_T = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp3[0] <= _A_0_weight_T @[calc8x8.scala 63:36]
    node _A_0_weight_T_1 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp3[1] <= _A_0_weight_T_1 @[calc8x8.scala 63:36]
    node _A_0_weight_T_2 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp3[2] <= _A_0_weight_T_2 @[calc8x8.scala 63:36]
    node _A_0_weight_T_3 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp3[3] <= _A_0_weight_T_3 @[calc8x8.scala 63:36]
    node _A_0_weight_T_4 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp3[4] <= _A_0_weight_T_4 @[calc8x8.scala 63:36]
    node _A_0_weight_T_5 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp3[5] <= _A_0_weight_T_5 @[calc8x8.scala 63:36]
    node _A_0_weight_T_6 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp3[6] <= _A_0_weight_T_6 @[calc8x8.scala 63:36]
    node _A_0_weight_T_7 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp3[7] <= _A_0_weight_T_7 @[calc8x8.scala 63:36]
    node _A_0_weight_T_8 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp3[8] <= _A_0_weight_T_8 @[calc8x8.scala 63:36]
    node _A_0_weight_T_9 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp3[9] <= _A_0_weight_T_9 @[calc8x8.scala 63:36]
    node _A_0_weight_T_10 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp2[0] <= _A_0_weight_T_10 @[calc8x8.scala 63:36]
    node _A_0_weight_T_11 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp2[1] <= _A_0_weight_T_11 @[calc8x8.scala 63:36]
    node _A_0_weight_T_12 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp2[2] <= _A_0_weight_T_12 @[calc8x8.scala 63:36]
    node _A_0_weight_T_13 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp2[3] <= _A_0_weight_T_13 @[calc8x8.scala 63:36]
    node _A_0_weight_T_14 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp2[4] <= _A_0_weight_T_14 @[calc8x8.scala 63:36]
    node _A_0_weight_T_15 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp2[5] <= _A_0_weight_T_15 @[calc8x8.scala 63:36]
    node _A_0_weight_T_16 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp2[6] <= _A_0_weight_T_16 @[calc8x8.scala 63:36]
    node _A_0_weight_T_17 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp2[7] <= _A_0_weight_T_17 @[calc8x8.scala 63:36]
    node _A_0_weight_T_18 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp2[8] <= _A_0_weight_T_18 @[calc8x8.scala 63:36]
    node _A_0_weight_T_19 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp2[9] <= _A_0_weight_T_19 @[calc8x8.scala 63:36]
    node _A_0_weight_T_20 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp1[0] <= _A_0_weight_T_20 @[calc8x8.scala 63:36]
    node _A_0_weight_T_21 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp1[1] <= _A_0_weight_T_21 @[calc8x8.scala 63:36]
    node _A_0_weight_T_22 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp1[2] <= _A_0_weight_T_22 @[calc8x8.scala 63:36]
    node _A_0_weight_T_23 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp1[3] <= _A_0_weight_T_23 @[calc8x8.scala 63:36]
    node _A_0_weight_T_24 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp1[4] <= _A_0_weight_T_24 @[calc8x8.scala 63:36]
    node _A_0_weight_T_25 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp1[5] <= _A_0_weight_T_25 @[calc8x8.scala 63:36]
    node _A_0_weight_T_26 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp1[6] <= _A_0_weight_T_26 @[calc8x8.scala 63:36]
    node _A_0_weight_T_27 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp1[7] <= _A_0_weight_T_27 @[calc8x8.scala 63:36]
    node _A_0_weight_T_28 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp1[8] <= _A_0_weight_T_28 @[calc8x8.scala 63:36]
    node _A_0_weight_T_29 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.comp1[9] <= _A_0_weight_T_29 @[calc8x8.scala 63:36]
    node _A_0_weight_T_30 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[0] <= _A_0_weight_T_30 @[calc8x8.scala 63:36]
    node _A_0_weight_T_31 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[1] <= _A_0_weight_T_31 @[calc8x8.scala 63:36]
    node _A_0_weight_T_32 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[2] <= _A_0_weight_T_32 @[calc8x8.scala 63:36]
    node _A_0_weight_T_33 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[3] <= _A_0_weight_T_33 @[calc8x8.scala 63:36]
    node _A_0_weight_T_34 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[4] <= _A_0_weight_T_34 @[calc8x8.scala 63:36]
    node _A_0_weight_T_35 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[5] <= _A_0_weight_T_35 @[calc8x8.scala 63:36]
    node _A_0_weight_T_36 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[6] <= _A_0_weight_T_36 @[calc8x8.scala 63:36]
    node _A_0_weight_T_37 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[7] <= _A_0_weight_T_37 @[calc8x8.scala 63:36]
    node _A_0_weight_T_38 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[8] <= _A_0_weight_T_38 @[calc8x8.scala 63:36]
    node _A_0_weight_T_39 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[9] <= _A_0_weight_T_39 @[calc8x8.scala 63:36]
    node _A_0_weight_T_40 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[10] <= _A_0_weight_T_40 @[calc8x8.scala 63:36]
    node _A_0_weight_T_41 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[11] <= _A_0_weight_T_41 @[calc8x8.scala 63:36]
    node _A_0_weight_T_42 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[12] <= _A_0_weight_T_42 @[calc8x8.scala 63:36]
    node _A_0_weight_T_43 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[13] <= _A_0_weight_T_43 @[calc8x8.scala 63:36]
    node _A_0_weight_T_44 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[14] <= _A_0_weight_T_44 @[calc8x8.scala 63:36]
    node _A_0_weight_T_45 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_0_weight_WIRE.real[15] <= _A_0_weight_T_45 @[calc8x8.scala 63:36]
    A[0].weight.comp3[0] <= _A_0_weight_WIRE.comp3[0] @[calc8x8.scala 63:21]
    A[0].weight.comp3[1] <= _A_0_weight_WIRE.comp3[1] @[calc8x8.scala 63:21]
    A[0].weight.comp3[2] <= _A_0_weight_WIRE.comp3[2] @[calc8x8.scala 63:21]
    A[0].weight.comp3[3] <= _A_0_weight_WIRE.comp3[3] @[calc8x8.scala 63:21]
    A[0].weight.comp3[4] <= _A_0_weight_WIRE.comp3[4] @[calc8x8.scala 63:21]
    A[0].weight.comp3[5] <= _A_0_weight_WIRE.comp3[5] @[calc8x8.scala 63:21]
    A[0].weight.comp3[6] <= _A_0_weight_WIRE.comp3[6] @[calc8x8.scala 63:21]
    A[0].weight.comp3[7] <= _A_0_weight_WIRE.comp3[7] @[calc8x8.scala 63:21]
    A[0].weight.comp3[8] <= _A_0_weight_WIRE.comp3[8] @[calc8x8.scala 63:21]
    A[0].weight.comp3[9] <= _A_0_weight_WIRE.comp3[9] @[calc8x8.scala 63:21]
    A[0].weight.comp2[0] <= _A_0_weight_WIRE.comp2[0] @[calc8x8.scala 63:21]
    A[0].weight.comp2[1] <= _A_0_weight_WIRE.comp2[1] @[calc8x8.scala 63:21]
    A[0].weight.comp2[2] <= _A_0_weight_WIRE.comp2[2] @[calc8x8.scala 63:21]
    A[0].weight.comp2[3] <= _A_0_weight_WIRE.comp2[3] @[calc8x8.scala 63:21]
    A[0].weight.comp2[4] <= _A_0_weight_WIRE.comp2[4] @[calc8x8.scala 63:21]
    A[0].weight.comp2[5] <= _A_0_weight_WIRE.comp2[5] @[calc8x8.scala 63:21]
    A[0].weight.comp2[6] <= _A_0_weight_WIRE.comp2[6] @[calc8x8.scala 63:21]
    A[0].weight.comp2[7] <= _A_0_weight_WIRE.comp2[7] @[calc8x8.scala 63:21]
    A[0].weight.comp2[8] <= _A_0_weight_WIRE.comp2[8] @[calc8x8.scala 63:21]
    A[0].weight.comp2[9] <= _A_0_weight_WIRE.comp2[9] @[calc8x8.scala 63:21]
    A[0].weight.comp1[0] <= _A_0_weight_WIRE.comp1[0] @[calc8x8.scala 63:21]
    A[0].weight.comp1[1] <= _A_0_weight_WIRE.comp1[1] @[calc8x8.scala 63:21]
    A[0].weight.comp1[2] <= _A_0_weight_WIRE.comp1[2] @[calc8x8.scala 63:21]
    A[0].weight.comp1[3] <= _A_0_weight_WIRE.comp1[3] @[calc8x8.scala 63:21]
    A[0].weight.comp1[4] <= _A_0_weight_WIRE.comp1[4] @[calc8x8.scala 63:21]
    A[0].weight.comp1[5] <= _A_0_weight_WIRE.comp1[5] @[calc8x8.scala 63:21]
    A[0].weight.comp1[6] <= _A_0_weight_WIRE.comp1[6] @[calc8x8.scala 63:21]
    A[0].weight.comp1[7] <= _A_0_weight_WIRE.comp1[7] @[calc8x8.scala 63:21]
    A[0].weight.comp1[8] <= _A_0_weight_WIRE.comp1[8] @[calc8x8.scala 63:21]
    A[0].weight.comp1[9] <= _A_0_weight_WIRE.comp1[9] @[calc8x8.scala 63:21]
    A[0].weight.real[0] <= _A_0_weight_WIRE.real[0] @[calc8x8.scala 63:21]
    A[0].weight.real[1] <= _A_0_weight_WIRE.real[1] @[calc8x8.scala 63:21]
    A[0].weight.real[2] <= _A_0_weight_WIRE.real[2] @[calc8x8.scala 63:21]
    A[0].weight.real[3] <= _A_0_weight_WIRE.real[3] @[calc8x8.scala 63:21]
    A[0].weight.real[4] <= _A_0_weight_WIRE.real[4] @[calc8x8.scala 63:21]
    A[0].weight.real[5] <= _A_0_weight_WIRE.real[5] @[calc8x8.scala 63:21]
    A[0].weight.real[6] <= _A_0_weight_WIRE.real[6] @[calc8x8.scala 63:21]
    A[0].weight.real[7] <= _A_0_weight_WIRE.real[7] @[calc8x8.scala 63:21]
    A[0].weight.real[8] <= _A_0_weight_WIRE.real[8] @[calc8x8.scala 63:21]
    A[0].weight.real[9] <= _A_0_weight_WIRE.real[9] @[calc8x8.scala 63:21]
    A[0].weight.real[10] <= _A_0_weight_WIRE.real[10] @[calc8x8.scala 63:21]
    A[0].weight.real[11] <= _A_0_weight_WIRE.real[11] @[calc8x8.scala 63:21]
    A[0].weight.real[12] <= _A_0_weight_WIRE.real[12] @[calc8x8.scala 63:21]
    A[0].weight.real[13] <= _A_0_weight_WIRE.real[13] @[calc8x8.scala 63:21]
    A[0].weight.real[14] <= _A_0_weight_WIRE.real[14] @[calc8x8.scala 63:21]
    A[0].weight.real[15] <= _A_0_weight_WIRE.real[15] @[calc8x8.scala 63:21]
    A[0].valid_in <= UInt<1>("h00") @[calc8x8.scala 64:23]
    wire _A_1_input_WIRE : {mat : SInt<16>[36]} @[calc8x8.scala 61:35]
    node _A_1_input_T = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[0] <= _A_1_input_T @[calc8x8.scala 61:35]
    node _A_1_input_T_1 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[1] <= _A_1_input_T_1 @[calc8x8.scala 61:35]
    node _A_1_input_T_2 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[2] <= _A_1_input_T_2 @[calc8x8.scala 61:35]
    node _A_1_input_T_3 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[3] <= _A_1_input_T_3 @[calc8x8.scala 61:35]
    node _A_1_input_T_4 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[4] <= _A_1_input_T_4 @[calc8x8.scala 61:35]
    node _A_1_input_T_5 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[5] <= _A_1_input_T_5 @[calc8x8.scala 61:35]
    node _A_1_input_T_6 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[6] <= _A_1_input_T_6 @[calc8x8.scala 61:35]
    node _A_1_input_T_7 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[7] <= _A_1_input_T_7 @[calc8x8.scala 61:35]
    node _A_1_input_T_8 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[8] <= _A_1_input_T_8 @[calc8x8.scala 61:35]
    node _A_1_input_T_9 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[9] <= _A_1_input_T_9 @[calc8x8.scala 61:35]
    node _A_1_input_T_10 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[10] <= _A_1_input_T_10 @[calc8x8.scala 61:35]
    node _A_1_input_T_11 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[11] <= _A_1_input_T_11 @[calc8x8.scala 61:35]
    node _A_1_input_T_12 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[12] <= _A_1_input_T_12 @[calc8x8.scala 61:35]
    node _A_1_input_T_13 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[13] <= _A_1_input_T_13 @[calc8x8.scala 61:35]
    node _A_1_input_T_14 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[14] <= _A_1_input_T_14 @[calc8x8.scala 61:35]
    node _A_1_input_T_15 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[15] <= _A_1_input_T_15 @[calc8x8.scala 61:35]
    node _A_1_input_T_16 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[16] <= _A_1_input_T_16 @[calc8x8.scala 61:35]
    node _A_1_input_T_17 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[17] <= _A_1_input_T_17 @[calc8x8.scala 61:35]
    node _A_1_input_T_18 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[18] <= _A_1_input_T_18 @[calc8x8.scala 61:35]
    node _A_1_input_T_19 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[19] <= _A_1_input_T_19 @[calc8x8.scala 61:35]
    node _A_1_input_T_20 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[20] <= _A_1_input_T_20 @[calc8x8.scala 61:35]
    node _A_1_input_T_21 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[21] <= _A_1_input_T_21 @[calc8x8.scala 61:35]
    node _A_1_input_T_22 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[22] <= _A_1_input_T_22 @[calc8x8.scala 61:35]
    node _A_1_input_T_23 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[23] <= _A_1_input_T_23 @[calc8x8.scala 61:35]
    node _A_1_input_T_24 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[24] <= _A_1_input_T_24 @[calc8x8.scala 61:35]
    node _A_1_input_T_25 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[25] <= _A_1_input_T_25 @[calc8x8.scala 61:35]
    node _A_1_input_T_26 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[26] <= _A_1_input_T_26 @[calc8x8.scala 61:35]
    node _A_1_input_T_27 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[27] <= _A_1_input_T_27 @[calc8x8.scala 61:35]
    node _A_1_input_T_28 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[28] <= _A_1_input_T_28 @[calc8x8.scala 61:35]
    node _A_1_input_T_29 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[29] <= _A_1_input_T_29 @[calc8x8.scala 61:35]
    node _A_1_input_T_30 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[30] <= _A_1_input_T_30 @[calc8x8.scala 61:35]
    node _A_1_input_T_31 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[31] <= _A_1_input_T_31 @[calc8x8.scala 61:35]
    node _A_1_input_T_32 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[32] <= _A_1_input_T_32 @[calc8x8.scala 61:35]
    node _A_1_input_T_33 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[33] <= _A_1_input_T_33 @[calc8x8.scala 61:35]
    node _A_1_input_T_34 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[34] <= _A_1_input_T_34 @[calc8x8.scala 61:35]
    node _A_1_input_T_35 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_1_input_WIRE.mat[35] <= _A_1_input_T_35 @[calc8x8.scala 61:35]
    A[1].input.mat[0] <= _A_1_input_WIRE.mat[0] @[calc8x8.scala 61:20]
    A[1].input.mat[1] <= _A_1_input_WIRE.mat[1] @[calc8x8.scala 61:20]
    A[1].input.mat[2] <= _A_1_input_WIRE.mat[2] @[calc8x8.scala 61:20]
    A[1].input.mat[3] <= _A_1_input_WIRE.mat[3] @[calc8x8.scala 61:20]
    A[1].input.mat[4] <= _A_1_input_WIRE.mat[4] @[calc8x8.scala 61:20]
    A[1].input.mat[5] <= _A_1_input_WIRE.mat[5] @[calc8x8.scala 61:20]
    A[1].input.mat[6] <= _A_1_input_WIRE.mat[6] @[calc8x8.scala 61:20]
    A[1].input.mat[7] <= _A_1_input_WIRE.mat[7] @[calc8x8.scala 61:20]
    A[1].input.mat[8] <= _A_1_input_WIRE.mat[8] @[calc8x8.scala 61:20]
    A[1].input.mat[9] <= _A_1_input_WIRE.mat[9] @[calc8x8.scala 61:20]
    A[1].input.mat[10] <= _A_1_input_WIRE.mat[10] @[calc8x8.scala 61:20]
    A[1].input.mat[11] <= _A_1_input_WIRE.mat[11] @[calc8x8.scala 61:20]
    A[1].input.mat[12] <= _A_1_input_WIRE.mat[12] @[calc8x8.scala 61:20]
    A[1].input.mat[13] <= _A_1_input_WIRE.mat[13] @[calc8x8.scala 61:20]
    A[1].input.mat[14] <= _A_1_input_WIRE.mat[14] @[calc8x8.scala 61:20]
    A[1].input.mat[15] <= _A_1_input_WIRE.mat[15] @[calc8x8.scala 61:20]
    A[1].input.mat[16] <= _A_1_input_WIRE.mat[16] @[calc8x8.scala 61:20]
    A[1].input.mat[17] <= _A_1_input_WIRE.mat[17] @[calc8x8.scala 61:20]
    A[1].input.mat[18] <= _A_1_input_WIRE.mat[18] @[calc8x8.scala 61:20]
    A[1].input.mat[19] <= _A_1_input_WIRE.mat[19] @[calc8x8.scala 61:20]
    A[1].input.mat[20] <= _A_1_input_WIRE.mat[20] @[calc8x8.scala 61:20]
    A[1].input.mat[21] <= _A_1_input_WIRE.mat[21] @[calc8x8.scala 61:20]
    A[1].input.mat[22] <= _A_1_input_WIRE.mat[22] @[calc8x8.scala 61:20]
    A[1].input.mat[23] <= _A_1_input_WIRE.mat[23] @[calc8x8.scala 61:20]
    A[1].input.mat[24] <= _A_1_input_WIRE.mat[24] @[calc8x8.scala 61:20]
    A[1].input.mat[25] <= _A_1_input_WIRE.mat[25] @[calc8x8.scala 61:20]
    A[1].input.mat[26] <= _A_1_input_WIRE.mat[26] @[calc8x8.scala 61:20]
    A[1].input.mat[27] <= _A_1_input_WIRE.mat[27] @[calc8x8.scala 61:20]
    A[1].input.mat[28] <= _A_1_input_WIRE.mat[28] @[calc8x8.scala 61:20]
    A[1].input.mat[29] <= _A_1_input_WIRE.mat[29] @[calc8x8.scala 61:20]
    A[1].input.mat[30] <= _A_1_input_WIRE.mat[30] @[calc8x8.scala 61:20]
    A[1].input.mat[31] <= _A_1_input_WIRE.mat[31] @[calc8x8.scala 61:20]
    A[1].input.mat[32] <= _A_1_input_WIRE.mat[32] @[calc8x8.scala 61:20]
    A[1].input.mat[33] <= _A_1_input_WIRE.mat[33] @[calc8x8.scala 61:20]
    A[1].input.mat[34] <= _A_1_input_WIRE.mat[34] @[calc8x8.scala 61:20]
    A[1].input.mat[35] <= _A_1_input_WIRE.mat[35] @[calc8x8.scala 61:20]
    wire _A_1_flag_WIRE : UInt<2> @[calc8x8.scala 62:34]
    _A_1_flag_WIRE <= UInt<1>("h00") @[calc8x8.scala 62:34]
    A[1].flag <= _A_1_flag_WIRE @[calc8x8.scala 62:19]
    wire _A_1_weight_WIRE : {real : SInt<18>[16], comp1 : SInt<18>[10], comp2 : SInt<18>[10], comp3 : SInt<18>[10]} @[calc8x8.scala 63:36]
    node _A_1_weight_T = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp3[0] <= _A_1_weight_T @[calc8x8.scala 63:36]
    node _A_1_weight_T_1 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp3[1] <= _A_1_weight_T_1 @[calc8x8.scala 63:36]
    node _A_1_weight_T_2 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp3[2] <= _A_1_weight_T_2 @[calc8x8.scala 63:36]
    node _A_1_weight_T_3 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp3[3] <= _A_1_weight_T_3 @[calc8x8.scala 63:36]
    node _A_1_weight_T_4 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp3[4] <= _A_1_weight_T_4 @[calc8x8.scala 63:36]
    node _A_1_weight_T_5 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp3[5] <= _A_1_weight_T_5 @[calc8x8.scala 63:36]
    node _A_1_weight_T_6 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp3[6] <= _A_1_weight_T_6 @[calc8x8.scala 63:36]
    node _A_1_weight_T_7 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp3[7] <= _A_1_weight_T_7 @[calc8x8.scala 63:36]
    node _A_1_weight_T_8 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp3[8] <= _A_1_weight_T_8 @[calc8x8.scala 63:36]
    node _A_1_weight_T_9 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp3[9] <= _A_1_weight_T_9 @[calc8x8.scala 63:36]
    node _A_1_weight_T_10 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp2[0] <= _A_1_weight_T_10 @[calc8x8.scala 63:36]
    node _A_1_weight_T_11 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp2[1] <= _A_1_weight_T_11 @[calc8x8.scala 63:36]
    node _A_1_weight_T_12 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp2[2] <= _A_1_weight_T_12 @[calc8x8.scala 63:36]
    node _A_1_weight_T_13 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp2[3] <= _A_1_weight_T_13 @[calc8x8.scala 63:36]
    node _A_1_weight_T_14 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp2[4] <= _A_1_weight_T_14 @[calc8x8.scala 63:36]
    node _A_1_weight_T_15 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp2[5] <= _A_1_weight_T_15 @[calc8x8.scala 63:36]
    node _A_1_weight_T_16 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp2[6] <= _A_1_weight_T_16 @[calc8x8.scala 63:36]
    node _A_1_weight_T_17 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp2[7] <= _A_1_weight_T_17 @[calc8x8.scala 63:36]
    node _A_1_weight_T_18 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp2[8] <= _A_1_weight_T_18 @[calc8x8.scala 63:36]
    node _A_1_weight_T_19 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp2[9] <= _A_1_weight_T_19 @[calc8x8.scala 63:36]
    node _A_1_weight_T_20 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp1[0] <= _A_1_weight_T_20 @[calc8x8.scala 63:36]
    node _A_1_weight_T_21 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp1[1] <= _A_1_weight_T_21 @[calc8x8.scala 63:36]
    node _A_1_weight_T_22 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp1[2] <= _A_1_weight_T_22 @[calc8x8.scala 63:36]
    node _A_1_weight_T_23 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp1[3] <= _A_1_weight_T_23 @[calc8x8.scala 63:36]
    node _A_1_weight_T_24 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp1[4] <= _A_1_weight_T_24 @[calc8x8.scala 63:36]
    node _A_1_weight_T_25 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp1[5] <= _A_1_weight_T_25 @[calc8x8.scala 63:36]
    node _A_1_weight_T_26 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp1[6] <= _A_1_weight_T_26 @[calc8x8.scala 63:36]
    node _A_1_weight_T_27 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp1[7] <= _A_1_weight_T_27 @[calc8x8.scala 63:36]
    node _A_1_weight_T_28 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp1[8] <= _A_1_weight_T_28 @[calc8x8.scala 63:36]
    node _A_1_weight_T_29 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.comp1[9] <= _A_1_weight_T_29 @[calc8x8.scala 63:36]
    node _A_1_weight_T_30 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[0] <= _A_1_weight_T_30 @[calc8x8.scala 63:36]
    node _A_1_weight_T_31 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[1] <= _A_1_weight_T_31 @[calc8x8.scala 63:36]
    node _A_1_weight_T_32 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[2] <= _A_1_weight_T_32 @[calc8x8.scala 63:36]
    node _A_1_weight_T_33 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[3] <= _A_1_weight_T_33 @[calc8x8.scala 63:36]
    node _A_1_weight_T_34 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[4] <= _A_1_weight_T_34 @[calc8x8.scala 63:36]
    node _A_1_weight_T_35 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[5] <= _A_1_weight_T_35 @[calc8x8.scala 63:36]
    node _A_1_weight_T_36 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[6] <= _A_1_weight_T_36 @[calc8x8.scala 63:36]
    node _A_1_weight_T_37 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[7] <= _A_1_weight_T_37 @[calc8x8.scala 63:36]
    node _A_1_weight_T_38 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[8] <= _A_1_weight_T_38 @[calc8x8.scala 63:36]
    node _A_1_weight_T_39 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[9] <= _A_1_weight_T_39 @[calc8x8.scala 63:36]
    node _A_1_weight_T_40 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[10] <= _A_1_weight_T_40 @[calc8x8.scala 63:36]
    node _A_1_weight_T_41 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[11] <= _A_1_weight_T_41 @[calc8x8.scala 63:36]
    node _A_1_weight_T_42 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[12] <= _A_1_weight_T_42 @[calc8x8.scala 63:36]
    node _A_1_weight_T_43 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[13] <= _A_1_weight_T_43 @[calc8x8.scala 63:36]
    node _A_1_weight_T_44 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[14] <= _A_1_weight_T_44 @[calc8x8.scala 63:36]
    node _A_1_weight_T_45 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_1_weight_WIRE.real[15] <= _A_1_weight_T_45 @[calc8x8.scala 63:36]
    A[1].weight.comp3[0] <= _A_1_weight_WIRE.comp3[0] @[calc8x8.scala 63:21]
    A[1].weight.comp3[1] <= _A_1_weight_WIRE.comp3[1] @[calc8x8.scala 63:21]
    A[1].weight.comp3[2] <= _A_1_weight_WIRE.comp3[2] @[calc8x8.scala 63:21]
    A[1].weight.comp3[3] <= _A_1_weight_WIRE.comp3[3] @[calc8x8.scala 63:21]
    A[1].weight.comp3[4] <= _A_1_weight_WIRE.comp3[4] @[calc8x8.scala 63:21]
    A[1].weight.comp3[5] <= _A_1_weight_WIRE.comp3[5] @[calc8x8.scala 63:21]
    A[1].weight.comp3[6] <= _A_1_weight_WIRE.comp3[6] @[calc8x8.scala 63:21]
    A[1].weight.comp3[7] <= _A_1_weight_WIRE.comp3[7] @[calc8x8.scala 63:21]
    A[1].weight.comp3[8] <= _A_1_weight_WIRE.comp3[8] @[calc8x8.scala 63:21]
    A[1].weight.comp3[9] <= _A_1_weight_WIRE.comp3[9] @[calc8x8.scala 63:21]
    A[1].weight.comp2[0] <= _A_1_weight_WIRE.comp2[0] @[calc8x8.scala 63:21]
    A[1].weight.comp2[1] <= _A_1_weight_WIRE.comp2[1] @[calc8x8.scala 63:21]
    A[1].weight.comp2[2] <= _A_1_weight_WIRE.comp2[2] @[calc8x8.scala 63:21]
    A[1].weight.comp2[3] <= _A_1_weight_WIRE.comp2[3] @[calc8x8.scala 63:21]
    A[1].weight.comp2[4] <= _A_1_weight_WIRE.comp2[4] @[calc8x8.scala 63:21]
    A[1].weight.comp2[5] <= _A_1_weight_WIRE.comp2[5] @[calc8x8.scala 63:21]
    A[1].weight.comp2[6] <= _A_1_weight_WIRE.comp2[6] @[calc8x8.scala 63:21]
    A[1].weight.comp2[7] <= _A_1_weight_WIRE.comp2[7] @[calc8x8.scala 63:21]
    A[1].weight.comp2[8] <= _A_1_weight_WIRE.comp2[8] @[calc8x8.scala 63:21]
    A[1].weight.comp2[9] <= _A_1_weight_WIRE.comp2[9] @[calc8x8.scala 63:21]
    A[1].weight.comp1[0] <= _A_1_weight_WIRE.comp1[0] @[calc8x8.scala 63:21]
    A[1].weight.comp1[1] <= _A_1_weight_WIRE.comp1[1] @[calc8x8.scala 63:21]
    A[1].weight.comp1[2] <= _A_1_weight_WIRE.comp1[2] @[calc8x8.scala 63:21]
    A[1].weight.comp1[3] <= _A_1_weight_WIRE.comp1[3] @[calc8x8.scala 63:21]
    A[1].weight.comp1[4] <= _A_1_weight_WIRE.comp1[4] @[calc8x8.scala 63:21]
    A[1].weight.comp1[5] <= _A_1_weight_WIRE.comp1[5] @[calc8x8.scala 63:21]
    A[1].weight.comp1[6] <= _A_1_weight_WIRE.comp1[6] @[calc8x8.scala 63:21]
    A[1].weight.comp1[7] <= _A_1_weight_WIRE.comp1[7] @[calc8x8.scala 63:21]
    A[1].weight.comp1[8] <= _A_1_weight_WIRE.comp1[8] @[calc8x8.scala 63:21]
    A[1].weight.comp1[9] <= _A_1_weight_WIRE.comp1[9] @[calc8x8.scala 63:21]
    A[1].weight.real[0] <= _A_1_weight_WIRE.real[0] @[calc8x8.scala 63:21]
    A[1].weight.real[1] <= _A_1_weight_WIRE.real[1] @[calc8x8.scala 63:21]
    A[1].weight.real[2] <= _A_1_weight_WIRE.real[2] @[calc8x8.scala 63:21]
    A[1].weight.real[3] <= _A_1_weight_WIRE.real[3] @[calc8x8.scala 63:21]
    A[1].weight.real[4] <= _A_1_weight_WIRE.real[4] @[calc8x8.scala 63:21]
    A[1].weight.real[5] <= _A_1_weight_WIRE.real[5] @[calc8x8.scala 63:21]
    A[1].weight.real[6] <= _A_1_weight_WIRE.real[6] @[calc8x8.scala 63:21]
    A[1].weight.real[7] <= _A_1_weight_WIRE.real[7] @[calc8x8.scala 63:21]
    A[1].weight.real[8] <= _A_1_weight_WIRE.real[8] @[calc8x8.scala 63:21]
    A[1].weight.real[9] <= _A_1_weight_WIRE.real[9] @[calc8x8.scala 63:21]
    A[1].weight.real[10] <= _A_1_weight_WIRE.real[10] @[calc8x8.scala 63:21]
    A[1].weight.real[11] <= _A_1_weight_WIRE.real[11] @[calc8x8.scala 63:21]
    A[1].weight.real[12] <= _A_1_weight_WIRE.real[12] @[calc8x8.scala 63:21]
    A[1].weight.real[13] <= _A_1_weight_WIRE.real[13] @[calc8x8.scala 63:21]
    A[1].weight.real[14] <= _A_1_weight_WIRE.real[14] @[calc8x8.scala 63:21]
    A[1].weight.real[15] <= _A_1_weight_WIRE.real[15] @[calc8x8.scala 63:21]
    A[1].valid_in <= UInt<1>("h00") @[calc8x8.scala 64:23]
    wire _A_2_input_WIRE : {mat : SInt<16>[36]} @[calc8x8.scala 61:35]
    node _A_2_input_T = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[0] <= _A_2_input_T @[calc8x8.scala 61:35]
    node _A_2_input_T_1 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[1] <= _A_2_input_T_1 @[calc8x8.scala 61:35]
    node _A_2_input_T_2 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[2] <= _A_2_input_T_2 @[calc8x8.scala 61:35]
    node _A_2_input_T_3 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[3] <= _A_2_input_T_3 @[calc8x8.scala 61:35]
    node _A_2_input_T_4 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[4] <= _A_2_input_T_4 @[calc8x8.scala 61:35]
    node _A_2_input_T_5 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[5] <= _A_2_input_T_5 @[calc8x8.scala 61:35]
    node _A_2_input_T_6 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[6] <= _A_2_input_T_6 @[calc8x8.scala 61:35]
    node _A_2_input_T_7 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[7] <= _A_2_input_T_7 @[calc8x8.scala 61:35]
    node _A_2_input_T_8 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[8] <= _A_2_input_T_8 @[calc8x8.scala 61:35]
    node _A_2_input_T_9 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[9] <= _A_2_input_T_9 @[calc8x8.scala 61:35]
    node _A_2_input_T_10 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[10] <= _A_2_input_T_10 @[calc8x8.scala 61:35]
    node _A_2_input_T_11 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[11] <= _A_2_input_T_11 @[calc8x8.scala 61:35]
    node _A_2_input_T_12 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[12] <= _A_2_input_T_12 @[calc8x8.scala 61:35]
    node _A_2_input_T_13 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[13] <= _A_2_input_T_13 @[calc8x8.scala 61:35]
    node _A_2_input_T_14 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[14] <= _A_2_input_T_14 @[calc8x8.scala 61:35]
    node _A_2_input_T_15 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[15] <= _A_2_input_T_15 @[calc8x8.scala 61:35]
    node _A_2_input_T_16 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[16] <= _A_2_input_T_16 @[calc8x8.scala 61:35]
    node _A_2_input_T_17 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[17] <= _A_2_input_T_17 @[calc8x8.scala 61:35]
    node _A_2_input_T_18 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[18] <= _A_2_input_T_18 @[calc8x8.scala 61:35]
    node _A_2_input_T_19 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[19] <= _A_2_input_T_19 @[calc8x8.scala 61:35]
    node _A_2_input_T_20 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[20] <= _A_2_input_T_20 @[calc8x8.scala 61:35]
    node _A_2_input_T_21 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[21] <= _A_2_input_T_21 @[calc8x8.scala 61:35]
    node _A_2_input_T_22 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[22] <= _A_2_input_T_22 @[calc8x8.scala 61:35]
    node _A_2_input_T_23 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[23] <= _A_2_input_T_23 @[calc8x8.scala 61:35]
    node _A_2_input_T_24 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[24] <= _A_2_input_T_24 @[calc8x8.scala 61:35]
    node _A_2_input_T_25 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[25] <= _A_2_input_T_25 @[calc8x8.scala 61:35]
    node _A_2_input_T_26 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[26] <= _A_2_input_T_26 @[calc8x8.scala 61:35]
    node _A_2_input_T_27 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[27] <= _A_2_input_T_27 @[calc8x8.scala 61:35]
    node _A_2_input_T_28 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[28] <= _A_2_input_T_28 @[calc8x8.scala 61:35]
    node _A_2_input_T_29 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[29] <= _A_2_input_T_29 @[calc8x8.scala 61:35]
    node _A_2_input_T_30 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[30] <= _A_2_input_T_30 @[calc8x8.scala 61:35]
    node _A_2_input_T_31 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[31] <= _A_2_input_T_31 @[calc8x8.scala 61:35]
    node _A_2_input_T_32 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[32] <= _A_2_input_T_32 @[calc8x8.scala 61:35]
    node _A_2_input_T_33 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[33] <= _A_2_input_T_33 @[calc8x8.scala 61:35]
    node _A_2_input_T_34 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[34] <= _A_2_input_T_34 @[calc8x8.scala 61:35]
    node _A_2_input_T_35 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_2_input_WIRE.mat[35] <= _A_2_input_T_35 @[calc8x8.scala 61:35]
    A[2].input.mat[0] <= _A_2_input_WIRE.mat[0] @[calc8x8.scala 61:20]
    A[2].input.mat[1] <= _A_2_input_WIRE.mat[1] @[calc8x8.scala 61:20]
    A[2].input.mat[2] <= _A_2_input_WIRE.mat[2] @[calc8x8.scala 61:20]
    A[2].input.mat[3] <= _A_2_input_WIRE.mat[3] @[calc8x8.scala 61:20]
    A[2].input.mat[4] <= _A_2_input_WIRE.mat[4] @[calc8x8.scala 61:20]
    A[2].input.mat[5] <= _A_2_input_WIRE.mat[5] @[calc8x8.scala 61:20]
    A[2].input.mat[6] <= _A_2_input_WIRE.mat[6] @[calc8x8.scala 61:20]
    A[2].input.mat[7] <= _A_2_input_WIRE.mat[7] @[calc8x8.scala 61:20]
    A[2].input.mat[8] <= _A_2_input_WIRE.mat[8] @[calc8x8.scala 61:20]
    A[2].input.mat[9] <= _A_2_input_WIRE.mat[9] @[calc8x8.scala 61:20]
    A[2].input.mat[10] <= _A_2_input_WIRE.mat[10] @[calc8x8.scala 61:20]
    A[2].input.mat[11] <= _A_2_input_WIRE.mat[11] @[calc8x8.scala 61:20]
    A[2].input.mat[12] <= _A_2_input_WIRE.mat[12] @[calc8x8.scala 61:20]
    A[2].input.mat[13] <= _A_2_input_WIRE.mat[13] @[calc8x8.scala 61:20]
    A[2].input.mat[14] <= _A_2_input_WIRE.mat[14] @[calc8x8.scala 61:20]
    A[2].input.mat[15] <= _A_2_input_WIRE.mat[15] @[calc8x8.scala 61:20]
    A[2].input.mat[16] <= _A_2_input_WIRE.mat[16] @[calc8x8.scala 61:20]
    A[2].input.mat[17] <= _A_2_input_WIRE.mat[17] @[calc8x8.scala 61:20]
    A[2].input.mat[18] <= _A_2_input_WIRE.mat[18] @[calc8x8.scala 61:20]
    A[2].input.mat[19] <= _A_2_input_WIRE.mat[19] @[calc8x8.scala 61:20]
    A[2].input.mat[20] <= _A_2_input_WIRE.mat[20] @[calc8x8.scala 61:20]
    A[2].input.mat[21] <= _A_2_input_WIRE.mat[21] @[calc8x8.scala 61:20]
    A[2].input.mat[22] <= _A_2_input_WIRE.mat[22] @[calc8x8.scala 61:20]
    A[2].input.mat[23] <= _A_2_input_WIRE.mat[23] @[calc8x8.scala 61:20]
    A[2].input.mat[24] <= _A_2_input_WIRE.mat[24] @[calc8x8.scala 61:20]
    A[2].input.mat[25] <= _A_2_input_WIRE.mat[25] @[calc8x8.scala 61:20]
    A[2].input.mat[26] <= _A_2_input_WIRE.mat[26] @[calc8x8.scala 61:20]
    A[2].input.mat[27] <= _A_2_input_WIRE.mat[27] @[calc8x8.scala 61:20]
    A[2].input.mat[28] <= _A_2_input_WIRE.mat[28] @[calc8x8.scala 61:20]
    A[2].input.mat[29] <= _A_2_input_WIRE.mat[29] @[calc8x8.scala 61:20]
    A[2].input.mat[30] <= _A_2_input_WIRE.mat[30] @[calc8x8.scala 61:20]
    A[2].input.mat[31] <= _A_2_input_WIRE.mat[31] @[calc8x8.scala 61:20]
    A[2].input.mat[32] <= _A_2_input_WIRE.mat[32] @[calc8x8.scala 61:20]
    A[2].input.mat[33] <= _A_2_input_WIRE.mat[33] @[calc8x8.scala 61:20]
    A[2].input.mat[34] <= _A_2_input_WIRE.mat[34] @[calc8x8.scala 61:20]
    A[2].input.mat[35] <= _A_2_input_WIRE.mat[35] @[calc8x8.scala 61:20]
    wire _A_2_flag_WIRE : UInt<2> @[calc8x8.scala 62:34]
    _A_2_flag_WIRE <= UInt<1>("h00") @[calc8x8.scala 62:34]
    A[2].flag <= _A_2_flag_WIRE @[calc8x8.scala 62:19]
    wire _A_2_weight_WIRE : {real : SInt<18>[16], comp1 : SInt<18>[10], comp2 : SInt<18>[10], comp3 : SInt<18>[10]} @[calc8x8.scala 63:36]
    node _A_2_weight_T = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp3[0] <= _A_2_weight_T @[calc8x8.scala 63:36]
    node _A_2_weight_T_1 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp3[1] <= _A_2_weight_T_1 @[calc8x8.scala 63:36]
    node _A_2_weight_T_2 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp3[2] <= _A_2_weight_T_2 @[calc8x8.scala 63:36]
    node _A_2_weight_T_3 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp3[3] <= _A_2_weight_T_3 @[calc8x8.scala 63:36]
    node _A_2_weight_T_4 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp3[4] <= _A_2_weight_T_4 @[calc8x8.scala 63:36]
    node _A_2_weight_T_5 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp3[5] <= _A_2_weight_T_5 @[calc8x8.scala 63:36]
    node _A_2_weight_T_6 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp3[6] <= _A_2_weight_T_6 @[calc8x8.scala 63:36]
    node _A_2_weight_T_7 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp3[7] <= _A_2_weight_T_7 @[calc8x8.scala 63:36]
    node _A_2_weight_T_8 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp3[8] <= _A_2_weight_T_8 @[calc8x8.scala 63:36]
    node _A_2_weight_T_9 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp3[9] <= _A_2_weight_T_9 @[calc8x8.scala 63:36]
    node _A_2_weight_T_10 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp2[0] <= _A_2_weight_T_10 @[calc8x8.scala 63:36]
    node _A_2_weight_T_11 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp2[1] <= _A_2_weight_T_11 @[calc8x8.scala 63:36]
    node _A_2_weight_T_12 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp2[2] <= _A_2_weight_T_12 @[calc8x8.scala 63:36]
    node _A_2_weight_T_13 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp2[3] <= _A_2_weight_T_13 @[calc8x8.scala 63:36]
    node _A_2_weight_T_14 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp2[4] <= _A_2_weight_T_14 @[calc8x8.scala 63:36]
    node _A_2_weight_T_15 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp2[5] <= _A_2_weight_T_15 @[calc8x8.scala 63:36]
    node _A_2_weight_T_16 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp2[6] <= _A_2_weight_T_16 @[calc8x8.scala 63:36]
    node _A_2_weight_T_17 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp2[7] <= _A_2_weight_T_17 @[calc8x8.scala 63:36]
    node _A_2_weight_T_18 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp2[8] <= _A_2_weight_T_18 @[calc8x8.scala 63:36]
    node _A_2_weight_T_19 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp2[9] <= _A_2_weight_T_19 @[calc8x8.scala 63:36]
    node _A_2_weight_T_20 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp1[0] <= _A_2_weight_T_20 @[calc8x8.scala 63:36]
    node _A_2_weight_T_21 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp1[1] <= _A_2_weight_T_21 @[calc8x8.scala 63:36]
    node _A_2_weight_T_22 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp1[2] <= _A_2_weight_T_22 @[calc8x8.scala 63:36]
    node _A_2_weight_T_23 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp1[3] <= _A_2_weight_T_23 @[calc8x8.scala 63:36]
    node _A_2_weight_T_24 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp1[4] <= _A_2_weight_T_24 @[calc8x8.scala 63:36]
    node _A_2_weight_T_25 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp1[5] <= _A_2_weight_T_25 @[calc8x8.scala 63:36]
    node _A_2_weight_T_26 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp1[6] <= _A_2_weight_T_26 @[calc8x8.scala 63:36]
    node _A_2_weight_T_27 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp1[7] <= _A_2_weight_T_27 @[calc8x8.scala 63:36]
    node _A_2_weight_T_28 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp1[8] <= _A_2_weight_T_28 @[calc8x8.scala 63:36]
    node _A_2_weight_T_29 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.comp1[9] <= _A_2_weight_T_29 @[calc8x8.scala 63:36]
    node _A_2_weight_T_30 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[0] <= _A_2_weight_T_30 @[calc8x8.scala 63:36]
    node _A_2_weight_T_31 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[1] <= _A_2_weight_T_31 @[calc8x8.scala 63:36]
    node _A_2_weight_T_32 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[2] <= _A_2_weight_T_32 @[calc8x8.scala 63:36]
    node _A_2_weight_T_33 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[3] <= _A_2_weight_T_33 @[calc8x8.scala 63:36]
    node _A_2_weight_T_34 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[4] <= _A_2_weight_T_34 @[calc8x8.scala 63:36]
    node _A_2_weight_T_35 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[5] <= _A_2_weight_T_35 @[calc8x8.scala 63:36]
    node _A_2_weight_T_36 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[6] <= _A_2_weight_T_36 @[calc8x8.scala 63:36]
    node _A_2_weight_T_37 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[7] <= _A_2_weight_T_37 @[calc8x8.scala 63:36]
    node _A_2_weight_T_38 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[8] <= _A_2_weight_T_38 @[calc8x8.scala 63:36]
    node _A_2_weight_T_39 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[9] <= _A_2_weight_T_39 @[calc8x8.scala 63:36]
    node _A_2_weight_T_40 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[10] <= _A_2_weight_T_40 @[calc8x8.scala 63:36]
    node _A_2_weight_T_41 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[11] <= _A_2_weight_T_41 @[calc8x8.scala 63:36]
    node _A_2_weight_T_42 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[12] <= _A_2_weight_T_42 @[calc8x8.scala 63:36]
    node _A_2_weight_T_43 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[13] <= _A_2_weight_T_43 @[calc8x8.scala 63:36]
    node _A_2_weight_T_44 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[14] <= _A_2_weight_T_44 @[calc8x8.scala 63:36]
    node _A_2_weight_T_45 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_2_weight_WIRE.real[15] <= _A_2_weight_T_45 @[calc8x8.scala 63:36]
    A[2].weight.comp3[0] <= _A_2_weight_WIRE.comp3[0] @[calc8x8.scala 63:21]
    A[2].weight.comp3[1] <= _A_2_weight_WIRE.comp3[1] @[calc8x8.scala 63:21]
    A[2].weight.comp3[2] <= _A_2_weight_WIRE.comp3[2] @[calc8x8.scala 63:21]
    A[2].weight.comp3[3] <= _A_2_weight_WIRE.comp3[3] @[calc8x8.scala 63:21]
    A[2].weight.comp3[4] <= _A_2_weight_WIRE.comp3[4] @[calc8x8.scala 63:21]
    A[2].weight.comp3[5] <= _A_2_weight_WIRE.comp3[5] @[calc8x8.scala 63:21]
    A[2].weight.comp3[6] <= _A_2_weight_WIRE.comp3[6] @[calc8x8.scala 63:21]
    A[2].weight.comp3[7] <= _A_2_weight_WIRE.comp3[7] @[calc8x8.scala 63:21]
    A[2].weight.comp3[8] <= _A_2_weight_WIRE.comp3[8] @[calc8x8.scala 63:21]
    A[2].weight.comp3[9] <= _A_2_weight_WIRE.comp3[9] @[calc8x8.scala 63:21]
    A[2].weight.comp2[0] <= _A_2_weight_WIRE.comp2[0] @[calc8x8.scala 63:21]
    A[2].weight.comp2[1] <= _A_2_weight_WIRE.comp2[1] @[calc8x8.scala 63:21]
    A[2].weight.comp2[2] <= _A_2_weight_WIRE.comp2[2] @[calc8x8.scala 63:21]
    A[2].weight.comp2[3] <= _A_2_weight_WIRE.comp2[3] @[calc8x8.scala 63:21]
    A[2].weight.comp2[4] <= _A_2_weight_WIRE.comp2[4] @[calc8x8.scala 63:21]
    A[2].weight.comp2[5] <= _A_2_weight_WIRE.comp2[5] @[calc8x8.scala 63:21]
    A[2].weight.comp2[6] <= _A_2_weight_WIRE.comp2[6] @[calc8x8.scala 63:21]
    A[2].weight.comp2[7] <= _A_2_weight_WIRE.comp2[7] @[calc8x8.scala 63:21]
    A[2].weight.comp2[8] <= _A_2_weight_WIRE.comp2[8] @[calc8x8.scala 63:21]
    A[2].weight.comp2[9] <= _A_2_weight_WIRE.comp2[9] @[calc8x8.scala 63:21]
    A[2].weight.comp1[0] <= _A_2_weight_WIRE.comp1[0] @[calc8x8.scala 63:21]
    A[2].weight.comp1[1] <= _A_2_weight_WIRE.comp1[1] @[calc8x8.scala 63:21]
    A[2].weight.comp1[2] <= _A_2_weight_WIRE.comp1[2] @[calc8x8.scala 63:21]
    A[2].weight.comp1[3] <= _A_2_weight_WIRE.comp1[3] @[calc8x8.scala 63:21]
    A[2].weight.comp1[4] <= _A_2_weight_WIRE.comp1[4] @[calc8x8.scala 63:21]
    A[2].weight.comp1[5] <= _A_2_weight_WIRE.comp1[5] @[calc8x8.scala 63:21]
    A[2].weight.comp1[6] <= _A_2_weight_WIRE.comp1[6] @[calc8x8.scala 63:21]
    A[2].weight.comp1[7] <= _A_2_weight_WIRE.comp1[7] @[calc8x8.scala 63:21]
    A[2].weight.comp1[8] <= _A_2_weight_WIRE.comp1[8] @[calc8x8.scala 63:21]
    A[2].weight.comp1[9] <= _A_2_weight_WIRE.comp1[9] @[calc8x8.scala 63:21]
    A[2].weight.real[0] <= _A_2_weight_WIRE.real[0] @[calc8x8.scala 63:21]
    A[2].weight.real[1] <= _A_2_weight_WIRE.real[1] @[calc8x8.scala 63:21]
    A[2].weight.real[2] <= _A_2_weight_WIRE.real[2] @[calc8x8.scala 63:21]
    A[2].weight.real[3] <= _A_2_weight_WIRE.real[3] @[calc8x8.scala 63:21]
    A[2].weight.real[4] <= _A_2_weight_WIRE.real[4] @[calc8x8.scala 63:21]
    A[2].weight.real[5] <= _A_2_weight_WIRE.real[5] @[calc8x8.scala 63:21]
    A[2].weight.real[6] <= _A_2_weight_WIRE.real[6] @[calc8x8.scala 63:21]
    A[2].weight.real[7] <= _A_2_weight_WIRE.real[7] @[calc8x8.scala 63:21]
    A[2].weight.real[8] <= _A_2_weight_WIRE.real[8] @[calc8x8.scala 63:21]
    A[2].weight.real[9] <= _A_2_weight_WIRE.real[9] @[calc8x8.scala 63:21]
    A[2].weight.real[10] <= _A_2_weight_WIRE.real[10] @[calc8x8.scala 63:21]
    A[2].weight.real[11] <= _A_2_weight_WIRE.real[11] @[calc8x8.scala 63:21]
    A[2].weight.real[12] <= _A_2_weight_WIRE.real[12] @[calc8x8.scala 63:21]
    A[2].weight.real[13] <= _A_2_weight_WIRE.real[13] @[calc8x8.scala 63:21]
    A[2].weight.real[14] <= _A_2_weight_WIRE.real[14] @[calc8x8.scala 63:21]
    A[2].weight.real[15] <= _A_2_weight_WIRE.real[15] @[calc8x8.scala 63:21]
    A[2].valid_in <= UInt<1>("h00") @[calc8x8.scala 64:23]
    wire _A_3_input_WIRE : {mat : SInt<16>[36]} @[calc8x8.scala 61:35]
    node _A_3_input_T = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[0] <= _A_3_input_T @[calc8x8.scala 61:35]
    node _A_3_input_T_1 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[1] <= _A_3_input_T_1 @[calc8x8.scala 61:35]
    node _A_3_input_T_2 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[2] <= _A_3_input_T_2 @[calc8x8.scala 61:35]
    node _A_3_input_T_3 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[3] <= _A_3_input_T_3 @[calc8x8.scala 61:35]
    node _A_3_input_T_4 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[4] <= _A_3_input_T_4 @[calc8x8.scala 61:35]
    node _A_3_input_T_5 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[5] <= _A_3_input_T_5 @[calc8x8.scala 61:35]
    node _A_3_input_T_6 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[6] <= _A_3_input_T_6 @[calc8x8.scala 61:35]
    node _A_3_input_T_7 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[7] <= _A_3_input_T_7 @[calc8x8.scala 61:35]
    node _A_3_input_T_8 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[8] <= _A_3_input_T_8 @[calc8x8.scala 61:35]
    node _A_3_input_T_9 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[9] <= _A_3_input_T_9 @[calc8x8.scala 61:35]
    node _A_3_input_T_10 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[10] <= _A_3_input_T_10 @[calc8x8.scala 61:35]
    node _A_3_input_T_11 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[11] <= _A_3_input_T_11 @[calc8x8.scala 61:35]
    node _A_3_input_T_12 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[12] <= _A_3_input_T_12 @[calc8x8.scala 61:35]
    node _A_3_input_T_13 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[13] <= _A_3_input_T_13 @[calc8x8.scala 61:35]
    node _A_3_input_T_14 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[14] <= _A_3_input_T_14 @[calc8x8.scala 61:35]
    node _A_3_input_T_15 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[15] <= _A_3_input_T_15 @[calc8x8.scala 61:35]
    node _A_3_input_T_16 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[16] <= _A_3_input_T_16 @[calc8x8.scala 61:35]
    node _A_3_input_T_17 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[17] <= _A_3_input_T_17 @[calc8x8.scala 61:35]
    node _A_3_input_T_18 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[18] <= _A_3_input_T_18 @[calc8x8.scala 61:35]
    node _A_3_input_T_19 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[19] <= _A_3_input_T_19 @[calc8x8.scala 61:35]
    node _A_3_input_T_20 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[20] <= _A_3_input_T_20 @[calc8x8.scala 61:35]
    node _A_3_input_T_21 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[21] <= _A_3_input_T_21 @[calc8x8.scala 61:35]
    node _A_3_input_T_22 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[22] <= _A_3_input_T_22 @[calc8x8.scala 61:35]
    node _A_3_input_T_23 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[23] <= _A_3_input_T_23 @[calc8x8.scala 61:35]
    node _A_3_input_T_24 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[24] <= _A_3_input_T_24 @[calc8x8.scala 61:35]
    node _A_3_input_T_25 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[25] <= _A_3_input_T_25 @[calc8x8.scala 61:35]
    node _A_3_input_T_26 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[26] <= _A_3_input_T_26 @[calc8x8.scala 61:35]
    node _A_3_input_T_27 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[27] <= _A_3_input_T_27 @[calc8x8.scala 61:35]
    node _A_3_input_T_28 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[28] <= _A_3_input_T_28 @[calc8x8.scala 61:35]
    node _A_3_input_T_29 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[29] <= _A_3_input_T_29 @[calc8x8.scala 61:35]
    node _A_3_input_T_30 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[30] <= _A_3_input_T_30 @[calc8x8.scala 61:35]
    node _A_3_input_T_31 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[31] <= _A_3_input_T_31 @[calc8x8.scala 61:35]
    node _A_3_input_T_32 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[32] <= _A_3_input_T_32 @[calc8x8.scala 61:35]
    node _A_3_input_T_33 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[33] <= _A_3_input_T_33 @[calc8x8.scala 61:35]
    node _A_3_input_T_34 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[34] <= _A_3_input_T_34 @[calc8x8.scala 61:35]
    node _A_3_input_T_35 = asSInt(UInt<16>("h00")) @[calc8x8.scala 61:35]
    _A_3_input_WIRE.mat[35] <= _A_3_input_T_35 @[calc8x8.scala 61:35]
    A[3].input.mat[0] <= _A_3_input_WIRE.mat[0] @[calc8x8.scala 61:20]
    A[3].input.mat[1] <= _A_3_input_WIRE.mat[1] @[calc8x8.scala 61:20]
    A[3].input.mat[2] <= _A_3_input_WIRE.mat[2] @[calc8x8.scala 61:20]
    A[3].input.mat[3] <= _A_3_input_WIRE.mat[3] @[calc8x8.scala 61:20]
    A[3].input.mat[4] <= _A_3_input_WIRE.mat[4] @[calc8x8.scala 61:20]
    A[3].input.mat[5] <= _A_3_input_WIRE.mat[5] @[calc8x8.scala 61:20]
    A[3].input.mat[6] <= _A_3_input_WIRE.mat[6] @[calc8x8.scala 61:20]
    A[3].input.mat[7] <= _A_3_input_WIRE.mat[7] @[calc8x8.scala 61:20]
    A[3].input.mat[8] <= _A_3_input_WIRE.mat[8] @[calc8x8.scala 61:20]
    A[3].input.mat[9] <= _A_3_input_WIRE.mat[9] @[calc8x8.scala 61:20]
    A[3].input.mat[10] <= _A_3_input_WIRE.mat[10] @[calc8x8.scala 61:20]
    A[3].input.mat[11] <= _A_3_input_WIRE.mat[11] @[calc8x8.scala 61:20]
    A[3].input.mat[12] <= _A_3_input_WIRE.mat[12] @[calc8x8.scala 61:20]
    A[3].input.mat[13] <= _A_3_input_WIRE.mat[13] @[calc8x8.scala 61:20]
    A[3].input.mat[14] <= _A_3_input_WIRE.mat[14] @[calc8x8.scala 61:20]
    A[3].input.mat[15] <= _A_3_input_WIRE.mat[15] @[calc8x8.scala 61:20]
    A[3].input.mat[16] <= _A_3_input_WIRE.mat[16] @[calc8x8.scala 61:20]
    A[3].input.mat[17] <= _A_3_input_WIRE.mat[17] @[calc8x8.scala 61:20]
    A[3].input.mat[18] <= _A_3_input_WIRE.mat[18] @[calc8x8.scala 61:20]
    A[3].input.mat[19] <= _A_3_input_WIRE.mat[19] @[calc8x8.scala 61:20]
    A[3].input.mat[20] <= _A_3_input_WIRE.mat[20] @[calc8x8.scala 61:20]
    A[3].input.mat[21] <= _A_3_input_WIRE.mat[21] @[calc8x8.scala 61:20]
    A[3].input.mat[22] <= _A_3_input_WIRE.mat[22] @[calc8x8.scala 61:20]
    A[3].input.mat[23] <= _A_3_input_WIRE.mat[23] @[calc8x8.scala 61:20]
    A[3].input.mat[24] <= _A_3_input_WIRE.mat[24] @[calc8x8.scala 61:20]
    A[3].input.mat[25] <= _A_3_input_WIRE.mat[25] @[calc8x8.scala 61:20]
    A[3].input.mat[26] <= _A_3_input_WIRE.mat[26] @[calc8x8.scala 61:20]
    A[3].input.mat[27] <= _A_3_input_WIRE.mat[27] @[calc8x8.scala 61:20]
    A[3].input.mat[28] <= _A_3_input_WIRE.mat[28] @[calc8x8.scala 61:20]
    A[3].input.mat[29] <= _A_3_input_WIRE.mat[29] @[calc8x8.scala 61:20]
    A[3].input.mat[30] <= _A_3_input_WIRE.mat[30] @[calc8x8.scala 61:20]
    A[3].input.mat[31] <= _A_3_input_WIRE.mat[31] @[calc8x8.scala 61:20]
    A[3].input.mat[32] <= _A_3_input_WIRE.mat[32] @[calc8x8.scala 61:20]
    A[3].input.mat[33] <= _A_3_input_WIRE.mat[33] @[calc8x8.scala 61:20]
    A[3].input.mat[34] <= _A_3_input_WIRE.mat[34] @[calc8x8.scala 61:20]
    A[3].input.mat[35] <= _A_3_input_WIRE.mat[35] @[calc8x8.scala 61:20]
    wire _A_3_flag_WIRE : UInt<2> @[calc8x8.scala 62:34]
    _A_3_flag_WIRE <= UInt<1>("h00") @[calc8x8.scala 62:34]
    A[3].flag <= _A_3_flag_WIRE @[calc8x8.scala 62:19]
    wire _A_3_weight_WIRE : {real : SInt<18>[16], comp1 : SInt<18>[10], comp2 : SInt<18>[10], comp3 : SInt<18>[10]} @[calc8x8.scala 63:36]
    node _A_3_weight_T = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp3[0] <= _A_3_weight_T @[calc8x8.scala 63:36]
    node _A_3_weight_T_1 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp3[1] <= _A_3_weight_T_1 @[calc8x8.scala 63:36]
    node _A_3_weight_T_2 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp3[2] <= _A_3_weight_T_2 @[calc8x8.scala 63:36]
    node _A_3_weight_T_3 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp3[3] <= _A_3_weight_T_3 @[calc8x8.scala 63:36]
    node _A_3_weight_T_4 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp3[4] <= _A_3_weight_T_4 @[calc8x8.scala 63:36]
    node _A_3_weight_T_5 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp3[5] <= _A_3_weight_T_5 @[calc8x8.scala 63:36]
    node _A_3_weight_T_6 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp3[6] <= _A_3_weight_T_6 @[calc8x8.scala 63:36]
    node _A_3_weight_T_7 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp3[7] <= _A_3_weight_T_7 @[calc8x8.scala 63:36]
    node _A_3_weight_T_8 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp3[8] <= _A_3_weight_T_8 @[calc8x8.scala 63:36]
    node _A_3_weight_T_9 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp3[9] <= _A_3_weight_T_9 @[calc8x8.scala 63:36]
    node _A_3_weight_T_10 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp2[0] <= _A_3_weight_T_10 @[calc8x8.scala 63:36]
    node _A_3_weight_T_11 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp2[1] <= _A_3_weight_T_11 @[calc8x8.scala 63:36]
    node _A_3_weight_T_12 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp2[2] <= _A_3_weight_T_12 @[calc8x8.scala 63:36]
    node _A_3_weight_T_13 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp2[3] <= _A_3_weight_T_13 @[calc8x8.scala 63:36]
    node _A_3_weight_T_14 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp2[4] <= _A_3_weight_T_14 @[calc8x8.scala 63:36]
    node _A_3_weight_T_15 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp2[5] <= _A_3_weight_T_15 @[calc8x8.scala 63:36]
    node _A_3_weight_T_16 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp2[6] <= _A_3_weight_T_16 @[calc8x8.scala 63:36]
    node _A_3_weight_T_17 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp2[7] <= _A_3_weight_T_17 @[calc8x8.scala 63:36]
    node _A_3_weight_T_18 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp2[8] <= _A_3_weight_T_18 @[calc8x8.scala 63:36]
    node _A_3_weight_T_19 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp2[9] <= _A_3_weight_T_19 @[calc8x8.scala 63:36]
    node _A_3_weight_T_20 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp1[0] <= _A_3_weight_T_20 @[calc8x8.scala 63:36]
    node _A_3_weight_T_21 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp1[1] <= _A_3_weight_T_21 @[calc8x8.scala 63:36]
    node _A_3_weight_T_22 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp1[2] <= _A_3_weight_T_22 @[calc8x8.scala 63:36]
    node _A_3_weight_T_23 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp1[3] <= _A_3_weight_T_23 @[calc8x8.scala 63:36]
    node _A_3_weight_T_24 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp1[4] <= _A_3_weight_T_24 @[calc8x8.scala 63:36]
    node _A_3_weight_T_25 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp1[5] <= _A_3_weight_T_25 @[calc8x8.scala 63:36]
    node _A_3_weight_T_26 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp1[6] <= _A_3_weight_T_26 @[calc8x8.scala 63:36]
    node _A_3_weight_T_27 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp1[7] <= _A_3_weight_T_27 @[calc8x8.scala 63:36]
    node _A_3_weight_T_28 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp1[8] <= _A_3_weight_T_28 @[calc8x8.scala 63:36]
    node _A_3_weight_T_29 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.comp1[9] <= _A_3_weight_T_29 @[calc8x8.scala 63:36]
    node _A_3_weight_T_30 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[0] <= _A_3_weight_T_30 @[calc8x8.scala 63:36]
    node _A_3_weight_T_31 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[1] <= _A_3_weight_T_31 @[calc8x8.scala 63:36]
    node _A_3_weight_T_32 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[2] <= _A_3_weight_T_32 @[calc8x8.scala 63:36]
    node _A_3_weight_T_33 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[3] <= _A_3_weight_T_33 @[calc8x8.scala 63:36]
    node _A_3_weight_T_34 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[4] <= _A_3_weight_T_34 @[calc8x8.scala 63:36]
    node _A_3_weight_T_35 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[5] <= _A_3_weight_T_35 @[calc8x8.scala 63:36]
    node _A_3_weight_T_36 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[6] <= _A_3_weight_T_36 @[calc8x8.scala 63:36]
    node _A_3_weight_T_37 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[7] <= _A_3_weight_T_37 @[calc8x8.scala 63:36]
    node _A_3_weight_T_38 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[8] <= _A_3_weight_T_38 @[calc8x8.scala 63:36]
    node _A_3_weight_T_39 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[9] <= _A_3_weight_T_39 @[calc8x8.scala 63:36]
    node _A_3_weight_T_40 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[10] <= _A_3_weight_T_40 @[calc8x8.scala 63:36]
    node _A_3_weight_T_41 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[11] <= _A_3_weight_T_41 @[calc8x8.scala 63:36]
    node _A_3_weight_T_42 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[12] <= _A_3_weight_T_42 @[calc8x8.scala 63:36]
    node _A_3_weight_T_43 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[13] <= _A_3_weight_T_43 @[calc8x8.scala 63:36]
    node _A_3_weight_T_44 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[14] <= _A_3_weight_T_44 @[calc8x8.scala 63:36]
    node _A_3_weight_T_45 = asSInt(UInt<18>("h00")) @[calc8x8.scala 63:36]
    _A_3_weight_WIRE.real[15] <= _A_3_weight_T_45 @[calc8x8.scala 63:36]
    A[3].weight.comp3[0] <= _A_3_weight_WIRE.comp3[0] @[calc8x8.scala 63:21]
    A[3].weight.comp3[1] <= _A_3_weight_WIRE.comp3[1] @[calc8x8.scala 63:21]
    A[3].weight.comp3[2] <= _A_3_weight_WIRE.comp3[2] @[calc8x8.scala 63:21]
    A[3].weight.comp3[3] <= _A_3_weight_WIRE.comp3[3] @[calc8x8.scala 63:21]
    A[3].weight.comp3[4] <= _A_3_weight_WIRE.comp3[4] @[calc8x8.scala 63:21]
    A[3].weight.comp3[5] <= _A_3_weight_WIRE.comp3[5] @[calc8x8.scala 63:21]
    A[3].weight.comp3[6] <= _A_3_weight_WIRE.comp3[6] @[calc8x8.scala 63:21]
    A[3].weight.comp3[7] <= _A_3_weight_WIRE.comp3[7] @[calc8x8.scala 63:21]
    A[3].weight.comp3[8] <= _A_3_weight_WIRE.comp3[8] @[calc8x8.scala 63:21]
    A[3].weight.comp3[9] <= _A_3_weight_WIRE.comp3[9] @[calc8x8.scala 63:21]
    A[3].weight.comp2[0] <= _A_3_weight_WIRE.comp2[0] @[calc8x8.scala 63:21]
    A[3].weight.comp2[1] <= _A_3_weight_WIRE.comp2[1] @[calc8x8.scala 63:21]
    A[3].weight.comp2[2] <= _A_3_weight_WIRE.comp2[2] @[calc8x8.scala 63:21]
    A[3].weight.comp2[3] <= _A_3_weight_WIRE.comp2[3] @[calc8x8.scala 63:21]
    A[3].weight.comp2[4] <= _A_3_weight_WIRE.comp2[4] @[calc8x8.scala 63:21]
    A[3].weight.comp2[5] <= _A_3_weight_WIRE.comp2[5] @[calc8x8.scala 63:21]
    A[3].weight.comp2[6] <= _A_3_weight_WIRE.comp2[6] @[calc8x8.scala 63:21]
    A[3].weight.comp2[7] <= _A_3_weight_WIRE.comp2[7] @[calc8x8.scala 63:21]
    A[3].weight.comp2[8] <= _A_3_weight_WIRE.comp2[8] @[calc8x8.scala 63:21]
    A[3].weight.comp2[9] <= _A_3_weight_WIRE.comp2[9] @[calc8x8.scala 63:21]
    A[3].weight.comp1[0] <= _A_3_weight_WIRE.comp1[0] @[calc8x8.scala 63:21]
    A[3].weight.comp1[1] <= _A_3_weight_WIRE.comp1[1] @[calc8x8.scala 63:21]
    A[3].weight.comp1[2] <= _A_3_weight_WIRE.comp1[2] @[calc8x8.scala 63:21]
    A[3].weight.comp1[3] <= _A_3_weight_WIRE.comp1[3] @[calc8x8.scala 63:21]
    A[3].weight.comp1[4] <= _A_3_weight_WIRE.comp1[4] @[calc8x8.scala 63:21]
    A[3].weight.comp1[5] <= _A_3_weight_WIRE.comp1[5] @[calc8x8.scala 63:21]
    A[3].weight.comp1[6] <= _A_3_weight_WIRE.comp1[6] @[calc8x8.scala 63:21]
    A[3].weight.comp1[7] <= _A_3_weight_WIRE.comp1[7] @[calc8x8.scala 63:21]
    A[3].weight.comp1[8] <= _A_3_weight_WIRE.comp1[8] @[calc8x8.scala 63:21]
    A[3].weight.comp1[9] <= _A_3_weight_WIRE.comp1[9] @[calc8x8.scala 63:21]
    A[3].weight.real[0] <= _A_3_weight_WIRE.real[0] @[calc8x8.scala 63:21]
    A[3].weight.real[1] <= _A_3_weight_WIRE.real[1] @[calc8x8.scala 63:21]
    A[3].weight.real[2] <= _A_3_weight_WIRE.real[2] @[calc8x8.scala 63:21]
    A[3].weight.real[3] <= _A_3_weight_WIRE.real[3] @[calc8x8.scala 63:21]
    A[3].weight.real[4] <= _A_3_weight_WIRE.real[4] @[calc8x8.scala 63:21]
    A[3].weight.real[5] <= _A_3_weight_WIRE.real[5] @[calc8x8.scala 63:21]
    A[3].weight.real[6] <= _A_3_weight_WIRE.real[6] @[calc8x8.scala 63:21]
    A[3].weight.real[7] <= _A_3_weight_WIRE.real[7] @[calc8x8.scala 63:21]
    A[3].weight.real[8] <= _A_3_weight_WIRE.real[8] @[calc8x8.scala 63:21]
    A[3].weight.real[9] <= _A_3_weight_WIRE.real[9] @[calc8x8.scala 63:21]
    A[3].weight.real[10] <= _A_3_weight_WIRE.real[10] @[calc8x8.scala 63:21]
    A[3].weight.real[11] <= _A_3_weight_WIRE.real[11] @[calc8x8.scala 63:21]
    A[3].weight.real[12] <= _A_3_weight_WIRE.real[12] @[calc8x8.scala 63:21]
    A[3].weight.real[13] <= _A_3_weight_WIRE.real[13] @[calc8x8.scala 63:21]
    A[3].weight.real[14] <= _A_3_weight_WIRE.real[14] @[calc8x8.scala 63:21]
    A[3].weight.real[15] <= _A_3_weight_WIRE.real[15] @[calc8x8.scala 63:21]
    A[3].valid_in <= UInt<1>("h00") @[calc8x8.scala 64:23]
    wire _io_output_WIRE : {mat : SInt<37>[64]} @[calc8x8.scala 67:30]
    node _io_output_T = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[0] <= _io_output_T @[calc8x8.scala 67:30]
    node _io_output_T_1 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[1] <= _io_output_T_1 @[calc8x8.scala 67:30]
    node _io_output_T_2 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[2] <= _io_output_T_2 @[calc8x8.scala 67:30]
    node _io_output_T_3 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[3] <= _io_output_T_3 @[calc8x8.scala 67:30]
    node _io_output_T_4 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[4] <= _io_output_T_4 @[calc8x8.scala 67:30]
    node _io_output_T_5 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[5] <= _io_output_T_5 @[calc8x8.scala 67:30]
    node _io_output_T_6 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[6] <= _io_output_T_6 @[calc8x8.scala 67:30]
    node _io_output_T_7 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[7] <= _io_output_T_7 @[calc8x8.scala 67:30]
    node _io_output_T_8 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[8] <= _io_output_T_8 @[calc8x8.scala 67:30]
    node _io_output_T_9 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[9] <= _io_output_T_9 @[calc8x8.scala 67:30]
    node _io_output_T_10 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[10] <= _io_output_T_10 @[calc8x8.scala 67:30]
    node _io_output_T_11 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[11] <= _io_output_T_11 @[calc8x8.scala 67:30]
    node _io_output_T_12 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[12] <= _io_output_T_12 @[calc8x8.scala 67:30]
    node _io_output_T_13 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[13] <= _io_output_T_13 @[calc8x8.scala 67:30]
    node _io_output_T_14 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[14] <= _io_output_T_14 @[calc8x8.scala 67:30]
    node _io_output_T_15 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[15] <= _io_output_T_15 @[calc8x8.scala 67:30]
    node _io_output_T_16 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[16] <= _io_output_T_16 @[calc8x8.scala 67:30]
    node _io_output_T_17 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[17] <= _io_output_T_17 @[calc8x8.scala 67:30]
    node _io_output_T_18 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[18] <= _io_output_T_18 @[calc8x8.scala 67:30]
    node _io_output_T_19 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[19] <= _io_output_T_19 @[calc8x8.scala 67:30]
    node _io_output_T_20 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[20] <= _io_output_T_20 @[calc8x8.scala 67:30]
    node _io_output_T_21 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[21] <= _io_output_T_21 @[calc8x8.scala 67:30]
    node _io_output_T_22 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[22] <= _io_output_T_22 @[calc8x8.scala 67:30]
    node _io_output_T_23 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[23] <= _io_output_T_23 @[calc8x8.scala 67:30]
    node _io_output_T_24 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[24] <= _io_output_T_24 @[calc8x8.scala 67:30]
    node _io_output_T_25 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[25] <= _io_output_T_25 @[calc8x8.scala 67:30]
    node _io_output_T_26 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[26] <= _io_output_T_26 @[calc8x8.scala 67:30]
    node _io_output_T_27 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[27] <= _io_output_T_27 @[calc8x8.scala 67:30]
    node _io_output_T_28 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[28] <= _io_output_T_28 @[calc8x8.scala 67:30]
    node _io_output_T_29 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[29] <= _io_output_T_29 @[calc8x8.scala 67:30]
    node _io_output_T_30 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[30] <= _io_output_T_30 @[calc8x8.scala 67:30]
    node _io_output_T_31 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[31] <= _io_output_T_31 @[calc8x8.scala 67:30]
    node _io_output_T_32 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[32] <= _io_output_T_32 @[calc8x8.scala 67:30]
    node _io_output_T_33 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[33] <= _io_output_T_33 @[calc8x8.scala 67:30]
    node _io_output_T_34 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[34] <= _io_output_T_34 @[calc8x8.scala 67:30]
    node _io_output_T_35 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[35] <= _io_output_T_35 @[calc8x8.scala 67:30]
    node _io_output_T_36 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[36] <= _io_output_T_36 @[calc8x8.scala 67:30]
    node _io_output_T_37 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[37] <= _io_output_T_37 @[calc8x8.scala 67:30]
    node _io_output_T_38 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[38] <= _io_output_T_38 @[calc8x8.scala 67:30]
    node _io_output_T_39 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[39] <= _io_output_T_39 @[calc8x8.scala 67:30]
    node _io_output_T_40 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[40] <= _io_output_T_40 @[calc8x8.scala 67:30]
    node _io_output_T_41 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[41] <= _io_output_T_41 @[calc8x8.scala 67:30]
    node _io_output_T_42 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[42] <= _io_output_T_42 @[calc8x8.scala 67:30]
    node _io_output_T_43 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[43] <= _io_output_T_43 @[calc8x8.scala 67:30]
    node _io_output_T_44 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[44] <= _io_output_T_44 @[calc8x8.scala 67:30]
    node _io_output_T_45 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[45] <= _io_output_T_45 @[calc8x8.scala 67:30]
    node _io_output_T_46 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[46] <= _io_output_T_46 @[calc8x8.scala 67:30]
    node _io_output_T_47 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[47] <= _io_output_T_47 @[calc8x8.scala 67:30]
    node _io_output_T_48 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[48] <= _io_output_T_48 @[calc8x8.scala 67:30]
    node _io_output_T_49 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[49] <= _io_output_T_49 @[calc8x8.scala 67:30]
    node _io_output_T_50 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[50] <= _io_output_T_50 @[calc8x8.scala 67:30]
    node _io_output_T_51 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[51] <= _io_output_T_51 @[calc8x8.scala 67:30]
    node _io_output_T_52 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[52] <= _io_output_T_52 @[calc8x8.scala 67:30]
    node _io_output_T_53 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[53] <= _io_output_T_53 @[calc8x8.scala 67:30]
    node _io_output_T_54 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[54] <= _io_output_T_54 @[calc8x8.scala 67:30]
    node _io_output_T_55 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[55] <= _io_output_T_55 @[calc8x8.scala 67:30]
    node _io_output_T_56 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[56] <= _io_output_T_56 @[calc8x8.scala 67:30]
    node _io_output_T_57 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[57] <= _io_output_T_57 @[calc8x8.scala 67:30]
    node _io_output_T_58 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[58] <= _io_output_T_58 @[calc8x8.scala 67:30]
    node _io_output_T_59 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[59] <= _io_output_T_59 @[calc8x8.scala 67:30]
    node _io_output_T_60 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[60] <= _io_output_T_60 @[calc8x8.scala 67:30]
    node _io_output_T_61 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[61] <= _io_output_T_61 @[calc8x8.scala 67:30]
    node _io_output_T_62 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[62] <= _io_output_T_62 @[calc8x8.scala 67:30]
    node _io_output_T_63 = asSInt(UInt<37>("h00")) @[calc8x8.scala 67:30]
    _io_output_WIRE.mat[63] <= _io_output_T_63 @[calc8x8.scala 67:30]
    io.output.mat[0] <= _io_output_WIRE.mat[0] @[calc8x8.scala 67:15]
    io.output.mat[1] <= _io_output_WIRE.mat[1] @[calc8x8.scala 67:15]
    io.output.mat[2] <= _io_output_WIRE.mat[2] @[calc8x8.scala 67:15]
    io.output.mat[3] <= _io_output_WIRE.mat[3] @[calc8x8.scala 67:15]
    io.output.mat[4] <= _io_output_WIRE.mat[4] @[calc8x8.scala 67:15]
    io.output.mat[5] <= _io_output_WIRE.mat[5] @[calc8x8.scala 67:15]
    io.output.mat[6] <= _io_output_WIRE.mat[6] @[calc8x8.scala 67:15]
    io.output.mat[7] <= _io_output_WIRE.mat[7] @[calc8x8.scala 67:15]
    io.output.mat[8] <= _io_output_WIRE.mat[8] @[calc8x8.scala 67:15]
    io.output.mat[9] <= _io_output_WIRE.mat[9] @[calc8x8.scala 67:15]
    io.output.mat[10] <= _io_output_WIRE.mat[10] @[calc8x8.scala 67:15]
    io.output.mat[11] <= _io_output_WIRE.mat[11] @[calc8x8.scala 67:15]
    io.output.mat[12] <= _io_output_WIRE.mat[12] @[calc8x8.scala 67:15]
    io.output.mat[13] <= _io_output_WIRE.mat[13] @[calc8x8.scala 67:15]
    io.output.mat[14] <= _io_output_WIRE.mat[14] @[calc8x8.scala 67:15]
    io.output.mat[15] <= _io_output_WIRE.mat[15] @[calc8x8.scala 67:15]
    io.output.mat[16] <= _io_output_WIRE.mat[16] @[calc8x8.scala 67:15]
    io.output.mat[17] <= _io_output_WIRE.mat[17] @[calc8x8.scala 67:15]
    io.output.mat[18] <= _io_output_WIRE.mat[18] @[calc8x8.scala 67:15]
    io.output.mat[19] <= _io_output_WIRE.mat[19] @[calc8x8.scala 67:15]
    io.output.mat[20] <= _io_output_WIRE.mat[20] @[calc8x8.scala 67:15]
    io.output.mat[21] <= _io_output_WIRE.mat[21] @[calc8x8.scala 67:15]
    io.output.mat[22] <= _io_output_WIRE.mat[22] @[calc8x8.scala 67:15]
    io.output.mat[23] <= _io_output_WIRE.mat[23] @[calc8x8.scala 67:15]
    io.output.mat[24] <= _io_output_WIRE.mat[24] @[calc8x8.scala 67:15]
    io.output.mat[25] <= _io_output_WIRE.mat[25] @[calc8x8.scala 67:15]
    io.output.mat[26] <= _io_output_WIRE.mat[26] @[calc8x8.scala 67:15]
    io.output.mat[27] <= _io_output_WIRE.mat[27] @[calc8x8.scala 67:15]
    io.output.mat[28] <= _io_output_WIRE.mat[28] @[calc8x8.scala 67:15]
    io.output.mat[29] <= _io_output_WIRE.mat[29] @[calc8x8.scala 67:15]
    io.output.mat[30] <= _io_output_WIRE.mat[30] @[calc8x8.scala 67:15]
    io.output.mat[31] <= _io_output_WIRE.mat[31] @[calc8x8.scala 67:15]
    io.output.mat[32] <= _io_output_WIRE.mat[32] @[calc8x8.scala 67:15]
    io.output.mat[33] <= _io_output_WIRE.mat[33] @[calc8x8.scala 67:15]
    io.output.mat[34] <= _io_output_WIRE.mat[34] @[calc8x8.scala 67:15]
    io.output.mat[35] <= _io_output_WIRE.mat[35] @[calc8x8.scala 67:15]
    io.output.mat[36] <= _io_output_WIRE.mat[36] @[calc8x8.scala 67:15]
    io.output.mat[37] <= _io_output_WIRE.mat[37] @[calc8x8.scala 67:15]
    io.output.mat[38] <= _io_output_WIRE.mat[38] @[calc8x8.scala 67:15]
    io.output.mat[39] <= _io_output_WIRE.mat[39] @[calc8x8.scala 67:15]
    io.output.mat[40] <= _io_output_WIRE.mat[40] @[calc8x8.scala 67:15]
    io.output.mat[41] <= _io_output_WIRE.mat[41] @[calc8x8.scala 67:15]
    io.output.mat[42] <= _io_output_WIRE.mat[42] @[calc8x8.scala 67:15]
    io.output.mat[43] <= _io_output_WIRE.mat[43] @[calc8x8.scala 67:15]
    io.output.mat[44] <= _io_output_WIRE.mat[44] @[calc8x8.scala 67:15]
    io.output.mat[45] <= _io_output_WIRE.mat[45] @[calc8x8.scala 67:15]
    io.output.mat[46] <= _io_output_WIRE.mat[46] @[calc8x8.scala 67:15]
    io.output.mat[47] <= _io_output_WIRE.mat[47] @[calc8x8.scala 67:15]
    io.output.mat[48] <= _io_output_WIRE.mat[48] @[calc8x8.scala 67:15]
    io.output.mat[49] <= _io_output_WIRE.mat[49] @[calc8x8.scala 67:15]
    io.output.mat[50] <= _io_output_WIRE.mat[50] @[calc8x8.scala 67:15]
    io.output.mat[51] <= _io_output_WIRE.mat[51] @[calc8x8.scala 67:15]
    io.output.mat[52] <= _io_output_WIRE.mat[52] @[calc8x8.scala 67:15]
    io.output.mat[53] <= _io_output_WIRE.mat[53] @[calc8x8.scala 67:15]
    io.output.mat[54] <= _io_output_WIRE.mat[54] @[calc8x8.scala 67:15]
    io.output.mat[55] <= _io_output_WIRE.mat[55] @[calc8x8.scala 67:15]
    io.output.mat[56] <= _io_output_WIRE.mat[56] @[calc8x8.scala 67:15]
    io.output.mat[57] <= _io_output_WIRE.mat[57] @[calc8x8.scala 67:15]
    io.output.mat[58] <= _io_output_WIRE.mat[58] @[calc8x8.scala 67:15]
    io.output.mat[59] <= _io_output_WIRE.mat[59] @[calc8x8.scala 67:15]
    io.output.mat[60] <= _io_output_WIRE.mat[60] @[calc8x8.scala 67:15]
    io.output.mat[61] <= _io_output_WIRE.mat[61] @[calc8x8.scala 67:15]
    io.output.mat[62] <= _io_output_WIRE.mat[62] @[calc8x8.scala 67:15]
    io.output.mat[63] <= _io_output_WIRE.mat[63] @[calc8x8.scala 67:15]
    io.valid_out <= UInt<1>("h00") @[calc8x8.scala 68:18]
    wire B : SInt<16>[3][3] @[calc8x8.scala 70:17]
    wire __B_WIRE : SInt<18>[3][6] @[calc8x8.scala 71:34]
    node __B_T = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[0][0] <= __B_T @[calc8x8.scala 71:34]
    node __B_T_1 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[0][1] <= __B_T_1 @[calc8x8.scala 71:34]
    node __B_T_2 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[0][2] <= __B_T_2 @[calc8x8.scala 71:34]
    node __B_T_3 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[1][0] <= __B_T_3 @[calc8x8.scala 71:34]
    node __B_T_4 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[1][1] <= __B_T_4 @[calc8x8.scala 71:34]
    node __B_T_5 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[1][2] <= __B_T_5 @[calc8x8.scala 71:34]
    node __B_T_6 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[2][0] <= __B_T_6 @[calc8x8.scala 71:34]
    node __B_T_7 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[2][1] <= __B_T_7 @[calc8x8.scala 71:34]
    node __B_T_8 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[2][2] <= __B_T_8 @[calc8x8.scala 71:34]
    node __B_T_9 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[3][0] <= __B_T_9 @[calc8x8.scala 71:34]
    node __B_T_10 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[3][1] <= __B_T_10 @[calc8x8.scala 71:34]
    node __B_T_11 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[3][2] <= __B_T_11 @[calc8x8.scala 71:34]
    node __B_T_12 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[4][0] <= __B_T_12 @[calc8x8.scala 71:34]
    node __B_T_13 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[4][1] <= __B_T_13 @[calc8x8.scala 71:34]
    node __B_T_14 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[4][2] <= __B_T_14 @[calc8x8.scala 71:34]
    node __B_T_15 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[5][0] <= __B_T_15 @[calc8x8.scala 71:34]
    node __B_T_16 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[5][1] <= __B_T_16 @[calc8x8.scala 71:34]
    node __B_T_17 = asSInt(UInt<18>("h00")) @[calc8x8.scala 71:34]
    __B_WIRE[5][2] <= __B_T_17 @[calc8x8.scala 71:34]
    reg _B : SInt<18>[3][6], clock with : (reset => (reset, __B_WIRE)) @[calc8x8.scala 71:21]
    wire __Bi_WIRE : SInt<18>[3][6] @[calc8x8.scala 72:35]
    node __Bi_T = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[0][0] <= __Bi_T @[calc8x8.scala 72:35]
    node __Bi_T_1 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[0][1] <= __Bi_T_1 @[calc8x8.scala 72:35]
    node __Bi_T_2 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[0][2] <= __Bi_T_2 @[calc8x8.scala 72:35]
    node __Bi_T_3 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[1][0] <= __Bi_T_3 @[calc8x8.scala 72:35]
    node __Bi_T_4 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[1][1] <= __Bi_T_4 @[calc8x8.scala 72:35]
    node __Bi_T_5 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[1][2] <= __Bi_T_5 @[calc8x8.scala 72:35]
    node __Bi_T_6 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[2][0] <= __Bi_T_6 @[calc8x8.scala 72:35]
    node __Bi_T_7 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[2][1] <= __Bi_T_7 @[calc8x8.scala 72:35]
    node __Bi_T_8 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[2][2] <= __Bi_T_8 @[calc8x8.scala 72:35]
    node __Bi_T_9 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[3][0] <= __Bi_T_9 @[calc8x8.scala 72:35]
    node __Bi_T_10 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[3][1] <= __Bi_T_10 @[calc8x8.scala 72:35]
    node __Bi_T_11 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[3][2] <= __Bi_T_11 @[calc8x8.scala 72:35]
    node __Bi_T_12 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[4][0] <= __Bi_T_12 @[calc8x8.scala 72:35]
    node __Bi_T_13 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[4][1] <= __Bi_T_13 @[calc8x8.scala 72:35]
    node __Bi_T_14 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[4][2] <= __Bi_T_14 @[calc8x8.scala 72:35]
    node __Bi_T_15 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[5][0] <= __Bi_T_15 @[calc8x8.scala 72:35]
    node __Bi_T_16 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[5][1] <= __Bi_T_16 @[calc8x8.scala 72:35]
    node __Bi_T_17 = asSInt(UInt<18>("h00")) @[calc8x8.scala 72:35]
    __Bi_WIRE[5][2] <= __Bi_T_17 @[calc8x8.scala 72:35]
    reg _Bi : SInt<18>[3][6], clock with : (reset => (reset, __Bi_WIRE)) @[calc8x8.scala 72:22]
    B[0][0] <= io.weight[0].real[0] @[calc8x8.scala 75:21]
    B[0][1] <= io.weight[0].real[1] @[calc8x8.scala 75:21]
    B[0][2] <= io.weight[0].real[2] @[calc8x8.scala 75:21]
    B[1][0] <= io.weight[0].real[3] @[calc8x8.scala 75:21]
    B[1][1] <= io.weight[0].real[4] @[calc8x8.scala 75:21]
    B[1][2] <= io.weight[0].real[5] @[calc8x8.scala 75:21]
    B[2][0] <= io.weight[0].real[6] @[calc8x8.scala 75:21]
    B[2][1] <= io.weight[0].real[7] @[calc8x8.scala 75:21]
    B[2][2] <= io.weight[0].real[8] @[calc8x8.scala 75:21]
    _B[0][0] <= B[0][0] @[calc8x8.scala 78:18]
    node __B_1_0_T = add(B[0][0], B[1][0]) @[calc8x8.scala 79:28]
    node __B_1_0_T_1 = tail(__B_1_0_T, 1) @[calc8x8.scala 79:28]
    node __B_1_0_T_2 = asSInt(__B_1_0_T_1) @[calc8x8.scala 79:28]
    node __B_1_0_T_3 = add(__B_1_0_T_2, B[2][0]) @[calc8x8.scala 79:36]
    node __B_1_0_T_4 = tail(__B_1_0_T_3, 1) @[calc8x8.scala 79:36]
    node __B_1_0_T_5 = asSInt(__B_1_0_T_4) @[calc8x8.scala 79:36]
    _B[1][0] <= __B_1_0_T_5 @[calc8x8.scala 79:18]
    node __B_2_0_T = sub(B[0][0], B[1][0]) @[calc8x8.scala 80:28]
    node __B_2_0_T_1 = tail(__B_2_0_T, 1) @[calc8x8.scala 80:28]
    node __B_2_0_T_2 = asSInt(__B_2_0_T_1) @[calc8x8.scala 80:28]
    node __B_2_0_T_3 = add(__B_2_0_T_2, B[2][0]) @[calc8x8.scala 80:36]
    node __B_2_0_T_4 = tail(__B_2_0_T_3, 1) @[calc8x8.scala 80:36]
    node __B_2_0_T_5 = asSInt(__B_2_0_T_4) @[calc8x8.scala 80:36]
    _B[2][0] <= __B_2_0_T_5 @[calc8x8.scala 80:18]
    node __B_3_0_T = sub(B[0][0], B[2][0]) @[calc8x8.scala 81:28]
    node __B_3_0_T_1 = tail(__B_3_0_T, 1) @[calc8x8.scala 81:28]
    node __B_3_0_T_2 = asSInt(__B_3_0_T_1) @[calc8x8.scala 81:28]
    _B[3][0] <= __B_3_0_T_2 @[calc8x8.scala 81:18]
    node __B_4_0_T = sub(B[0][0], B[2][0]) @[calc8x8.scala 82:28]
    node __B_4_0_T_1 = tail(__B_4_0_T, 1) @[calc8x8.scala 82:28]
    node __B_4_0_T_2 = asSInt(__B_4_0_T_1) @[calc8x8.scala 82:28]
    _B[4][0] <= __B_4_0_T_2 @[calc8x8.scala 82:18]
    _B[5][0] <= B[2][0] @[calc8x8.scala 83:18]
    _Bi[3][0] <= B[1][0] @[calc8x8.scala 84:19]
    node __Bi_4_0_T = sub(asSInt(UInt<1>("h00")), B[1][0]) @[calc8x8.scala 85:22]
    node __Bi_4_0_T_1 = tail(__Bi_4_0_T, 1) @[calc8x8.scala 85:22]
    node __Bi_4_0_T_2 = asSInt(__Bi_4_0_T_1) @[calc8x8.scala 85:22]
    _Bi[4][0] <= __Bi_4_0_T_2 @[calc8x8.scala 85:19]
    _B[0][1] <= B[0][1] @[calc8x8.scala 78:18]
    node __B_1_1_T = add(B[0][1], B[1][1]) @[calc8x8.scala 79:28]
    node __B_1_1_T_1 = tail(__B_1_1_T, 1) @[calc8x8.scala 79:28]
    node __B_1_1_T_2 = asSInt(__B_1_1_T_1) @[calc8x8.scala 79:28]
    node __B_1_1_T_3 = add(__B_1_1_T_2, B[2][1]) @[calc8x8.scala 79:36]
    node __B_1_1_T_4 = tail(__B_1_1_T_3, 1) @[calc8x8.scala 79:36]
    node __B_1_1_T_5 = asSInt(__B_1_1_T_4) @[calc8x8.scala 79:36]
    _B[1][1] <= __B_1_1_T_5 @[calc8x8.scala 79:18]
    node __B_2_1_T = sub(B[0][1], B[1][1]) @[calc8x8.scala 80:28]
    node __B_2_1_T_1 = tail(__B_2_1_T, 1) @[calc8x8.scala 80:28]
    node __B_2_1_T_2 = asSInt(__B_2_1_T_1) @[calc8x8.scala 80:28]
    node __B_2_1_T_3 = add(__B_2_1_T_2, B[2][1]) @[calc8x8.scala 80:36]
    node __B_2_1_T_4 = tail(__B_2_1_T_3, 1) @[calc8x8.scala 80:36]
    node __B_2_1_T_5 = asSInt(__B_2_1_T_4) @[calc8x8.scala 80:36]
    _B[2][1] <= __B_2_1_T_5 @[calc8x8.scala 80:18]
    node __B_3_1_T = sub(B[0][1], B[2][1]) @[calc8x8.scala 81:28]
    node __B_3_1_T_1 = tail(__B_3_1_T, 1) @[calc8x8.scala 81:28]
    node __B_3_1_T_2 = asSInt(__B_3_1_T_1) @[calc8x8.scala 81:28]
    _B[3][1] <= __B_3_1_T_2 @[calc8x8.scala 81:18]
    node __B_4_1_T = sub(B[0][1], B[2][1]) @[calc8x8.scala 82:28]
    node __B_4_1_T_1 = tail(__B_4_1_T, 1) @[calc8x8.scala 82:28]
    node __B_4_1_T_2 = asSInt(__B_4_1_T_1) @[calc8x8.scala 82:28]
    _B[4][1] <= __B_4_1_T_2 @[calc8x8.scala 82:18]
    _B[5][1] <= B[2][1] @[calc8x8.scala 83:18]
    _Bi[3][1] <= B[1][1] @[calc8x8.scala 84:19]
    node __Bi_4_1_T = sub(asSInt(UInt<1>("h00")), B[1][1]) @[calc8x8.scala 85:22]
    node __Bi_4_1_T_1 = tail(__Bi_4_1_T, 1) @[calc8x8.scala 85:22]
    node __Bi_4_1_T_2 = asSInt(__Bi_4_1_T_1) @[calc8x8.scala 85:22]
    _Bi[4][1] <= __Bi_4_1_T_2 @[calc8x8.scala 85:19]
    _B[0][2] <= B[0][2] @[calc8x8.scala 78:18]
    node __B_1_2_T = add(B[0][2], B[1][2]) @[calc8x8.scala 79:28]
    node __B_1_2_T_1 = tail(__B_1_2_T, 1) @[calc8x8.scala 79:28]
    node __B_1_2_T_2 = asSInt(__B_1_2_T_1) @[calc8x8.scala 79:28]
    node __B_1_2_T_3 = add(__B_1_2_T_2, B[2][2]) @[calc8x8.scala 79:36]
    node __B_1_2_T_4 = tail(__B_1_2_T_3, 1) @[calc8x8.scala 79:36]
    node __B_1_2_T_5 = asSInt(__B_1_2_T_4) @[calc8x8.scala 79:36]
    _B[1][2] <= __B_1_2_T_5 @[calc8x8.scala 79:18]
    node __B_2_2_T = sub(B[0][2], B[1][2]) @[calc8x8.scala 80:28]
    node __B_2_2_T_1 = tail(__B_2_2_T, 1) @[calc8x8.scala 80:28]
    node __B_2_2_T_2 = asSInt(__B_2_2_T_1) @[calc8x8.scala 80:28]
    node __B_2_2_T_3 = add(__B_2_2_T_2, B[2][2]) @[calc8x8.scala 80:36]
    node __B_2_2_T_4 = tail(__B_2_2_T_3, 1) @[calc8x8.scala 80:36]
    node __B_2_2_T_5 = asSInt(__B_2_2_T_4) @[calc8x8.scala 80:36]
    _B[2][2] <= __B_2_2_T_5 @[calc8x8.scala 80:18]
    node __B_3_2_T = sub(B[0][2], B[2][2]) @[calc8x8.scala 81:28]
    node __B_3_2_T_1 = tail(__B_3_2_T, 1) @[calc8x8.scala 81:28]
    node __B_3_2_T_2 = asSInt(__B_3_2_T_1) @[calc8x8.scala 81:28]
    _B[3][2] <= __B_3_2_T_2 @[calc8x8.scala 81:18]
    node __B_4_2_T = sub(B[0][2], B[2][2]) @[calc8x8.scala 82:28]
    node __B_4_2_T_1 = tail(__B_4_2_T, 1) @[calc8x8.scala 82:28]
    node __B_4_2_T_2 = asSInt(__B_4_2_T_1) @[calc8x8.scala 82:28]
    _B[4][2] <= __B_4_2_T_2 @[calc8x8.scala 82:18]
    _B[5][2] <= B[2][2] @[calc8x8.scala 83:18]
    _Bi[3][2] <= B[1][2] @[calc8x8.scala 84:19]
    node __Bi_4_2_T = sub(asSInt(UInt<1>("h00")), B[1][2]) @[calc8x8.scala 85:22]
    node __Bi_4_2_T_1 = tail(__Bi_4_2_T, 1) @[calc8x8.scala 85:22]
    node __Bi_4_2_T_2 = asSInt(__Bi_4_2_T_1) @[calc8x8.scala 85:22]
    _Bi[4][2] <= __Bi_4_2_T_2 @[calc8x8.scala 85:19]
    wire ___B_WIRE : SInt<19>[6][6] @[calc8x8.scala 89:35]
    node ___B_T = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[0][0] <= ___B_T @[calc8x8.scala 89:35]
    node ___B_T_1 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[0][1] <= ___B_T_1 @[calc8x8.scala 89:35]
    node ___B_T_2 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[0][2] <= ___B_T_2 @[calc8x8.scala 89:35]
    node ___B_T_3 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[0][3] <= ___B_T_3 @[calc8x8.scala 89:35]
    node ___B_T_4 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[0][4] <= ___B_T_4 @[calc8x8.scala 89:35]
    node ___B_T_5 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[0][5] <= ___B_T_5 @[calc8x8.scala 89:35]
    node ___B_T_6 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[1][0] <= ___B_T_6 @[calc8x8.scala 89:35]
    node ___B_T_7 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[1][1] <= ___B_T_7 @[calc8x8.scala 89:35]
    node ___B_T_8 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[1][2] <= ___B_T_8 @[calc8x8.scala 89:35]
    node ___B_T_9 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[1][3] <= ___B_T_9 @[calc8x8.scala 89:35]
    node ___B_T_10 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[1][4] <= ___B_T_10 @[calc8x8.scala 89:35]
    node ___B_T_11 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[1][5] <= ___B_T_11 @[calc8x8.scala 89:35]
    node ___B_T_12 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[2][0] <= ___B_T_12 @[calc8x8.scala 89:35]
    node ___B_T_13 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[2][1] <= ___B_T_13 @[calc8x8.scala 89:35]
    node ___B_T_14 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[2][2] <= ___B_T_14 @[calc8x8.scala 89:35]
    node ___B_T_15 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[2][3] <= ___B_T_15 @[calc8x8.scala 89:35]
    node ___B_T_16 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[2][4] <= ___B_T_16 @[calc8x8.scala 89:35]
    node ___B_T_17 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[2][5] <= ___B_T_17 @[calc8x8.scala 89:35]
    node ___B_T_18 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[3][0] <= ___B_T_18 @[calc8x8.scala 89:35]
    node ___B_T_19 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[3][1] <= ___B_T_19 @[calc8x8.scala 89:35]
    node ___B_T_20 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[3][2] <= ___B_T_20 @[calc8x8.scala 89:35]
    node ___B_T_21 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[3][3] <= ___B_T_21 @[calc8x8.scala 89:35]
    node ___B_T_22 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[3][4] <= ___B_T_22 @[calc8x8.scala 89:35]
    node ___B_T_23 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[3][5] <= ___B_T_23 @[calc8x8.scala 89:35]
    node ___B_T_24 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[4][0] <= ___B_T_24 @[calc8x8.scala 89:35]
    node ___B_T_25 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[4][1] <= ___B_T_25 @[calc8x8.scala 89:35]
    node ___B_T_26 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[4][2] <= ___B_T_26 @[calc8x8.scala 89:35]
    node ___B_T_27 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[4][3] <= ___B_T_27 @[calc8x8.scala 89:35]
    node ___B_T_28 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[4][4] <= ___B_T_28 @[calc8x8.scala 89:35]
    node ___B_T_29 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[4][5] <= ___B_T_29 @[calc8x8.scala 89:35]
    node ___B_T_30 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[5][0] <= ___B_T_30 @[calc8x8.scala 89:35]
    node ___B_T_31 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[5][1] <= ___B_T_31 @[calc8x8.scala 89:35]
    node ___B_T_32 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[5][2] <= ___B_T_32 @[calc8x8.scala 89:35]
    node ___B_T_33 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[5][3] <= ___B_T_33 @[calc8x8.scala 89:35]
    node ___B_T_34 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[5][4] <= ___B_T_34 @[calc8x8.scala 89:35]
    node ___B_T_35 = asSInt(UInt<19>("h00")) @[calc8x8.scala 89:35]
    ___B_WIRE[5][5] <= ___B_T_35 @[calc8x8.scala 89:35]
    reg __B : SInt<19>[6][6], clock with : (reset => (reset, ___B_WIRE)) @[calc8x8.scala 89:22]
    wire ___Bi_WIRE : SInt<19>[6][6] @[calc8x8.scala 90:36]
    node ___Bi_T = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[0][0] <= ___Bi_T @[calc8x8.scala 90:36]
    node ___Bi_T_1 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[0][1] <= ___Bi_T_1 @[calc8x8.scala 90:36]
    node ___Bi_T_2 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[0][2] <= ___Bi_T_2 @[calc8x8.scala 90:36]
    node ___Bi_T_3 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[0][3] <= ___Bi_T_3 @[calc8x8.scala 90:36]
    node ___Bi_T_4 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[0][4] <= ___Bi_T_4 @[calc8x8.scala 90:36]
    node ___Bi_T_5 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[0][5] <= ___Bi_T_5 @[calc8x8.scala 90:36]
    node ___Bi_T_6 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[1][0] <= ___Bi_T_6 @[calc8x8.scala 90:36]
    node ___Bi_T_7 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[1][1] <= ___Bi_T_7 @[calc8x8.scala 90:36]
    node ___Bi_T_8 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[1][2] <= ___Bi_T_8 @[calc8x8.scala 90:36]
    node ___Bi_T_9 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[1][3] <= ___Bi_T_9 @[calc8x8.scala 90:36]
    node ___Bi_T_10 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[1][4] <= ___Bi_T_10 @[calc8x8.scala 90:36]
    node ___Bi_T_11 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[1][5] <= ___Bi_T_11 @[calc8x8.scala 90:36]
    node ___Bi_T_12 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[2][0] <= ___Bi_T_12 @[calc8x8.scala 90:36]
    node ___Bi_T_13 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[2][1] <= ___Bi_T_13 @[calc8x8.scala 90:36]
    node ___Bi_T_14 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[2][2] <= ___Bi_T_14 @[calc8x8.scala 90:36]
    node ___Bi_T_15 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[2][3] <= ___Bi_T_15 @[calc8x8.scala 90:36]
    node ___Bi_T_16 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[2][4] <= ___Bi_T_16 @[calc8x8.scala 90:36]
    node ___Bi_T_17 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[2][5] <= ___Bi_T_17 @[calc8x8.scala 90:36]
    node ___Bi_T_18 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[3][0] <= ___Bi_T_18 @[calc8x8.scala 90:36]
    node ___Bi_T_19 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[3][1] <= ___Bi_T_19 @[calc8x8.scala 90:36]
    node ___Bi_T_20 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[3][2] <= ___Bi_T_20 @[calc8x8.scala 90:36]
    node ___Bi_T_21 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[3][3] <= ___Bi_T_21 @[calc8x8.scala 90:36]
    node ___Bi_T_22 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[3][4] <= ___Bi_T_22 @[calc8x8.scala 90:36]
    node ___Bi_T_23 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[3][5] <= ___Bi_T_23 @[calc8x8.scala 90:36]
    node ___Bi_T_24 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[4][0] <= ___Bi_T_24 @[calc8x8.scala 90:36]
    node ___Bi_T_25 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[4][1] <= ___Bi_T_25 @[calc8x8.scala 90:36]
    node ___Bi_T_26 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[4][2] <= ___Bi_T_26 @[calc8x8.scala 90:36]
    node ___Bi_T_27 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[4][3] <= ___Bi_T_27 @[calc8x8.scala 90:36]
    node ___Bi_T_28 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[4][4] <= ___Bi_T_28 @[calc8x8.scala 90:36]
    node ___Bi_T_29 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[4][5] <= ___Bi_T_29 @[calc8x8.scala 90:36]
    node ___Bi_T_30 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[5][0] <= ___Bi_T_30 @[calc8x8.scala 90:36]
    node ___Bi_T_31 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[5][1] <= ___Bi_T_31 @[calc8x8.scala 90:36]
    node ___Bi_T_32 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[5][2] <= ___Bi_T_32 @[calc8x8.scala 90:36]
    node ___Bi_T_33 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[5][3] <= ___Bi_T_33 @[calc8x8.scala 90:36]
    node ___Bi_T_34 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[5][4] <= ___Bi_T_34 @[calc8x8.scala 90:36]
    node ___Bi_T_35 = asSInt(UInt<19>("h00")) @[calc8x8.scala 90:36]
    ___Bi_WIRE[5][5] <= ___Bi_T_35 @[calc8x8.scala 90:36]
    reg __Bi : SInt<19>[6][6], clock with : (reset => (reset, ___Bi_WIRE)) @[calc8x8.scala 90:23]
    __B[0][0] <= _B[0][0] @[calc8x8.scala 93:19]
    node ___B_0_1_T = add(_B[0][0], _B[0][1]) @[calc8x8.scala 94:30]
    node ___B_0_1_T_1 = tail(___B_0_1_T, 1) @[calc8x8.scala 94:30]
    node ___B_0_1_T_2 = asSInt(___B_0_1_T_1) @[calc8x8.scala 94:30]
    node ___B_0_1_T_3 = add(___B_0_1_T_2, _B[0][2]) @[calc8x8.scala 94:39]
    node ___B_0_1_T_4 = tail(___B_0_1_T_3, 1) @[calc8x8.scala 94:39]
    node ___B_0_1_T_5 = asSInt(___B_0_1_T_4) @[calc8x8.scala 94:39]
    __B[0][1] <= ___B_0_1_T_5 @[calc8x8.scala 94:19]
    node ___B_0_2_T = sub(_B[0][0], _B[0][1]) @[calc8x8.scala 95:30]
    node ___B_0_2_T_1 = tail(___B_0_2_T, 1) @[calc8x8.scala 95:30]
    node ___B_0_2_T_2 = asSInt(___B_0_2_T_1) @[calc8x8.scala 95:30]
    node ___B_0_2_T_3 = add(___B_0_2_T_2, _B[0][2]) @[calc8x8.scala 95:39]
    node ___B_0_2_T_4 = tail(___B_0_2_T_3, 1) @[calc8x8.scala 95:39]
    node ___B_0_2_T_5 = asSInt(___B_0_2_T_4) @[calc8x8.scala 95:39]
    __B[0][2] <= ___B_0_2_T_5 @[calc8x8.scala 95:19]
    node ___B_0_3_T = sub(_B[0][0], _B[0][2]) @[calc8x8.scala 96:30]
    node ___B_0_3_T_1 = tail(___B_0_3_T, 1) @[calc8x8.scala 96:30]
    node ___B_0_3_T_2 = asSInt(___B_0_3_T_1) @[calc8x8.scala 96:30]
    node ___B_0_3_T_3 = sub(___B_0_3_T_2, _Bi[0][1]) @[calc8x8.scala 96:39]
    node ___B_0_3_T_4 = tail(___B_0_3_T_3, 1) @[calc8x8.scala 96:39]
    node ___B_0_3_T_5 = asSInt(___B_0_3_T_4) @[calc8x8.scala 96:39]
    __B[0][3] <= ___B_0_3_T_5 @[calc8x8.scala 96:19]
    node ___B_0_4_T = sub(_B[0][0], _B[0][2]) @[calc8x8.scala 97:30]
    node ___B_0_4_T_1 = tail(___B_0_4_T, 1) @[calc8x8.scala 97:30]
    node ___B_0_4_T_2 = asSInt(___B_0_4_T_1) @[calc8x8.scala 97:30]
    node ___B_0_4_T_3 = add(___B_0_4_T_2, _Bi[0][1]) @[calc8x8.scala 97:39]
    node ___B_0_4_T_4 = tail(___B_0_4_T_3, 1) @[calc8x8.scala 97:39]
    node ___B_0_4_T_5 = asSInt(___B_0_4_T_4) @[calc8x8.scala 97:39]
    __B[0][4] <= ___B_0_4_T_5 @[calc8x8.scala 97:19]
    __B[0][5] <= _B[0][2] @[calc8x8.scala 98:19]
    __Bi[0][0] <= _Bi[0][0] @[calc8x8.scala 99:20]
    node ___Bi_0_1_T = add(_Bi[0][0], _Bi[0][1]) @[calc8x8.scala 100:32]
    node ___Bi_0_1_T_1 = tail(___Bi_0_1_T, 1) @[calc8x8.scala 100:32]
    node ___Bi_0_1_T_2 = asSInt(___Bi_0_1_T_1) @[calc8x8.scala 100:32]
    node ___Bi_0_1_T_3 = add(___Bi_0_1_T_2, _Bi[0][2]) @[calc8x8.scala 100:42]
    node ___Bi_0_1_T_4 = tail(___Bi_0_1_T_3, 1) @[calc8x8.scala 100:42]
    node ___Bi_0_1_T_5 = asSInt(___Bi_0_1_T_4) @[calc8x8.scala 100:42]
    __Bi[0][1] <= ___Bi_0_1_T_5 @[calc8x8.scala 100:20]
    node ___Bi_0_2_T = sub(_Bi[0][0], _Bi[0][1]) @[calc8x8.scala 101:32]
    node ___Bi_0_2_T_1 = tail(___Bi_0_2_T, 1) @[calc8x8.scala 101:32]
    node ___Bi_0_2_T_2 = asSInt(___Bi_0_2_T_1) @[calc8x8.scala 101:32]
    node ___Bi_0_2_T_3 = add(___Bi_0_2_T_2, _Bi[0][2]) @[calc8x8.scala 101:42]
    node ___Bi_0_2_T_4 = tail(___Bi_0_2_T_3, 1) @[calc8x8.scala 101:42]
    node ___Bi_0_2_T_5 = asSInt(___Bi_0_2_T_4) @[calc8x8.scala 101:42]
    __Bi[0][2] <= ___Bi_0_2_T_5 @[calc8x8.scala 101:20]
    node ___Bi_0_3_T = sub(_Bi[0][0], _Bi[0][2]) @[calc8x8.scala 102:32]
    node ___Bi_0_3_T_1 = tail(___Bi_0_3_T, 1) @[calc8x8.scala 102:32]
    node ___Bi_0_3_T_2 = asSInt(___Bi_0_3_T_1) @[calc8x8.scala 102:32]
    node ___Bi_0_3_T_3 = add(___Bi_0_3_T_2, _B[0][1]) @[calc8x8.scala 102:42]
    node ___Bi_0_3_T_4 = tail(___Bi_0_3_T_3, 1) @[calc8x8.scala 102:42]
    node ___Bi_0_3_T_5 = asSInt(___Bi_0_3_T_4) @[calc8x8.scala 102:42]
    __Bi[0][3] <= ___Bi_0_3_T_5 @[calc8x8.scala 102:20]
    node ___Bi_0_4_T = sub(_Bi[0][0], _Bi[0][2]) @[calc8x8.scala 103:32]
    node ___Bi_0_4_T_1 = tail(___Bi_0_4_T, 1) @[calc8x8.scala 103:32]
    node ___Bi_0_4_T_2 = asSInt(___Bi_0_4_T_1) @[calc8x8.scala 103:32]
    node ___Bi_0_4_T_3 = sub(___Bi_0_4_T_2, _B[0][1]) @[calc8x8.scala 103:42]
    node ___Bi_0_4_T_4 = tail(___Bi_0_4_T_3, 1) @[calc8x8.scala 103:42]
    node ___Bi_0_4_T_5 = asSInt(___Bi_0_4_T_4) @[calc8x8.scala 103:42]
    __Bi[0][4] <= ___Bi_0_4_T_5 @[calc8x8.scala 103:20]
    __Bi[0][5] <= _Bi[0][2] @[calc8x8.scala 104:20]
    __B[1][0] <= _B[1][0] @[calc8x8.scala 93:19]
    node ___B_1_1_T = add(_B[1][0], _B[1][1]) @[calc8x8.scala 94:30]
    node ___B_1_1_T_1 = tail(___B_1_1_T, 1) @[calc8x8.scala 94:30]
    node ___B_1_1_T_2 = asSInt(___B_1_1_T_1) @[calc8x8.scala 94:30]
    node ___B_1_1_T_3 = add(___B_1_1_T_2, _B[1][2]) @[calc8x8.scala 94:39]
    node ___B_1_1_T_4 = tail(___B_1_1_T_3, 1) @[calc8x8.scala 94:39]
    node ___B_1_1_T_5 = asSInt(___B_1_1_T_4) @[calc8x8.scala 94:39]
    __B[1][1] <= ___B_1_1_T_5 @[calc8x8.scala 94:19]
    node ___B_1_2_T = sub(_B[1][0], _B[1][1]) @[calc8x8.scala 95:30]
    node ___B_1_2_T_1 = tail(___B_1_2_T, 1) @[calc8x8.scala 95:30]
    node ___B_1_2_T_2 = asSInt(___B_1_2_T_1) @[calc8x8.scala 95:30]
    node ___B_1_2_T_3 = add(___B_1_2_T_2, _B[1][2]) @[calc8x8.scala 95:39]
    node ___B_1_2_T_4 = tail(___B_1_2_T_3, 1) @[calc8x8.scala 95:39]
    node ___B_1_2_T_5 = asSInt(___B_1_2_T_4) @[calc8x8.scala 95:39]
    __B[1][2] <= ___B_1_2_T_5 @[calc8x8.scala 95:19]
    node ___B_1_3_T = sub(_B[1][0], _B[1][2]) @[calc8x8.scala 96:30]
    node ___B_1_3_T_1 = tail(___B_1_3_T, 1) @[calc8x8.scala 96:30]
    node ___B_1_3_T_2 = asSInt(___B_1_3_T_1) @[calc8x8.scala 96:30]
    node ___B_1_3_T_3 = sub(___B_1_3_T_2, _Bi[1][1]) @[calc8x8.scala 96:39]
    node ___B_1_3_T_4 = tail(___B_1_3_T_3, 1) @[calc8x8.scala 96:39]
    node ___B_1_3_T_5 = asSInt(___B_1_3_T_4) @[calc8x8.scala 96:39]
    __B[1][3] <= ___B_1_3_T_5 @[calc8x8.scala 96:19]
    node ___B_1_4_T = sub(_B[1][0], _B[1][2]) @[calc8x8.scala 97:30]
    node ___B_1_4_T_1 = tail(___B_1_4_T, 1) @[calc8x8.scala 97:30]
    node ___B_1_4_T_2 = asSInt(___B_1_4_T_1) @[calc8x8.scala 97:30]
    node ___B_1_4_T_3 = add(___B_1_4_T_2, _Bi[1][1]) @[calc8x8.scala 97:39]
    node ___B_1_4_T_4 = tail(___B_1_4_T_3, 1) @[calc8x8.scala 97:39]
    node ___B_1_4_T_5 = asSInt(___B_1_4_T_4) @[calc8x8.scala 97:39]
    __B[1][4] <= ___B_1_4_T_5 @[calc8x8.scala 97:19]
    __B[1][5] <= _B[1][2] @[calc8x8.scala 98:19]
    __Bi[1][0] <= _Bi[1][0] @[calc8x8.scala 99:20]
    node ___Bi_1_1_T = add(_Bi[1][0], _Bi[1][1]) @[calc8x8.scala 100:32]
    node ___Bi_1_1_T_1 = tail(___Bi_1_1_T, 1) @[calc8x8.scala 100:32]
    node ___Bi_1_1_T_2 = asSInt(___Bi_1_1_T_1) @[calc8x8.scala 100:32]
    node ___Bi_1_1_T_3 = add(___Bi_1_1_T_2, _Bi[1][2]) @[calc8x8.scala 100:42]
    node ___Bi_1_1_T_4 = tail(___Bi_1_1_T_3, 1) @[calc8x8.scala 100:42]
    node ___Bi_1_1_T_5 = asSInt(___Bi_1_1_T_4) @[calc8x8.scala 100:42]
    __Bi[1][1] <= ___Bi_1_1_T_5 @[calc8x8.scala 100:20]
    node ___Bi_1_2_T = sub(_Bi[1][0], _Bi[1][1]) @[calc8x8.scala 101:32]
    node ___Bi_1_2_T_1 = tail(___Bi_1_2_T, 1) @[calc8x8.scala 101:32]
    node ___Bi_1_2_T_2 = asSInt(___Bi_1_2_T_1) @[calc8x8.scala 101:32]
    node ___Bi_1_2_T_3 = add(___Bi_1_2_T_2, _Bi[1][2]) @[calc8x8.scala 101:42]
    node ___Bi_1_2_T_4 = tail(___Bi_1_2_T_3, 1) @[calc8x8.scala 101:42]
    node ___Bi_1_2_T_5 = asSInt(___Bi_1_2_T_4) @[calc8x8.scala 101:42]
    __Bi[1][2] <= ___Bi_1_2_T_5 @[calc8x8.scala 101:20]
    node ___Bi_1_3_T = sub(_Bi[1][0], _Bi[1][2]) @[calc8x8.scala 102:32]
    node ___Bi_1_3_T_1 = tail(___Bi_1_3_T, 1) @[calc8x8.scala 102:32]
    node ___Bi_1_3_T_2 = asSInt(___Bi_1_3_T_1) @[calc8x8.scala 102:32]
    node ___Bi_1_3_T_3 = add(___Bi_1_3_T_2, _B[1][1]) @[calc8x8.scala 102:42]
    node ___Bi_1_3_T_4 = tail(___Bi_1_3_T_3, 1) @[calc8x8.scala 102:42]
    node ___Bi_1_3_T_5 = asSInt(___Bi_1_3_T_4) @[calc8x8.scala 102:42]
    __Bi[1][3] <= ___Bi_1_3_T_5 @[calc8x8.scala 102:20]
    node ___Bi_1_4_T = sub(_Bi[1][0], _Bi[1][2]) @[calc8x8.scala 103:32]
    node ___Bi_1_4_T_1 = tail(___Bi_1_4_T, 1) @[calc8x8.scala 103:32]
    node ___Bi_1_4_T_2 = asSInt(___Bi_1_4_T_1) @[calc8x8.scala 103:32]
    node ___Bi_1_4_T_3 = sub(___Bi_1_4_T_2, _B[1][1]) @[calc8x8.scala 103:42]
    node ___Bi_1_4_T_4 = tail(___Bi_1_4_T_3, 1) @[calc8x8.scala 103:42]
    node ___Bi_1_4_T_5 = asSInt(___Bi_1_4_T_4) @[calc8x8.scala 103:42]
    __Bi[1][4] <= ___Bi_1_4_T_5 @[calc8x8.scala 103:20]
    __Bi[1][5] <= _Bi[1][2] @[calc8x8.scala 104:20]
    __B[2][0] <= _B[2][0] @[calc8x8.scala 93:19]
    node ___B_2_1_T = add(_B[2][0], _B[2][1]) @[calc8x8.scala 94:30]
    node ___B_2_1_T_1 = tail(___B_2_1_T, 1) @[calc8x8.scala 94:30]
    node ___B_2_1_T_2 = asSInt(___B_2_1_T_1) @[calc8x8.scala 94:30]
    node ___B_2_1_T_3 = add(___B_2_1_T_2, _B[2][2]) @[calc8x8.scala 94:39]
    node ___B_2_1_T_4 = tail(___B_2_1_T_3, 1) @[calc8x8.scala 94:39]
    node ___B_2_1_T_5 = asSInt(___B_2_1_T_4) @[calc8x8.scala 94:39]
    __B[2][1] <= ___B_2_1_T_5 @[calc8x8.scala 94:19]
    node ___B_2_2_T = sub(_B[2][0], _B[2][1]) @[calc8x8.scala 95:30]
    node ___B_2_2_T_1 = tail(___B_2_2_T, 1) @[calc8x8.scala 95:30]
    node ___B_2_2_T_2 = asSInt(___B_2_2_T_1) @[calc8x8.scala 95:30]
    node ___B_2_2_T_3 = add(___B_2_2_T_2, _B[2][2]) @[calc8x8.scala 95:39]
    node ___B_2_2_T_4 = tail(___B_2_2_T_3, 1) @[calc8x8.scala 95:39]
    node ___B_2_2_T_5 = asSInt(___B_2_2_T_4) @[calc8x8.scala 95:39]
    __B[2][2] <= ___B_2_2_T_5 @[calc8x8.scala 95:19]
    node ___B_2_3_T = sub(_B[2][0], _B[2][2]) @[calc8x8.scala 96:30]
    node ___B_2_3_T_1 = tail(___B_2_3_T, 1) @[calc8x8.scala 96:30]
    node ___B_2_3_T_2 = asSInt(___B_2_3_T_1) @[calc8x8.scala 96:30]
    node ___B_2_3_T_3 = sub(___B_2_3_T_2, _Bi[2][1]) @[calc8x8.scala 96:39]
    node ___B_2_3_T_4 = tail(___B_2_3_T_3, 1) @[calc8x8.scala 96:39]
    node ___B_2_3_T_5 = asSInt(___B_2_3_T_4) @[calc8x8.scala 96:39]
    __B[2][3] <= ___B_2_3_T_5 @[calc8x8.scala 96:19]
    node ___B_2_4_T = sub(_B[2][0], _B[2][2]) @[calc8x8.scala 97:30]
    node ___B_2_4_T_1 = tail(___B_2_4_T, 1) @[calc8x8.scala 97:30]
    node ___B_2_4_T_2 = asSInt(___B_2_4_T_1) @[calc8x8.scala 97:30]
    node ___B_2_4_T_3 = add(___B_2_4_T_2, _Bi[2][1]) @[calc8x8.scala 97:39]
    node ___B_2_4_T_4 = tail(___B_2_4_T_3, 1) @[calc8x8.scala 97:39]
    node ___B_2_4_T_5 = asSInt(___B_2_4_T_4) @[calc8x8.scala 97:39]
    __B[2][4] <= ___B_2_4_T_5 @[calc8x8.scala 97:19]
    __B[2][5] <= _B[2][2] @[calc8x8.scala 98:19]
    __Bi[2][0] <= _Bi[2][0] @[calc8x8.scala 99:20]
    node ___Bi_2_1_T = add(_Bi[2][0], _Bi[2][1]) @[calc8x8.scala 100:32]
    node ___Bi_2_1_T_1 = tail(___Bi_2_1_T, 1) @[calc8x8.scala 100:32]
    node ___Bi_2_1_T_2 = asSInt(___Bi_2_1_T_1) @[calc8x8.scala 100:32]
    node ___Bi_2_1_T_3 = add(___Bi_2_1_T_2, _Bi[2][2]) @[calc8x8.scala 100:42]
    node ___Bi_2_1_T_4 = tail(___Bi_2_1_T_3, 1) @[calc8x8.scala 100:42]
    node ___Bi_2_1_T_5 = asSInt(___Bi_2_1_T_4) @[calc8x8.scala 100:42]
    __Bi[2][1] <= ___Bi_2_1_T_5 @[calc8x8.scala 100:20]
    node ___Bi_2_2_T = sub(_Bi[2][0], _Bi[2][1]) @[calc8x8.scala 101:32]
    node ___Bi_2_2_T_1 = tail(___Bi_2_2_T, 1) @[calc8x8.scala 101:32]
    node ___Bi_2_2_T_2 = asSInt(___Bi_2_2_T_1) @[calc8x8.scala 101:32]
    node ___Bi_2_2_T_3 = add(___Bi_2_2_T_2, _Bi[2][2]) @[calc8x8.scala 101:42]
    node ___Bi_2_2_T_4 = tail(___Bi_2_2_T_3, 1) @[calc8x8.scala 101:42]
    node ___Bi_2_2_T_5 = asSInt(___Bi_2_2_T_4) @[calc8x8.scala 101:42]
    __Bi[2][2] <= ___Bi_2_2_T_5 @[calc8x8.scala 101:20]
    node ___Bi_2_3_T = sub(_Bi[2][0], _Bi[2][2]) @[calc8x8.scala 102:32]
    node ___Bi_2_3_T_1 = tail(___Bi_2_3_T, 1) @[calc8x8.scala 102:32]
    node ___Bi_2_3_T_2 = asSInt(___Bi_2_3_T_1) @[calc8x8.scala 102:32]
    node ___Bi_2_3_T_3 = add(___Bi_2_3_T_2, _B[2][1]) @[calc8x8.scala 102:42]
    node ___Bi_2_3_T_4 = tail(___Bi_2_3_T_3, 1) @[calc8x8.scala 102:42]
    node ___Bi_2_3_T_5 = asSInt(___Bi_2_3_T_4) @[calc8x8.scala 102:42]
    __Bi[2][3] <= ___Bi_2_3_T_5 @[calc8x8.scala 102:20]
    node ___Bi_2_4_T = sub(_Bi[2][0], _Bi[2][2]) @[calc8x8.scala 103:32]
    node ___Bi_2_4_T_1 = tail(___Bi_2_4_T, 1) @[calc8x8.scala 103:32]
    node ___Bi_2_4_T_2 = asSInt(___Bi_2_4_T_1) @[calc8x8.scala 103:32]
    node ___Bi_2_4_T_3 = sub(___Bi_2_4_T_2, _B[2][1]) @[calc8x8.scala 103:42]
    node ___Bi_2_4_T_4 = tail(___Bi_2_4_T_3, 1) @[calc8x8.scala 103:42]
    node ___Bi_2_4_T_5 = asSInt(___Bi_2_4_T_4) @[calc8x8.scala 103:42]
    __Bi[2][4] <= ___Bi_2_4_T_5 @[calc8x8.scala 103:20]
    __Bi[2][5] <= _Bi[2][2] @[calc8x8.scala 104:20]
    __B[3][0] <= _B[3][0] @[calc8x8.scala 93:19]
    node ___B_3_1_T = add(_B[3][0], _B[3][1]) @[calc8x8.scala 94:30]
    node ___B_3_1_T_1 = tail(___B_3_1_T, 1) @[calc8x8.scala 94:30]
    node ___B_3_1_T_2 = asSInt(___B_3_1_T_1) @[calc8x8.scala 94:30]
    node ___B_3_1_T_3 = add(___B_3_1_T_2, _B[3][2]) @[calc8x8.scala 94:39]
    node ___B_3_1_T_4 = tail(___B_3_1_T_3, 1) @[calc8x8.scala 94:39]
    node ___B_3_1_T_5 = asSInt(___B_3_1_T_4) @[calc8x8.scala 94:39]
    __B[3][1] <= ___B_3_1_T_5 @[calc8x8.scala 94:19]
    node ___B_3_2_T = sub(_B[3][0], _B[3][1]) @[calc8x8.scala 95:30]
    node ___B_3_2_T_1 = tail(___B_3_2_T, 1) @[calc8x8.scala 95:30]
    node ___B_3_2_T_2 = asSInt(___B_3_2_T_1) @[calc8x8.scala 95:30]
    node ___B_3_2_T_3 = add(___B_3_2_T_2, _B[3][2]) @[calc8x8.scala 95:39]
    node ___B_3_2_T_4 = tail(___B_3_2_T_3, 1) @[calc8x8.scala 95:39]
    node ___B_3_2_T_5 = asSInt(___B_3_2_T_4) @[calc8x8.scala 95:39]
    __B[3][2] <= ___B_3_2_T_5 @[calc8x8.scala 95:19]
    node ___B_3_3_T = sub(_B[3][0], _B[3][2]) @[calc8x8.scala 96:30]
    node ___B_3_3_T_1 = tail(___B_3_3_T, 1) @[calc8x8.scala 96:30]
    node ___B_3_3_T_2 = asSInt(___B_3_3_T_1) @[calc8x8.scala 96:30]
    node ___B_3_3_T_3 = sub(___B_3_3_T_2, _Bi[3][1]) @[calc8x8.scala 96:39]
    node ___B_3_3_T_4 = tail(___B_3_3_T_3, 1) @[calc8x8.scala 96:39]
    node ___B_3_3_T_5 = asSInt(___B_3_3_T_4) @[calc8x8.scala 96:39]
    __B[3][3] <= ___B_3_3_T_5 @[calc8x8.scala 96:19]
    node ___B_3_4_T = sub(_B[3][0], _B[3][2]) @[calc8x8.scala 97:30]
    node ___B_3_4_T_1 = tail(___B_3_4_T, 1) @[calc8x8.scala 97:30]
    node ___B_3_4_T_2 = asSInt(___B_3_4_T_1) @[calc8x8.scala 97:30]
    node ___B_3_4_T_3 = add(___B_3_4_T_2, _Bi[3][1]) @[calc8x8.scala 97:39]
    node ___B_3_4_T_4 = tail(___B_3_4_T_3, 1) @[calc8x8.scala 97:39]
    node ___B_3_4_T_5 = asSInt(___B_3_4_T_4) @[calc8x8.scala 97:39]
    __B[3][4] <= ___B_3_4_T_5 @[calc8x8.scala 97:19]
    __B[3][5] <= _B[3][2] @[calc8x8.scala 98:19]
    __Bi[3][0] <= _Bi[3][0] @[calc8x8.scala 99:20]
    node ___Bi_3_1_T = add(_Bi[3][0], _Bi[3][1]) @[calc8x8.scala 100:32]
    node ___Bi_3_1_T_1 = tail(___Bi_3_1_T, 1) @[calc8x8.scala 100:32]
    node ___Bi_3_1_T_2 = asSInt(___Bi_3_1_T_1) @[calc8x8.scala 100:32]
    node ___Bi_3_1_T_3 = add(___Bi_3_1_T_2, _Bi[3][2]) @[calc8x8.scala 100:42]
    node ___Bi_3_1_T_4 = tail(___Bi_3_1_T_3, 1) @[calc8x8.scala 100:42]
    node ___Bi_3_1_T_5 = asSInt(___Bi_3_1_T_4) @[calc8x8.scala 100:42]
    __Bi[3][1] <= ___Bi_3_1_T_5 @[calc8x8.scala 100:20]
    node ___Bi_3_2_T = sub(_Bi[3][0], _Bi[3][1]) @[calc8x8.scala 101:32]
    node ___Bi_3_2_T_1 = tail(___Bi_3_2_T, 1) @[calc8x8.scala 101:32]
    node ___Bi_3_2_T_2 = asSInt(___Bi_3_2_T_1) @[calc8x8.scala 101:32]
    node ___Bi_3_2_T_3 = add(___Bi_3_2_T_2, _Bi[3][2]) @[calc8x8.scala 101:42]
    node ___Bi_3_2_T_4 = tail(___Bi_3_2_T_3, 1) @[calc8x8.scala 101:42]
    node ___Bi_3_2_T_5 = asSInt(___Bi_3_2_T_4) @[calc8x8.scala 101:42]
    __Bi[3][2] <= ___Bi_3_2_T_5 @[calc8x8.scala 101:20]
    node ___Bi_3_3_T = sub(_Bi[3][0], _Bi[3][2]) @[calc8x8.scala 102:32]
    node ___Bi_3_3_T_1 = tail(___Bi_3_3_T, 1) @[calc8x8.scala 102:32]
    node ___Bi_3_3_T_2 = asSInt(___Bi_3_3_T_1) @[calc8x8.scala 102:32]
    node ___Bi_3_3_T_3 = add(___Bi_3_3_T_2, _B[3][1]) @[calc8x8.scala 102:42]
    node ___Bi_3_3_T_4 = tail(___Bi_3_3_T_3, 1) @[calc8x8.scala 102:42]
    node ___Bi_3_3_T_5 = asSInt(___Bi_3_3_T_4) @[calc8x8.scala 102:42]
    __Bi[3][3] <= ___Bi_3_3_T_5 @[calc8x8.scala 102:20]
    node ___Bi_3_4_T = sub(_Bi[3][0], _Bi[3][2]) @[calc8x8.scala 103:32]
    node ___Bi_3_4_T_1 = tail(___Bi_3_4_T, 1) @[calc8x8.scala 103:32]
    node ___Bi_3_4_T_2 = asSInt(___Bi_3_4_T_1) @[calc8x8.scala 103:32]
    node ___Bi_3_4_T_3 = sub(___Bi_3_4_T_2, _B[3][1]) @[calc8x8.scala 103:42]
    node ___Bi_3_4_T_4 = tail(___Bi_3_4_T_3, 1) @[calc8x8.scala 103:42]
    node ___Bi_3_4_T_5 = asSInt(___Bi_3_4_T_4) @[calc8x8.scala 103:42]
    __Bi[3][4] <= ___Bi_3_4_T_5 @[calc8x8.scala 103:20]
    __Bi[3][5] <= _Bi[3][2] @[calc8x8.scala 104:20]
    __B[4][0] <= _B[4][0] @[calc8x8.scala 93:19]
    node ___B_4_1_T = add(_B[4][0], _B[4][1]) @[calc8x8.scala 94:30]
    node ___B_4_1_T_1 = tail(___B_4_1_T, 1) @[calc8x8.scala 94:30]
    node ___B_4_1_T_2 = asSInt(___B_4_1_T_1) @[calc8x8.scala 94:30]
    node ___B_4_1_T_3 = add(___B_4_1_T_2, _B[4][2]) @[calc8x8.scala 94:39]
    node ___B_4_1_T_4 = tail(___B_4_1_T_3, 1) @[calc8x8.scala 94:39]
    node ___B_4_1_T_5 = asSInt(___B_4_1_T_4) @[calc8x8.scala 94:39]
    __B[4][1] <= ___B_4_1_T_5 @[calc8x8.scala 94:19]
    node ___B_4_2_T = sub(_B[4][0], _B[4][1]) @[calc8x8.scala 95:30]
    node ___B_4_2_T_1 = tail(___B_4_2_T, 1) @[calc8x8.scala 95:30]
    node ___B_4_2_T_2 = asSInt(___B_4_2_T_1) @[calc8x8.scala 95:30]
    node ___B_4_2_T_3 = add(___B_4_2_T_2, _B[4][2]) @[calc8x8.scala 95:39]
    node ___B_4_2_T_4 = tail(___B_4_2_T_3, 1) @[calc8x8.scala 95:39]
    node ___B_4_2_T_5 = asSInt(___B_4_2_T_4) @[calc8x8.scala 95:39]
    __B[4][2] <= ___B_4_2_T_5 @[calc8x8.scala 95:19]
    node ___B_4_3_T = sub(_B[4][0], _B[4][2]) @[calc8x8.scala 96:30]
    node ___B_4_3_T_1 = tail(___B_4_3_T, 1) @[calc8x8.scala 96:30]
    node ___B_4_3_T_2 = asSInt(___B_4_3_T_1) @[calc8x8.scala 96:30]
    node ___B_4_3_T_3 = sub(___B_4_3_T_2, _Bi[4][1]) @[calc8x8.scala 96:39]
    node ___B_4_3_T_4 = tail(___B_4_3_T_3, 1) @[calc8x8.scala 96:39]
    node ___B_4_3_T_5 = asSInt(___B_4_3_T_4) @[calc8x8.scala 96:39]
    __B[4][3] <= ___B_4_3_T_5 @[calc8x8.scala 96:19]
    node ___B_4_4_T = sub(_B[4][0], _B[4][2]) @[calc8x8.scala 97:30]
    node ___B_4_4_T_1 = tail(___B_4_4_T, 1) @[calc8x8.scala 97:30]
    node ___B_4_4_T_2 = asSInt(___B_4_4_T_1) @[calc8x8.scala 97:30]
    node ___B_4_4_T_3 = add(___B_4_4_T_2, _Bi[4][1]) @[calc8x8.scala 97:39]
    node ___B_4_4_T_4 = tail(___B_4_4_T_3, 1) @[calc8x8.scala 97:39]
    node ___B_4_4_T_5 = asSInt(___B_4_4_T_4) @[calc8x8.scala 97:39]
    __B[4][4] <= ___B_4_4_T_5 @[calc8x8.scala 97:19]
    __B[4][5] <= _B[4][2] @[calc8x8.scala 98:19]
    __Bi[4][0] <= _Bi[4][0] @[calc8x8.scala 99:20]
    node ___Bi_4_1_T = add(_Bi[4][0], _Bi[4][1]) @[calc8x8.scala 100:32]
    node ___Bi_4_1_T_1 = tail(___Bi_4_1_T, 1) @[calc8x8.scala 100:32]
    node ___Bi_4_1_T_2 = asSInt(___Bi_4_1_T_1) @[calc8x8.scala 100:32]
    node ___Bi_4_1_T_3 = add(___Bi_4_1_T_2, _Bi[4][2]) @[calc8x8.scala 100:42]
    node ___Bi_4_1_T_4 = tail(___Bi_4_1_T_3, 1) @[calc8x8.scala 100:42]
    node ___Bi_4_1_T_5 = asSInt(___Bi_4_1_T_4) @[calc8x8.scala 100:42]
    __Bi[4][1] <= ___Bi_4_1_T_5 @[calc8x8.scala 100:20]
    node ___Bi_4_2_T = sub(_Bi[4][0], _Bi[4][1]) @[calc8x8.scala 101:32]
    node ___Bi_4_2_T_1 = tail(___Bi_4_2_T, 1) @[calc8x8.scala 101:32]
    node ___Bi_4_2_T_2 = asSInt(___Bi_4_2_T_1) @[calc8x8.scala 101:32]
    node ___Bi_4_2_T_3 = add(___Bi_4_2_T_2, _Bi[4][2]) @[calc8x8.scala 101:42]
    node ___Bi_4_2_T_4 = tail(___Bi_4_2_T_3, 1) @[calc8x8.scala 101:42]
    node ___Bi_4_2_T_5 = asSInt(___Bi_4_2_T_4) @[calc8x8.scala 101:42]
    __Bi[4][2] <= ___Bi_4_2_T_5 @[calc8x8.scala 101:20]
    node ___Bi_4_3_T = sub(_Bi[4][0], _Bi[4][2]) @[calc8x8.scala 102:32]
    node ___Bi_4_3_T_1 = tail(___Bi_4_3_T, 1) @[calc8x8.scala 102:32]
    node ___Bi_4_3_T_2 = asSInt(___Bi_4_3_T_1) @[calc8x8.scala 102:32]
    node ___Bi_4_3_T_3 = add(___Bi_4_3_T_2, _B[4][1]) @[calc8x8.scala 102:42]
    node ___Bi_4_3_T_4 = tail(___Bi_4_3_T_3, 1) @[calc8x8.scala 102:42]
    node ___Bi_4_3_T_5 = asSInt(___Bi_4_3_T_4) @[calc8x8.scala 102:42]
    __Bi[4][3] <= ___Bi_4_3_T_5 @[calc8x8.scala 102:20]
    node ___Bi_4_4_T = sub(_Bi[4][0], _Bi[4][2]) @[calc8x8.scala 103:32]
    node ___Bi_4_4_T_1 = tail(___Bi_4_4_T, 1) @[calc8x8.scala 103:32]
    node ___Bi_4_4_T_2 = asSInt(___Bi_4_4_T_1) @[calc8x8.scala 103:32]
    node ___Bi_4_4_T_3 = sub(___Bi_4_4_T_2, _B[4][1]) @[calc8x8.scala 103:42]
    node ___Bi_4_4_T_4 = tail(___Bi_4_4_T_3, 1) @[calc8x8.scala 103:42]
    node ___Bi_4_4_T_5 = asSInt(___Bi_4_4_T_4) @[calc8x8.scala 103:42]
    __Bi[4][4] <= ___Bi_4_4_T_5 @[calc8x8.scala 103:20]
    __Bi[4][5] <= _Bi[4][2] @[calc8x8.scala 104:20]
    __B[5][0] <= _B[5][0] @[calc8x8.scala 93:19]
    node ___B_5_1_T = add(_B[5][0], _B[5][1]) @[calc8x8.scala 94:30]
    node ___B_5_1_T_1 = tail(___B_5_1_T, 1) @[calc8x8.scala 94:30]
    node ___B_5_1_T_2 = asSInt(___B_5_1_T_1) @[calc8x8.scala 94:30]
    node ___B_5_1_T_3 = add(___B_5_1_T_2, _B[5][2]) @[calc8x8.scala 94:39]
    node ___B_5_1_T_4 = tail(___B_5_1_T_3, 1) @[calc8x8.scala 94:39]
    node ___B_5_1_T_5 = asSInt(___B_5_1_T_4) @[calc8x8.scala 94:39]
    __B[5][1] <= ___B_5_1_T_5 @[calc8x8.scala 94:19]
    node ___B_5_2_T = sub(_B[5][0], _B[5][1]) @[calc8x8.scala 95:30]
    node ___B_5_2_T_1 = tail(___B_5_2_T, 1) @[calc8x8.scala 95:30]
    node ___B_5_2_T_2 = asSInt(___B_5_2_T_1) @[calc8x8.scala 95:30]
    node ___B_5_2_T_3 = add(___B_5_2_T_2, _B[5][2]) @[calc8x8.scala 95:39]
    node ___B_5_2_T_4 = tail(___B_5_2_T_3, 1) @[calc8x8.scala 95:39]
    node ___B_5_2_T_5 = asSInt(___B_5_2_T_4) @[calc8x8.scala 95:39]
    __B[5][2] <= ___B_5_2_T_5 @[calc8x8.scala 95:19]
    node ___B_5_3_T = sub(_B[5][0], _B[5][2]) @[calc8x8.scala 96:30]
    node ___B_5_3_T_1 = tail(___B_5_3_T, 1) @[calc8x8.scala 96:30]
    node ___B_5_3_T_2 = asSInt(___B_5_3_T_1) @[calc8x8.scala 96:30]
    node ___B_5_3_T_3 = sub(___B_5_3_T_2, _Bi[5][1]) @[calc8x8.scala 96:39]
    node ___B_5_3_T_4 = tail(___B_5_3_T_3, 1) @[calc8x8.scala 96:39]
    node ___B_5_3_T_5 = asSInt(___B_5_3_T_4) @[calc8x8.scala 96:39]
    __B[5][3] <= ___B_5_3_T_5 @[calc8x8.scala 96:19]
    node ___B_5_4_T = sub(_B[5][0], _B[5][2]) @[calc8x8.scala 97:30]
    node ___B_5_4_T_1 = tail(___B_5_4_T, 1) @[calc8x8.scala 97:30]
    node ___B_5_4_T_2 = asSInt(___B_5_4_T_1) @[calc8x8.scala 97:30]
    node ___B_5_4_T_3 = add(___B_5_4_T_2, _Bi[5][1]) @[calc8x8.scala 97:39]
    node ___B_5_4_T_4 = tail(___B_5_4_T_3, 1) @[calc8x8.scala 97:39]
    node ___B_5_4_T_5 = asSInt(___B_5_4_T_4) @[calc8x8.scala 97:39]
    __B[5][4] <= ___B_5_4_T_5 @[calc8x8.scala 97:19]
    __B[5][5] <= _B[5][2] @[calc8x8.scala 98:19]
    __Bi[5][0] <= _Bi[5][0] @[calc8x8.scala 99:20]
    node ___Bi_5_1_T = add(_Bi[5][0], _Bi[5][1]) @[calc8x8.scala 100:32]
    node ___Bi_5_1_T_1 = tail(___Bi_5_1_T, 1) @[calc8x8.scala 100:32]
    node ___Bi_5_1_T_2 = asSInt(___Bi_5_1_T_1) @[calc8x8.scala 100:32]
    node ___Bi_5_1_T_3 = add(___Bi_5_1_T_2, _Bi[5][2]) @[calc8x8.scala 100:42]
    node ___Bi_5_1_T_4 = tail(___Bi_5_1_T_3, 1) @[calc8x8.scala 100:42]
    node ___Bi_5_1_T_5 = asSInt(___Bi_5_1_T_4) @[calc8x8.scala 100:42]
    __Bi[5][1] <= ___Bi_5_1_T_5 @[calc8x8.scala 100:20]
    node ___Bi_5_2_T = sub(_Bi[5][0], _Bi[5][1]) @[calc8x8.scala 101:32]
    node ___Bi_5_2_T_1 = tail(___Bi_5_2_T, 1) @[calc8x8.scala 101:32]
    node ___Bi_5_2_T_2 = asSInt(___Bi_5_2_T_1) @[calc8x8.scala 101:32]
    node ___Bi_5_2_T_3 = add(___Bi_5_2_T_2, _Bi[5][2]) @[calc8x8.scala 101:42]
    node ___Bi_5_2_T_4 = tail(___Bi_5_2_T_3, 1) @[calc8x8.scala 101:42]
    node ___Bi_5_2_T_5 = asSInt(___Bi_5_2_T_4) @[calc8x8.scala 101:42]
    __Bi[5][2] <= ___Bi_5_2_T_5 @[calc8x8.scala 101:20]
    node ___Bi_5_3_T = sub(_Bi[5][0], _Bi[5][2]) @[calc8x8.scala 102:32]
    node ___Bi_5_3_T_1 = tail(___Bi_5_3_T, 1) @[calc8x8.scala 102:32]
    node ___Bi_5_3_T_2 = asSInt(___Bi_5_3_T_1) @[calc8x8.scala 102:32]
    node ___Bi_5_3_T_3 = add(___Bi_5_3_T_2, _B[5][1]) @[calc8x8.scala 102:42]
    node ___Bi_5_3_T_4 = tail(___Bi_5_3_T_3, 1) @[calc8x8.scala 102:42]
    node ___Bi_5_3_T_5 = asSInt(___Bi_5_3_T_4) @[calc8x8.scala 102:42]
    __Bi[5][3] <= ___Bi_5_3_T_5 @[calc8x8.scala 102:20]
    node ___Bi_5_4_T = sub(_Bi[5][0], _Bi[5][2]) @[calc8x8.scala 103:32]
    node ___Bi_5_4_T_1 = tail(___Bi_5_4_T, 1) @[calc8x8.scala 103:32]
    node ___Bi_5_4_T_2 = asSInt(___Bi_5_4_T_1) @[calc8x8.scala 103:32]
    node ___Bi_5_4_T_3 = sub(___Bi_5_4_T_2, _B[5][1]) @[calc8x8.scala 103:42]
    node ___Bi_5_4_T_4 = tail(___Bi_5_4_T_3, 1) @[calc8x8.scala 103:42]
    node ___Bi_5_4_T_5 = asSInt(___Bi_5_4_T_4) @[calc8x8.scala 103:42]
    __Bi[5][4] <= ___Bi_5_4_T_5 @[calc8x8.scala 103:20]
    __Bi[5][5] <= _Bi[5][2] @[calc8x8.scala 104:20]
    wire conv_weight : {real : SInt<18>[16], comp1 : SInt<18>[10], comp2 : SInt<18>[10], comp3 : SInt<18>[10]} @[calc8x8.scala 107:27]
    node _conv_weight_real_0_T = bits(__B[0][0], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_0_T_1 = not(_conv_weight_real_0_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_0_T_2 = bits(__B[0][0], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_0_T_3 = and(_conv_weight_real_0_T_1, _conv_weight_real_0_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_0_T_4 = bits(__B[0][0], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_0_T_5 = bits(__B[0][0], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_0_T_6 = not(_conv_weight_real_0_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_0_T_7 = and(_conv_weight_real_0_T_4, _conv_weight_real_0_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_0_T_8 = mux(_conv_weight_real_0_T_7, asSInt(UInt<18>("h020000")), __B[0][0]) @[calc8x8.scala 111:61]
    node _conv_weight_real_0_T_9 = mux(_conv_weight_real_0_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_0_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[0] <= _conv_weight_real_0_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_real_1_T = bits(__B[0][1], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_1_T_1 = not(_conv_weight_real_1_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_1_T_2 = bits(__B[0][1], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_1_T_3 = and(_conv_weight_real_1_T_1, _conv_weight_real_1_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_1_T_4 = bits(__B[0][1], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_1_T_5 = bits(__B[0][1], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_1_T_6 = not(_conv_weight_real_1_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_1_T_7 = and(_conv_weight_real_1_T_4, _conv_weight_real_1_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_1_T_8 = mux(_conv_weight_real_1_T_7, asSInt(UInt<18>("h020000")), __B[0][1]) @[calc8x8.scala 111:61]
    node _conv_weight_real_1_T_9 = mux(_conv_weight_real_1_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_1_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[1] <= _conv_weight_real_1_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_real_2_T = bits(__B[0][2], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_2_T_1 = not(_conv_weight_real_2_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_2_T_2 = bits(__B[0][2], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_2_T_3 = and(_conv_weight_real_2_T_1, _conv_weight_real_2_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_2_T_4 = bits(__B[0][2], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_2_T_5 = bits(__B[0][2], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_2_T_6 = not(_conv_weight_real_2_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_2_T_7 = and(_conv_weight_real_2_T_4, _conv_weight_real_2_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_2_T_8 = mux(_conv_weight_real_2_T_7, asSInt(UInt<18>("h020000")), __B[0][2]) @[calc8x8.scala 111:61]
    node _conv_weight_real_2_T_9 = mux(_conv_weight_real_2_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_2_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[2] <= _conv_weight_real_2_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_comp1_0_T = add(__B[0][3], __Bi[0][3]) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_0_T_1 = tail(_conv_weight_comp1_0_T, 1) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_0_T_2 = asSInt(_conv_weight_comp1_0_T_1) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_0_T_3 = bits(_conv_weight_comp1_0_T_2, 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp1_0_T_4 = not(_conv_weight_comp1_0_T_3) @[calc8x8.scala 111:21]
    node _conv_weight_comp1_0_T_5 = bits(_conv_weight_comp1_0_T_2, 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp1_0_T_6 = and(_conv_weight_comp1_0_T_4, _conv_weight_comp1_0_T_5) @[calc8x8.scala 111:28]
    node _conv_weight_comp1_0_T_7 = bits(_conv_weight_comp1_0_T_2, 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp1_0_T_8 = bits(_conv_weight_comp1_0_T_2, 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp1_0_T_9 = not(_conv_weight_comp1_0_T_8) @[calc8x8.scala 111:70]
    node _conv_weight_comp1_0_T_10 = and(_conv_weight_comp1_0_T_7, _conv_weight_comp1_0_T_9) @[calc8x8.scala 111:67]
    node _conv_weight_comp1_0_T_11 = mux(_conv_weight_comp1_0_T_10, asSInt(UInt<18>("h020000")), _conv_weight_comp1_0_T_2) @[calc8x8.scala 111:61]
    node _conv_weight_comp1_0_T_12 = mux(_conv_weight_comp1_0_T_6, asSInt(UInt<18>("h01ffff")), _conv_weight_comp1_0_T_11) @[calc8x8.scala 111:19]
    conv_weight.comp1[0] <= _conv_weight_comp1_0_T_12 @[calc8x8.scala 127:38]
    node _conv_weight_comp2_0_T = bits(__B[0][3], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp2_0_T_1 = not(_conv_weight_comp2_0_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp2_0_T_2 = bits(__B[0][3], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp2_0_T_3 = and(_conv_weight_comp2_0_T_1, _conv_weight_comp2_0_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp2_0_T_4 = bits(__B[0][3], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp2_0_T_5 = bits(__B[0][3], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp2_0_T_6 = not(_conv_weight_comp2_0_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp2_0_T_7 = and(_conv_weight_comp2_0_T_4, _conv_weight_comp2_0_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp2_0_T_8 = mux(_conv_weight_comp2_0_T_7, asSInt(UInt<18>("h020000")), __B[0][3]) @[calc8x8.scala 111:61]
    node _conv_weight_comp2_0_T_9 = mux(_conv_weight_comp2_0_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp2_0_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp2[0] <= _conv_weight_comp2_0_T_9 @[calc8x8.scala 128:38]
    node _conv_weight_comp3_0_T = bits(__Bi[0][3], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp3_0_T_1 = not(_conv_weight_comp3_0_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp3_0_T_2 = bits(__Bi[0][3], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp3_0_T_3 = and(_conv_weight_comp3_0_T_1, _conv_weight_comp3_0_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp3_0_T_4 = bits(__Bi[0][3], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp3_0_T_5 = bits(__Bi[0][3], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp3_0_T_6 = not(_conv_weight_comp3_0_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp3_0_T_7 = and(_conv_weight_comp3_0_T_4, _conv_weight_comp3_0_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp3_0_T_8 = mux(_conv_weight_comp3_0_T_7, asSInt(UInt<18>("h020000")), __Bi[0][3]) @[calc8x8.scala 111:61]
    node _conv_weight_comp3_0_T_9 = mux(_conv_weight_comp3_0_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp3_0_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp3[0] <= _conv_weight_comp3_0_T_9 @[calc8x8.scala 129:38]
    node _conv_weight_real_3_T = bits(__B[0][5], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_3_T_1 = not(_conv_weight_real_3_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_3_T_2 = bits(__B[0][5], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_3_T_3 = and(_conv_weight_real_3_T_1, _conv_weight_real_3_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_3_T_4 = bits(__B[0][5], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_3_T_5 = bits(__B[0][5], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_3_T_6 = not(_conv_weight_real_3_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_3_T_7 = and(_conv_weight_real_3_T_4, _conv_weight_real_3_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_3_T_8 = mux(_conv_weight_real_3_T_7, asSInt(UInt<18>("h020000")), __B[0][5]) @[calc8x8.scala 111:61]
    node _conv_weight_real_3_T_9 = mux(_conv_weight_real_3_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_3_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[3] <= _conv_weight_real_3_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_real_4_T = bits(__B[1][0], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_4_T_1 = not(_conv_weight_real_4_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_4_T_2 = bits(__B[1][0], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_4_T_3 = and(_conv_weight_real_4_T_1, _conv_weight_real_4_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_4_T_4 = bits(__B[1][0], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_4_T_5 = bits(__B[1][0], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_4_T_6 = not(_conv_weight_real_4_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_4_T_7 = and(_conv_weight_real_4_T_4, _conv_weight_real_4_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_4_T_8 = mux(_conv_weight_real_4_T_7, asSInt(UInt<18>("h020000")), __B[1][0]) @[calc8x8.scala 111:61]
    node _conv_weight_real_4_T_9 = mux(_conv_weight_real_4_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_4_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[4] <= _conv_weight_real_4_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_real_5_T = bits(__B[1][1], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_5_T_1 = not(_conv_weight_real_5_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_5_T_2 = bits(__B[1][1], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_5_T_3 = and(_conv_weight_real_5_T_1, _conv_weight_real_5_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_5_T_4 = bits(__B[1][1], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_5_T_5 = bits(__B[1][1], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_5_T_6 = not(_conv_weight_real_5_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_5_T_7 = and(_conv_weight_real_5_T_4, _conv_weight_real_5_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_5_T_8 = mux(_conv_weight_real_5_T_7, asSInt(UInt<18>("h020000")), __B[1][1]) @[calc8x8.scala 111:61]
    node _conv_weight_real_5_T_9 = mux(_conv_weight_real_5_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_5_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[5] <= _conv_weight_real_5_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_real_6_T = bits(__B[1][2], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_6_T_1 = not(_conv_weight_real_6_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_6_T_2 = bits(__B[1][2], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_6_T_3 = and(_conv_weight_real_6_T_1, _conv_weight_real_6_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_6_T_4 = bits(__B[1][2], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_6_T_5 = bits(__B[1][2], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_6_T_6 = not(_conv_weight_real_6_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_6_T_7 = and(_conv_weight_real_6_T_4, _conv_weight_real_6_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_6_T_8 = mux(_conv_weight_real_6_T_7, asSInt(UInt<18>("h020000")), __B[1][2]) @[calc8x8.scala 111:61]
    node _conv_weight_real_6_T_9 = mux(_conv_weight_real_6_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_6_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[6] <= _conv_weight_real_6_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_comp1_1_T = add(__B[1][3], __Bi[1][3]) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_1_T_1 = tail(_conv_weight_comp1_1_T, 1) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_1_T_2 = asSInt(_conv_weight_comp1_1_T_1) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_1_T_3 = bits(_conv_weight_comp1_1_T_2, 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp1_1_T_4 = not(_conv_weight_comp1_1_T_3) @[calc8x8.scala 111:21]
    node _conv_weight_comp1_1_T_5 = bits(_conv_weight_comp1_1_T_2, 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp1_1_T_6 = and(_conv_weight_comp1_1_T_4, _conv_weight_comp1_1_T_5) @[calc8x8.scala 111:28]
    node _conv_weight_comp1_1_T_7 = bits(_conv_weight_comp1_1_T_2, 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp1_1_T_8 = bits(_conv_weight_comp1_1_T_2, 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp1_1_T_9 = not(_conv_weight_comp1_1_T_8) @[calc8x8.scala 111:70]
    node _conv_weight_comp1_1_T_10 = and(_conv_weight_comp1_1_T_7, _conv_weight_comp1_1_T_9) @[calc8x8.scala 111:67]
    node _conv_weight_comp1_1_T_11 = mux(_conv_weight_comp1_1_T_10, asSInt(UInt<18>("h020000")), _conv_weight_comp1_1_T_2) @[calc8x8.scala 111:61]
    node _conv_weight_comp1_1_T_12 = mux(_conv_weight_comp1_1_T_6, asSInt(UInt<18>("h01ffff")), _conv_weight_comp1_1_T_11) @[calc8x8.scala 111:19]
    conv_weight.comp1[1] <= _conv_weight_comp1_1_T_12 @[calc8x8.scala 127:38]
    node _conv_weight_comp2_1_T = bits(__B[1][3], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp2_1_T_1 = not(_conv_weight_comp2_1_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp2_1_T_2 = bits(__B[1][3], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp2_1_T_3 = and(_conv_weight_comp2_1_T_1, _conv_weight_comp2_1_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp2_1_T_4 = bits(__B[1][3], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp2_1_T_5 = bits(__B[1][3], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp2_1_T_6 = not(_conv_weight_comp2_1_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp2_1_T_7 = and(_conv_weight_comp2_1_T_4, _conv_weight_comp2_1_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp2_1_T_8 = mux(_conv_weight_comp2_1_T_7, asSInt(UInt<18>("h020000")), __B[1][3]) @[calc8x8.scala 111:61]
    node _conv_weight_comp2_1_T_9 = mux(_conv_weight_comp2_1_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp2_1_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp2[1] <= _conv_weight_comp2_1_T_9 @[calc8x8.scala 128:38]
    node _conv_weight_comp3_1_T = bits(__Bi[1][3], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp3_1_T_1 = not(_conv_weight_comp3_1_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp3_1_T_2 = bits(__Bi[1][3], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp3_1_T_3 = and(_conv_weight_comp3_1_T_1, _conv_weight_comp3_1_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp3_1_T_4 = bits(__Bi[1][3], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp3_1_T_5 = bits(__Bi[1][3], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp3_1_T_6 = not(_conv_weight_comp3_1_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp3_1_T_7 = and(_conv_weight_comp3_1_T_4, _conv_weight_comp3_1_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp3_1_T_8 = mux(_conv_weight_comp3_1_T_7, asSInt(UInt<18>("h020000")), __Bi[1][3]) @[calc8x8.scala 111:61]
    node _conv_weight_comp3_1_T_9 = mux(_conv_weight_comp3_1_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp3_1_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp3[1] <= _conv_weight_comp3_1_T_9 @[calc8x8.scala 129:38]
    node _conv_weight_real_7_T = bits(__B[1][5], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_7_T_1 = not(_conv_weight_real_7_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_7_T_2 = bits(__B[1][5], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_7_T_3 = and(_conv_weight_real_7_T_1, _conv_weight_real_7_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_7_T_4 = bits(__B[1][5], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_7_T_5 = bits(__B[1][5], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_7_T_6 = not(_conv_weight_real_7_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_7_T_7 = and(_conv_weight_real_7_T_4, _conv_weight_real_7_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_7_T_8 = mux(_conv_weight_real_7_T_7, asSInt(UInt<18>("h020000")), __B[1][5]) @[calc8x8.scala 111:61]
    node _conv_weight_real_7_T_9 = mux(_conv_weight_real_7_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_7_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[7] <= _conv_weight_real_7_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_real_8_T = bits(__B[2][0], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_8_T_1 = not(_conv_weight_real_8_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_8_T_2 = bits(__B[2][0], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_8_T_3 = and(_conv_weight_real_8_T_1, _conv_weight_real_8_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_8_T_4 = bits(__B[2][0], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_8_T_5 = bits(__B[2][0], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_8_T_6 = not(_conv_weight_real_8_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_8_T_7 = and(_conv_weight_real_8_T_4, _conv_weight_real_8_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_8_T_8 = mux(_conv_weight_real_8_T_7, asSInt(UInt<18>("h020000")), __B[2][0]) @[calc8x8.scala 111:61]
    node _conv_weight_real_8_T_9 = mux(_conv_weight_real_8_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_8_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[8] <= _conv_weight_real_8_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_real_9_T = bits(__B[2][1], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_9_T_1 = not(_conv_weight_real_9_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_9_T_2 = bits(__B[2][1], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_9_T_3 = and(_conv_weight_real_9_T_1, _conv_weight_real_9_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_9_T_4 = bits(__B[2][1], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_9_T_5 = bits(__B[2][1], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_9_T_6 = not(_conv_weight_real_9_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_9_T_7 = and(_conv_weight_real_9_T_4, _conv_weight_real_9_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_9_T_8 = mux(_conv_weight_real_9_T_7, asSInt(UInt<18>("h020000")), __B[2][1]) @[calc8x8.scala 111:61]
    node _conv_weight_real_9_T_9 = mux(_conv_weight_real_9_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_9_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[9] <= _conv_weight_real_9_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_real_10_T = bits(__B[2][2], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_10_T_1 = not(_conv_weight_real_10_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_10_T_2 = bits(__B[2][2], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_10_T_3 = and(_conv_weight_real_10_T_1, _conv_weight_real_10_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_10_T_4 = bits(__B[2][2], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_10_T_5 = bits(__B[2][2], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_10_T_6 = not(_conv_weight_real_10_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_10_T_7 = and(_conv_weight_real_10_T_4, _conv_weight_real_10_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_10_T_8 = mux(_conv_weight_real_10_T_7, asSInt(UInt<18>("h020000")), __B[2][2]) @[calc8x8.scala 111:61]
    node _conv_weight_real_10_T_9 = mux(_conv_weight_real_10_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_10_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[10] <= _conv_weight_real_10_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_comp1_2_T = add(__B[2][3], __Bi[2][3]) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_2_T_1 = tail(_conv_weight_comp1_2_T, 1) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_2_T_2 = asSInt(_conv_weight_comp1_2_T_1) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_2_T_3 = bits(_conv_weight_comp1_2_T_2, 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp1_2_T_4 = not(_conv_weight_comp1_2_T_3) @[calc8x8.scala 111:21]
    node _conv_weight_comp1_2_T_5 = bits(_conv_weight_comp1_2_T_2, 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp1_2_T_6 = and(_conv_weight_comp1_2_T_4, _conv_weight_comp1_2_T_5) @[calc8x8.scala 111:28]
    node _conv_weight_comp1_2_T_7 = bits(_conv_weight_comp1_2_T_2, 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp1_2_T_8 = bits(_conv_weight_comp1_2_T_2, 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp1_2_T_9 = not(_conv_weight_comp1_2_T_8) @[calc8x8.scala 111:70]
    node _conv_weight_comp1_2_T_10 = and(_conv_weight_comp1_2_T_7, _conv_weight_comp1_2_T_9) @[calc8x8.scala 111:67]
    node _conv_weight_comp1_2_T_11 = mux(_conv_weight_comp1_2_T_10, asSInt(UInt<18>("h020000")), _conv_weight_comp1_2_T_2) @[calc8x8.scala 111:61]
    node _conv_weight_comp1_2_T_12 = mux(_conv_weight_comp1_2_T_6, asSInt(UInt<18>("h01ffff")), _conv_weight_comp1_2_T_11) @[calc8x8.scala 111:19]
    conv_weight.comp1[2] <= _conv_weight_comp1_2_T_12 @[calc8x8.scala 127:38]
    node _conv_weight_comp2_2_T = bits(__B[2][3], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp2_2_T_1 = not(_conv_weight_comp2_2_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp2_2_T_2 = bits(__B[2][3], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp2_2_T_3 = and(_conv_weight_comp2_2_T_1, _conv_weight_comp2_2_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp2_2_T_4 = bits(__B[2][3], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp2_2_T_5 = bits(__B[2][3], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp2_2_T_6 = not(_conv_weight_comp2_2_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp2_2_T_7 = and(_conv_weight_comp2_2_T_4, _conv_weight_comp2_2_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp2_2_T_8 = mux(_conv_weight_comp2_2_T_7, asSInt(UInt<18>("h020000")), __B[2][3]) @[calc8x8.scala 111:61]
    node _conv_weight_comp2_2_T_9 = mux(_conv_weight_comp2_2_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp2_2_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp2[2] <= _conv_weight_comp2_2_T_9 @[calc8x8.scala 128:38]
    node _conv_weight_comp3_2_T = bits(__Bi[2][3], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp3_2_T_1 = not(_conv_weight_comp3_2_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp3_2_T_2 = bits(__Bi[2][3], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp3_2_T_3 = and(_conv_weight_comp3_2_T_1, _conv_weight_comp3_2_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp3_2_T_4 = bits(__Bi[2][3], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp3_2_T_5 = bits(__Bi[2][3], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp3_2_T_6 = not(_conv_weight_comp3_2_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp3_2_T_7 = and(_conv_weight_comp3_2_T_4, _conv_weight_comp3_2_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp3_2_T_8 = mux(_conv_weight_comp3_2_T_7, asSInt(UInt<18>("h020000")), __Bi[2][3]) @[calc8x8.scala 111:61]
    node _conv_weight_comp3_2_T_9 = mux(_conv_weight_comp3_2_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp3_2_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp3[2] <= _conv_weight_comp3_2_T_9 @[calc8x8.scala 129:38]
    node _conv_weight_real_11_T = bits(__B[2][5], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_11_T_1 = not(_conv_weight_real_11_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_11_T_2 = bits(__B[2][5], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_11_T_3 = and(_conv_weight_real_11_T_1, _conv_weight_real_11_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_11_T_4 = bits(__B[2][5], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_11_T_5 = bits(__B[2][5], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_11_T_6 = not(_conv_weight_real_11_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_11_T_7 = and(_conv_weight_real_11_T_4, _conv_weight_real_11_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_11_T_8 = mux(_conv_weight_real_11_T_7, asSInt(UInt<18>("h020000")), __B[2][5]) @[calc8x8.scala 111:61]
    node _conv_weight_real_11_T_9 = mux(_conv_weight_real_11_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_11_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[11] <= _conv_weight_real_11_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_comp1_3_T = add(__B[3][0], __Bi[3][0]) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_3_T_1 = tail(_conv_weight_comp1_3_T, 1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_3_T_2 = asSInt(_conv_weight_comp1_3_T_1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_3_T_3 = bits(_conv_weight_comp1_3_T_2, 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp1_3_T_4 = not(_conv_weight_comp1_3_T_3) @[calc8x8.scala 111:21]
    node _conv_weight_comp1_3_T_5 = bits(_conv_weight_comp1_3_T_2, 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp1_3_T_6 = and(_conv_weight_comp1_3_T_4, _conv_weight_comp1_3_T_5) @[calc8x8.scala 111:28]
    node _conv_weight_comp1_3_T_7 = bits(_conv_weight_comp1_3_T_2, 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp1_3_T_8 = bits(_conv_weight_comp1_3_T_2, 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp1_3_T_9 = not(_conv_weight_comp1_3_T_8) @[calc8x8.scala 111:70]
    node _conv_weight_comp1_3_T_10 = and(_conv_weight_comp1_3_T_7, _conv_weight_comp1_3_T_9) @[calc8x8.scala 111:67]
    node _conv_weight_comp1_3_T_11 = mux(_conv_weight_comp1_3_T_10, asSInt(UInt<18>("h020000")), _conv_weight_comp1_3_T_2) @[calc8x8.scala 111:61]
    node _conv_weight_comp1_3_T_12 = mux(_conv_weight_comp1_3_T_6, asSInt(UInt<18>("h01ffff")), _conv_weight_comp1_3_T_11) @[calc8x8.scala 111:19]
    conv_weight.comp1[3] <= _conv_weight_comp1_3_T_12 @[calc8x8.scala 122:38]
    node _conv_weight_comp2_3_T = bits(__B[3][0], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp2_3_T_1 = not(_conv_weight_comp2_3_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp2_3_T_2 = bits(__B[3][0], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp2_3_T_3 = and(_conv_weight_comp2_3_T_1, _conv_weight_comp2_3_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp2_3_T_4 = bits(__B[3][0], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp2_3_T_5 = bits(__B[3][0], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp2_3_T_6 = not(_conv_weight_comp2_3_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp2_3_T_7 = and(_conv_weight_comp2_3_T_4, _conv_weight_comp2_3_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp2_3_T_8 = mux(_conv_weight_comp2_3_T_7, asSInt(UInt<18>("h020000")), __B[3][0]) @[calc8x8.scala 111:61]
    node _conv_weight_comp2_3_T_9 = mux(_conv_weight_comp2_3_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp2_3_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp2[3] <= _conv_weight_comp2_3_T_9 @[calc8x8.scala 123:38]
    node _conv_weight_comp3_3_T = bits(__Bi[3][0], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp3_3_T_1 = not(_conv_weight_comp3_3_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp3_3_T_2 = bits(__Bi[3][0], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp3_3_T_3 = and(_conv_weight_comp3_3_T_1, _conv_weight_comp3_3_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp3_3_T_4 = bits(__Bi[3][0], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp3_3_T_5 = bits(__Bi[3][0], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp3_3_T_6 = not(_conv_weight_comp3_3_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp3_3_T_7 = and(_conv_weight_comp3_3_T_4, _conv_weight_comp3_3_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp3_3_T_8 = mux(_conv_weight_comp3_3_T_7, asSInt(UInt<18>("h020000")), __Bi[3][0]) @[calc8x8.scala 111:61]
    node _conv_weight_comp3_3_T_9 = mux(_conv_weight_comp3_3_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp3_3_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp3[3] <= _conv_weight_comp3_3_T_9 @[calc8x8.scala 124:38]
    node _conv_weight_comp1_4_T = add(__B[3][1], __Bi[3][1]) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_4_T_1 = tail(_conv_weight_comp1_4_T, 1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_4_T_2 = asSInt(_conv_weight_comp1_4_T_1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_4_T_3 = bits(_conv_weight_comp1_4_T_2, 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp1_4_T_4 = not(_conv_weight_comp1_4_T_3) @[calc8x8.scala 111:21]
    node _conv_weight_comp1_4_T_5 = bits(_conv_weight_comp1_4_T_2, 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp1_4_T_6 = and(_conv_weight_comp1_4_T_4, _conv_weight_comp1_4_T_5) @[calc8x8.scala 111:28]
    node _conv_weight_comp1_4_T_7 = bits(_conv_weight_comp1_4_T_2, 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp1_4_T_8 = bits(_conv_weight_comp1_4_T_2, 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp1_4_T_9 = not(_conv_weight_comp1_4_T_8) @[calc8x8.scala 111:70]
    node _conv_weight_comp1_4_T_10 = and(_conv_weight_comp1_4_T_7, _conv_weight_comp1_4_T_9) @[calc8x8.scala 111:67]
    node _conv_weight_comp1_4_T_11 = mux(_conv_weight_comp1_4_T_10, asSInt(UInt<18>("h020000")), _conv_weight_comp1_4_T_2) @[calc8x8.scala 111:61]
    node _conv_weight_comp1_4_T_12 = mux(_conv_weight_comp1_4_T_6, asSInt(UInt<18>("h01ffff")), _conv_weight_comp1_4_T_11) @[calc8x8.scala 111:19]
    conv_weight.comp1[4] <= _conv_weight_comp1_4_T_12 @[calc8x8.scala 122:38]
    node _conv_weight_comp2_4_T = bits(__B[3][1], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp2_4_T_1 = not(_conv_weight_comp2_4_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp2_4_T_2 = bits(__B[3][1], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp2_4_T_3 = and(_conv_weight_comp2_4_T_1, _conv_weight_comp2_4_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp2_4_T_4 = bits(__B[3][1], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp2_4_T_5 = bits(__B[3][1], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp2_4_T_6 = not(_conv_weight_comp2_4_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp2_4_T_7 = and(_conv_weight_comp2_4_T_4, _conv_weight_comp2_4_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp2_4_T_8 = mux(_conv_weight_comp2_4_T_7, asSInt(UInt<18>("h020000")), __B[3][1]) @[calc8x8.scala 111:61]
    node _conv_weight_comp2_4_T_9 = mux(_conv_weight_comp2_4_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp2_4_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp2[4] <= _conv_weight_comp2_4_T_9 @[calc8x8.scala 123:38]
    node _conv_weight_comp3_4_T = bits(__Bi[3][1], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp3_4_T_1 = not(_conv_weight_comp3_4_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp3_4_T_2 = bits(__Bi[3][1], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp3_4_T_3 = and(_conv_weight_comp3_4_T_1, _conv_weight_comp3_4_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp3_4_T_4 = bits(__Bi[3][1], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp3_4_T_5 = bits(__Bi[3][1], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp3_4_T_6 = not(_conv_weight_comp3_4_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp3_4_T_7 = and(_conv_weight_comp3_4_T_4, _conv_weight_comp3_4_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp3_4_T_8 = mux(_conv_weight_comp3_4_T_7, asSInt(UInt<18>("h020000")), __Bi[3][1]) @[calc8x8.scala 111:61]
    node _conv_weight_comp3_4_T_9 = mux(_conv_weight_comp3_4_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp3_4_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp3[4] <= _conv_weight_comp3_4_T_9 @[calc8x8.scala 124:38]
    node _conv_weight_comp1_5_T = add(__B[3][2], __Bi[3][2]) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_5_T_1 = tail(_conv_weight_comp1_5_T, 1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_5_T_2 = asSInt(_conv_weight_comp1_5_T_1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_5_T_3 = bits(_conv_weight_comp1_5_T_2, 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp1_5_T_4 = not(_conv_weight_comp1_5_T_3) @[calc8x8.scala 111:21]
    node _conv_weight_comp1_5_T_5 = bits(_conv_weight_comp1_5_T_2, 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp1_5_T_6 = and(_conv_weight_comp1_5_T_4, _conv_weight_comp1_5_T_5) @[calc8x8.scala 111:28]
    node _conv_weight_comp1_5_T_7 = bits(_conv_weight_comp1_5_T_2, 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp1_5_T_8 = bits(_conv_weight_comp1_5_T_2, 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp1_5_T_9 = not(_conv_weight_comp1_5_T_8) @[calc8x8.scala 111:70]
    node _conv_weight_comp1_5_T_10 = and(_conv_weight_comp1_5_T_7, _conv_weight_comp1_5_T_9) @[calc8x8.scala 111:67]
    node _conv_weight_comp1_5_T_11 = mux(_conv_weight_comp1_5_T_10, asSInt(UInt<18>("h020000")), _conv_weight_comp1_5_T_2) @[calc8x8.scala 111:61]
    node _conv_weight_comp1_5_T_12 = mux(_conv_weight_comp1_5_T_6, asSInt(UInt<18>("h01ffff")), _conv_weight_comp1_5_T_11) @[calc8x8.scala 111:19]
    conv_weight.comp1[5] <= _conv_weight_comp1_5_T_12 @[calc8x8.scala 122:38]
    node _conv_weight_comp2_5_T = bits(__B[3][2], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp2_5_T_1 = not(_conv_weight_comp2_5_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp2_5_T_2 = bits(__B[3][2], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp2_5_T_3 = and(_conv_weight_comp2_5_T_1, _conv_weight_comp2_5_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp2_5_T_4 = bits(__B[3][2], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp2_5_T_5 = bits(__B[3][2], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp2_5_T_6 = not(_conv_weight_comp2_5_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp2_5_T_7 = and(_conv_weight_comp2_5_T_4, _conv_weight_comp2_5_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp2_5_T_8 = mux(_conv_weight_comp2_5_T_7, asSInt(UInt<18>("h020000")), __B[3][2]) @[calc8x8.scala 111:61]
    node _conv_weight_comp2_5_T_9 = mux(_conv_weight_comp2_5_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp2_5_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp2[5] <= _conv_weight_comp2_5_T_9 @[calc8x8.scala 123:38]
    node _conv_weight_comp3_5_T = bits(__Bi[3][2], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp3_5_T_1 = not(_conv_weight_comp3_5_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp3_5_T_2 = bits(__Bi[3][2], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp3_5_T_3 = and(_conv_weight_comp3_5_T_1, _conv_weight_comp3_5_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp3_5_T_4 = bits(__Bi[3][2], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp3_5_T_5 = bits(__Bi[3][2], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp3_5_T_6 = not(_conv_weight_comp3_5_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp3_5_T_7 = and(_conv_weight_comp3_5_T_4, _conv_weight_comp3_5_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp3_5_T_8 = mux(_conv_weight_comp3_5_T_7, asSInt(UInt<18>("h020000")), __Bi[3][2]) @[calc8x8.scala 111:61]
    node _conv_weight_comp3_5_T_9 = mux(_conv_weight_comp3_5_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp3_5_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp3[5] <= _conv_weight_comp3_5_T_9 @[calc8x8.scala 124:38]
    node _conv_weight_comp1_6_T = add(__B[3][3], __Bi[3][3]) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_6_T_1 = tail(_conv_weight_comp1_6_T, 1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_6_T_2 = asSInt(_conv_weight_comp1_6_T_1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_6_T_3 = bits(_conv_weight_comp1_6_T_2, 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp1_6_T_4 = not(_conv_weight_comp1_6_T_3) @[calc8x8.scala 111:21]
    node _conv_weight_comp1_6_T_5 = bits(_conv_weight_comp1_6_T_2, 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp1_6_T_6 = and(_conv_weight_comp1_6_T_4, _conv_weight_comp1_6_T_5) @[calc8x8.scala 111:28]
    node _conv_weight_comp1_6_T_7 = bits(_conv_weight_comp1_6_T_2, 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp1_6_T_8 = bits(_conv_weight_comp1_6_T_2, 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp1_6_T_9 = not(_conv_weight_comp1_6_T_8) @[calc8x8.scala 111:70]
    node _conv_weight_comp1_6_T_10 = and(_conv_weight_comp1_6_T_7, _conv_weight_comp1_6_T_9) @[calc8x8.scala 111:67]
    node _conv_weight_comp1_6_T_11 = mux(_conv_weight_comp1_6_T_10, asSInt(UInt<18>("h020000")), _conv_weight_comp1_6_T_2) @[calc8x8.scala 111:61]
    node _conv_weight_comp1_6_T_12 = mux(_conv_weight_comp1_6_T_6, asSInt(UInt<18>("h01ffff")), _conv_weight_comp1_6_T_11) @[calc8x8.scala 111:19]
    conv_weight.comp1[6] <= _conv_weight_comp1_6_T_12 @[calc8x8.scala 122:38]
    node _conv_weight_comp2_6_T = bits(__B[3][3], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp2_6_T_1 = not(_conv_weight_comp2_6_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp2_6_T_2 = bits(__B[3][3], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp2_6_T_3 = and(_conv_weight_comp2_6_T_1, _conv_weight_comp2_6_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp2_6_T_4 = bits(__B[3][3], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp2_6_T_5 = bits(__B[3][3], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp2_6_T_6 = not(_conv_weight_comp2_6_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp2_6_T_7 = and(_conv_weight_comp2_6_T_4, _conv_weight_comp2_6_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp2_6_T_8 = mux(_conv_weight_comp2_6_T_7, asSInt(UInt<18>("h020000")), __B[3][3]) @[calc8x8.scala 111:61]
    node _conv_weight_comp2_6_T_9 = mux(_conv_weight_comp2_6_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp2_6_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp2[6] <= _conv_weight_comp2_6_T_9 @[calc8x8.scala 123:38]
    node _conv_weight_comp3_6_T = bits(__Bi[3][3], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp3_6_T_1 = not(_conv_weight_comp3_6_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp3_6_T_2 = bits(__Bi[3][3], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp3_6_T_3 = and(_conv_weight_comp3_6_T_1, _conv_weight_comp3_6_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp3_6_T_4 = bits(__Bi[3][3], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp3_6_T_5 = bits(__Bi[3][3], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp3_6_T_6 = not(_conv_weight_comp3_6_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp3_6_T_7 = and(_conv_weight_comp3_6_T_4, _conv_weight_comp3_6_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp3_6_T_8 = mux(_conv_weight_comp3_6_T_7, asSInt(UInt<18>("h020000")), __Bi[3][3]) @[calc8x8.scala 111:61]
    node _conv_weight_comp3_6_T_9 = mux(_conv_weight_comp3_6_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp3_6_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp3[6] <= _conv_weight_comp3_6_T_9 @[calc8x8.scala 124:38]
    node _conv_weight_comp1_7_T = add(__B[3][4], __Bi[3][4]) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_7_T_1 = tail(_conv_weight_comp1_7_T, 1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_7_T_2 = asSInt(_conv_weight_comp1_7_T_1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_7_T_3 = bits(_conv_weight_comp1_7_T_2, 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp1_7_T_4 = not(_conv_weight_comp1_7_T_3) @[calc8x8.scala 111:21]
    node _conv_weight_comp1_7_T_5 = bits(_conv_weight_comp1_7_T_2, 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp1_7_T_6 = and(_conv_weight_comp1_7_T_4, _conv_weight_comp1_7_T_5) @[calc8x8.scala 111:28]
    node _conv_weight_comp1_7_T_7 = bits(_conv_weight_comp1_7_T_2, 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp1_7_T_8 = bits(_conv_weight_comp1_7_T_2, 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp1_7_T_9 = not(_conv_weight_comp1_7_T_8) @[calc8x8.scala 111:70]
    node _conv_weight_comp1_7_T_10 = and(_conv_weight_comp1_7_T_7, _conv_weight_comp1_7_T_9) @[calc8x8.scala 111:67]
    node _conv_weight_comp1_7_T_11 = mux(_conv_weight_comp1_7_T_10, asSInt(UInt<18>("h020000")), _conv_weight_comp1_7_T_2) @[calc8x8.scala 111:61]
    node _conv_weight_comp1_7_T_12 = mux(_conv_weight_comp1_7_T_6, asSInt(UInt<18>("h01ffff")), _conv_weight_comp1_7_T_11) @[calc8x8.scala 111:19]
    conv_weight.comp1[7] <= _conv_weight_comp1_7_T_12 @[calc8x8.scala 122:38]
    node _conv_weight_comp2_7_T = bits(__B[3][4], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp2_7_T_1 = not(_conv_weight_comp2_7_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp2_7_T_2 = bits(__B[3][4], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp2_7_T_3 = and(_conv_weight_comp2_7_T_1, _conv_weight_comp2_7_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp2_7_T_4 = bits(__B[3][4], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp2_7_T_5 = bits(__B[3][4], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp2_7_T_6 = not(_conv_weight_comp2_7_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp2_7_T_7 = and(_conv_weight_comp2_7_T_4, _conv_weight_comp2_7_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp2_7_T_8 = mux(_conv_weight_comp2_7_T_7, asSInt(UInt<18>("h020000")), __B[3][4]) @[calc8x8.scala 111:61]
    node _conv_weight_comp2_7_T_9 = mux(_conv_weight_comp2_7_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp2_7_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp2[7] <= _conv_weight_comp2_7_T_9 @[calc8x8.scala 123:38]
    node _conv_weight_comp3_7_T = bits(__Bi[3][4], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp3_7_T_1 = not(_conv_weight_comp3_7_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp3_7_T_2 = bits(__Bi[3][4], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp3_7_T_3 = and(_conv_weight_comp3_7_T_1, _conv_weight_comp3_7_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp3_7_T_4 = bits(__Bi[3][4], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp3_7_T_5 = bits(__Bi[3][4], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp3_7_T_6 = not(_conv_weight_comp3_7_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp3_7_T_7 = and(_conv_weight_comp3_7_T_4, _conv_weight_comp3_7_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp3_7_T_8 = mux(_conv_weight_comp3_7_T_7, asSInt(UInt<18>("h020000")), __Bi[3][4]) @[calc8x8.scala 111:61]
    node _conv_weight_comp3_7_T_9 = mux(_conv_weight_comp3_7_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp3_7_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp3[7] <= _conv_weight_comp3_7_T_9 @[calc8x8.scala 124:38]
    node _conv_weight_comp1_8_T = add(__B[3][5], __Bi[3][5]) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_8_T_1 = tail(_conv_weight_comp1_8_T, 1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_8_T_2 = asSInt(_conv_weight_comp1_8_T_1) @[calc8x8.scala 122:59]
    node _conv_weight_comp1_8_T_3 = bits(_conv_weight_comp1_8_T_2, 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp1_8_T_4 = not(_conv_weight_comp1_8_T_3) @[calc8x8.scala 111:21]
    node _conv_weight_comp1_8_T_5 = bits(_conv_weight_comp1_8_T_2, 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp1_8_T_6 = and(_conv_weight_comp1_8_T_4, _conv_weight_comp1_8_T_5) @[calc8x8.scala 111:28]
    node _conv_weight_comp1_8_T_7 = bits(_conv_weight_comp1_8_T_2, 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp1_8_T_8 = bits(_conv_weight_comp1_8_T_2, 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp1_8_T_9 = not(_conv_weight_comp1_8_T_8) @[calc8x8.scala 111:70]
    node _conv_weight_comp1_8_T_10 = and(_conv_weight_comp1_8_T_7, _conv_weight_comp1_8_T_9) @[calc8x8.scala 111:67]
    node _conv_weight_comp1_8_T_11 = mux(_conv_weight_comp1_8_T_10, asSInt(UInt<18>("h020000")), _conv_weight_comp1_8_T_2) @[calc8x8.scala 111:61]
    node _conv_weight_comp1_8_T_12 = mux(_conv_weight_comp1_8_T_6, asSInt(UInt<18>("h01ffff")), _conv_weight_comp1_8_T_11) @[calc8x8.scala 111:19]
    conv_weight.comp1[8] <= _conv_weight_comp1_8_T_12 @[calc8x8.scala 122:38]
    node _conv_weight_comp2_8_T = bits(__B[3][5], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp2_8_T_1 = not(_conv_weight_comp2_8_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp2_8_T_2 = bits(__B[3][5], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp2_8_T_3 = and(_conv_weight_comp2_8_T_1, _conv_weight_comp2_8_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp2_8_T_4 = bits(__B[3][5], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp2_8_T_5 = bits(__B[3][5], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp2_8_T_6 = not(_conv_weight_comp2_8_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp2_8_T_7 = and(_conv_weight_comp2_8_T_4, _conv_weight_comp2_8_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp2_8_T_8 = mux(_conv_weight_comp2_8_T_7, asSInt(UInt<18>("h020000")), __B[3][5]) @[calc8x8.scala 111:61]
    node _conv_weight_comp2_8_T_9 = mux(_conv_weight_comp2_8_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp2_8_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp2[8] <= _conv_weight_comp2_8_T_9 @[calc8x8.scala 123:38]
    node _conv_weight_comp3_8_T = bits(__Bi[3][5], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp3_8_T_1 = not(_conv_weight_comp3_8_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp3_8_T_2 = bits(__Bi[3][5], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp3_8_T_3 = and(_conv_weight_comp3_8_T_1, _conv_weight_comp3_8_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp3_8_T_4 = bits(__Bi[3][5], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp3_8_T_5 = bits(__Bi[3][5], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp3_8_T_6 = not(_conv_weight_comp3_8_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp3_8_T_7 = and(_conv_weight_comp3_8_T_4, _conv_weight_comp3_8_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp3_8_T_8 = mux(_conv_weight_comp3_8_T_7, asSInt(UInt<18>("h020000")), __Bi[3][5]) @[calc8x8.scala 111:61]
    node _conv_weight_comp3_8_T_9 = mux(_conv_weight_comp3_8_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp3_8_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp3[8] <= _conv_weight_comp3_8_T_9 @[calc8x8.scala 124:38]
    node _conv_weight_real_12_T = bits(__B[5][0], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_12_T_1 = not(_conv_weight_real_12_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_12_T_2 = bits(__B[5][0], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_12_T_3 = and(_conv_weight_real_12_T_1, _conv_weight_real_12_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_12_T_4 = bits(__B[5][0], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_12_T_5 = bits(__B[5][0], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_12_T_6 = not(_conv_weight_real_12_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_12_T_7 = and(_conv_weight_real_12_T_4, _conv_weight_real_12_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_12_T_8 = mux(_conv_weight_real_12_T_7, asSInt(UInt<18>("h020000")), __B[5][0]) @[calc8x8.scala 111:61]
    node _conv_weight_real_12_T_9 = mux(_conv_weight_real_12_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_12_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[12] <= _conv_weight_real_12_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_real_13_T = bits(__B[5][1], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_13_T_1 = not(_conv_weight_real_13_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_13_T_2 = bits(__B[5][1], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_13_T_3 = and(_conv_weight_real_13_T_1, _conv_weight_real_13_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_13_T_4 = bits(__B[5][1], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_13_T_5 = bits(__B[5][1], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_13_T_6 = not(_conv_weight_real_13_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_13_T_7 = and(_conv_weight_real_13_T_4, _conv_weight_real_13_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_13_T_8 = mux(_conv_weight_real_13_T_7, asSInt(UInt<18>("h020000")), __B[5][1]) @[calc8x8.scala 111:61]
    node _conv_weight_real_13_T_9 = mux(_conv_weight_real_13_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_13_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[13] <= _conv_weight_real_13_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_real_14_T = bits(__B[5][2], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_14_T_1 = not(_conv_weight_real_14_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_14_T_2 = bits(__B[5][2], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_14_T_3 = and(_conv_weight_real_14_T_1, _conv_weight_real_14_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_14_T_4 = bits(__B[5][2], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_14_T_5 = bits(__B[5][2], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_14_T_6 = not(_conv_weight_real_14_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_14_T_7 = and(_conv_weight_real_14_T_4, _conv_weight_real_14_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_14_T_8 = mux(_conv_weight_real_14_T_7, asSInt(UInt<18>("h020000")), __B[5][2]) @[calc8x8.scala 111:61]
    node _conv_weight_real_14_T_9 = mux(_conv_weight_real_14_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_14_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[14] <= _conv_weight_real_14_T_9 @[calc8x8.scala 119:37]
    node _conv_weight_comp1_9_T = add(__B[5][3], __Bi[5][3]) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_9_T_1 = tail(_conv_weight_comp1_9_T, 1) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_9_T_2 = asSInt(_conv_weight_comp1_9_T_1) @[calc8x8.scala 127:59]
    node _conv_weight_comp1_9_T_3 = bits(_conv_weight_comp1_9_T_2, 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp1_9_T_4 = not(_conv_weight_comp1_9_T_3) @[calc8x8.scala 111:21]
    node _conv_weight_comp1_9_T_5 = bits(_conv_weight_comp1_9_T_2, 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp1_9_T_6 = and(_conv_weight_comp1_9_T_4, _conv_weight_comp1_9_T_5) @[calc8x8.scala 111:28]
    node _conv_weight_comp1_9_T_7 = bits(_conv_weight_comp1_9_T_2, 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp1_9_T_8 = bits(_conv_weight_comp1_9_T_2, 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp1_9_T_9 = not(_conv_weight_comp1_9_T_8) @[calc8x8.scala 111:70]
    node _conv_weight_comp1_9_T_10 = and(_conv_weight_comp1_9_T_7, _conv_weight_comp1_9_T_9) @[calc8x8.scala 111:67]
    node _conv_weight_comp1_9_T_11 = mux(_conv_weight_comp1_9_T_10, asSInt(UInt<18>("h020000")), _conv_weight_comp1_9_T_2) @[calc8x8.scala 111:61]
    node _conv_weight_comp1_9_T_12 = mux(_conv_weight_comp1_9_T_6, asSInt(UInt<18>("h01ffff")), _conv_weight_comp1_9_T_11) @[calc8x8.scala 111:19]
    conv_weight.comp1[9] <= _conv_weight_comp1_9_T_12 @[calc8x8.scala 127:38]
    node _conv_weight_comp2_9_T = bits(__B[5][3], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp2_9_T_1 = not(_conv_weight_comp2_9_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp2_9_T_2 = bits(__B[5][3], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp2_9_T_3 = and(_conv_weight_comp2_9_T_1, _conv_weight_comp2_9_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp2_9_T_4 = bits(__B[5][3], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp2_9_T_5 = bits(__B[5][3], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp2_9_T_6 = not(_conv_weight_comp2_9_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp2_9_T_7 = and(_conv_weight_comp2_9_T_4, _conv_weight_comp2_9_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp2_9_T_8 = mux(_conv_weight_comp2_9_T_7, asSInt(UInt<18>("h020000")), __B[5][3]) @[calc8x8.scala 111:61]
    node _conv_weight_comp2_9_T_9 = mux(_conv_weight_comp2_9_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp2_9_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp2[9] <= _conv_weight_comp2_9_T_9 @[calc8x8.scala 128:38]
    node _conv_weight_comp3_9_T = bits(__Bi[5][3], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_comp3_9_T_1 = not(_conv_weight_comp3_9_T) @[calc8x8.scala 111:21]
    node _conv_weight_comp3_9_T_2 = bits(__Bi[5][3], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_comp3_9_T_3 = and(_conv_weight_comp3_9_T_1, _conv_weight_comp3_9_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_comp3_9_T_4 = bits(__Bi[5][3], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_comp3_9_T_5 = bits(__Bi[5][3], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_comp3_9_T_6 = not(_conv_weight_comp3_9_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_comp3_9_T_7 = and(_conv_weight_comp3_9_T_4, _conv_weight_comp3_9_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_comp3_9_T_8 = mux(_conv_weight_comp3_9_T_7, asSInt(UInt<18>("h020000")), __Bi[5][3]) @[calc8x8.scala 111:61]
    node _conv_weight_comp3_9_T_9 = mux(_conv_weight_comp3_9_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_comp3_9_T_8) @[calc8x8.scala 111:19]
    conv_weight.comp3[9] <= _conv_weight_comp3_9_T_9 @[calc8x8.scala 129:38]
    node _conv_weight_real_15_T = bits(__B[5][5], 18, 18) @[calc8x8.scala 111:23]
    node _conv_weight_real_15_T_1 = not(_conv_weight_real_15_T) @[calc8x8.scala 111:21]
    node _conv_weight_real_15_T_2 = bits(__B[5][5], 17, 17) @[calc8x8.scala 111:31]
    node _conv_weight_real_15_T_3 = and(_conv_weight_real_15_T_1, _conv_weight_real_15_T_2) @[calc8x8.scala 111:28]
    node _conv_weight_real_15_T_4 = bits(__B[5][5], 18, 18) @[calc8x8.scala 111:63]
    node _conv_weight_real_15_T_5 = bits(__B[5][5], 17, 17) @[calc8x8.scala 111:72]
    node _conv_weight_real_15_T_6 = not(_conv_weight_real_15_T_5) @[calc8x8.scala 111:70]
    node _conv_weight_real_15_T_7 = and(_conv_weight_real_15_T_4, _conv_weight_real_15_T_6) @[calc8x8.scala 111:67]
    node _conv_weight_real_15_T_8 = mux(_conv_weight_real_15_T_7, asSInt(UInt<18>("h020000")), __B[5][5]) @[calc8x8.scala 111:61]
    node _conv_weight_real_15_T_9 = mux(_conv_weight_real_15_T_3, asSInt(UInt<18>("h01ffff")), _conv_weight_real_15_T_8) @[calc8x8.scala 111:19]
    conv_weight.real[15] <= _conv_weight_real_15_T_9 @[calc8x8.scala 119:37]
    node _T = asUInt(UInt<1>("h00")) @[Conditional.scala 37:23]
    node _T_1 = asUInt(io.flag) @[Conditional.scala 37:39]
    node _T_2 = eq(_T, _T_1) @[Conditional.scala 37:30]
    when _T_2 : @[Conditional.scala 40:58]
      wire A_0_input_ret : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
      A_0_input_ret.mat[0] <= io.input.mat[0] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[1] <= io.input.mat[1] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[2] <= io.input.mat[2] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[3] <= io.input.mat[3] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[4] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[5] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[6] <= io.input.mat[8] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[7] <= io.input.mat[9] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[8] <= io.input.mat[10] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[9] <= io.input.mat[11] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[10] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[11] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[12] <= io.input.mat[16] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[13] <= io.input.mat[17] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[14] <= io.input.mat[18] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[15] <= io.input.mat[19] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[16] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[17] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[18] <= io.input.mat[24] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[19] <= io.input.mat[25] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[20] <= io.input.mat[26] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[21] <= io.input.mat[27] @[calc8x8.scala 39:32]
      A_0_input_ret.mat[22] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[23] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[24] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[25] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[26] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[27] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[28] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[29] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[30] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[31] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[32] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[33] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[34] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_0_input_ret.mat[35] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A[0].input.mat[0] <= A_0_input_ret.mat[0] @[calc8x8.scala 138:24]
      A[0].input.mat[1] <= A_0_input_ret.mat[1] @[calc8x8.scala 138:24]
      A[0].input.mat[2] <= A_0_input_ret.mat[2] @[calc8x8.scala 138:24]
      A[0].input.mat[3] <= A_0_input_ret.mat[3] @[calc8x8.scala 138:24]
      A[0].input.mat[4] <= A_0_input_ret.mat[4] @[calc8x8.scala 138:24]
      A[0].input.mat[5] <= A_0_input_ret.mat[5] @[calc8x8.scala 138:24]
      A[0].input.mat[6] <= A_0_input_ret.mat[6] @[calc8x8.scala 138:24]
      A[0].input.mat[7] <= A_0_input_ret.mat[7] @[calc8x8.scala 138:24]
      A[0].input.mat[8] <= A_0_input_ret.mat[8] @[calc8x8.scala 138:24]
      A[0].input.mat[9] <= A_0_input_ret.mat[9] @[calc8x8.scala 138:24]
      A[0].input.mat[10] <= A_0_input_ret.mat[10] @[calc8x8.scala 138:24]
      A[0].input.mat[11] <= A_0_input_ret.mat[11] @[calc8x8.scala 138:24]
      A[0].input.mat[12] <= A_0_input_ret.mat[12] @[calc8x8.scala 138:24]
      A[0].input.mat[13] <= A_0_input_ret.mat[13] @[calc8x8.scala 138:24]
      A[0].input.mat[14] <= A_0_input_ret.mat[14] @[calc8x8.scala 138:24]
      A[0].input.mat[15] <= A_0_input_ret.mat[15] @[calc8x8.scala 138:24]
      A[0].input.mat[16] <= A_0_input_ret.mat[16] @[calc8x8.scala 138:24]
      A[0].input.mat[17] <= A_0_input_ret.mat[17] @[calc8x8.scala 138:24]
      A[0].input.mat[18] <= A_0_input_ret.mat[18] @[calc8x8.scala 138:24]
      A[0].input.mat[19] <= A_0_input_ret.mat[19] @[calc8x8.scala 138:24]
      A[0].input.mat[20] <= A_0_input_ret.mat[20] @[calc8x8.scala 138:24]
      A[0].input.mat[21] <= A_0_input_ret.mat[21] @[calc8x8.scala 138:24]
      A[0].input.mat[22] <= A_0_input_ret.mat[22] @[calc8x8.scala 138:24]
      A[0].input.mat[23] <= A_0_input_ret.mat[23] @[calc8x8.scala 138:24]
      A[0].input.mat[24] <= A_0_input_ret.mat[24] @[calc8x8.scala 138:24]
      A[0].input.mat[25] <= A_0_input_ret.mat[25] @[calc8x8.scala 138:24]
      A[0].input.mat[26] <= A_0_input_ret.mat[26] @[calc8x8.scala 138:24]
      A[0].input.mat[27] <= A_0_input_ret.mat[27] @[calc8x8.scala 138:24]
      A[0].input.mat[28] <= A_0_input_ret.mat[28] @[calc8x8.scala 138:24]
      A[0].input.mat[29] <= A_0_input_ret.mat[29] @[calc8x8.scala 138:24]
      A[0].input.mat[30] <= A_0_input_ret.mat[30] @[calc8x8.scala 138:24]
      A[0].input.mat[31] <= A_0_input_ret.mat[31] @[calc8x8.scala 138:24]
      A[0].input.mat[32] <= A_0_input_ret.mat[32] @[calc8x8.scala 138:24]
      A[0].input.mat[33] <= A_0_input_ret.mat[33] @[calc8x8.scala 138:24]
      A[0].input.mat[34] <= A_0_input_ret.mat[34] @[calc8x8.scala 138:24]
      A[0].input.mat[35] <= A_0_input_ret.mat[35] @[calc8x8.scala 138:24]
      wire A_1_input_ret : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
      A_1_input_ret.mat[0] <= io.input.mat[3] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[1] <= io.input.mat[4] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[2] <= io.input.mat[5] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[3] <= io.input.mat[6] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[4] <= io.input.mat[7] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[5] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[6] <= io.input.mat[11] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[7] <= io.input.mat[12] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[8] <= io.input.mat[13] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[9] <= io.input.mat[14] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[10] <= io.input.mat[15] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[11] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[12] <= io.input.mat[19] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[13] <= io.input.mat[20] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[14] <= io.input.mat[21] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[15] <= io.input.mat[22] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[16] <= io.input.mat[23] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[17] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[18] <= io.input.mat[27] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[19] <= io.input.mat[28] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[20] <= io.input.mat[29] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[21] <= io.input.mat[30] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[22] <= io.input.mat[31] @[calc8x8.scala 39:32]
      A_1_input_ret.mat[23] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[24] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[25] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[26] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[27] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[28] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[29] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[30] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[31] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[32] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[33] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[34] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_1_input_ret.mat[35] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A[1].input.mat[0] <= A_1_input_ret.mat[0] @[calc8x8.scala 139:24]
      A[1].input.mat[1] <= A_1_input_ret.mat[1] @[calc8x8.scala 139:24]
      A[1].input.mat[2] <= A_1_input_ret.mat[2] @[calc8x8.scala 139:24]
      A[1].input.mat[3] <= A_1_input_ret.mat[3] @[calc8x8.scala 139:24]
      A[1].input.mat[4] <= A_1_input_ret.mat[4] @[calc8x8.scala 139:24]
      A[1].input.mat[5] <= A_1_input_ret.mat[5] @[calc8x8.scala 139:24]
      A[1].input.mat[6] <= A_1_input_ret.mat[6] @[calc8x8.scala 139:24]
      A[1].input.mat[7] <= A_1_input_ret.mat[7] @[calc8x8.scala 139:24]
      A[1].input.mat[8] <= A_1_input_ret.mat[8] @[calc8x8.scala 139:24]
      A[1].input.mat[9] <= A_1_input_ret.mat[9] @[calc8x8.scala 139:24]
      A[1].input.mat[10] <= A_1_input_ret.mat[10] @[calc8x8.scala 139:24]
      A[1].input.mat[11] <= A_1_input_ret.mat[11] @[calc8x8.scala 139:24]
      A[1].input.mat[12] <= A_1_input_ret.mat[12] @[calc8x8.scala 139:24]
      A[1].input.mat[13] <= A_1_input_ret.mat[13] @[calc8x8.scala 139:24]
      A[1].input.mat[14] <= A_1_input_ret.mat[14] @[calc8x8.scala 139:24]
      A[1].input.mat[15] <= A_1_input_ret.mat[15] @[calc8x8.scala 139:24]
      A[1].input.mat[16] <= A_1_input_ret.mat[16] @[calc8x8.scala 139:24]
      A[1].input.mat[17] <= A_1_input_ret.mat[17] @[calc8x8.scala 139:24]
      A[1].input.mat[18] <= A_1_input_ret.mat[18] @[calc8x8.scala 139:24]
      A[1].input.mat[19] <= A_1_input_ret.mat[19] @[calc8x8.scala 139:24]
      A[1].input.mat[20] <= A_1_input_ret.mat[20] @[calc8x8.scala 139:24]
      A[1].input.mat[21] <= A_1_input_ret.mat[21] @[calc8x8.scala 139:24]
      A[1].input.mat[22] <= A_1_input_ret.mat[22] @[calc8x8.scala 139:24]
      A[1].input.mat[23] <= A_1_input_ret.mat[23] @[calc8x8.scala 139:24]
      A[1].input.mat[24] <= A_1_input_ret.mat[24] @[calc8x8.scala 139:24]
      A[1].input.mat[25] <= A_1_input_ret.mat[25] @[calc8x8.scala 139:24]
      A[1].input.mat[26] <= A_1_input_ret.mat[26] @[calc8x8.scala 139:24]
      A[1].input.mat[27] <= A_1_input_ret.mat[27] @[calc8x8.scala 139:24]
      A[1].input.mat[28] <= A_1_input_ret.mat[28] @[calc8x8.scala 139:24]
      A[1].input.mat[29] <= A_1_input_ret.mat[29] @[calc8x8.scala 139:24]
      A[1].input.mat[30] <= A_1_input_ret.mat[30] @[calc8x8.scala 139:24]
      A[1].input.mat[31] <= A_1_input_ret.mat[31] @[calc8x8.scala 139:24]
      A[1].input.mat[32] <= A_1_input_ret.mat[32] @[calc8x8.scala 139:24]
      A[1].input.mat[33] <= A_1_input_ret.mat[33] @[calc8x8.scala 139:24]
      A[1].input.mat[34] <= A_1_input_ret.mat[34] @[calc8x8.scala 139:24]
      A[1].input.mat[35] <= A_1_input_ret.mat[35] @[calc8x8.scala 139:24]
      wire A_2_input_ret : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
      A_2_input_ret.mat[0] <= io.input.mat[24] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[1] <= io.input.mat[25] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[2] <= io.input.mat[26] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[3] <= io.input.mat[27] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[4] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[5] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[6] <= io.input.mat[32] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[7] <= io.input.mat[33] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[8] <= io.input.mat[34] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[9] <= io.input.mat[35] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[10] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[11] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[12] <= io.input.mat[40] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[13] <= io.input.mat[41] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[14] <= io.input.mat[42] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[15] <= io.input.mat[43] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[16] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[17] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[18] <= io.input.mat[48] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[19] <= io.input.mat[49] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[20] <= io.input.mat[50] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[21] <= io.input.mat[51] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[22] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[23] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[24] <= io.input.mat[56] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[25] <= io.input.mat[57] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[26] <= io.input.mat[58] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[27] <= io.input.mat[59] @[calc8x8.scala 39:32]
      A_2_input_ret.mat[28] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[29] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[30] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[31] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[32] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[33] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[34] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_2_input_ret.mat[35] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A[2].input.mat[0] <= A_2_input_ret.mat[0] @[calc8x8.scala 140:24]
      A[2].input.mat[1] <= A_2_input_ret.mat[1] @[calc8x8.scala 140:24]
      A[2].input.mat[2] <= A_2_input_ret.mat[2] @[calc8x8.scala 140:24]
      A[2].input.mat[3] <= A_2_input_ret.mat[3] @[calc8x8.scala 140:24]
      A[2].input.mat[4] <= A_2_input_ret.mat[4] @[calc8x8.scala 140:24]
      A[2].input.mat[5] <= A_2_input_ret.mat[5] @[calc8x8.scala 140:24]
      A[2].input.mat[6] <= A_2_input_ret.mat[6] @[calc8x8.scala 140:24]
      A[2].input.mat[7] <= A_2_input_ret.mat[7] @[calc8x8.scala 140:24]
      A[2].input.mat[8] <= A_2_input_ret.mat[8] @[calc8x8.scala 140:24]
      A[2].input.mat[9] <= A_2_input_ret.mat[9] @[calc8x8.scala 140:24]
      A[2].input.mat[10] <= A_2_input_ret.mat[10] @[calc8x8.scala 140:24]
      A[2].input.mat[11] <= A_2_input_ret.mat[11] @[calc8x8.scala 140:24]
      A[2].input.mat[12] <= A_2_input_ret.mat[12] @[calc8x8.scala 140:24]
      A[2].input.mat[13] <= A_2_input_ret.mat[13] @[calc8x8.scala 140:24]
      A[2].input.mat[14] <= A_2_input_ret.mat[14] @[calc8x8.scala 140:24]
      A[2].input.mat[15] <= A_2_input_ret.mat[15] @[calc8x8.scala 140:24]
      A[2].input.mat[16] <= A_2_input_ret.mat[16] @[calc8x8.scala 140:24]
      A[2].input.mat[17] <= A_2_input_ret.mat[17] @[calc8x8.scala 140:24]
      A[2].input.mat[18] <= A_2_input_ret.mat[18] @[calc8x8.scala 140:24]
      A[2].input.mat[19] <= A_2_input_ret.mat[19] @[calc8x8.scala 140:24]
      A[2].input.mat[20] <= A_2_input_ret.mat[20] @[calc8x8.scala 140:24]
      A[2].input.mat[21] <= A_2_input_ret.mat[21] @[calc8x8.scala 140:24]
      A[2].input.mat[22] <= A_2_input_ret.mat[22] @[calc8x8.scala 140:24]
      A[2].input.mat[23] <= A_2_input_ret.mat[23] @[calc8x8.scala 140:24]
      A[2].input.mat[24] <= A_2_input_ret.mat[24] @[calc8x8.scala 140:24]
      A[2].input.mat[25] <= A_2_input_ret.mat[25] @[calc8x8.scala 140:24]
      A[2].input.mat[26] <= A_2_input_ret.mat[26] @[calc8x8.scala 140:24]
      A[2].input.mat[27] <= A_2_input_ret.mat[27] @[calc8x8.scala 140:24]
      A[2].input.mat[28] <= A_2_input_ret.mat[28] @[calc8x8.scala 140:24]
      A[2].input.mat[29] <= A_2_input_ret.mat[29] @[calc8x8.scala 140:24]
      A[2].input.mat[30] <= A_2_input_ret.mat[30] @[calc8x8.scala 140:24]
      A[2].input.mat[31] <= A_2_input_ret.mat[31] @[calc8x8.scala 140:24]
      A[2].input.mat[32] <= A_2_input_ret.mat[32] @[calc8x8.scala 140:24]
      A[2].input.mat[33] <= A_2_input_ret.mat[33] @[calc8x8.scala 140:24]
      A[2].input.mat[34] <= A_2_input_ret.mat[34] @[calc8x8.scala 140:24]
      A[2].input.mat[35] <= A_2_input_ret.mat[35] @[calc8x8.scala 140:24]
      wire A_3_input_ret : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
      A_3_input_ret.mat[0] <= io.input.mat[27] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[1] <= io.input.mat[28] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[2] <= io.input.mat[29] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[3] <= io.input.mat[30] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[4] <= io.input.mat[31] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[5] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_3_input_ret.mat[6] <= io.input.mat[35] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[7] <= io.input.mat[36] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[8] <= io.input.mat[37] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[9] <= io.input.mat[38] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[10] <= io.input.mat[39] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[11] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_3_input_ret.mat[12] <= io.input.mat[43] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[13] <= io.input.mat[44] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[14] <= io.input.mat[45] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[15] <= io.input.mat[46] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[16] <= io.input.mat[47] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[17] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_3_input_ret.mat[18] <= io.input.mat[51] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[19] <= io.input.mat[52] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[20] <= io.input.mat[53] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[21] <= io.input.mat[54] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[22] <= io.input.mat[55] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[23] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_3_input_ret.mat[24] <= io.input.mat[59] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[25] <= io.input.mat[60] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[26] <= io.input.mat[61] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[27] <= io.input.mat[62] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[28] <= io.input.mat[63] @[calc8x8.scala 39:32]
      A_3_input_ret.mat[29] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_3_input_ret.mat[30] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_3_input_ret.mat[31] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_3_input_ret.mat[32] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_3_input_ret.mat[33] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_3_input_ret.mat[34] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A_3_input_ret.mat[35] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
      A[3].input.mat[0] <= A_3_input_ret.mat[0] @[calc8x8.scala 141:24]
      A[3].input.mat[1] <= A_3_input_ret.mat[1] @[calc8x8.scala 141:24]
      A[3].input.mat[2] <= A_3_input_ret.mat[2] @[calc8x8.scala 141:24]
      A[3].input.mat[3] <= A_3_input_ret.mat[3] @[calc8x8.scala 141:24]
      A[3].input.mat[4] <= A_3_input_ret.mat[4] @[calc8x8.scala 141:24]
      A[3].input.mat[5] <= A_3_input_ret.mat[5] @[calc8x8.scala 141:24]
      A[3].input.mat[6] <= A_3_input_ret.mat[6] @[calc8x8.scala 141:24]
      A[3].input.mat[7] <= A_3_input_ret.mat[7] @[calc8x8.scala 141:24]
      A[3].input.mat[8] <= A_3_input_ret.mat[8] @[calc8x8.scala 141:24]
      A[3].input.mat[9] <= A_3_input_ret.mat[9] @[calc8x8.scala 141:24]
      A[3].input.mat[10] <= A_3_input_ret.mat[10] @[calc8x8.scala 141:24]
      A[3].input.mat[11] <= A_3_input_ret.mat[11] @[calc8x8.scala 141:24]
      A[3].input.mat[12] <= A_3_input_ret.mat[12] @[calc8x8.scala 141:24]
      A[3].input.mat[13] <= A_3_input_ret.mat[13] @[calc8x8.scala 141:24]
      A[3].input.mat[14] <= A_3_input_ret.mat[14] @[calc8x8.scala 141:24]
      A[3].input.mat[15] <= A_3_input_ret.mat[15] @[calc8x8.scala 141:24]
      A[3].input.mat[16] <= A_3_input_ret.mat[16] @[calc8x8.scala 141:24]
      A[3].input.mat[17] <= A_3_input_ret.mat[17] @[calc8x8.scala 141:24]
      A[3].input.mat[18] <= A_3_input_ret.mat[18] @[calc8x8.scala 141:24]
      A[3].input.mat[19] <= A_3_input_ret.mat[19] @[calc8x8.scala 141:24]
      A[3].input.mat[20] <= A_3_input_ret.mat[20] @[calc8x8.scala 141:24]
      A[3].input.mat[21] <= A_3_input_ret.mat[21] @[calc8x8.scala 141:24]
      A[3].input.mat[22] <= A_3_input_ret.mat[22] @[calc8x8.scala 141:24]
      A[3].input.mat[23] <= A_3_input_ret.mat[23] @[calc8x8.scala 141:24]
      A[3].input.mat[24] <= A_3_input_ret.mat[24] @[calc8x8.scala 141:24]
      A[3].input.mat[25] <= A_3_input_ret.mat[25] @[calc8x8.scala 141:24]
      A[3].input.mat[26] <= A_3_input_ret.mat[26] @[calc8x8.scala 141:24]
      A[3].input.mat[27] <= A_3_input_ret.mat[27] @[calc8x8.scala 141:24]
      A[3].input.mat[28] <= A_3_input_ret.mat[28] @[calc8x8.scala 141:24]
      A[3].input.mat[29] <= A_3_input_ret.mat[29] @[calc8x8.scala 141:24]
      A[3].input.mat[30] <= A_3_input_ret.mat[30] @[calc8x8.scala 141:24]
      A[3].input.mat[31] <= A_3_input_ret.mat[31] @[calc8x8.scala 141:24]
      A[3].input.mat[32] <= A_3_input_ret.mat[32] @[calc8x8.scala 141:24]
      A[3].input.mat[33] <= A_3_input_ret.mat[33] @[calc8x8.scala 141:24]
      A[3].input.mat[34] <= A_3_input_ret.mat[34] @[calc8x8.scala 141:24]
      A[3].input.mat[35] <= A_3_input_ret.mat[35] @[calc8x8.scala 141:24]
      A[0].flag <= UInt<1>("h00") @[calc8x8.scala 143:27]
      A[0].valid_in <= io.valid_in @[calc8x8.scala 144:31]
      A[1].flag <= UInt<1>("h00") @[calc8x8.scala 143:27]
      A[1].valid_in <= io.valid_in @[calc8x8.scala 144:31]
      A[2].flag <= UInt<1>("h00") @[calc8x8.scala 143:27]
      A[2].valid_in <= io.valid_in @[calc8x8.scala 144:31]
      A[3].flag <= UInt<1>("h00") @[calc8x8.scala 143:27]
      A[3].valid_in <= io.valid_in @[calc8x8.scala 144:31]
      wire io_output_ret : {mat : SInt<37>[64]} @[calc8x8.scala 44:23]
      io_output_ret.mat[0] <= A[0].output.mat[0] @[calc8x8.scala 47:32]
      io_output_ret.mat[1] <= A[0].output.mat[1] @[calc8x8.scala 47:32]
      io_output_ret.mat[2] <= A[0].output.mat[2] @[calc8x8.scala 47:32]
      io_output_ret.mat[3] <= A[0].output.mat[3] @[calc8x8.scala 47:32]
      io_output_ret.mat[8] <= A[0].output.mat[4] @[calc8x8.scala 47:32]
      io_output_ret.mat[9] <= A[0].output.mat[5] @[calc8x8.scala 47:32]
      io_output_ret.mat[10] <= A[0].output.mat[6] @[calc8x8.scala 47:32]
      io_output_ret.mat[11] <= A[0].output.mat[7] @[calc8x8.scala 47:32]
      io_output_ret.mat[16] <= A[0].output.mat[8] @[calc8x8.scala 47:32]
      io_output_ret.mat[17] <= A[0].output.mat[9] @[calc8x8.scala 47:32]
      io_output_ret.mat[18] <= A[0].output.mat[10] @[calc8x8.scala 47:32]
      io_output_ret.mat[19] <= A[0].output.mat[11] @[calc8x8.scala 47:32]
      io_output_ret.mat[24] <= A[0].output.mat[12] @[calc8x8.scala 47:32]
      io_output_ret.mat[25] <= A[0].output.mat[13] @[calc8x8.scala 47:32]
      io_output_ret.mat[26] <= A[0].output.mat[14] @[calc8x8.scala 47:32]
      io_output_ret.mat[27] <= A[0].output.mat[15] @[calc8x8.scala 47:32]
      io_output_ret.mat[4] <= A[1].output.mat[0] @[calc8x8.scala 50:32]
      io_output_ret.mat[5] <= A[1].output.mat[1] @[calc8x8.scala 50:32]
      io_output_ret.mat[6] <= A[1].output.mat[2] @[calc8x8.scala 50:32]
      io_output_ret.mat[7] <= A[1].output.mat[3] @[calc8x8.scala 50:32]
      io_output_ret.mat[12] <= A[1].output.mat[4] @[calc8x8.scala 50:32]
      io_output_ret.mat[13] <= A[1].output.mat[5] @[calc8x8.scala 50:32]
      io_output_ret.mat[14] <= A[1].output.mat[6] @[calc8x8.scala 50:32]
      io_output_ret.mat[15] <= A[1].output.mat[7] @[calc8x8.scala 50:32]
      io_output_ret.mat[20] <= A[1].output.mat[8] @[calc8x8.scala 50:32]
      io_output_ret.mat[21] <= A[1].output.mat[9] @[calc8x8.scala 50:32]
      io_output_ret.mat[22] <= A[1].output.mat[10] @[calc8x8.scala 50:32]
      io_output_ret.mat[23] <= A[1].output.mat[11] @[calc8x8.scala 50:32]
      io_output_ret.mat[28] <= A[1].output.mat[12] @[calc8x8.scala 50:32]
      io_output_ret.mat[29] <= A[1].output.mat[13] @[calc8x8.scala 50:32]
      io_output_ret.mat[30] <= A[1].output.mat[14] @[calc8x8.scala 50:32]
      io_output_ret.mat[31] <= A[1].output.mat[15] @[calc8x8.scala 50:32]
      io_output_ret.mat[32] <= A[2].output.mat[0] @[calc8x8.scala 53:32]
      io_output_ret.mat[33] <= A[2].output.mat[1] @[calc8x8.scala 53:32]
      io_output_ret.mat[34] <= A[2].output.mat[2] @[calc8x8.scala 53:32]
      io_output_ret.mat[35] <= A[2].output.mat[3] @[calc8x8.scala 53:32]
      io_output_ret.mat[40] <= A[2].output.mat[4] @[calc8x8.scala 53:32]
      io_output_ret.mat[41] <= A[2].output.mat[5] @[calc8x8.scala 53:32]
      io_output_ret.mat[42] <= A[2].output.mat[6] @[calc8x8.scala 53:32]
      io_output_ret.mat[43] <= A[2].output.mat[7] @[calc8x8.scala 53:32]
      io_output_ret.mat[48] <= A[2].output.mat[8] @[calc8x8.scala 53:32]
      io_output_ret.mat[49] <= A[2].output.mat[9] @[calc8x8.scala 53:32]
      io_output_ret.mat[50] <= A[2].output.mat[10] @[calc8x8.scala 53:32]
      io_output_ret.mat[51] <= A[2].output.mat[11] @[calc8x8.scala 53:32]
      io_output_ret.mat[56] <= A[2].output.mat[12] @[calc8x8.scala 53:32]
      io_output_ret.mat[57] <= A[2].output.mat[13] @[calc8x8.scala 53:32]
      io_output_ret.mat[58] <= A[2].output.mat[14] @[calc8x8.scala 53:32]
      io_output_ret.mat[59] <= A[2].output.mat[15] @[calc8x8.scala 53:32]
      io_output_ret.mat[36] <= A[3].output.mat[0] @[calc8x8.scala 56:32]
      io_output_ret.mat[37] <= A[3].output.mat[1] @[calc8x8.scala 56:32]
      io_output_ret.mat[38] <= A[3].output.mat[2] @[calc8x8.scala 56:32]
      io_output_ret.mat[39] <= A[3].output.mat[3] @[calc8x8.scala 56:32]
      io_output_ret.mat[44] <= A[3].output.mat[4] @[calc8x8.scala 56:32]
      io_output_ret.mat[45] <= A[3].output.mat[5] @[calc8x8.scala 56:32]
      io_output_ret.mat[46] <= A[3].output.mat[6] @[calc8x8.scala 56:32]
      io_output_ret.mat[47] <= A[3].output.mat[7] @[calc8x8.scala 56:32]
      io_output_ret.mat[52] <= A[3].output.mat[8] @[calc8x8.scala 56:32]
      io_output_ret.mat[53] <= A[3].output.mat[9] @[calc8x8.scala 56:32]
      io_output_ret.mat[54] <= A[3].output.mat[10] @[calc8x8.scala 56:32]
      io_output_ret.mat[55] <= A[3].output.mat[11] @[calc8x8.scala 56:32]
      io_output_ret.mat[60] <= A[3].output.mat[12] @[calc8x8.scala 56:32]
      io_output_ret.mat[61] <= A[3].output.mat[13] @[calc8x8.scala 56:32]
      io_output_ret.mat[62] <= A[3].output.mat[14] @[calc8x8.scala 56:32]
      io_output_ret.mat[63] <= A[3].output.mat[15] @[calc8x8.scala 56:32]
      io.output.mat[0] <= io_output_ret.mat[0] @[calc8x8.scala 146:23]
      io.output.mat[1] <= io_output_ret.mat[1] @[calc8x8.scala 146:23]
      io.output.mat[2] <= io_output_ret.mat[2] @[calc8x8.scala 146:23]
      io.output.mat[3] <= io_output_ret.mat[3] @[calc8x8.scala 146:23]
      io.output.mat[4] <= io_output_ret.mat[4] @[calc8x8.scala 146:23]
      io.output.mat[5] <= io_output_ret.mat[5] @[calc8x8.scala 146:23]
      io.output.mat[6] <= io_output_ret.mat[6] @[calc8x8.scala 146:23]
      io.output.mat[7] <= io_output_ret.mat[7] @[calc8x8.scala 146:23]
      io.output.mat[8] <= io_output_ret.mat[8] @[calc8x8.scala 146:23]
      io.output.mat[9] <= io_output_ret.mat[9] @[calc8x8.scala 146:23]
      io.output.mat[10] <= io_output_ret.mat[10] @[calc8x8.scala 146:23]
      io.output.mat[11] <= io_output_ret.mat[11] @[calc8x8.scala 146:23]
      io.output.mat[12] <= io_output_ret.mat[12] @[calc8x8.scala 146:23]
      io.output.mat[13] <= io_output_ret.mat[13] @[calc8x8.scala 146:23]
      io.output.mat[14] <= io_output_ret.mat[14] @[calc8x8.scala 146:23]
      io.output.mat[15] <= io_output_ret.mat[15] @[calc8x8.scala 146:23]
      io.output.mat[16] <= io_output_ret.mat[16] @[calc8x8.scala 146:23]
      io.output.mat[17] <= io_output_ret.mat[17] @[calc8x8.scala 146:23]
      io.output.mat[18] <= io_output_ret.mat[18] @[calc8x8.scala 146:23]
      io.output.mat[19] <= io_output_ret.mat[19] @[calc8x8.scala 146:23]
      io.output.mat[20] <= io_output_ret.mat[20] @[calc8x8.scala 146:23]
      io.output.mat[21] <= io_output_ret.mat[21] @[calc8x8.scala 146:23]
      io.output.mat[22] <= io_output_ret.mat[22] @[calc8x8.scala 146:23]
      io.output.mat[23] <= io_output_ret.mat[23] @[calc8x8.scala 146:23]
      io.output.mat[24] <= io_output_ret.mat[24] @[calc8x8.scala 146:23]
      io.output.mat[25] <= io_output_ret.mat[25] @[calc8x8.scala 146:23]
      io.output.mat[26] <= io_output_ret.mat[26] @[calc8x8.scala 146:23]
      io.output.mat[27] <= io_output_ret.mat[27] @[calc8x8.scala 146:23]
      io.output.mat[28] <= io_output_ret.mat[28] @[calc8x8.scala 146:23]
      io.output.mat[29] <= io_output_ret.mat[29] @[calc8x8.scala 146:23]
      io.output.mat[30] <= io_output_ret.mat[30] @[calc8x8.scala 146:23]
      io.output.mat[31] <= io_output_ret.mat[31] @[calc8x8.scala 146:23]
      io.output.mat[32] <= io_output_ret.mat[32] @[calc8x8.scala 146:23]
      io.output.mat[33] <= io_output_ret.mat[33] @[calc8x8.scala 146:23]
      io.output.mat[34] <= io_output_ret.mat[34] @[calc8x8.scala 146:23]
      io.output.mat[35] <= io_output_ret.mat[35] @[calc8x8.scala 146:23]
      io.output.mat[36] <= io_output_ret.mat[36] @[calc8x8.scala 146:23]
      io.output.mat[37] <= io_output_ret.mat[37] @[calc8x8.scala 146:23]
      io.output.mat[38] <= io_output_ret.mat[38] @[calc8x8.scala 146:23]
      io.output.mat[39] <= io_output_ret.mat[39] @[calc8x8.scala 146:23]
      io.output.mat[40] <= io_output_ret.mat[40] @[calc8x8.scala 146:23]
      io.output.mat[41] <= io_output_ret.mat[41] @[calc8x8.scala 146:23]
      io.output.mat[42] <= io_output_ret.mat[42] @[calc8x8.scala 146:23]
      io.output.mat[43] <= io_output_ret.mat[43] @[calc8x8.scala 146:23]
      io.output.mat[44] <= io_output_ret.mat[44] @[calc8x8.scala 146:23]
      io.output.mat[45] <= io_output_ret.mat[45] @[calc8x8.scala 146:23]
      io.output.mat[46] <= io_output_ret.mat[46] @[calc8x8.scala 146:23]
      io.output.mat[47] <= io_output_ret.mat[47] @[calc8x8.scala 146:23]
      io.output.mat[48] <= io_output_ret.mat[48] @[calc8x8.scala 146:23]
      io.output.mat[49] <= io_output_ret.mat[49] @[calc8x8.scala 146:23]
      io.output.mat[50] <= io_output_ret.mat[50] @[calc8x8.scala 146:23]
      io.output.mat[51] <= io_output_ret.mat[51] @[calc8x8.scala 146:23]
      io.output.mat[52] <= io_output_ret.mat[52] @[calc8x8.scala 146:23]
      io.output.mat[53] <= io_output_ret.mat[53] @[calc8x8.scala 146:23]
      io.output.mat[54] <= io_output_ret.mat[54] @[calc8x8.scala 146:23]
      io.output.mat[55] <= io_output_ret.mat[55] @[calc8x8.scala 146:23]
      io.output.mat[56] <= io_output_ret.mat[56] @[calc8x8.scala 146:23]
      io.output.mat[57] <= io_output_ret.mat[57] @[calc8x8.scala 146:23]
      io.output.mat[58] <= io_output_ret.mat[58] @[calc8x8.scala 146:23]
      io.output.mat[59] <= io_output_ret.mat[59] @[calc8x8.scala 146:23]
      io.output.mat[60] <= io_output_ret.mat[60] @[calc8x8.scala 146:23]
      io.output.mat[61] <= io_output_ret.mat[61] @[calc8x8.scala 146:23]
      io.output.mat[62] <= io_output_ret.mat[62] @[calc8x8.scala 146:23]
      io.output.mat[63] <= io_output_ret.mat[63] @[calc8x8.scala 146:23]
      io.valid_out <= A[0].valid_out @[calc8x8.scala 147:26]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_3 = asUInt(UInt<1>("h01")) @[Conditional.scala 37:23]
      node _T_4 = asUInt(io.flag) @[Conditional.scala 37:39]
      node _T_5 = eq(_T_3, _T_4) @[Conditional.scala 37:30]
      when _T_5 : @[Conditional.scala 39:67]
        wire A_0_input_ret_1 : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
        A_0_input_ret_1.mat[0] <= io.input.mat[0] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[1] <= io.input.mat[1] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[2] <= io.input.mat[2] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[3] <= io.input.mat[3] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[4] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[5] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[6] <= io.input.mat[8] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[7] <= io.input.mat[9] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[8] <= io.input.mat[10] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[9] <= io.input.mat[11] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[10] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[11] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[12] <= io.input.mat[16] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[13] <= io.input.mat[17] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[14] <= io.input.mat[18] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[15] <= io.input.mat[19] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[16] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[17] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[18] <= io.input.mat[24] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[19] <= io.input.mat[25] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[20] <= io.input.mat[26] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[21] <= io.input.mat[27] @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[22] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[23] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[24] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[25] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[26] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[27] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[28] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[29] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[30] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[31] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[32] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[33] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[34] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_0_input_ret_1.mat[35] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A[0].input.mat[0] <= A_0_input_ret_1.mat[0] @[calc8x8.scala 150:24]
        A[0].input.mat[1] <= A_0_input_ret_1.mat[1] @[calc8x8.scala 150:24]
        A[0].input.mat[2] <= A_0_input_ret_1.mat[2] @[calc8x8.scala 150:24]
        A[0].input.mat[3] <= A_0_input_ret_1.mat[3] @[calc8x8.scala 150:24]
        A[0].input.mat[4] <= A_0_input_ret_1.mat[4] @[calc8x8.scala 150:24]
        A[0].input.mat[5] <= A_0_input_ret_1.mat[5] @[calc8x8.scala 150:24]
        A[0].input.mat[6] <= A_0_input_ret_1.mat[6] @[calc8x8.scala 150:24]
        A[0].input.mat[7] <= A_0_input_ret_1.mat[7] @[calc8x8.scala 150:24]
        A[0].input.mat[8] <= A_0_input_ret_1.mat[8] @[calc8x8.scala 150:24]
        A[0].input.mat[9] <= A_0_input_ret_1.mat[9] @[calc8x8.scala 150:24]
        A[0].input.mat[10] <= A_0_input_ret_1.mat[10] @[calc8x8.scala 150:24]
        A[0].input.mat[11] <= A_0_input_ret_1.mat[11] @[calc8x8.scala 150:24]
        A[0].input.mat[12] <= A_0_input_ret_1.mat[12] @[calc8x8.scala 150:24]
        A[0].input.mat[13] <= A_0_input_ret_1.mat[13] @[calc8x8.scala 150:24]
        A[0].input.mat[14] <= A_0_input_ret_1.mat[14] @[calc8x8.scala 150:24]
        A[0].input.mat[15] <= A_0_input_ret_1.mat[15] @[calc8x8.scala 150:24]
        A[0].input.mat[16] <= A_0_input_ret_1.mat[16] @[calc8x8.scala 150:24]
        A[0].input.mat[17] <= A_0_input_ret_1.mat[17] @[calc8x8.scala 150:24]
        A[0].input.mat[18] <= A_0_input_ret_1.mat[18] @[calc8x8.scala 150:24]
        A[0].input.mat[19] <= A_0_input_ret_1.mat[19] @[calc8x8.scala 150:24]
        A[0].input.mat[20] <= A_0_input_ret_1.mat[20] @[calc8x8.scala 150:24]
        A[0].input.mat[21] <= A_0_input_ret_1.mat[21] @[calc8x8.scala 150:24]
        A[0].input.mat[22] <= A_0_input_ret_1.mat[22] @[calc8x8.scala 150:24]
        A[0].input.mat[23] <= A_0_input_ret_1.mat[23] @[calc8x8.scala 150:24]
        A[0].input.mat[24] <= A_0_input_ret_1.mat[24] @[calc8x8.scala 150:24]
        A[0].input.mat[25] <= A_0_input_ret_1.mat[25] @[calc8x8.scala 150:24]
        A[0].input.mat[26] <= A_0_input_ret_1.mat[26] @[calc8x8.scala 150:24]
        A[0].input.mat[27] <= A_0_input_ret_1.mat[27] @[calc8x8.scala 150:24]
        A[0].input.mat[28] <= A_0_input_ret_1.mat[28] @[calc8x8.scala 150:24]
        A[0].input.mat[29] <= A_0_input_ret_1.mat[29] @[calc8x8.scala 150:24]
        A[0].input.mat[30] <= A_0_input_ret_1.mat[30] @[calc8x8.scala 150:24]
        A[0].input.mat[31] <= A_0_input_ret_1.mat[31] @[calc8x8.scala 150:24]
        A[0].input.mat[32] <= A_0_input_ret_1.mat[32] @[calc8x8.scala 150:24]
        A[0].input.mat[33] <= A_0_input_ret_1.mat[33] @[calc8x8.scala 150:24]
        A[0].input.mat[34] <= A_0_input_ret_1.mat[34] @[calc8x8.scala 150:24]
        A[0].input.mat[35] <= A_0_input_ret_1.mat[35] @[calc8x8.scala 150:24]
        wire A_1_input_ret_1 : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
        A_1_input_ret_1.mat[0] <= io.input.mat[3] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[1] <= io.input.mat[4] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[2] <= io.input.mat[5] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[3] <= io.input.mat[6] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[4] <= io.input.mat[7] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[5] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[6] <= io.input.mat[11] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[7] <= io.input.mat[12] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[8] <= io.input.mat[13] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[9] <= io.input.mat[14] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[10] <= io.input.mat[15] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[11] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[12] <= io.input.mat[19] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[13] <= io.input.mat[20] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[14] <= io.input.mat[21] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[15] <= io.input.mat[22] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[16] <= io.input.mat[23] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[17] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[18] <= io.input.mat[27] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[19] <= io.input.mat[28] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[20] <= io.input.mat[29] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[21] <= io.input.mat[30] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[22] <= io.input.mat[31] @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[23] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[24] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[25] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[26] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[27] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[28] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[29] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[30] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[31] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[32] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[33] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[34] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_1_input_ret_1.mat[35] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A[1].input.mat[0] <= A_1_input_ret_1.mat[0] @[calc8x8.scala 151:24]
        A[1].input.mat[1] <= A_1_input_ret_1.mat[1] @[calc8x8.scala 151:24]
        A[1].input.mat[2] <= A_1_input_ret_1.mat[2] @[calc8x8.scala 151:24]
        A[1].input.mat[3] <= A_1_input_ret_1.mat[3] @[calc8x8.scala 151:24]
        A[1].input.mat[4] <= A_1_input_ret_1.mat[4] @[calc8x8.scala 151:24]
        A[1].input.mat[5] <= A_1_input_ret_1.mat[5] @[calc8x8.scala 151:24]
        A[1].input.mat[6] <= A_1_input_ret_1.mat[6] @[calc8x8.scala 151:24]
        A[1].input.mat[7] <= A_1_input_ret_1.mat[7] @[calc8x8.scala 151:24]
        A[1].input.mat[8] <= A_1_input_ret_1.mat[8] @[calc8x8.scala 151:24]
        A[1].input.mat[9] <= A_1_input_ret_1.mat[9] @[calc8x8.scala 151:24]
        A[1].input.mat[10] <= A_1_input_ret_1.mat[10] @[calc8x8.scala 151:24]
        A[1].input.mat[11] <= A_1_input_ret_1.mat[11] @[calc8x8.scala 151:24]
        A[1].input.mat[12] <= A_1_input_ret_1.mat[12] @[calc8x8.scala 151:24]
        A[1].input.mat[13] <= A_1_input_ret_1.mat[13] @[calc8x8.scala 151:24]
        A[1].input.mat[14] <= A_1_input_ret_1.mat[14] @[calc8x8.scala 151:24]
        A[1].input.mat[15] <= A_1_input_ret_1.mat[15] @[calc8x8.scala 151:24]
        A[1].input.mat[16] <= A_1_input_ret_1.mat[16] @[calc8x8.scala 151:24]
        A[1].input.mat[17] <= A_1_input_ret_1.mat[17] @[calc8x8.scala 151:24]
        A[1].input.mat[18] <= A_1_input_ret_1.mat[18] @[calc8x8.scala 151:24]
        A[1].input.mat[19] <= A_1_input_ret_1.mat[19] @[calc8x8.scala 151:24]
        A[1].input.mat[20] <= A_1_input_ret_1.mat[20] @[calc8x8.scala 151:24]
        A[1].input.mat[21] <= A_1_input_ret_1.mat[21] @[calc8x8.scala 151:24]
        A[1].input.mat[22] <= A_1_input_ret_1.mat[22] @[calc8x8.scala 151:24]
        A[1].input.mat[23] <= A_1_input_ret_1.mat[23] @[calc8x8.scala 151:24]
        A[1].input.mat[24] <= A_1_input_ret_1.mat[24] @[calc8x8.scala 151:24]
        A[1].input.mat[25] <= A_1_input_ret_1.mat[25] @[calc8x8.scala 151:24]
        A[1].input.mat[26] <= A_1_input_ret_1.mat[26] @[calc8x8.scala 151:24]
        A[1].input.mat[27] <= A_1_input_ret_1.mat[27] @[calc8x8.scala 151:24]
        A[1].input.mat[28] <= A_1_input_ret_1.mat[28] @[calc8x8.scala 151:24]
        A[1].input.mat[29] <= A_1_input_ret_1.mat[29] @[calc8x8.scala 151:24]
        A[1].input.mat[30] <= A_1_input_ret_1.mat[30] @[calc8x8.scala 151:24]
        A[1].input.mat[31] <= A_1_input_ret_1.mat[31] @[calc8x8.scala 151:24]
        A[1].input.mat[32] <= A_1_input_ret_1.mat[32] @[calc8x8.scala 151:24]
        A[1].input.mat[33] <= A_1_input_ret_1.mat[33] @[calc8x8.scala 151:24]
        A[1].input.mat[34] <= A_1_input_ret_1.mat[34] @[calc8x8.scala 151:24]
        A[1].input.mat[35] <= A_1_input_ret_1.mat[35] @[calc8x8.scala 151:24]
        wire A_2_input_ret_1 : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
        A_2_input_ret_1.mat[0] <= io.input.mat[24] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[1] <= io.input.mat[25] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[2] <= io.input.mat[26] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[3] <= io.input.mat[27] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[4] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[5] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[6] <= io.input.mat[32] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[7] <= io.input.mat[33] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[8] <= io.input.mat[34] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[9] <= io.input.mat[35] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[10] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[11] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[12] <= io.input.mat[40] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[13] <= io.input.mat[41] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[14] <= io.input.mat[42] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[15] <= io.input.mat[43] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[16] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[17] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[18] <= io.input.mat[48] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[19] <= io.input.mat[49] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[20] <= io.input.mat[50] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[21] <= io.input.mat[51] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[22] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[23] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[24] <= io.input.mat[56] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[25] <= io.input.mat[57] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[26] <= io.input.mat[58] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[27] <= io.input.mat[59] @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[28] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[29] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[30] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[31] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[32] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[33] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[34] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_2_input_ret_1.mat[35] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A[2].input.mat[0] <= A_2_input_ret_1.mat[0] @[calc8x8.scala 152:24]
        A[2].input.mat[1] <= A_2_input_ret_1.mat[1] @[calc8x8.scala 152:24]
        A[2].input.mat[2] <= A_2_input_ret_1.mat[2] @[calc8x8.scala 152:24]
        A[2].input.mat[3] <= A_2_input_ret_1.mat[3] @[calc8x8.scala 152:24]
        A[2].input.mat[4] <= A_2_input_ret_1.mat[4] @[calc8x8.scala 152:24]
        A[2].input.mat[5] <= A_2_input_ret_1.mat[5] @[calc8x8.scala 152:24]
        A[2].input.mat[6] <= A_2_input_ret_1.mat[6] @[calc8x8.scala 152:24]
        A[2].input.mat[7] <= A_2_input_ret_1.mat[7] @[calc8x8.scala 152:24]
        A[2].input.mat[8] <= A_2_input_ret_1.mat[8] @[calc8x8.scala 152:24]
        A[2].input.mat[9] <= A_2_input_ret_1.mat[9] @[calc8x8.scala 152:24]
        A[2].input.mat[10] <= A_2_input_ret_1.mat[10] @[calc8x8.scala 152:24]
        A[2].input.mat[11] <= A_2_input_ret_1.mat[11] @[calc8x8.scala 152:24]
        A[2].input.mat[12] <= A_2_input_ret_1.mat[12] @[calc8x8.scala 152:24]
        A[2].input.mat[13] <= A_2_input_ret_1.mat[13] @[calc8x8.scala 152:24]
        A[2].input.mat[14] <= A_2_input_ret_1.mat[14] @[calc8x8.scala 152:24]
        A[2].input.mat[15] <= A_2_input_ret_1.mat[15] @[calc8x8.scala 152:24]
        A[2].input.mat[16] <= A_2_input_ret_1.mat[16] @[calc8x8.scala 152:24]
        A[2].input.mat[17] <= A_2_input_ret_1.mat[17] @[calc8x8.scala 152:24]
        A[2].input.mat[18] <= A_2_input_ret_1.mat[18] @[calc8x8.scala 152:24]
        A[2].input.mat[19] <= A_2_input_ret_1.mat[19] @[calc8x8.scala 152:24]
        A[2].input.mat[20] <= A_2_input_ret_1.mat[20] @[calc8x8.scala 152:24]
        A[2].input.mat[21] <= A_2_input_ret_1.mat[21] @[calc8x8.scala 152:24]
        A[2].input.mat[22] <= A_2_input_ret_1.mat[22] @[calc8x8.scala 152:24]
        A[2].input.mat[23] <= A_2_input_ret_1.mat[23] @[calc8x8.scala 152:24]
        A[2].input.mat[24] <= A_2_input_ret_1.mat[24] @[calc8x8.scala 152:24]
        A[2].input.mat[25] <= A_2_input_ret_1.mat[25] @[calc8x8.scala 152:24]
        A[2].input.mat[26] <= A_2_input_ret_1.mat[26] @[calc8x8.scala 152:24]
        A[2].input.mat[27] <= A_2_input_ret_1.mat[27] @[calc8x8.scala 152:24]
        A[2].input.mat[28] <= A_2_input_ret_1.mat[28] @[calc8x8.scala 152:24]
        A[2].input.mat[29] <= A_2_input_ret_1.mat[29] @[calc8x8.scala 152:24]
        A[2].input.mat[30] <= A_2_input_ret_1.mat[30] @[calc8x8.scala 152:24]
        A[2].input.mat[31] <= A_2_input_ret_1.mat[31] @[calc8x8.scala 152:24]
        A[2].input.mat[32] <= A_2_input_ret_1.mat[32] @[calc8x8.scala 152:24]
        A[2].input.mat[33] <= A_2_input_ret_1.mat[33] @[calc8x8.scala 152:24]
        A[2].input.mat[34] <= A_2_input_ret_1.mat[34] @[calc8x8.scala 152:24]
        A[2].input.mat[35] <= A_2_input_ret_1.mat[35] @[calc8x8.scala 152:24]
        wire A_3_input_ret_1 : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
        A_3_input_ret_1.mat[0] <= io.input.mat[27] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[1] <= io.input.mat[28] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[2] <= io.input.mat[29] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[3] <= io.input.mat[30] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[4] <= io.input.mat[31] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[5] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[6] <= io.input.mat[35] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[7] <= io.input.mat[36] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[8] <= io.input.mat[37] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[9] <= io.input.mat[38] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[10] <= io.input.mat[39] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[11] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[12] <= io.input.mat[43] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[13] <= io.input.mat[44] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[14] <= io.input.mat[45] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[15] <= io.input.mat[46] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[16] <= io.input.mat[47] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[17] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[18] <= io.input.mat[51] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[19] <= io.input.mat[52] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[20] <= io.input.mat[53] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[21] <= io.input.mat[54] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[22] <= io.input.mat[55] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[23] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[24] <= io.input.mat[59] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[25] <= io.input.mat[60] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[26] <= io.input.mat[61] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[27] <= io.input.mat[62] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[28] <= io.input.mat[63] @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[29] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[30] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[31] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[32] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[33] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[34] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A_3_input_ret_1.mat[35] <= asSInt(UInt<1>("h00")) @[calc8x8.scala 39:32]
        A[3].input.mat[0] <= A_3_input_ret_1.mat[0] @[calc8x8.scala 153:24]
        A[3].input.mat[1] <= A_3_input_ret_1.mat[1] @[calc8x8.scala 153:24]
        A[3].input.mat[2] <= A_3_input_ret_1.mat[2] @[calc8x8.scala 153:24]
        A[3].input.mat[3] <= A_3_input_ret_1.mat[3] @[calc8x8.scala 153:24]
        A[3].input.mat[4] <= A_3_input_ret_1.mat[4] @[calc8x8.scala 153:24]
        A[3].input.mat[5] <= A_3_input_ret_1.mat[5] @[calc8x8.scala 153:24]
        A[3].input.mat[6] <= A_3_input_ret_1.mat[6] @[calc8x8.scala 153:24]
        A[3].input.mat[7] <= A_3_input_ret_1.mat[7] @[calc8x8.scala 153:24]
        A[3].input.mat[8] <= A_3_input_ret_1.mat[8] @[calc8x8.scala 153:24]
        A[3].input.mat[9] <= A_3_input_ret_1.mat[9] @[calc8x8.scala 153:24]
        A[3].input.mat[10] <= A_3_input_ret_1.mat[10] @[calc8x8.scala 153:24]
        A[3].input.mat[11] <= A_3_input_ret_1.mat[11] @[calc8x8.scala 153:24]
        A[3].input.mat[12] <= A_3_input_ret_1.mat[12] @[calc8x8.scala 153:24]
        A[3].input.mat[13] <= A_3_input_ret_1.mat[13] @[calc8x8.scala 153:24]
        A[3].input.mat[14] <= A_3_input_ret_1.mat[14] @[calc8x8.scala 153:24]
        A[3].input.mat[15] <= A_3_input_ret_1.mat[15] @[calc8x8.scala 153:24]
        A[3].input.mat[16] <= A_3_input_ret_1.mat[16] @[calc8x8.scala 153:24]
        A[3].input.mat[17] <= A_3_input_ret_1.mat[17] @[calc8x8.scala 153:24]
        A[3].input.mat[18] <= A_3_input_ret_1.mat[18] @[calc8x8.scala 153:24]
        A[3].input.mat[19] <= A_3_input_ret_1.mat[19] @[calc8x8.scala 153:24]
        A[3].input.mat[20] <= A_3_input_ret_1.mat[20] @[calc8x8.scala 153:24]
        A[3].input.mat[21] <= A_3_input_ret_1.mat[21] @[calc8x8.scala 153:24]
        A[3].input.mat[22] <= A_3_input_ret_1.mat[22] @[calc8x8.scala 153:24]
        A[3].input.mat[23] <= A_3_input_ret_1.mat[23] @[calc8x8.scala 153:24]
        A[3].input.mat[24] <= A_3_input_ret_1.mat[24] @[calc8x8.scala 153:24]
        A[3].input.mat[25] <= A_3_input_ret_1.mat[25] @[calc8x8.scala 153:24]
        A[3].input.mat[26] <= A_3_input_ret_1.mat[26] @[calc8x8.scala 153:24]
        A[3].input.mat[27] <= A_3_input_ret_1.mat[27] @[calc8x8.scala 153:24]
        A[3].input.mat[28] <= A_3_input_ret_1.mat[28] @[calc8x8.scala 153:24]
        A[3].input.mat[29] <= A_3_input_ret_1.mat[29] @[calc8x8.scala 153:24]
        A[3].input.mat[30] <= A_3_input_ret_1.mat[30] @[calc8x8.scala 153:24]
        A[3].input.mat[31] <= A_3_input_ret_1.mat[31] @[calc8x8.scala 153:24]
        A[3].input.mat[32] <= A_3_input_ret_1.mat[32] @[calc8x8.scala 153:24]
        A[3].input.mat[33] <= A_3_input_ret_1.mat[33] @[calc8x8.scala 153:24]
        A[3].input.mat[34] <= A_3_input_ret_1.mat[34] @[calc8x8.scala 153:24]
        A[3].input.mat[35] <= A_3_input_ret_1.mat[35] @[calc8x8.scala 153:24]
        A[0].weight.real[0] <= io.weight[0].real[0] @[calc8x8.scala 155:34]
        A[0].weight.real[1] <= io.weight[0].real[1] @[calc8x8.scala 155:34]
        A[0].weight.real[2] <= io.weight[0].real[2] @[calc8x8.scala 155:34]
        A[0].weight.real[3] <= io.weight[0].real[3] @[calc8x8.scala 155:34]
        A[0].weight.real[4] <= io.weight[0].real[4] @[calc8x8.scala 155:34]
        A[0].weight.real[5] <= io.weight[0].real[5] @[calc8x8.scala 155:34]
        A[0].weight.real[6] <= io.weight[0].real[6] @[calc8x8.scala 155:34]
        A[0].weight.real[7] <= io.weight[0].real[7] @[calc8x8.scala 155:34]
        A[0].weight.real[8] <= io.weight[0].real[8] @[calc8x8.scala 155:34]
        A[0].weight.real[9] <= io.weight[0].real[9] @[calc8x8.scala 155:34]
        A[0].weight.real[10] <= io.weight[0].real[10] @[calc8x8.scala 155:34]
        A[0].weight.real[11] <= io.weight[0].real[11] @[calc8x8.scala 155:34]
        A[0].weight.real[12] <= io.weight[0].real[12] @[calc8x8.scala 155:34]
        A[0].weight.real[13] <= io.weight[0].real[13] @[calc8x8.scala 155:34]
        A[0].weight.real[14] <= io.weight[0].real[14] @[calc8x8.scala 155:34]
        A[0].weight.real[15] <= io.weight[0].real[15] @[calc8x8.scala 155:34]
        A[0].flag <= UInt<1>("h01") @[calc8x8.scala 156:27]
        A[0].valid_in <= io.valid_in @[calc8x8.scala 157:31]
        A[1].weight.real[0] <= io.weight[1].real[0] @[calc8x8.scala 155:34]
        A[1].weight.real[1] <= io.weight[1].real[1] @[calc8x8.scala 155:34]
        A[1].weight.real[2] <= io.weight[1].real[2] @[calc8x8.scala 155:34]
        A[1].weight.real[3] <= io.weight[1].real[3] @[calc8x8.scala 155:34]
        A[1].weight.real[4] <= io.weight[1].real[4] @[calc8x8.scala 155:34]
        A[1].weight.real[5] <= io.weight[1].real[5] @[calc8x8.scala 155:34]
        A[1].weight.real[6] <= io.weight[1].real[6] @[calc8x8.scala 155:34]
        A[1].weight.real[7] <= io.weight[1].real[7] @[calc8x8.scala 155:34]
        A[1].weight.real[8] <= io.weight[1].real[8] @[calc8x8.scala 155:34]
        A[1].weight.real[9] <= io.weight[1].real[9] @[calc8x8.scala 155:34]
        A[1].weight.real[10] <= io.weight[1].real[10] @[calc8x8.scala 155:34]
        A[1].weight.real[11] <= io.weight[1].real[11] @[calc8x8.scala 155:34]
        A[1].weight.real[12] <= io.weight[1].real[12] @[calc8x8.scala 155:34]
        A[1].weight.real[13] <= io.weight[1].real[13] @[calc8x8.scala 155:34]
        A[1].weight.real[14] <= io.weight[1].real[14] @[calc8x8.scala 155:34]
        A[1].weight.real[15] <= io.weight[1].real[15] @[calc8x8.scala 155:34]
        A[1].flag <= UInt<1>("h01") @[calc8x8.scala 156:27]
        A[1].valid_in <= io.valid_in @[calc8x8.scala 157:31]
        A[2].weight.real[0] <= io.weight[2].real[0] @[calc8x8.scala 155:34]
        A[2].weight.real[1] <= io.weight[2].real[1] @[calc8x8.scala 155:34]
        A[2].weight.real[2] <= io.weight[2].real[2] @[calc8x8.scala 155:34]
        A[2].weight.real[3] <= io.weight[2].real[3] @[calc8x8.scala 155:34]
        A[2].weight.real[4] <= io.weight[2].real[4] @[calc8x8.scala 155:34]
        A[2].weight.real[5] <= io.weight[2].real[5] @[calc8x8.scala 155:34]
        A[2].weight.real[6] <= io.weight[2].real[6] @[calc8x8.scala 155:34]
        A[2].weight.real[7] <= io.weight[2].real[7] @[calc8x8.scala 155:34]
        A[2].weight.real[8] <= io.weight[2].real[8] @[calc8x8.scala 155:34]
        A[2].weight.real[9] <= io.weight[2].real[9] @[calc8x8.scala 155:34]
        A[2].weight.real[10] <= io.weight[2].real[10] @[calc8x8.scala 155:34]
        A[2].weight.real[11] <= io.weight[2].real[11] @[calc8x8.scala 155:34]
        A[2].weight.real[12] <= io.weight[2].real[12] @[calc8x8.scala 155:34]
        A[2].weight.real[13] <= io.weight[2].real[13] @[calc8x8.scala 155:34]
        A[2].weight.real[14] <= io.weight[2].real[14] @[calc8x8.scala 155:34]
        A[2].weight.real[15] <= io.weight[2].real[15] @[calc8x8.scala 155:34]
        A[2].flag <= UInt<1>("h01") @[calc8x8.scala 156:27]
        A[2].valid_in <= io.valid_in @[calc8x8.scala 157:31]
        A[3].weight.real[0] <= io.weight[3].real[0] @[calc8x8.scala 155:34]
        A[3].weight.real[1] <= io.weight[3].real[1] @[calc8x8.scala 155:34]
        A[3].weight.real[2] <= io.weight[3].real[2] @[calc8x8.scala 155:34]
        A[3].weight.real[3] <= io.weight[3].real[3] @[calc8x8.scala 155:34]
        A[3].weight.real[4] <= io.weight[3].real[4] @[calc8x8.scala 155:34]
        A[3].weight.real[5] <= io.weight[3].real[5] @[calc8x8.scala 155:34]
        A[3].weight.real[6] <= io.weight[3].real[6] @[calc8x8.scala 155:34]
        A[3].weight.real[7] <= io.weight[3].real[7] @[calc8x8.scala 155:34]
        A[3].weight.real[8] <= io.weight[3].real[8] @[calc8x8.scala 155:34]
        A[3].weight.real[9] <= io.weight[3].real[9] @[calc8x8.scala 155:34]
        A[3].weight.real[10] <= io.weight[3].real[10] @[calc8x8.scala 155:34]
        A[3].weight.real[11] <= io.weight[3].real[11] @[calc8x8.scala 155:34]
        A[3].weight.real[12] <= io.weight[3].real[12] @[calc8x8.scala 155:34]
        A[3].weight.real[13] <= io.weight[3].real[13] @[calc8x8.scala 155:34]
        A[3].weight.real[14] <= io.weight[3].real[14] @[calc8x8.scala 155:34]
        A[3].weight.real[15] <= io.weight[3].real[15] @[calc8x8.scala 155:34]
        A[3].flag <= UInt<1>("h01") @[calc8x8.scala 156:27]
        A[3].valid_in <= io.valid_in @[calc8x8.scala 157:31]
        wire io_output_ret_1 : {mat : SInt<37>[64]} @[calc8x8.scala 44:23]
        io_output_ret_1.mat[0] <= A[0].output.mat[0] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[1] <= A[0].output.mat[1] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[2] <= A[0].output.mat[2] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[3] <= A[0].output.mat[3] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[8] <= A[0].output.mat[4] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[9] <= A[0].output.mat[5] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[10] <= A[0].output.mat[6] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[11] <= A[0].output.mat[7] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[16] <= A[0].output.mat[8] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[17] <= A[0].output.mat[9] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[18] <= A[0].output.mat[10] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[19] <= A[0].output.mat[11] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[24] <= A[0].output.mat[12] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[25] <= A[0].output.mat[13] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[26] <= A[0].output.mat[14] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[27] <= A[0].output.mat[15] @[calc8x8.scala 47:32]
        io_output_ret_1.mat[4] <= A[1].output.mat[0] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[5] <= A[1].output.mat[1] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[6] <= A[1].output.mat[2] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[7] <= A[1].output.mat[3] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[12] <= A[1].output.mat[4] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[13] <= A[1].output.mat[5] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[14] <= A[1].output.mat[6] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[15] <= A[1].output.mat[7] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[20] <= A[1].output.mat[8] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[21] <= A[1].output.mat[9] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[22] <= A[1].output.mat[10] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[23] <= A[1].output.mat[11] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[28] <= A[1].output.mat[12] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[29] <= A[1].output.mat[13] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[30] <= A[1].output.mat[14] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[31] <= A[1].output.mat[15] @[calc8x8.scala 50:32]
        io_output_ret_1.mat[32] <= A[2].output.mat[0] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[33] <= A[2].output.mat[1] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[34] <= A[2].output.mat[2] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[35] <= A[2].output.mat[3] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[40] <= A[2].output.mat[4] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[41] <= A[2].output.mat[5] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[42] <= A[2].output.mat[6] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[43] <= A[2].output.mat[7] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[48] <= A[2].output.mat[8] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[49] <= A[2].output.mat[9] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[50] <= A[2].output.mat[10] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[51] <= A[2].output.mat[11] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[56] <= A[2].output.mat[12] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[57] <= A[2].output.mat[13] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[58] <= A[2].output.mat[14] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[59] <= A[2].output.mat[15] @[calc8x8.scala 53:32]
        io_output_ret_1.mat[36] <= A[3].output.mat[0] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[37] <= A[3].output.mat[1] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[38] <= A[3].output.mat[2] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[39] <= A[3].output.mat[3] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[44] <= A[3].output.mat[4] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[45] <= A[3].output.mat[5] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[46] <= A[3].output.mat[6] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[47] <= A[3].output.mat[7] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[52] <= A[3].output.mat[8] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[53] <= A[3].output.mat[9] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[54] <= A[3].output.mat[10] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[55] <= A[3].output.mat[11] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[60] <= A[3].output.mat[12] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[61] <= A[3].output.mat[13] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[62] <= A[3].output.mat[14] @[calc8x8.scala 56:32]
        io_output_ret_1.mat[63] <= A[3].output.mat[15] @[calc8x8.scala 56:32]
        io.output.mat[0] <= io_output_ret_1.mat[0] @[calc8x8.scala 159:23]
        io.output.mat[1] <= io_output_ret_1.mat[1] @[calc8x8.scala 159:23]
        io.output.mat[2] <= io_output_ret_1.mat[2] @[calc8x8.scala 159:23]
        io.output.mat[3] <= io_output_ret_1.mat[3] @[calc8x8.scala 159:23]
        io.output.mat[4] <= io_output_ret_1.mat[4] @[calc8x8.scala 159:23]
        io.output.mat[5] <= io_output_ret_1.mat[5] @[calc8x8.scala 159:23]
        io.output.mat[6] <= io_output_ret_1.mat[6] @[calc8x8.scala 159:23]
        io.output.mat[7] <= io_output_ret_1.mat[7] @[calc8x8.scala 159:23]
        io.output.mat[8] <= io_output_ret_1.mat[8] @[calc8x8.scala 159:23]
        io.output.mat[9] <= io_output_ret_1.mat[9] @[calc8x8.scala 159:23]
        io.output.mat[10] <= io_output_ret_1.mat[10] @[calc8x8.scala 159:23]
        io.output.mat[11] <= io_output_ret_1.mat[11] @[calc8x8.scala 159:23]
        io.output.mat[12] <= io_output_ret_1.mat[12] @[calc8x8.scala 159:23]
        io.output.mat[13] <= io_output_ret_1.mat[13] @[calc8x8.scala 159:23]
        io.output.mat[14] <= io_output_ret_1.mat[14] @[calc8x8.scala 159:23]
        io.output.mat[15] <= io_output_ret_1.mat[15] @[calc8x8.scala 159:23]
        io.output.mat[16] <= io_output_ret_1.mat[16] @[calc8x8.scala 159:23]
        io.output.mat[17] <= io_output_ret_1.mat[17] @[calc8x8.scala 159:23]
        io.output.mat[18] <= io_output_ret_1.mat[18] @[calc8x8.scala 159:23]
        io.output.mat[19] <= io_output_ret_1.mat[19] @[calc8x8.scala 159:23]
        io.output.mat[20] <= io_output_ret_1.mat[20] @[calc8x8.scala 159:23]
        io.output.mat[21] <= io_output_ret_1.mat[21] @[calc8x8.scala 159:23]
        io.output.mat[22] <= io_output_ret_1.mat[22] @[calc8x8.scala 159:23]
        io.output.mat[23] <= io_output_ret_1.mat[23] @[calc8x8.scala 159:23]
        io.output.mat[24] <= io_output_ret_1.mat[24] @[calc8x8.scala 159:23]
        io.output.mat[25] <= io_output_ret_1.mat[25] @[calc8x8.scala 159:23]
        io.output.mat[26] <= io_output_ret_1.mat[26] @[calc8x8.scala 159:23]
        io.output.mat[27] <= io_output_ret_1.mat[27] @[calc8x8.scala 159:23]
        io.output.mat[28] <= io_output_ret_1.mat[28] @[calc8x8.scala 159:23]
        io.output.mat[29] <= io_output_ret_1.mat[29] @[calc8x8.scala 159:23]
        io.output.mat[30] <= io_output_ret_1.mat[30] @[calc8x8.scala 159:23]
        io.output.mat[31] <= io_output_ret_1.mat[31] @[calc8x8.scala 159:23]
        io.output.mat[32] <= io_output_ret_1.mat[32] @[calc8x8.scala 159:23]
        io.output.mat[33] <= io_output_ret_1.mat[33] @[calc8x8.scala 159:23]
        io.output.mat[34] <= io_output_ret_1.mat[34] @[calc8x8.scala 159:23]
        io.output.mat[35] <= io_output_ret_1.mat[35] @[calc8x8.scala 159:23]
        io.output.mat[36] <= io_output_ret_1.mat[36] @[calc8x8.scala 159:23]
        io.output.mat[37] <= io_output_ret_1.mat[37] @[calc8x8.scala 159:23]
        io.output.mat[38] <= io_output_ret_1.mat[38] @[calc8x8.scala 159:23]
        io.output.mat[39] <= io_output_ret_1.mat[39] @[calc8x8.scala 159:23]
        io.output.mat[40] <= io_output_ret_1.mat[40] @[calc8x8.scala 159:23]
        io.output.mat[41] <= io_output_ret_1.mat[41] @[calc8x8.scala 159:23]
        io.output.mat[42] <= io_output_ret_1.mat[42] @[calc8x8.scala 159:23]
        io.output.mat[43] <= io_output_ret_1.mat[43] @[calc8x8.scala 159:23]
        io.output.mat[44] <= io_output_ret_1.mat[44] @[calc8x8.scala 159:23]
        io.output.mat[45] <= io_output_ret_1.mat[45] @[calc8x8.scala 159:23]
        io.output.mat[46] <= io_output_ret_1.mat[46] @[calc8x8.scala 159:23]
        io.output.mat[47] <= io_output_ret_1.mat[47] @[calc8x8.scala 159:23]
        io.output.mat[48] <= io_output_ret_1.mat[48] @[calc8x8.scala 159:23]
        io.output.mat[49] <= io_output_ret_1.mat[49] @[calc8x8.scala 159:23]
        io.output.mat[50] <= io_output_ret_1.mat[50] @[calc8x8.scala 159:23]
        io.output.mat[51] <= io_output_ret_1.mat[51] @[calc8x8.scala 159:23]
        io.output.mat[52] <= io_output_ret_1.mat[52] @[calc8x8.scala 159:23]
        io.output.mat[53] <= io_output_ret_1.mat[53] @[calc8x8.scala 159:23]
        io.output.mat[54] <= io_output_ret_1.mat[54] @[calc8x8.scala 159:23]
        io.output.mat[55] <= io_output_ret_1.mat[55] @[calc8x8.scala 159:23]
        io.output.mat[56] <= io_output_ret_1.mat[56] @[calc8x8.scala 159:23]
        io.output.mat[57] <= io_output_ret_1.mat[57] @[calc8x8.scala 159:23]
        io.output.mat[58] <= io_output_ret_1.mat[58] @[calc8x8.scala 159:23]
        io.output.mat[59] <= io_output_ret_1.mat[59] @[calc8x8.scala 159:23]
        io.output.mat[60] <= io_output_ret_1.mat[60] @[calc8x8.scala 159:23]
        io.output.mat[61] <= io_output_ret_1.mat[61] @[calc8x8.scala 159:23]
        io.output.mat[62] <= io_output_ret_1.mat[62] @[calc8x8.scala 159:23]
        io.output.mat[63] <= io_output_ret_1.mat[63] @[calc8x8.scala 159:23]
        io.valid_out <= A[0].valid_out @[calc8x8.scala 160:26]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_6 = asUInt(UInt<2>("h02")) @[Conditional.scala 37:23]
        node _T_7 = asUInt(io.flag) @[Conditional.scala 37:39]
        node _T_8 = eq(_T_6, _T_7) @[Conditional.scala 37:30]
        when _T_8 : @[Conditional.scala 39:67]
          wire A_0_input_ret_2 : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
          A_0_input_ret_2.mat[0] <= io.input.up[0] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[1] <= io.input.up[1] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[2] <= io.input.up[2] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[3] <= io.input.up[3] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[4] <= io.input.up[4] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[5] <= io.input.up[5] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[6] <= io.input.left[0] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[7] <= io.input.mat[0] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[8] <= io.input.mat[1] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[9] <= io.input.mat[2] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[10] <= io.input.mat[3] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[11] <= io.input.mat[4] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[12] <= io.input.left[1] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[13] <= io.input.mat[8] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[14] <= io.input.mat[9] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[15] <= io.input.mat[10] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[16] <= io.input.mat[11] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[17] <= io.input.mat[12] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[18] <= io.input.left[2] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[19] <= io.input.mat[16] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[20] <= io.input.mat[17] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[21] <= io.input.mat[18] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[22] <= io.input.mat[19] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[23] <= io.input.mat[20] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[24] <= io.input.left[3] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[25] <= io.input.mat[24] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[26] <= io.input.mat[25] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[27] <= io.input.mat[26] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[28] <= io.input.mat[27] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[29] <= io.input.mat[28] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[30] <= io.input.left[4] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[31] <= io.input.mat[32] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[32] <= io.input.mat[33] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[33] <= io.input.mat[34] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[34] <= io.input.mat[35] @[calc8x8.scala 39:32]
          A_0_input_ret_2.mat[35] <= io.input.mat[36] @[calc8x8.scala 39:32]
          A[0].input.mat[0] <= A_0_input_ret_2.mat[0] @[calc8x8.scala 163:24]
          A[0].input.mat[1] <= A_0_input_ret_2.mat[1] @[calc8x8.scala 163:24]
          A[0].input.mat[2] <= A_0_input_ret_2.mat[2] @[calc8x8.scala 163:24]
          A[0].input.mat[3] <= A_0_input_ret_2.mat[3] @[calc8x8.scala 163:24]
          A[0].input.mat[4] <= A_0_input_ret_2.mat[4] @[calc8x8.scala 163:24]
          A[0].input.mat[5] <= A_0_input_ret_2.mat[5] @[calc8x8.scala 163:24]
          A[0].input.mat[6] <= A_0_input_ret_2.mat[6] @[calc8x8.scala 163:24]
          A[0].input.mat[7] <= A_0_input_ret_2.mat[7] @[calc8x8.scala 163:24]
          A[0].input.mat[8] <= A_0_input_ret_2.mat[8] @[calc8x8.scala 163:24]
          A[0].input.mat[9] <= A_0_input_ret_2.mat[9] @[calc8x8.scala 163:24]
          A[0].input.mat[10] <= A_0_input_ret_2.mat[10] @[calc8x8.scala 163:24]
          A[0].input.mat[11] <= A_0_input_ret_2.mat[11] @[calc8x8.scala 163:24]
          A[0].input.mat[12] <= A_0_input_ret_2.mat[12] @[calc8x8.scala 163:24]
          A[0].input.mat[13] <= A_0_input_ret_2.mat[13] @[calc8x8.scala 163:24]
          A[0].input.mat[14] <= A_0_input_ret_2.mat[14] @[calc8x8.scala 163:24]
          A[0].input.mat[15] <= A_0_input_ret_2.mat[15] @[calc8x8.scala 163:24]
          A[0].input.mat[16] <= A_0_input_ret_2.mat[16] @[calc8x8.scala 163:24]
          A[0].input.mat[17] <= A_0_input_ret_2.mat[17] @[calc8x8.scala 163:24]
          A[0].input.mat[18] <= A_0_input_ret_2.mat[18] @[calc8x8.scala 163:24]
          A[0].input.mat[19] <= A_0_input_ret_2.mat[19] @[calc8x8.scala 163:24]
          A[0].input.mat[20] <= A_0_input_ret_2.mat[20] @[calc8x8.scala 163:24]
          A[0].input.mat[21] <= A_0_input_ret_2.mat[21] @[calc8x8.scala 163:24]
          A[0].input.mat[22] <= A_0_input_ret_2.mat[22] @[calc8x8.scala 163:24]
          A[0].input.mat[23] <= A_0_input_ret_2.mat[23] @[calc8x8.scala 163:24]
          A[0].input.mat[24] <= A_0_input_ret_2.mat[24] @[calc8x8.scala 163:24]
          A[0].input.mat[25] <= A_0_input_ret_2.mat[25] @[calc8x8.scala 163:24]
          A[0].input.mat[26] <= A_0_input_ret_2.mat[26] @[calc8x8.scala 163:24]
          A[0].input.mat[27] <= A_0_input_ret_2.mat[27] @[calc8x8.scala 163:24]
          A[0].input.mat[28] <= A_0_input_ret_2.mat[28] @[calc8x8.scala 163:24]
          A[0].input.mat[29] <= A_0_input_ret_2.mat[29] @[calc8x8.scala 163:24]
          A[0].input.mat[30] <= A_0_input_ret_2.mat[30] @[calc8x8.scala 163:24]
          A[0].input.mat[31] <= A_0_input_ret_2.mat[31] @[calc8x8.scala 163:24]
          A[0].input.mat[32] <= A_0_input_ret_2.mat[32] @[calc8x8.scala 163:24]
          A[0].input.mat[33] <= A_0_input_ret_2.mat[33] @[calc8x8.scala 163:24]
          A[0].input.mat[34] <= A_0_input_ret_2.mat[34] @[calc8x8.scala 163:24]
          A[0].input.mat[35] <= A_0_input_ret_2.mat[35] @[calc8x8.scala 163:24]
          wire A_1_input_ret_2 : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
          A_1_input_ret_2.mat[0] <= io.input.up[4] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[1] <= io.input.up[5] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[2] <= io.input.up[6] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[3] <= io.input.up[7] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[4] <= io.input.up[8] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[5] <= io.input.up[9] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[6] <= io.input.mat[3] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[7] <= io.input.mat[4] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[8] <= io.input.mat[5] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[9] <= io.input.mat[6] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[10] <= io.input.mat[7] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[11] <= io.input.right[0] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[12] <= io.input.mat[11] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[13] <= io.input.mat[12] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[14] <= io.input.mat[13] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[15] <= io.input.mat[14] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[16] <= io.input.mat[15] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[17] <= io.input.right[1] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[18] <= io.input.mat[19] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[19] <= io.input.mat[20] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[20] <= io.input.mat[21] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[21] <= io.input.mat[22] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[22] <= io.input.mat[23] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[23] <= io.input.right[2] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[24] <= io.input.mat[27] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[25] <= io.input.mat[28] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[26] <= io.input.mat[29] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[27] <= io.input.mat[30] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[28] <= io.input.mat[31] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[29] <= io.input.right[3] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[30] <= io.input.mat[35] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[31] <= io.input.mat[36] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[32] <= io.input.mat[37] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[33] <= io.input.mat[38] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[34] <= io.input.mat[39] @[calc8x8.scala 39:32]
          A_1_input_ret_2.mat[35] <= io.input.right[4] @[calc8x8.scala 39:32]
          A[1].input.mat[0] <= A_1_input_ret_2.mat[0] @[calc8x8.scala 164:24]
          A[1].input.mat[1] <= A_1_input_ret_2.mat[1] @[calc8x8.scala 164:24]
          A[1].input.mat[2] <= A_1_input_ret_2.mat[2] @[calc8x8.scala 164:24]
          A[1].input.mat[3] <= A_1_input_ret_2.mat[3] @[calc8x8.scala 164:24]
          A[1].input.mat[4] <= A_1_input_ret_2.mat[4] @[calc8x8.scala 164:24]
          A[1].input.mat[5] <= A_1_input_ret_2.mat[5] @[calc8x8.scala 164:24]
          A[1].input.mat[6] <= A_1_input_ret_2.mat[6] @[calc8x8.scala 164:24]
          A[1].input.mat[7] <= A_1_input_ret_2.mat[7] @[calc8x8.scala 164:24]
          A[1].input.mat[8] <= A_1_input_ret_2.mat[8] @[calc8x8.scala 164:24]
          A[1].input.mat[9] <= A_1_input_ret_2.mat[9] @[calc8x8.scala 164:24]
          A[1].input.mat[10] <= A_1_input_ret_2.mat[10] @[calc8x8.scala 164:24]
          A[1].input.mat[11] <= A_1_input_ret_2.mat[11] @[calc8x8.scala 164:24]
          A[1].input.mat[12] <= A_1_input_ret_2.mat[12] @[calc8x8.scala 164:24]
          A[1].input.mat[13] <= A_1_input_ret_2.mat[13] @[calc8x8.scala 164:24]
          A[1].input.mat[14] <= A_1_input_ret_2.mat[14] @[calc8x8.scala 164:24]
          A[1].input.mat[15] <= A_1_input_ret_2.mat[15] @[calc8x8.scala 164:24]
          A[1].input.mat[16] <= A_1_input_ret_2.mat[16] @[calc8x8.scala 164:24]
          A[1].input.mat[17] <= A_1_input_ret_2.mat[17] @[calc8x8.scala 164:24]
          A[1].input.mat[18] <= A_1_input_ret_2.mat[18] @[calc8x8.scala 164:24]
          A[1].input.mat[19] <= A_1_input_ret_2.mat[19] @[calc8x8.scala 164:24]
          A[1].input.mat[20] <= A_1_input_ret_2.mat[20] @[calc8x8.scala 164:24]
          A[1].input.mat[21] <= A_1_input_ret_2.mat[21] @[calc8x8.scala 164:24]
          A[1].input.mat[22] <= A_1_input_ret_2.mat[22] @[calc8x8.scala 164:24]
          A[1].input.mat[23] <= A_1_input_ret_2.mat[23] @[calc8x8.scala 164:24]
          A[1].input.mat[24] <= A_1_input_ret_2.mat[24] @[calc8x8.scala 164:24]
          A[1].input.mat[25] <= A_1_input_ret_2.mat[25] @[calc8x8.scala 164:24]
          A[1].input.mat[26] <= A_1_input_ret_2.mat[26] @[calc8x8.scala 164:24]
          A[1].input.mat[27] <= A_1_input_ret_2.mat[27] @[calc8x8.scala 164:24]
          A[1].input.mat[28] <= A_1_input_ret_2.mat[28] @[calc8x8.scala 164:24]
          A[1].input.mat[29] <= A_1_input_ret_2.mat[29] @[calc8x8.scala 164:24]
          A[1].input.mat[30] <= A_1_input_ret_2.mat[30] @[calc8x8.scala 164:24]
          A[1].input.mat[31] <= A_1_input_ret_2.mat[31] @[calc8x8.scala 164:24]
          A[1].input.mat[32] <= A_1_input_ret_2.mat[32] @[calc8x8.scala 164:24]
          A[1].input.mat[33] <= A_1_input_ret_2.mat[33] @[calc8x8.scala 164:24]
          A[1].input.mat[34] <= A_1_input_ret_2.mat[34] @[calc8x8.scala 164:24]
          A[1].input.mat[35] <= A_1_input_ret_2.mat[35] @[calc8x8.scala 164:24]
          wire A_2_input_ret_2 : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
          A_2_input_ret_2.mat[0] <= io.input.left[3] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[1] <= io.input.mat[24] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[2] <= io.input.mat[25] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[3] <= io.input.mat[26] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[4] <= io.input.mat[27] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[5] <= io.input.mat[28] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[6] <= io.input.left[4] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[7] <= io.input.mat[32] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[8] <= io.input.mat[33] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[9] <= io.input.mat[34] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[10] <= io.input.mat[35] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[11] <= io.input.mat[36] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[12] <= io.input.left[5] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[13] <= io.input.mat[40] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[14] <= io.input.mat[41] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[15] <= io.input.mat[42] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[16] <= io.input.mat[43] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[17] <= io.input.mat[44] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[18] <= io.input.left[6] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[19] <= io.input.mat[48] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[20] <= io.input.mat[49] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[21] <= io.input.mat[50] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[22] <= io.input.mat[51] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[23] <= io.input.mat[52] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[24] <= io.input.left[7] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[25] <= io.input.mat[56] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[26] <= io.input.mat[57] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[27] <= io.input.mat[58] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[28] <= io.input.mat[59] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[29] <= io.input.mat[60] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[30] <= io.input.down[0] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[31] <= io.input.down[1] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[32] <= io.input.down[2] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[33] <= io.input.down[3] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[34] <= io.input.down[4] @[calc8x8.scala 39:32]
          A_2_input_ret_2.mat[35] <= io.input.down[5] @[calc8x8.scala 39:32]
          A[2].input.mat[0] <= A_2_input_ret_2.mat[0] @[calc8x8.scala 165:24]
          A[2].input.mat[1] <= A_2_input_ret_2.mat[1] @[calc8x8.scala 165:24]
          A[2].input.mat[2] <= A_2_input_ret_2.mat[2] @[calc8x8.scala 165:24]
          A[2].input.mat[3] <= A_2_input_ret_2.mat[3] @[calc8x8.scala 165:24]
          A[2].input.mat[4] <= A_2_input_ret_2.mat[4] @[calc8x8.scala 165:24]
          A[2].input.mat[5] <= A_2_input_ret_2.mat[5] @[calc8x8.scala 165:24]
          A[2].input.mat[6] <= A_2_input_ret_2.mat[6] @[calc8x8.scala 165:24]
          A[2].input.mat[7] <= A_2_input_ret_2.mat[7] @[calc8x8.scala 165:24]
          A[2].input.mat[8] <= A_2_input_ret_2.mat[8] @[calc8x8.scala 165:24]
          A[2].input.mat[9] <= A_2_input_ret_2.mat[9] @[calc8x8.scala 165:24]
          A[2].input.mat[10] <= A_2_input_ret_2.mat[10] @[calc8x8.scala 165:24]
          A[2].input.mat[11] <= A_2_input_ret_2.mat[11] @[calc8x8.scala 165:24]
          A[2].input.mat[12] <= A_2_input_ret_2.mat[12] @[calc8x8.scala 165:24]
          A[2].input.mat[13] <= A_2_input_ret_2.mat[13] @[calc8x8.scala 165:24]
          A[2].input.mat[14] <= A_2_input_ret_2.mat[14] @[calc8x8.scala 165:24]
          A[2].input.mat[15] <= A_2_input_ret_2.mat[15] @[calc8x8.scala 165:24]
          A[2].input.mat[16] <= A_2_input_ret_2.mat[16] @[calc8x8.scala 165:24]
          A[2].input.mat[17] <= A_2_input_ret_2.mat[17] @[calc8x8.scala 165:24]
          A[2].input.mat[18] <= A_2_input_ret_2.mat[18] @[calc8x8.scala 165:24]
          A[2].input.mat[19] <= A_2_input_ret_2.mat[19] @[calc8x8.scala 165:24]
          A[2].input.mat[20] <= A_2_input_ret_2.mat[20] @[calc8x8.scala 165:24]
          A[2].input.mat[21] <= A_2_input_ret_2.mat[21] @[calc8x8.scala 165:24]
          A[2].input.mat[22] <= A_2_input_ret_2.mat[22] @[calc8x8.scala 165:24]
          A[2].input.mat[23] <= A_2_input_ret_2.mat[23] @[calc8x8.scala 165:24]
          A[2].input.mat[24] <= A_2_input_ret_2.mat[24] @[calc8x8.scala 165:24]
          A[2].input.mat[25] <= A_2_input_ret_2.mat[25] @[calc8x8.scala 165:24]
          A[2].input.mat[26] <= A_2_input_ret_2.mat[26] @[calc8x8.scala 165:24]
          A[2].input.mat[27] <= A_2_input_ret_2.mat[27] @[calc8x8.scala 165:24]
          A[2].input.mat[28] <= A_2_input_ret_2.mat[28] @[calc8x8.scala 165:24]
          A[2].input.mat[29] <= A_2_input_ret_2.mat[29] @[calc8x8.scala 165:24]
          A[2].input.mat[30] <= A_2_input_ret_2.mat[30] @[calc8x8.scala 165:24]
          A[2].input.mat[31] <= A_2_input_ret_2.mat[31] @[calc8x8.scala 165:24]
          A[2].input.mat[32] <= A_2_input_ret_2.mat[32] @[calc8x8.scala 165:24]
          A[2].input.mat[33] <= A_2_input_ret_2.mat[33] @[calc8x8.scala 165:24]
          A[2].input.mat[34] <= A_2_input_ret_2.mat[34] @[calc8x8.scala 165:24]
          A[2].input.mat[35] <= A_2_input_ret_2.mat[35] @[calc8x8.scala 165:24]
          wire A_3_input_ret_2 : {mat : SInt<16>[36]} @[calc8x8.scala 36:23]
          A_3_input_ret_2.mat[0] <= io.input.mat[27] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[1] <= io.input.mat[28] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[2] <= io.input.mat[29] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[3] <= io.input.mat[30] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[4] <= io.input.mat[31] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[5] <= io.input.right[3] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[6] <= io.input.mat[35] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[7] <= io.input.mat[36] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[8] <= io.input.mat[37] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[9] <= io.input.mat[38] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[10] <= io.input.mat[39] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[11] <= io.input.right[4] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[12] <= io.input.mat[43] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[13] <= io.input.mat[44] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[14] <= io.input.mat[45] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[15] <= io.input.mat[46] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[16] <= io.input.mat[47] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[17] <= io.input.right[5] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[18] <= io.input.mat[51] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[19] <= io.input.mat[52] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[20] <= io.input.mat[53] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[21] <= io.input.mat[54] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[22] <= io.input.mat[55] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[23] <= io.input.right[6] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[24] <= io.input.mat[59] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[25] <= io.input.mat[60] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[26] <= io.input.mat[61] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[27] <= io.input.mat[62] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[28] <= io.input.mat[63] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[29] <= io.input.right[7] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[30] <= io.input.down[4] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[31] <= io.input.down[5] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[32] <= io.input.down[6] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[33] <= io.input.down[7] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[34] <= io.input.down[8] @[calc8x8.scala 39:32]
          A_3_input_ret_2.mat[35] <= io.input.down[9] @[calc8x8.scala 39:32]
          A[3].input.mat[0] <= A_3_input_ret_2.mat[0] @[calc8x8.scala 166:24]
          A[3].input.mat[1] <= A_3_input_ret_2.mat[1] @[calc8x8.scala 166:24]
          A[3].input.mat[2] <= A_3_input_ret_2.mat[2] @[calc8x8.scala 166:24]
          A[3].input.mat[3] <= A_3_input_ret_2.mat[3] @[calc8x8.scala 166:24]
          A[3].input.mat[4] <= A_3_input_ret_2.mat[4] @[calc8x8.scala 166:24]
          A[3].input.mat[5] <= A_3_input_ret_2.mat[5] @[calc8x8.scala 166:24]
          A[3].input.mat[6] <= A_3_input_ret_2.mat[6] @[calc8x8.scala 166:24]
          A[3].input.mat[7] <= A_3_input_ret_2.mat[7] @[calc8x8.scala 166:24]
          A[3].input.mat[8] <= A_3_input_ret_2.mat[8] @[calc8x8.scala 166:24]
          A[3].input.mat[9] <= A_3_input_ret_2.mat[9] @[calc8x8.scala 166:24]
          A[3].input.mat[10] <= A_3_input_ret_2.mat[10] @[calc8x8.scala 166:24]
          A[3].input.mat[11] <= A_3_input_ret_2.mat[11] @[calc8x8.scala 166:24]
          A[3].input.mat[12] <= A_3_input_ret_2.mat[12] @[calc8x8.scala 166:24]
          A[3].input.mat[13] <= A_3_input_ret_2.mat[13] @[calc8x8.scala 166:24]
          A[3].input.mat[14] <= A_3_input_ret_2.mat[14] @[calc8x8.scala 166:24]
          A[3].input.mat[15] <= A_3_input_ret_2.mat[15] @[calc8x8.scala 166:24]
          A[3].input.mat[16] <= A_3_input_ret_2.mat[16] @[calc8x8.scala 166:24]
          A[3].input.mat[17] <= A_3_input_ret_2.mat[17] @[calc8x8.scala 166:24]
          A[3].input.mat[18] <= A_3_input_ret_2.mat[18] @[calc8x8.scala 166:24]
          A[3].input.mat[19] <= A_3_input_ret_2.mat[19] @[calc8x8.scala 166:24]
          A[3].input.mat[20] <= A_3_input_ret_2.mat[20] @[calc8x8.scala 166:24]
          A[3].input.mat[21] <= A_3_input_ret_2.mat[21] @[calc8x8.scala 166:24]
          A[3].input.mat[22] <= A_3_input_ret_2.mat[22] @[calc8x8.scala 166:24]
          A[3].input.mat[23] <= A_3_input_ret_2.mat[23] @[calc8x8.scala 166:24]
          A[3].input.mat[24] <= A_3_input_ret_2.mat[24] @[calc8x8.scala 166:24]
          A[3].input.mat[25] <= A_3_input_ret_2.mat[25] @[calc8x8.scala 166:24]
          A[3].input.mat[26] <= A_3_input_ret_2.mat[26] @[calc8x8.scala 166:24]
          A[3].input.mat[27] <= A_3_input_ret_2.mat[27] @[calc8x8.scala 166:24]
          A[3].input.mat[28] <= A_3_input_ret_2.mat[28] @[calc8x8.scala 166:24]
          A[3].input.mat[29] <= A_3_input_ret_2.mat[29] @[calc8x8.scala 166:24]
          A[3].input.mat[30] <= A_3_input_ret_2.mat[30] @[calc8x8.scala 166:24]
          A[3].input.mat[31] <= A_3_input_ret_2.mat[31] @[calc8x8.scala 166:24]
          A[3].input.mat[32] <= A_3_input_ret_2.mat[32] @[calc8x8.scala 166:24]
          A[3].input.mat[33] <= A_3_input_ret_2.mat[33] @[calc8x8.scala 166:24]
          A[3].input.mat[34] <= A_3_input_ret_2.mat[34] @[calc8x8.scala 166:24]
          A[3].input.mat[35] <= A_3_input_ret_2.mat[35] @[calc8x8.scala 166:24]
          A[0].weight.comp3[0] <= conv_weight.comp3[0] @[calc8x8.scala 168:29]
          A[0].weight.comp3[1] <= conv_weight.comp3[1] @[calc8x8.scala 168:29]
          A[0].weight.comp3[2] <= conv_weight.comp3[2] @[calc8x8.scala 168:29]
          A[0].weight.comp3[3] <= conv_weight.comp3[3] @[calc8x8.scala 168:29]
          A[0].weight.comp3[4] <= conv_weight.comp3[4] @[calc8x8.scala 168:29]
          A[0].weight.comp3[5] <= conv_weight.comp3[5] @[calc8x8.scala 168:29]
          A[0].weight.comp3[6] <= conv_weight.comp3[6] @[calc8x8.scala 168:29]
          A[0].weight.comp3[7] <= conv_weight.comp3[7] @[calc8x8.scala 168:29]
          A[0].weight.comp3[8] <= conv_weight.comp3[8] @[calc8x8.scala 168:29]
          A[0].weight.comp3[9] <= conv_weight.comp3[9] @[calc8x8.scala 168:29]
          A[0].weight.comp2[0] <= conv_weight.comp2[0] @[calc8x8.scala 168:29]
          A[0].weight.comp2[1] <= conv_weight.comp2[1] @[calc8x8.scala 168:29]
          A[0].weight.comp2[2] <= conv_weight.comp2[2] @[calc8x8.scala 168:29]
          A[0].weight.comp2[3] <= conv_weight.comp2[3] @[calc8x8.scala 168:29]
          A[0].weight.comp2[4] <= conv_weight.comp2[4] @[calc8x8.scala 168:29]
          A[0].weight.comp2[5] <= conv_weight.comp2[5] @[calc8x8.scala 168:29]
          A[0].weight.comp2[6] <= conv_weight.comp2[6] @[calc8x8.scala 168:29]
          A[0].weight.comp2[7] <= conv_weight.comp2[7] @[calc8x8.scala 168:29]
          A[0].weight.comp2[8] <= conv_weight.comp2[8] @[calc8x8.scala 168:29]
          A[0].weight.comp2[9] <= conv_weight.comp2[9] @[calc8x8.scala 168:29]
          A[0].weight.comp1[0] <= conv_weight.comp1[0] @[calc8x8.scala 168:29]
          A[0].weight.comp1[1] <= conv_weight.comp1[1] @[calc8x8.scala 168:29]
          A[0].weight.comp1[2] <= conv_weight.comp1[2] @[calc8x8.scala 168:29]
          A[0].weight.comp1[3] <= conv_weight.comp1[3] @[calc8x8.scala 168:29]
          A[0].weight.comp1[4] <= conv_weight.comp1[4] @[calc8x8.scala 168:29]
          A[0].weight.comp1[5] <= conv_weight.comp1[5] @[calc8x8.scala 168:29]
          A[0].weight.comp1[6] <= conv_weight.comp1[6] @[calc8x8.scala 168:29]
          A[0].weight.comp1[7] <= conv_weight.comp1[7] @[calc8x8.scala 168:29]
          A[0].weight.comp1[8] <= conv_weight.comp1[8] @[calc8x8.scala 168:29]
          A[0].weight.comp1[9] <= conv_weight.comp1[9] @[calc8x8.scala 168:29]
          A[0].weight.real[0] <= conv_weight.real[0] @[calc8x8.scala 168:29]
          A[0].weight.real[1] <= conv_weight.real[1] @[calc8x8.scala 168:29]
          A[0].weight.real[2] <= conv_weight.real[2] @[calc8x8.scala 168:29]
          A[0].weight.real[3] <= conv_weight.real[3] @[calc8x8.scala 168:29]
          A[0].weight.real[4] <= conv_weight.real[4] @[calc8x8.scala 168:29]
          A[0].weight.real[5] <= conv_weight.real[5] @[calc8x8.scala 168:29]
          A[0].weight.real[6] <= conv_weight.real[6] @[calc8x8.scala 168:29]
          A[0].weight.real[7] <= conv_weight.real[7] @[calc8x8.scala 168:29]
          A[0].weight.real[8] <= conv_weight.real[8] @[calc8x8.scala 168:29]
          A[0].weight.real[9] <= conv_weight.real[9] @[calc8x8.scala 168:29]
          A[0].weight.real[10] <= conv_weight.real[10] @[calc8x8.scala 168:29]
          A[0].weight.real[11] <= conv_weight.real[11] @[calc8x8.scala 168:29]
          A[0].weight.real[12] <= conv_weight.real[12] @[calc8x8.scala 168:29]
          A[0].weight.real[13] <= conv_weight.real[13] @[calc8x8.scala 168:29]
          A[0].weight.real[14] <= conv_weight.real[14] @[calc8x8.scala 168:29]
          A[0].weight.real[15] <= conv_weight.real[15] @[calc8x8.scala 168:29]
          A[0].flag <= UInt<2>("h02") @[calc8x8.scala 169:27]
          A[0].valid_in <= io.valid_in @[calc8x8.scala 170:31]
          A[1].weight.comp3[0] <= conv_weight.comp3[0] @[calc8x8.scala 168:29]
          A[1].weight.comp3[1] <= conv_weight.comp3[1] @[calc8x8.scala 168:29]
          A[1].weight.comp3[2] <= conv_weight.comp3[2] @[calc8x8.scala 168:29]
          A[1].weight.comp3[3] <= conv_weight.comp3[3] @[calc8x8.scala 168:29]
          A[1].weight.comp3[4] <= conv_weight.comp3[4] @[calc8x8.scala 168:29]
          A[1].weight.comp3[5] <= conv_weight.comp3[5] @[calc8x8.scala 168:29]
          A[1].weight.comp3[6] <= conv_weight.comp3[6] @[calc8x8.scala 168:29]
          A[1].weight.comp3[7] <= conv_weight.comp3[7] @[calc8x8.scala 168:29]
          A[1].weight.comp3[8] <= conv_weight.comp3[8] @[calc8x8.scala 168:29]
          A[1].weight.comp3[9] <= conv_weight.comp3[9] @[calc8x8.scala 168:29]
          A[1].weight.comp2[0] <= conv_weight.comp2[0] @[calc8x8.scala 168:29]
          A[1].weight.comp2[1] <= conv_weight.comp2[1] @[calc8x8.scala 168:29]
          A[1].weight.comp2[2] <= conv_weight.comp2[2] @[calc8x8.scala 168:29]
          A[1].weight.comp2[3] <= conv_weight.comp2[3] @[calc8x8.scala 168:29]
          A[1].weight.comp2[4] <= conv_weight.comp2[4] @[calc8x8.scala 168:29]
          A[1].weight.comp2[5] <= conv_weight.comp2[5] @[calc8x8.scala 168:29]
          A[1].weight.comp2[6] <= conv_weight.comp2[6] @[calc8x8.scala 168:29]
          A[1].weight.comp2[7] <= conv_weight.comp2[7] @[calc8x8.scala 168:29]
          A[1].weight.comp2[8] <= conv_weight.comp2[8] @[calc8x8.scala 168:29]
          A[1].weight.comp2[9] <= conv_weight.comp2[9] @[calc8x8.scala 168:29]
          A[1].weight.comp1[0] <= conv_weight.comp1[0] @[calc8x8.scala 168:29]
          A[1].weight.comp1[1] <= conv_weight.comp1[1] @[calc8x8.scala 168:29]
          A[1].weight.comp1[2] <= conv_weight.comp1[2] @[calc8x8.scala 168:29]
          A[1].weight.comp1[3] <= conv_weight.comp1[3] @[calc8x8.scala 168:29]
          A[1].weight.comp1[4] <= conv_weight.comp1[4] @[calc8x8.scala 168:29]
          A[1].weight.comp1[5] <= conv_weight.comp1[5] @[calc8x8.scala 168:29]
          A[1].weight.comp1[6] <= conv_weight.comp1[6] @[calc8x8.scala 168:29]
          A[1].weight.comp1[7] <= conv_weight.comp1[7] @[calc8x8.scala 168:29]
          A[1].weight.comp1[8] <= conv_weight.comp1[8] @[calc8x8.scala 168:29]
          A[1].weight.comp1[9] <= conv_weight.comp1[9] @[calc8x8.scala 168:29]
          A[1].weight.real[0] <= conv_weight.real[0] @[calc8x8.scala 168:29]
          A[1].weight.real[1] <= conv_weight.real[1] @[calc8x8.scala 168:29]
          A[1].weight.real[2] <= conv_weight.real[2] @[calc8x8.scala 168:29]
          A[1].weight.real[3] <= conv_weight.real[3] @[calc8x8.scala 168:29]
          A[1].weight.real[4] <= conv_weight.real[4] @[calc8x8.scala 168:29]
          A[1].weight.real[5] <= conv_weight.real[5] @[calc8x8.scala 168:29]
          A[1].weight.real[6] <= conv_weight.real[6] @[calc8x8.scala 168:29]
          A[1].weight.real[7] <= conv_weight.real[7] @[calc8x8.scala 168:29]
          A[1].weight.real[8] <= conv_weight.real[8] @[calc8x8.scala 168:29]
          A[1].weight.real[9] <= conv_weight.real[9] @[calc8x8.scala 168:29]
          A[1].weight.real[10] <= conv_weight.real[10] @[calc8x8.scala 168:29]
          A[1].weight.real[11] <= conv_weight.real[11] @[calc8x8.scala 168:29]
          A[1].weight.real[12] <= conv_weight.real[12] @[calc8x8.scala 168:29]
          A[1].weight.real[13] <= conv_weight.real[13] @[calc8x8.scala 168:29]
          A[1].weight.real[14] <= conv_weight.real[14] @[calc8x8.scala 168:29]
          A[1].weight.real[15] <= conv_weight.real[15] @[calc8x8.scala 168:29]
          A[1].flag <= UInt<2>("h02") @[calc8x8.scala 169:27]
          A[1].valid_in <= io.valid_in @[calc8x8.scala 170:31]
          A[2].weight.comp3[0] <= conv_weight.comp3[0] @[calc8x8.scala 168:29]
          A[2].weight.comp3[1] <= conv_weight.comp3[1] @[calc8x8.scala 168:29]
          A[2].weight.comp3[2] <= conv_weight.comp3[2] @[calc8x8.scala 168:29]
          A[2].weight.comp3[3] <= conv_weight.comp3[3] @[calc8x8.scala 168:29]
          A[2].weight.comp3[4] <= conv_weight.comp3[4] @[calc8x8.scala 168:29]
          A[2].weight.comp3[5] <= conv_weight.comp3[5] @[calc8x8.scala 168:29]
          A[2].weight.comp3[6] <= conv_weight.comp3[6] @[calc8x8.scala 168:29]
          A[2].weight.comp3[7] <= conv_weight.comp3[7] @[calc8x8.scala 168:29]
          A[2].weight.comp3[8] <= conv_weight.comp3[8] @[calc8x8.scala 168:29]
          A[2].weight.comp3[9] <= conv_weight.comp3[9] @[calc8x8.scala 168:29]
          A[2].weight.comp2[0] <= conv_weight.comp2[0] @[calc8x8.scala 168:29]
          A[2].weight.comp2[1] <= conv_weight.comp2[1] @[calc8x8.scala 168:29]
          A[2].weight.comp2[2] <= conv_weight.comp2[2] @[calc8x8.scala 168:29]
          A[2].weight.comp2[3] <= conv_weight.comp2[3] @[calc8x8.scala 168:29]
          A[2].weight.comp2[4] <= conv_weight.comp2[4] @[calc8x8.scala 168:29]
          A[2].weight.comp2[5] <= conv_weight.comp2[5] @[calc8x8.scala 168:29]
          A[2].weight.comp2[6] <= conv_weight.comp2[6] @[calc8x8.scala 168:29]
          A[2].weight.comp2[7] <= conv_weight.comp2[7] @[calc8x8.scala 168:29]
          A[2].weight.comp2[8] <= conv_weight.comp2[8] @[calc8x8.scala 168:29]
          A[2].weight.comp2[9] <= conv_weight.comp2[9] @[calc8x8.scala 168:29]
          A[2].weight.comp1[0] <= conv_weight.comp1[0] @[calc8x8.scala 168:29]
          A[2].weight.comp1[1] <= conv_weight.comp1[1] @[calc8x8.scala 168:29]
          A[2].weight.comp1[2] <= conv_weight.comp1[2] @[calc8x8.scala 168:29]
          A[2].weight.comp1[3] <= conv_weight.comp1[3] @[calc8x8.scala 168:29]
          A[2].weight.comp1[4] <= conv_weight.comp1[4] @[calc8x8.scala 168:29]
          A[2].weight.comp1[5] <= conv_weight.comp1[5] @[calc8x8.scala 168:29]
          A[2].weight.comp1[6] <= conv_weight.comp1[6] @[calc8x8.scala 168:29]
          A[2].weight.comp1[7] <= conv_weight.comp1[7] @[calc8x8.scala 168:29]
          A[2].weight.comp1[8] <= conv_weight.comp1[8] @[calc8x8.scala 168:29]
          A[2].weight.comp1[9] <= conv_weight.comp1[9] @[calc8x8.scala 168:29]
          A[2].weight.real[0] <= conv_weight.real[0] @[calc8x8.scala 168:29]
          A[2].weight.real[1] <= conv_weight.real[1] @[calc8x8.scala 168:29]
          A[2].weight.real[2] <= conv_weight.real[2] @[calc8x8.scala 168:29]
          A[2].weight.real[3] <= conv_weight.real[3] @[calc8x8.scala 168:29]
          A[2].weight.real[4] <= conv_weight.real[4] @[calc8x8.scala 168:29]
          A[2].weight.real[5] <= conv_weight.real[5] @[calc8x8.scala 168:29]
          A[2].weight.real[6] <= conv_weight.real[6] @[calc8x8.scala 168:29]
          A[2].weight.real[7] <= conv_weight.real[7] @[calc8x8.scala 168:29]
          A[2].weight.real[8] <= conv_weight.real[8] @[calc8x8.scala 168:29]
          A[2].weight.real[9] <= conv_weight.real[9] @[calc8x8.scala 168:29]
          A[2].weight.real[10] <= conv_weight.real[10] @[calc8x8.scala 168:29]
          A[2].weight.real[11] <= conv_weight.real[11] @[calc8x8.scala 168:29]
          A[2].weight.real[12] <= conv_weight.real[12] @[calc8x8.scala 168:29]
          A[2].weight.real[13] <= conv_weight.real[13] @[calc8x8.scala 168:29]
          A[2].weight.real[14] <= conv_weight.real[14] @[calc8x8.scala 168:29]
          A[2].weight.real[15] <= conv_weight.real[15] @[calc8x8.scala 168:29]
          A[2].flag <= UInt<2>("h02") @[calc8x8.scala 169:27]
          A[2].valid_in <= io.valid_in @[calc8x8.scala 170:31]
          A[3].weight.comp3[0] <= conv_weight.comp3[0] @[calc8x8.scala 168:29]
          A[3].weight.comp3[1] <= conv_weight.comp3[1] @[calc8x8.scala 168:29]
          A[3].weight.comp3[2] <= conv_weight.comp3[2] @[calc8x8.scala 168:29]
          A[3].weight.comp3[3] <= conv_weight.comp3[3] @[calc8x8.scala 168:29]
          A[3].weight.comp3[4] <= conv_weight.comp3[4] @[calc8x8.scala 168:29]
          A[3].weight.comp3[5] <= conv_weight.comp3[5] @[calc8x8.scala 168:29]
          A[3].weight.comp3[6] <= conv_weight.comp3[6] @[calc8x8.scala 168:29]
          A[3].weight.comp3[7] <= conv_weight.comp3[7] @[calc8x8.scala 168:29]
          A[3].weight.comp3[8] <= conv_weight.comp3[8] @[calc8x8.scala 168:29]
          A[3].weight.comp3[9] <= conv_weight.comp3[9] @[calc8x8.scala 168:29]
          A[3].weight.comp2[0] <= conv_weight.comp2[0] @[calc8x8.scala 168:29]
          A[3].weight.comp2[1] <= conv_weight.comp2[1] @[calc8x8.scala 168:29]
          A[3].weight.comp2[2] <= conv_weight.comp2[2] @[calc8x8.scala 168:29]
          A[3].weight.comp2[3] <= conv_weight.comp2[3] @[calc8x8.scala 168:29]
          A[3].weight.comp2[4] <= conv_weight.comp2[4] @[calc8x8.scala 168:29]
          A[3].weight.comp2[5] <= conv_weight.comp2[5] @[calc8x8.scala 168:29]
          A[3].weight.comp2[6] <= conv_weight.comp2[6] @[calc8x8.scala 168:29]
          A[3].weight.comp2[7] <= conv_weight.comp2[7] @[calc8x8.scala 168:29]
          A[3].weight.comp2[8] <= conv_weight.comp2[8] @[calc8x8.scala 168:29]
          A[3].weight.comp2[9] <= conv_weight.comp2[9] @[calc8x8.scala 168:29]
          A[3].weight.comp1[0] <= conv_weight.comp1[0] @[calc8x8.scala 168:29]
          A[3].weight.comp1[1] <= conv_weight.comp1[1] @[calc8x8.scala 168:29]
          A[3].weight.comp1[2] <= conv_weight.comp1[2] @[calc8x8.scala 168:29]
          A[3].weight.comp1[3] <= conv_weight.comp1[3] @[calc8x8.scala 168:29]
          A[3].weight.comp1[4] <= conv_weight.comp1[4] @[calc8x8.scala 168:29]
          A[3].weight.comp1[5] <= conv_weight.comp1[5] @[calc8x8.scala 168:29]
          A[3].weight.comp1[6] <= conv_weight.comp1[6] @[calc8x8.scala 168:29]
          A[3].weight.comp1[7] <= conv_weight.comp1[7] @[calc8x8.scala 168:29]
          A[3].weight.comp1[8] <= conv_weight.comp1[8] @[calc8x8.scala 168:29]
          A[3].weight.comp1[9] <= conv_weight.comp1[9] @[calc8x8.scala 168:29]
          A[3].weight.real[0] <= conv_weight.real[0] @[calc8x8.scala 168:29]
          A[3].weight.real[1] <= conv_weight.real[1] @[calc8x8.scala 168:29]
          A[3].weight.real[2] <= conv_weight.real[2] @[calc8x8.scala 168:29]
          A[3].weight.real[3] <= conv_weight.real[3] @[calc8x8.scala 168:29]
          A[3].weight.real[4] <= conv_weight.real[4] @[calc8x8.scala 168:29]
          A[3].weight.real[5] <= conv_weight.real[5] @[calc8x8.scala 168:29]
          A[3].weight.real[6] <= conv_weight.real[6] @[calc8x8.scala 168:29]
          A[3].weight.real[7] <= conv_weight.real[7] @[calc8x8.scala 168:29]
          A[3].weight.real[8] <= conv_weight.real[8] @[calc8x8.scala 168:29]
          A[3].weight.real[9] <= conv_weight.real[9] @[calc8x8.scala 168:29]
          A[3].weight.real[10] <= conv_weight.real[10] @[calc8x8.scala 168:29]
          A[3].weight.real[11] <= conv_weight.real[11] @[calc8x8.scala 168:29]
          A[3].weight.real[12] <= conv_weight.real[12] @[calc8x8.scala 168:29]
          A[3].weight.real[13] <= conv_weight.real[13] @[calc8x8.scala 168:29]
          A[3].weight.real[14] <= conv_weight.real[14] @[calc8x8.scala 168:29]
          A[3].weight.real[15] <= conv_weight.real[15] @[calc8x8.scala 168:29]
          A[3].flag <= UInt<2>("h02") @[calc8x8.scala 169:27]
          A[3].valid_in <= io.valid_in @[calc8x8.scala 170:31]
          wire io_output_ret_2 : {mat : SInt<37>[64]} @[calc8x8.scala 44:23]
          io_output_ret_2.mat[0] <= A[0].output.mat[0] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[1] <= A[0].output.mat[1] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[2] <= A[0].output.mat[2] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[3] <= A[0].output.mat[3] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[8] <= A[0].output.mat[4] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[9] <= A[0].output.mat[5] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[10] <= A[0].output.mat[6] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[11] <= A[0].output.mat[7] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[16] <= A[0].output.mat[8] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[17] <= A[0].output.mat[9] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[18] <= A[0].output.mat[10] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[19] <= A[0].output.mat[11] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[24] <= A[0].output.mat[12] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[25] <= A[0].output.mat[13] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[26] <= A[0].output.mat[14] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[27] <= A[0].output.mat[15] @[calc8x8.scala 47:32]
          io_output_ret_2.mat[4] <= A[1].output.mat[0] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[5] <= A[1].output.mat[1] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[6] <= A[1].output.mat[2] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[7] <= A[1].output.mat[3] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[12] <= A[1].output.mat[4] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[13] <= A[1].output.mat[5] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[14] <= A[1].output.mat[6] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[15] <= A[1].output.mat[7] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[20] <= A[1].output.mat[8] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[21] <= A[1].output.mat[9] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[22] <= A[1].output.mat[10] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[23] <= A[1].output.mat[11] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[28] <= A[1].output.mat[12] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[29] <= A[1].output.mat[13] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[30] <= A[1].output.mat[14] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[31] <= A[1].output.mat[15] @[calc8x8.scala 50:32]
          io_output_ret_2.mat[32] <= A[2].output.mat[0] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[33] <= A[2].output.mat[1] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[34] <= A[2].output.mat[2] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[35] <= A[2].output.mat[3] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[40] <= A[2].output.mat[4] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[41] <= A[2].output.mat[5] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[42] <= A[2].output.mat[6] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[43] <= A[2].output.mat[7] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[48] <= A[2].output.mat[8] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[49] <= A[2].output.mat[9] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[50] <= A[2].output.mat[10] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[51] <= A[2].output.mat[11] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[56] <= A[2].output.mat[12] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[57] <= A[2].output.mat[13] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[58] <= A[2].output.mat[14] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[59] <= A[2].output.mat[15] @[calc8x8.scala 53:32]
          io_output_ret_2.mat[36] <= A[3].output.mat[0] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[37] <= A[3].output.mat[1] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[38] <= A[3].output.mat[2] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[39] <= A[3].output.mat[3] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[44] <= A[3].output.mat[4] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[45] <= A[3].output.mat[5] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[46] <= A[3].output.mat[6] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[47] <= A[3].output.mat[7] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[52] <= A[3].output.mat[8] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[53] <= A[3].output.mat[9] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[54] <= A[3].output.mat[10] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[55] <= A[3].output.mat[11] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[60] <= A[3].output.mat[12] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[61] <= A[3].output.mat[13] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[62] <= A[3].output.mat[14] @[calc8x8.scala 56:32]
          io_output_ret_2.mat[63] <= A[3].output.mat[15] @[calc8x8.scala 56:32]
          io.output.mat[0] <= io_output_ret_2.mat[0] @[calc8x8.scala 172:23]
          io.output.mat[1] <= io_output_ret_2.mat[1] @[calc8x8.scala 172:23]
          io.output.mat[2] <= io_output_ret_2.mat[2] @[calc8x8.scala 172:23]
          io.output.mat[3] <= io_output_ret_2.mat[3] @[calc8x8.scala 172:23]
          io.output.mat[4] <= io_output_ret_2.mat[4] @[calc8x8.scala 172:23]
          io.output.mat[5] <= io_output_ret_2.mat[5] @[calc8x8.scala 172:23]
          io.output.mat[6] <= io_output_ret_2.mat[6] @[calc8x8.scala 172:23]
          io.output.mat[7] <= io_output_ret_2.mat[7] @[calc8x8.scala 172:23]
          io.output.mat[8] <= io_output_ret_2.mat[8] @[calc8x8.scala 172:23]
          io.output.mat[9] <= io_output_ret_2.mat[9] @[calc8x8.scala 172:23]
          io.output.mat[10] <= io_output_ret_2.mat[10] @[calc8x8.scala 172:23]
          io.output.mat[11] <= io_output_ret_2.mat[11] @[calc8x8.scala 172:23]
          io.output.mat[12] <= io_output_ret_2.mat[12] @[calc8x8.scala 172:23]
          io.output.mat[13] <= io_output_ret_2.mat[13] @[calc8x8.scala 172:23]
          io.output.mat[14] <= io_output_ret_2.mat[14] @[calc8x8.scala 172:23]
          io.output.mat[15] <= io_output_ret_2.mat[15] @[calc8x8.scala 172:23]
          io.output.mat[16] <= io_output_ret_2.mat[16] @[calc8x8.scala 172:23]
          io.output.mat[17] <= io_output_ret_2.mat[17] @[calc8x8.scala 172:23]
          io.output.mat[18] <= io_output_ret_2.mat[18] @[calc8x8.scala 172:23]
          io.output.mat[19] <= io_output_ret_2.mat[19] @[calc8x8.scala 172:23]
          io.output.mat[20] <= io_output_ret_2.mat[20] @[calc8x8.scala 172:23]
          io.output.mat[21] <= io_output_ret_2.mat[21] @[calc8x8.scala 172:23]
          io.output.mat[22] <= io_output_ret_2.mat[22] @[calc8x8.scala 172:23]
          io.output.mat[23] <= io_output_ret_2.mat[23] @[calc8x8.scala 172:23]
          io.output.mat[24] <= io_output_ret_2.mat[24] @[calc8x8.scala 172:23]
          io.output.mat[25] <= io_output_ret_2.mat[25] @[calc8x8.scala 172:23]
          io.output.mat[26] <= io_output_ret_2.mat[26] @[calc8x8.scala 172:23]
          io.output.mat[27] <= io_output_ret_2.mat[27] @[calc8x8.scala 172:23]
          io.output.mat[28] <= io_output_ret_2.mat[28] @[calc8x8.scala 172:23]
          io.output.mat[29] <= io_output_ret_2.mat[29] @[calc8x8.scala 172:23]
          io.output.mat[30] <= io_output_ret_2.mat[30] @[calc8x8.scala 172:23]
          io.output.mat[31] <= io_output_ret_2.mat[31] @[calc8x8.scala 172:23]
          io.output.mat[32] <= io_output_ret_2.mat[32] @[calc8x8.scala 172:23]
          io.output.mat[33] <= io_output_ret_2.mat[33] @[calc8x8.scala 172:23]
          io.output.mat[34] <= io_output_ret_2.mat[34] @[calc8x8.scala 172:23]
          io.output.mat[35] <= io_output_ret_2.mat[35] @[calc8x8.scala 172:23]
          io.output.mat[36] <= io_output_ret_2.mat[36] @[calc8x8.scala 172:23]
          io.output.mat[37] <= io_output_ret_2.mat[37] @[calc8x8.scala 172:23]
          io.output.mat[38] <= io_output_ret_2.mat[38] @[calc8x8.scala 172:23]
          io.output.mat[39] <= io_output_ret_2.mat[39] @[calc8x8.scala 172:23]
          io.output.mat[40] <= io_output_ret_2.mat[40] @[calc8x8.scala 172:23]
          io.output.mat[41] <= io_output_ret_2.mat[41] @[calc8x8.scala 172:23]
          io.output.mat[42] <= io_output_ret_2.mat[42] @[calc8x8.scala 172:23]
          io.output.mat[43] <= io_output_ret_2.mat[43] @[calc8x8.scala 172:23]
          io.output.mat[44] <= io_output_ret_2.mat[44] @[calc8x8.scala 172:23]
          io.output.mat[45] <= io_output_ret_2.mat[45] @[calc8x8.scala 172:23]
          io.output.mat[46] <= io_output_ret_2.mat[46] @[calc8x8.scala 172:23]
          io.output.mat[47] <= io_output_ret_2.mat[47] @[calc8x8.scala 172:23]
          io.output.mat[48] <= io_output_ret_2.mat[48] @[calc8x8.scala 172:23]
          io.output.mat[49] <= io_output_ret_2.mat[49] @[calc8x8.scala 172:23]
          io.output.mat[50] <= io_output_ret_2.mat[50] @[calc8x8.scala 172:23]
          io.output.mat[51] <= io_output_ret_2.mat[51] @[calc8x8.scala 172:23]
          io.output.mat[52] <= io_output_ret_2.mat[52] @[calc8x8.scala 172:23]
          io.output.mat[53] <= io_output_ret_2.mat[53] @[calc8x8.scala 172:23]
          io.output.mat[54] <= io_output_ret_2.mat[54] @[calc8x8.scala 172:23]
          io.output.mat[55] <= io_output_ret_2.mat[55] @[calc8x8.scala 172:23]
          io.output.mat[56] <= io_output_ret_2.mat[56] @[calc8x8.scala 172:23]
          io.output.mat[57] <= io_output_ret_2.mat[57] @[calc8x8.scala 172:23]
          io.output.mat[58] <= io_output_ret_2.mat[58] @[calc8x8.scala 172:23]
          io.output.mat[59] <= io_output_ret_2.mat[59] @[calc8x8.scala 172:23]
          io.output.mat[60] <= io_output_ret_2.mat[60] @[calc8x8.scala 172:23]
          io.output.mat[61] <= io_output_ret_2.mat[61] @[calc8x8.scala 172:23]
          io.output.mat[62] <= io_output_ret_2.mat[62] @[calc8x8.scala 172:23]
          io.output.mat[63] <= io_output_ret_2.mat[63] @[calc8x8.scala 172:23]
          io.valid_out <= A[0].valid_out @[calc8x8.scala 173:26]
          skip @[Conditional.scala 39:67]
    
  module Accumu : 
    input clock : Clock
    input reset : Reset
    output io : {flip valid_in : UInt<1>, valid_out : UInt<1>, flip flag_job : UInt<1>, flip in_from_calc8x8 : {mat : SInt<37>[64]}, result : {mat : SInt<44>[64]}, flip csum : UInt<10>, flip bias_begin_addr : UInt<10>, flip bias_end_addr : UInt<10>, bias_addr : UInt<10>, flip bias_in : SInt<36>, flip is_in_use : UInt<1>}
    
    wire _counter_WIRE : {ccnt : UInt<10>, cend : UInt<10>} @[accumu.scala 27:39]
    _counter_WIRE.cend <= UInt<10>("h00") @[accumu.scala 27:39]
    _counter_WIRE.ccnt <= UInt<10>("h00") @[accumu.scala 27:39]
    reg counter : {ccnt : UInt<10>, cend : UInt<10>}, clock with : (reset => (reset, _counter_WIRE)) @[accumu.scala 27:26]
    wire _output_WIRE : {mat : SInt<44>[64]} @[accumu.scala 28:38]
    node _output_T = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[0] <= _output_T @[accumu.scala 28:38]
    node _output_T_1 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[1] <= _output_T_1 @[accumu.scala 28:38]
    node _output_T_2 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[2] <= _output_T_2 @[accumu.scala 28:38]
    node _output_T_3 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[3] <= _output_T_3 @[accumu.scala 28:38]
    node _output_T_4 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[4] <= _output_T_4 @[accumu.scala 28:38]
    node _output_T_5 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[5] <= _output_T_5 @[accumu.scala 28:38]
    node _output_T_6 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[6] <= _output_T_6 @[accumu.scala 28:38]
    node _output_T_7 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[7] <= _output_T_7 @[accumu.scala 28:38]
    node _output_T_8 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[8] <= _output_T_8 @[accumu.scala 28:38]
    node _output_T_9 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[9] <= _output_T_9 @[accumu.scala 28:38]
    node _output_T_10 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[10] <= _output_T_10 @[accumu.scala 28:38]
    node _output_T_11 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[11] <= _output_T_11 @[accumu.scala 28:38]
    node _output_T_12 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[12] <= _output_T_12 @[accumu.scala 28:38]
    node _output_T_13 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[13] <= _output_T_13 @[accumu.scala 28:38]
    node _output_T_14 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[14] <= _output_T_14 @[accumu.scala 28:38]
    node _output_T_15 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[15] <= _output_T_15 @[accumu.scala 28:38]
    node _output_T_16 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[16] <= _output_T_16 @[accumu.scala 28:38]
    node _output_T_17 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[17] <= _output_T_17 @[accumu.scala 28:38]
    node _output_T_18 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[18] <= _output_T_18 @[accumu.scala 28:38]
    node _output_T_19 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[19] <= _output_T_19 @[accumu.scala 28:38]
    node _output_T_20 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[20] <= _output_T_20 @[accumu.scala 28:38]
    node _output_T_21 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[21] <= _output_T_21 @[accumu.scala 28:38]
    node _output_T_22 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[22] <= _output_T_22 @[accumu.scala 28:38]
    node _output_T_23 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[23] <= _output_T_23 @[accumu.scala 28:38]
    node _output_T_24 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[24] <= _output_T_24 @[accumu.scala 28:38]
    node _output_T_25 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[25] <= _output_T_25 @[accumu.scala 28:38]
    node _output_T_26 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[26] <= _output_T_26 @[accumu.scala 28:38]
    node _output_T_27 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[27] <= _output_T_27 @[accumu.scala 28:38]
    node _output_T_28 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[28] <= _output_T_28 @[accumu.scala 28:38]
    node _output_T_29 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[29] <= _output_T_29 @[accumu.scala 28:38]
    node _output_T_30 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[30] <= _output_T_30 @[accumu.scala 28:38]
    node _output_T_31 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[31] <= _output_T_31 @[accumu.scala 28:38]
    node _output_T_32 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[32] <= _output_T_32 @[accumu.scala 28:38]
    node _output_T_33 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[33] <= _output_T_33 @[accumu.scala 28:38]
    node _output_T_34 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[34] <= _output_T_34 @[accumu.scala 28:38]
    node _output_T_35 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[35] <= _output_T_35 @[accumu.scala 28:38]
    node _output_T_36 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[36] <= _output_T_36 @[accumu.scala 28:38]
    node _output_T_37 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[37] <= _output_T_37 @[accumu.scala 28:38]
    node _output_T_38 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[38] <= _output_T_38 @[accumu.scala 28:38]
    node _output_T_39 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[39] <= _output_T_39 @[accumu.scala 28:38]
    node _output_T_40 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[40] <= _output_T_40 @[accumu.scala 28:38]
    node _output_T_41 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[41] <= _output_T_41 @[accumu.scala 28:38]
    node _output_T_42 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[42] <= _output_T_42 @[accumu.scala 28:38]
    node _output_T_43 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[43] <= _output_T_43 @[accumu.scala 28:38]
    node _output_T_44 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[44] <= _output_T_44 @[accumu.scala 28:38]
    node _output_T_45 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[45] <= _output_T_45 @[accumu.scala 28:38]
    node _output_T_46 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[46] <= _output_T_46 @[accumu.scala 28:38]
    node _output_T_47 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[47] <= _output_T_47 @[accumu.scala 28:38]
    node _output_T_48 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[48] <= _output_T_48 @[accumu.scala 28:38]
    node _output_T_49 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[49] <= _output_T_49 @[accumu.scala 28:38]
    node _output_T_50 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[50] <= _output_T_50 @[accumu.scala 28:38]
    node _output_T_51 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[51] <= _output_T_51 @[accumu.scala 28:38]
    node _output_T_52 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[52] <= _output_T_52 @[accumu.scala 28:38]
    node _output_T_53 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[53] <= _output_T_53 @[accumu.scala 28:38]
    node _output_T_54 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[54] <= _output_T_54 @[accumu.scala 28:38]
    node _output_T_55 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[55] <= _output_T_55 @[accumu.scala 28:38]
    node _output_T_56 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[56] <= _output_T_56 @[accumu.scala 28:38]
    node _output_T_57 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[57] <= _output_T_57 @[accumu.scala 28:38]
    node _output_T_58 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[58] <= _output_T_58 @[accumu.scala 28:38]
    node _output_T_59 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[59] <= _output_T_59 @[accumu.scala 28:38]
    node _output_T_60 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[60] <= _output_T_60 @[accumu.scala 28:38]
    node _output_T_61 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[61] <= _output_T_61 @[accumu.scala 28:38]
    node _output_T_62 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[62] <= _output_T_62 @[accumu.scala 28:38]
    node _output_T_63 = asSInt(UInt<44>("h00")) @[accumu.scala 28:38]
    _output_WIRE.mat[63] <= _output_T_63 @[accumu.scala 28:38]
    reg output : {mat : SInt<44>[64]}, clock with : (reset => (reset, _output_WIRE)) @[accumu.scala 28:25]
    wire _now_addr_WIRE : {ccnt : UInt<10>, cend : UInt<10>} @[accumu.scala 29:40]
    _now_addr_WIRE.cend <= UInt<10>("h00") @[accumu.scala 29:40]
    _now_addr_WIRE.ccnt <= UInt<10>("h00") @[accumu.scala 29:40]
    reg now_addr : {ccnt : UInt<10>, cend : UInt<10>}, clock with : (reset => (reset, _now_addr_WIRE)) @[accumu.scala 29:27]
    reg enable : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[accumu.scala 30:25]
    wire _io_result_WIRE : {mat : SInt<44>[64]} @[accumu.scala 32:30]
    node _io_result_T = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[0] <= _io_result_T @[accumu.scala 32:30]
    node _io_result_T_1 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[1] <= _io_result_T_1 @[accumu.scala 32:30]
    node _io_result_T_2 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[2] <= _io_result_T_2 @[accumu.scala 32:30]
    node _io_result_T_3 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[3] <= _io_result_T_3 @[accumu.scala 32:30]
    node _io_result_T_4 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[4] <= _io_result_T_4 @[accumu.scala 32:30]
    node _io_result_T_5 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[5] <= _io_result_T_5 @[accumu.scala 32:30]
    node _io_result_T_6 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[6] <= _io_result_T_6 @[accumu.scala 32:30]
    node _io_result_T_7 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[7] <= _io_result_T_7 @[accumu.scala 32:30]
    node _io_result_T_8 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[8] <= _io_result_T_8 @[accumu.scala 32:30]
    node _io_result_T_9 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[9] <= _io_result_T_9 @[accumu.scala 32:30]
    node _io_result_T_10 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[10] <= _io_result_T_10 @[accumu.scala 32:30]
    node _io_result_T_11 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[11] <= _io_result_T_11 @[accumu.scala 32:30]
    node _io_result_T_12 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[12] <= _io_result_T_12 @[accumu.scala 32:30]
    node _io_result_T_13 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[13] <= _io_result_T_13 @[accumu.scala 32:30]
    node _io_result_T_14 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[14] <= _io_result_T_14 @[accumu.scala 32:30]
    node _io_result_T_15 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[15] <= _io_result_T_15 @[accumu.scala 32:30]
    node _io_result_T_16 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[16] <= _io_result_T_16 @[accumu.scala 32:30]
    node _io_result_T_17 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[17] <= _io_result_T_17 @[accumu.scala 32:30]
    node _io_result_T_18 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[18] <= _io_result_T_18 @[accumu.scala 32:30]
    node _io_result_T_19 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[19] <= _io_result_T_19 @[accumu.scala 32:30]
    node _io_result_T_20 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[20] <= _io_result_T_20 @[accumu.scala 32:30]
    node _io_result_T_21 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[21] <= _io_result_T_21 @[accumu.scala 32:30]
    node _io_result_T_22 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[22] <= _io_result_T_22 @[accumu.scala 32:30]
    node _io_result_T_23 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[23] <= _io_result_T_23 @[accumu.scala 32:30]
    node _io_result_T_24 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[24] <= _io_result_T_24 @[accumu.scala 32:30]
    node _io_result_T_25 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[25] <= _io_result_T_25 @[accumu.scala 32:30]
    node _io_result_T_26 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[26] <= _io_result_T_26 @[accumu.scala 32:30]
    node _io_result_T_27 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[27] <= _io_result_T_27 @[accumu.scala 32:30]
    node _io_result_T_28 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[28] <= _io_result_T_28 @[accumu.scala 32:30]
    node _io_result_T_29 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[29] <= _io_result_T_29 @[accumu.scala 32:30]
    node _io_result_T_30 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[30] <= _io_result_T_30 @[accumu.scala 32:30]
    node _io_result_T_31 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[31] <= _io_result_T_31 @[accumu.scala 32:30]
    node _io_result_T_32 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[32] <= _io_result_T_32 @[accumu.scala 32:30]
    node _io_result_T_33 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[33] <= _io_result_T_33 @[accumu.scala 32:30]
    node _io_result_T_34 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[34] <= _io_result_T_34 @[accumu.scala 32:30]
    node _io_result_T_35 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[35] <= _io_result_T_35 @[accumu.scala 32:30]
    node _io_result_T_36 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[36] <= _io_result_T_36 @[accumu.scala 32:30]
    node _io_result_T_37 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[37] <= _io_result_T_37 @[accumu.scala 32:30]
    node _io_result_T_38 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[38] <= _io_result_T_38 @[accumu.scala 32:30]
    node _io_result_T_39 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[39] <= _io_result_T_39 @[accumu.scala 32:30]
    node _io_result_T_40 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[40] <= _io_result_T_40 @[accumu.scala 32:30]
    node _io_result_T_41 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[41] <= _io_result_T_41 @[accumu.scala 32:30]
    node _io_result_T_42 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[42] <= _io_result_T_42 @[accumu.scala 32:30]
    node _io_result_T_43 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[43] <= _io_result_T_43 @[accumu.scala 32:30]
    node _io_result_T_44 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[44] <= _io_result_T_44 @[accumu.scala 32:30]
    node _io_result_T_45 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[45] <= _io_result_T_45 @[accumu.scala 32:30]
    node _io_result_T_46 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[46] <= _io_result_T_46 @[accumu.scala 32:30]
    node _io_result_T_47 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[47] <= _io_result_T_47 @[accumu.scala 32:30]
    node _io_result_T_48 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[48] <= _io_result_T_48 @[accumu.scala 32:30]
    node _io_result_T_49 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[49] <= _io_result_T_49 @[accumu.scala 32:30]
    node _io_result_T_50 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[50] <= _io_result_T_50 @[accumu.scala 32:30]
    node _io_result_T_51 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[51] <= _io_result_T_51 @[accumu.scala 32:30]
    node _io_result_T_52 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[52] <= _io_result_T_52 @[accumu.scala 32:30]
    node _io_result_T_53 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[53] <= _io_result_T_53 @[accumu.scala 32:30]
    node _io_result_T_54 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[54] <= _io_result_T_54 @[accumu.scala 32:30]
    node _io_result_T_55 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[55] <= _io_result_T_55 @[accumu.scala 32:30]
    node _io_result_T_56 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[56] <= _io_result_T_56 @[accumu.scala 32:30]
    node _io_result_T_57 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[57] <= _io_result_T_57 @[accumu.scala 32:30]
    node _io_result_T_58 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[58] <= _io_result_T_58 @[accumu.scala 32:30]
    node _io_result_T_59 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[59] <= _io_result_T_59 @[accumu.scala 32:30]
    node _io_result_T_60 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[60] <= _io_result_T_60 @[accumu.scala 32:30]
    node _io_result_T_61 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[61] <= _io_result_T_61 @[accumu.scala 32:30]
    node _io_result_T_62 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[62] <= _io_result_T_62 @[accumu.scala 32:30]
    node _io_result_T_63 = asSInt(UInt<44>("h00")) @[accumu.scala 32:30]
    _io_result_WIRE.mat[63] <= _io_result_T_63 @[accumu.scala 32:30]
    io.result.mat[0] <= _io_result_WIRE.mat[0] @[accumu.scala 32:15]
    io.result.mat[1] <= _io_result_WIRE.mat[1] @[accumu.scala 32:15]
    io.result.mat[2] <= _io_result_WIRE.mat[2] @[accumu.scala 32:15]
    io.result.mat[3] <= _io_result_WIRE.mat[3] @[accumu.scala 32:15]
    io.result.mat[4] <= _io_result_WIRE.mat[4] @[accumu.scala 32:15]
    io.result.mat[5] <= _io_result_WIRE.mat[5] @[accumu.scala 32:15]
    io.result.mat[6] <= _io_result_WIRE.mat[6] @[accumu.scala 32:15]
    io.result.mat[7] <= _io_result_WIRE.mat[7] @[accumu.scala 32:15]
    io.result.mat[8] <= _io_result_WIRE.mat[8] @[accumu.scala 32:15]
    io.result.mat[9] <= _io_result_WIRE.mat[9] @[accumu.scala 32:15]
    io.result.mat[10] <= _io_result_WIRE.mat[10] @[accumu.scala 32:15]
    io.result.mat[11] <= _io_result_WIRE.mat[11] @[accumu.scala 32:15]
    io.result.mat[12] <= _io_result_WIRE.mat[12] @[accumu.scala 32:15]
    io.result.mat[13] <= _io_result_WIRE.mat[13] @[accumu.scala 32:15]
    io.result.mat[14] <= _io_result_WIRE.mat[14] @[accumu.scala 32:15]
    io.result.mat[15] <= _io_result_WIRE.mat[15] @[accumu.scala 32:15]
    io.result.mat[16] <= _io_result_WIRE.mat[16] @[accumu.scala 32:15]
    io.result.mat[17] <= _io_result_WIRE.mat[17] @[accumu.scala 32:15]
    io.result.mat[18] <= _io_result_WIRE.mat[18] @[accumu.scala 32:15]
    io.result.mat[19] <= _io_result_WIRE.mat[19] @[accumu.scala 32:15]
    io.result.mat[20] <= _io_result_WIRE.mat[20] @[accumu.scala 32:15]
    io.result.mat[21] <= _io_result_WIRE.mat[21] @[accumu.scala 32:15]
    io.result.mat[22] <= _io_result_WIRE.mat[22] @[accumu.scala 32:15]
    io.result.mat[23] <= _io_result_WIRE.mat[23] @[accumu.scala 32:15]
    io.result.mat[24] <= _io_result_WIRE.mat[24] @[accumu.scala 32:15]
    io.result.mat[25] <= _io_result_WIRE.mat[25] @[accumu.scala 32:15]
    io.result.mat[26] <= _io_result_WIRE.mat[26] @[accumu.scala 32:15]
    io.result.mat[27] <= _io_result_WIRE.mat[27] @[accumu.scala 32:15]
    io.result.mat[28] <= _io_result_WIRE.mat[28] @[accumu.scala 32:15]
    io.result.mat[29] <= _io_result_WIRE.mat[29] @[accumu.scala 32:15]
    io.result.mat[30] <= _io_result_WIRE.mat[30] @[accumu.scala 32:15]
    io.result.mat[31] <= _io_result_WIRE.mat[31] @[accumu.scala 32:15]
    io.result.mat[32] <= _io_result_WIRE.mat[32] @[accumu.scala 32:15]
    io.result.mat[33] <= _io_result_WIRE.mat[33] @[accumu.scala 32:15]
    io.result.mat[34] <= _io_result_WIRE.mat[34] @[accumu.scala 32:15]
    io.result.mat[35] <= _io_result_WIRE.mat[35] @[accumu.scala 32:15]
    io.result.mat[36] <= _io_result_WIRE.mat[36] @[accumu.scala 32:15]
    io.result.mat[37] <= _io_result_WIRE.mat[37] @[accumu.scala 32:15]
    io.result.mat[38] <= _io_result_WIRE.mat[38] @[accumu.scala 32:15]
    io.result.mat[39] <= _io_result_WIRE.mat[39] @[accumu.scala 32:15]
    io.result.mat[40] <= _io_result_WIRE.mat[40] @[accumu.scala 32:15]
    io.result.mat[41] <= _io_result_WIRE.mat[41] @[accumu.scala 32:15]
    io.result.mat[42] <= _io_result_WIRE.mat[42] @[accumu.scala 32:15]
    io.result.mat[43] <= _io_result_WIRE.mat[43] @[accumu.scala 32:15]
    io.result.mat[44] <= _io_result_WIRE.mat[44] @[accumu.scala 32:15]
    io.result.mat[45] <= _io_result_WIRE.mat[45] @[accumu.scala 32:15]
    io.result.mat[46] <= _io_result_WIRE.mat[46] @[accumu.scala 32:15]
    io.result.mat[47] <= _io_result_WIRE.mat[47] @[accumu.scala 32:15]
    io.result.mat[48] <= _io_result_WIRE.mat[48] @[accumu.scala 32:15]
    io.result.mat[49] <= _io_result_WIRE.mat[49] @[accumu.scala 32:15]
    io.result.mat[50] <= _io_result_WIRE.mat[50] @[accumu.scala 32:15]
    io.result.mat[51] <= _io_result_WIRE.mat[51] @[accumu.scala 32:15]
    io.result.mat[52] <= _io_result_WIRE.mat[52] @[accumu.scala 32:15]
    io.result.mat[53] <= _io_result_WIRE.mat[53] @[accumu.scala 32:15]
    io.result.mat[54] <= _io_result_WIRE.mat[54] @[accumu.scala 32:15]
    io.result.mat[55] <= _io_result_WIRE.mat[55] @[accumu.scala 32:15]
    io.result.mat[56] <= _io_result_WIRE.mat[56] @[accumu.scala 32:15]
    io.result.mat[57] <= _io_result_WIRE.mat[57] @[accumu.scala 32:15]
    io.result.mat[58] <= _io_result_WIRE.mat[58] @[accumu.scala 32:15]
    io.result.mat[59] <= _io_result_WIRE.mat[59] @[accumu.scala 32:15]
    io.result.mat[60] <= _io_result_WIRE.mat[60] @[accumu.scala 32:15]
    io.result.mat[61] <= _io_result_WIRE.mat[61] @[accumu.scala 32:15]
    io.result.mat[62] <= _io_result_WIRE.mat[62] @[accumu.scala 32:15]
    io.result.mat[63] <= _io_result_WIRE.mat[63] @[accumu.scala 32:15]
    io.valid_out <= UInt<1>("h00") @[accumu.scala 33:18]
    io.bias_addr <= now_addr.ccnt @[accumu.scala 34:18]
    when io.flag_job : @[accumu.scala 36:22]
      counter.cend <= io.csum @[utils.scala 26:14]
      counter.ccnt <= io.csum @[utils.scala 27:14]
      wire _output_WIRE_1 : {mat : SInt<44>[64]} @[accumu.scala 38:31]
      node _output_T_64 = asUInt(asSInt(UInt<1>("h00"))) @[accumu.scala 38:31]
      wire _output_WIRE_2 : UInt<2816>
      _output_WIRE_2 <= _output_T_64
      node _output_T_65 = bits(_output_WIRE_2, 43, 0) @[accumu.scala 38:31]
      node _output_T_66 = asSInt(_output_T_65) @[accumu.scala 38:31]
      _output_WIRE_1.mat[0] <= _output_T_66 @[accumu.scala 38:31]
      node _output_T_67 = bits(_output_WIRE_2, 87, 44) @[accumu.scala 38:31]
      node _output_T_68 = asSInt(_output_T_67) @[accumu.scala 38:31]
      _output_WIRE_1.mat[1] <= _output_T_68 @[accumu.scala 38:31]
      node _output_T_69 = bits(_output_WIRE_2, 131, 88) @[accumu.scala 38:31]
      node _output_T_70 = asSInt(_output_T_69) @[accumu.scala 38:31]
      _output_WIRE_1.mat[2] <= _output_T_70 @[accumu.scala 38:31]
      node _output_T_71 = bits(_output_WIRE_2, 175, 132) @[accumu.scala 38:31]
      node _output_T_72 = asSInt(_output_T_71) @[accumu.scala 38:31]
      _output_WIRE_1.mat[3] <= _output_T_72 @[accumu.scala 38:31]
      node _output_T_73 = bits(_output_WIRE_2, 219, 176) @[accumu.scala 38:31]
      node _output_T_74 = asSInt(_output_T_73) @[accumu.scala 38:31]
      _output_WIRE_1.mat[4] <= _output_T_74 @[accumu.scala 38:31]
      node _output_T_75 = bits(_output_WIRE_2, 263, 220) @[accumu.scala 38:31]
      node _output_T_76 = asSInt(_output_T_75) @[accumu.scala 38:31]
      _output_WIRE_1.mat[5] <= _output_T_76 @[accumu.scala 38:31]
      node _output_T_77 = bits(_output_WIRE_2, 307, 264) @[accumu.scala 38:31]
      node _output_T_78 = asSInt(_output_T_77) @[accumu.scala 38:31]
      _output_WIRE_1.mat[6] <= _output_T_78 @[accumu.scala 38:31]
      node _output_T_79 = bits(_output_WIRE_2, 351, 308) @[accumu.scala 38:31]
      node _output_T_80 = asSInt(_output_T_79) @[accumu.scala 38:31]
      _output_WIRE_1.mat[7] <= _output_T_80 @[accumu.scala 38:31]
      node _output_T_81 = bits(_output_WIRE_2, 395, 352) @[accumu.scala 38:31]
      node _output_T_82 = asSInt(_output_T_81) @[accumu.scala 38:31]
      _output_WIRE_1.mat[8] <= _output_T_82 @[accumu.scala 38:31]
      node _output_T_83 = bits(_output_WIRE_2, 439, 396) @[accumu.scala 38:31]
      node _output_T_84 = asSInt(_output_T_83) @[accumu.scala 38:31]
      _output_WIRE_1.mat[9] <= _output_T_84 @[accumu.scala 38:31]
      node _output_T_85 = bits(_output_WIRE_2, 483, 440) @[accumu.scala 38:31]
      node _output_T_86 = asSInt(_output_T_85) @[accumu.scala 38:31]
      _output_WIRE_1.mat[10] <= _output_T_86 @[accumu.scala 38:31]
      node _output_T_87 = bits(_output_WIRE_2, 527, 484) @[accumu.scala 38:31]
      node _output_T_88 = asSInt(_output_T_87) @[accumu.scala 38:31]
      _output_WIRE_1.mat[11] <= _output_T_88 @[accumu.scala 38:31]
      node _output_T_89 = bits(_output_WIRE_2, 571, 528) @[accumu.scala 38:31]
      node _output_T_90 = asSInt(_output_T_89) @[accumu.scala 38:31]
      _output_WIRE_1.mat[12] <= _output_T_90 @[accumu.scala 38:31]
      node _output_T_91 = bits(_output_WIRE_2, 615, 572) @[accumu.scala 38:31]
      node _output_T_92 = asSInt(_output_T_91) @[accumu.scala 38:31]
      _output_WIRE_1.mat[13] <= _output_T_92 @[accumu.scala 38:31]
      node _output_T_93 = bits(_output_WIRE_2, 659, 616) @[accumu.scala 38:31]
      node _output_T_94 = asSInt(_output_T_93) @[accumu.scala 38:31]
      _output_WIRE_1.mat[14] <= _output_T_94 @[accumu.scala 38:31]
      node _output_T_95 = bits(_output_WIRE_2, 703, 660) @[accumu.scala 38:31]
      node _output_T_96 = asSInt(_output_T_95) @[accumu.scala 38:31]
      _output_WIRE_1.mat[15] <= _output_T_96 @[accumu.scala 38:31]
      node _output_T_97 = bits(_output_WIRE_2, 747, 704) @[accumu.scala 38:31]
      node _output_T_98 = asSInt(_output_T_97) @[accumu.scala 38:31]
      _output_WIRE_1.mat[16] <= _output_T_98 @[accumu.scala 38:31]
      node _output_T_99 = bits(_output_WIRE_2, 791, 748) @[accumu.scala 38:31]
      node _output_T_100 = asSInt(_output_T_99) @[accumu.scala 38:31]
      _output_WIRE_1.mat[17] <= _output_T_100 @[accumu.scala 38:31]
      node _output_T_101 = bits(_output_WIRE_2, 835, 792) @[accumu.scala 38:31]
      node _output_T_102 = asSInt(_output_T_101) @[accumu.scala 38:31]
      _output_WIRE_1.mat[18] <= _output_T_102 @[accumu.scala 38:31]
      node _output_T_103 = bits(_output_WIRE_2, 879, 836) @[accumu.scala 38:31]
      node _output_T_104 = asSInt(_output_T_103) @[accumu.scala 38:31]
      _output_WIRE_1.mat[19] <= _output_T_104 @[accumu.scala 38:31]
      node _output_T_105 = bits(_output_WIRE_2, 923, 880) @[accumu.scala 38:31]
      node _output_T_106 = asSInt(_output_T_105) @[accumu.scala 38:31]
      _output_WIRE_1.mat[20] <= _output_T_106 @[accumu.scala 38:31]
      node _output_T_107 = bits(_output_WIRE_2, 967, 924) @[accumu.scala 38:31]
      node _output_T_108 = asSInt(_output_T_107) @[accumu.scala 38:31]
      _output_WIRE_1.mat[21] <= _output_T_108 @[accumu.scala 38:31]
      node _output_T_109 = bits(_output_WIRE_2, 1011, 968) @[accumu.scala 38:31]
      node _output_T_110 = asSInt(_output_T_109) @[accumu.scala 38:31]
      _output_WIRE_1.mat[22] <= _output_T_110 @[accumu.scala 38:31]
      node _output_T_111 = bits(_output_WIRE_2, 1055, 1012) @[accumu.scala 38:31]
      node _output_T_112 = asSInt(_output_T_111) @[accumu.scala 38:31]
      _output_WIRE_1.mat[23] <= _output_T_112 @[accumu.scala 38:31]
      node _output_T_113 = bits(_output_WIRE_2, 1099, 1056) @[accumu.scala 38:31]
      node _output_T_114 = asSInt(_output_T_113) @[accumu.scala 38:31]
      _output_WIRE_1.mat[24] <= _output_T_114 @[accumu.scala 38:31]
      node _output_T_115 = bits(_output_WIRE_2, 1143, 1100) @[accumu.scala 38:31]
      node _output_T_116 = asSInt(_output_T_115) @[accumu.scala 38:31]
      _output_WIRE_1.mat[25] <= _output_T_116 @[accumu.scala 38:31]
      node _output_T_117 = bits(_output_WIRE_2, 1187, 1144) @[accumu.scala 38:31]
      node _output_T_118 = asSInt(_output_T_117) @[accumu.scala 38:31]
      _output_WIRE_1.mat[26] <= _output_T_118 @[accumu.scala 38:31]
      node _output_T_119 = bits(_output_WIRE_2, 1231, 1188) @[accumu.scala 38:31]
      node _output_T_120 = asSInt(_output_T_119) @[accumu.scala 38:31]
      _output_WIRE_1.mat[27] <= _output_T_120 @[accumu.scala 38:31]
      node _output_T_121 = bits(_output_WIRE_2, 1275, 1232) @[accumu.scala 38:31]
      node _output_T_122 = asSInt(_output_T_121) @[accumu.scala 38:31]
      _output_WIRE_1.mat[28] <= _output_T_122 @[accumu.scala 38:31]
      node _output_T_123 = bits(_output_WIRE_2, 1319, 1276) @[accumu.scala 38:31]
      node _output_T_124 = asSInt(_output_T_123) @[accumu.scala 38:31]
      _output_WIRE_1.mat[29] <= _output_T_124 @[accumu.scala 38:31]
      node _output_T_125 = bits(_output_WIRE_2, 1363, 1320) @[accumu.scala 38:31]
      node _output_T_126 = asSInt(_output_T_125) @[accumu.scala 38:31]
      _output_WIRE_1.mat[30] <= _output_T_126 @[accumu.scala 38:31]
      node _output_T_127 = bits(_output_WIRE_2, 1407, 1364) @[accumu.scala 38:31]
      node _output_T_128 = asSInt(_output_T_127) @[accumu.scala 38:31]
      _output_WIRE_1.mat[31] <= _output_T_128 @[accumu.scala 38:31]
      node _output_T_129 = bits(_output_WIRE_2, 1451, 1408) @[accumu.scala 38:31]
      node _output_T_130 = asSInt(_output_T_129) @[accumu.scala 38:31]
      _output_WIRE_1.mat[32] <= _output_T_130 @[accumu.scala 38:31]
      node _output_T_131 = bits(_output_WIRE_2, 1495, 1452) @[accumu.scala 38:31]
      node _output_T_132 = asSInt(_output_T_131) @[accumu.scala 38:31]
      _output_WIRE_1.mat[33] <= _output_T_132 @[accumu.scala 38:31]
      node _output_T_133 = bits(_output_WIRE_2, 1539, 1496) @[accumu.scala 38:31]
      node _output_T_134 = asSInt(_output_T_133) @[accumu.scala 38:31]
      _output_WIRE_1.mat[34] <= _output_T_134 @[accumu.scala 38:31]
      node _output_T_135 = bits(_output_WIRE_2, 1583, 1540) @[accumu.scala 38:31]
      node _output_T_136 = asSInt(_output_T_135) @[accumu.scala 38:31]
      _output_WIRE_1.mat[35] <= _output_T_136 @[accumu.scala 38:31]
      node _output_T_137 = bits(_output_WIRE_2, 1627, 1584) @[accumu.scala 38:31]
      node _output_T_138 = asSInt(_output_T_137) @[accumu.scala 38:31]
      _output_WIRE_1.mat[36] <= _output_T_138 @[accumu.scala 38:31]
      node _output_T_139 = bits(_output_WIRE_2, 1671, 1628) @[accumu.scala 38:31]
      node _output_T_140 = asSInt(_output_T_139) @[accumu.scala 38:31]
      _output_WIRE_1.mat[37] <= _output_T_140 @[accumu.scala 38:31]
      node _output_T_141 = bits(_output_WIRE_2, 1715, 1672) @[accumu.scala 38:31]
      node _output_T_142 = asSInt(_output_T_141) @[accumu.scala 38:31]
      _output_WIRE_1.mat[38] <= _output_T_142 @[accumu.scala 38:31]
      node _output_T_143 = bits(_output_WIRE_2, 1759, 1716) @[accumu.scala 38:31]
      node _output_T_144 = asSInt(_output_T_143) @[accumu.scala 38:31]
      _output_WIRE_1.mat[39] <= _output_T_144 @[accumu.scala 38:31]
      node _output_T_145 = bits(_output_WIRE_2, 1803, 1760) @[accumu.scala 38:31]
      node _output_T_146 = asSInt(_output_T_145) @[accumu.scala 38:31]
      _output_WIRE_1.mat[40] <= _output_T_146 @[accumu.scala 38:31]
      node _output_T_147 = bits(_output_WIRE_2, 1847, 1804) @[accumu.scala 38:31]
      node _output_T_148 = asSInt(_output_T_147) @[accumu.scala 38:31]
      _output_WIRE_1.mat[41] <= _output_T_148 @[accumu.scala 38:31]
      node _output_T_149 = bits(_output_WIRE_2, 1891, 1848) @[accumu.scala 38:31]
      node _output_T_150 = asSInt(_output_T_149) @[accumu.scala 38:31]
      _output_WIRE_1.mat[42] <= _output_T_150 @[accumu.scala 38:31]
      node _output_T_151 = bits(_output_WIRE_2, 1935, 1892) @[accumu.scala 38:31]
      node _output_T_152 = asSInt(_output_T_151) @[accumu.scala 38:31]
      _output_WIRE_1.mat[43] <= _output_T_152 @[accumu.scala 38:31]
      node _output_T_153 = bits(_output_WIRE_2, 1979, 1936) @[accumu.scala 38:31]
      node _output_T_154 = asSInt(_output_T_153) @[accumu.scala 38:31]
      _output_WIRE_1.mat[44] <= _output_T_154 @[accumu.scala 38:31]
      node _output_T_155 = bits(_output_WIRE_2, 2023, 1980) @[accumu.scala 38:31]
      node _output_T_156 = asSInt(_output_T_155) @[accumu.scala 38:31]
      _output_WIRE_1.mat[45] <= _output_T_156 @[accumu.scala 38:31]
      node _output_T_157 = bits(_output_WIRE_2, 2067, 2024) @[accumu.scala 38:31]
      node _output_T_158 = asSInt(_output_T_157) @[accumu.scala 38:31]
      _output_WIRE_1.mat[46] <= _output_T_158 @[accumu.scala 38:31]
      node _output_T_159 = bits(_output_WIRE_2, 2111, 2068) @[accumu.scala 38:31]
      node _output_T_160 = asSInt(_output_T_159) @[accumu.scala 38:31]
      _output_WIRE_1.mat[47] <= _output_T_160 @[accumu.scala 38:31]
      node _output_T_161 = bits(_output_WIRE_2, 2155, 2112) @[accumu.scala 38:31]
      node _output_T_162 = asSInt(_output_T_161) @[accumu.scala 38:31]
      _output_WIRE_1.mat[48] <= _output_T_162 @[accumu.scala 38:31]
      node _output_T_163 = bits(_output_WIRE_2, 2199, 2156) @[accumu.scala 38:31]
      node _output_T_164 = asSInt(_output_T_163) @[accumu.scala 38:31]
      _output_WIRE_1.mat[49] <= _output_T_164 @[accumu.scala 38:31]
      node _output_T_165 = bits(_output_WIRE_2, 2243, 2200) @[accumu.scala 38:31]
      node _output_T_166 = asSInt(_output_T_165) @[accumu.scala 38:31]
      _output_WIRE_1.mat[50] <= _output_T_166 @[accumu.scala 38:31]
      node _output_T_167 = bits(_output_WIRE_2, 2287, 2244) @[accumu.scala 38:31]
      node _output_T_168 = asSInt(_output_T_167) @[accumu.scala 38:31]
      _output_WIRE_1.mat[51] <= _output_T_168 @[accumu.scala 38:31]
      node _output_T_169 = bits(_output_WIRE_2, 2331, 2288) @[accumu.scala 38:31]
      node _output_T_170 = asSInt(_output_T_169) @[accumu.scala 38:31]
      _output_WIRE_1.mat[52] <= _output_T_170 @[accumu.scala 38:31]
      node _output_T_171 = bits(_output_WIRE_2, 2375, 2332) @[accumu.scala 38:31]
      node _output_T_172 = asSInt(_output_T_171) @[accumu.scala 38:31]
      _output_WIRE_1.mat[53] <= _output_T_172 @[accumu.scala 38:31]
      node _output_T_173 = bits(_output_WIRE_2, 2419, 2376) @[accumu.scala 38:31]
      node _output_T_174 = asSInt(_output_T_173) @[accumu.scala 38:31]
      _output_WIRE_1.mat[54] <= _output_T_174 @[accumu.scala 38:31]
      node _output_T_175 = bits(_output_WIRE_2, 2463, 2420) @[accumu.scala 38:31]
      node _output_T_176 = asSInt(_output_T_175) @[accumu.scala 38:31]
      _output_WIRE_1.mat[55] <= _output_T_176 @[accumu.scala 38:31]
      node _output_T_177 = bits(_output_WIRE_2, 2507, 2464) @[accumu.scala 38:31]
      node _output_T_178 = asSInt(_output_T_177) @[accumu.scala 38:31]
      _output_WIRE_1.mat[56] <= _output_T_178 @[accumu.scala 38:31]
      node _output_T_179 = bits(_output_WIRE_2, 2551, 2508) @[accumu.scala 38:31]
      node _output_T_180 = asSInt(_output_T_179) @[accumu.scala 38:31]
      _output_WIRE_1.mat[57] <= _output_T_180 @[accumu.scala 38:31]
      node _output_T_181 = bits(_output_WIRE_2, 2595, 2552) @[accumu.scala 38:31]
      node _output_T_182 = asSInt(_output_T_181) @[accumu.scala 38:31]
      _output_WIRE_1.mat[58] <= _output_T_182 @[accumu.scala 38:31]
      node _output_T_183 = bits(_output_WIRE_2, 2639, 2596) @[accumu.scala 38:31]
      node _output_T_184 = asSInt(_output_T_183) @[accumu.scala 38:31]
      _output_WIRE_1.mat[59] <= _output_T_184 @[accumu.scala 38:31]
      node _output_T_185 = bits(_output_WIRE_2, 2683, 2640) @[accumu.scala 38:31]
      node _output_T_186 = asSInt(_output_T_185) @[accumu.scala 38:31]
      _output_WIRE_1.mat[60] <= _output_T_186 @[accumu.scala 38:31]
      node _output_T_187 = bits(_output_WIRE_2, 2727, 2684) @[accumu.scala 38:31]
      node _output_T_188 = asSInt(_output_T_187) @[accumu.scala 38:31]
      _output_WIRE_1.mat[61] <= _output_T_188 @[accumu.scala 38:31]
      node _output_T_189 = bits(_output_WIRE_2, 2771, 2728) @[accumu.scala 38:31]
      node _output_T_190 = asSInt(_output_T_189) @[accumu.scala 38:31]
      _output_WIRE_1.mat[62] <= _output_T_190 @[accumu.scala 38:31]
      node _output_T_191 = bits(_output_WIRE_2, 2815, 2772) @[accumu.scala 38:31]
      node _output_T_192 = asSInt(_output_T_191) @[accumu.scala 38:31]
      _output_WIRE_1.mat[63] <= _output_T_192 @[accumu.scala 38:31]
      output.mat[0] <= _output_WIRE_1.mat[0] @[accumu.scala 38:16]
      output.mat[1] <= _output_WIRE_1.mat[1] @[accumu.scala 38:16]
      output.mat[2] <= _output_WIRE_1.mat[2] @[accumu.scala 38:16]
      output.mat[3] <= _output_WIRE_1.mat[3] @[accumu.scala 38:16]
      output.mat[4] <= _output_WIRE_1.mat[4] @[accumu.scala 38:16]
      output.mat[5] <= _output_WIRE_1.mat[5] @[accumu.scala 38:16]
      output.mat[6] <= _output_WIRE_1.mat[6] @[accumu.scala 38:16]
      output.mat[7] <= _output_WIRE_1.mat[7] @[accumu.scala 38:16]
      output.mat[8] <= _output_WIRE_1.mat[8] @[accumu.scala 38:16]
      output.mat[9] <= _output_WIRE_1.mat[9] @[accumu.scala 38:16]
      output.mat[10] <= _output_WIRE_1.mat[10] @[accumu.scala 38:16]
      output.mat[11] <= _output_WIRE_1.mat[11] @[accumu.scala 38:16]
      output.mat[12] <= _output_WIRE_1.mat[12] @[accumu.scala 38:16]
      output.mat[13] <= _output_WIRE_1.mat[13] @[accumu.scala 38:16]
      output.mat[14] <= _output_WIRE_1.mat[14] @[accumu.scala 38:16]
      output.mat[15] <= _output_WIRE_1.mat[15] @[accumu.scala 38:16]
      output.mat[16] <= _output_WIRE_1.mat[16] @[accumu.scala 38:16]
      output.mat[17] <= _output_WIRE_1.mat[17] @[accumu.scala 38:16]
      output.mat[18] <= _output_WIRE_1.mat[18] @[accumu.scala 38:16]
      output.mat[19] <= _output_WIRE_1.mat[19] @[accumu.scala 38:16]
      output.mat[20] <= _output_WIRE_1.mat[20] @[accumu.scala 38:16]
      output.mat[21] <= _output_WIRE_1.mat[21] @[accumu.scala 38:16]
      output.mat[22] <= _output_WIRE_1.mat[22] @[accumu.scala 38:16]
      output.mat[23] <= _output_WIRE_1.mat[23] @[accumu.scala 38:16]
      output.mat[24] <= _output_WIRE_1.mat[24] @[accumu.scala 38:16]
      output.mat[25] <= _output_WIRE_1.mat[25] @[accumu.scala 38:16]
      output.mat[26] <= _output_WIRE_1.mat[26] @[accumu.scala 38:16]
      output.mat[27] <= _output_WIRE_1.mat[27] @[accumu.scala 38:16]
      output.mat[28] <= _output_WIRE_1.mat[28] @[accumu.scala 38:16]
      output.mat[29] <= _output_WIRE_1.mat[29] @[accumu.scala 38:16]
      output.mat[30] <= _output_WIRE_1.mat[30] @[accumu.scala 38:16]
      output.mat[31] <= _output_WIRE_1.mat[31] @[accumu.scala 38:16]
      output.mat[32] <= _output_WIRE_1.mat[32] @[accumu.scala 38:16]
      output.mat[33] <= _output_WIRE_1.mat[33] @[accumu.scala 38:16]
      output.mat[34] <= _output_WIRE_1.mat[34] @[accumu.scala 38:16]
      output.mat[35] <= _output_WIRE_1.mat[35] @[accumu.scala 38:16]
      output.mat[36] <= _output_WIRE_1.mat[36] @[accumu.scala 38:16]
      output.mat[37] <= _output_WIRE_1.mat[37] @[accumu.scala 38:16]
      output.mat[38] <= _output_WIRE_1.mat[38] @[accumu.scala 38:16]
      output.mat[39] <= _output_WIRE_1.mat[39] @[accumu.scala 38:16]
      output.mat[40] <= _output_WIRE_1.mat[40] @[accumu.scala 38:16]
      output.mat[41] <= _output_WIRE_1.mat[41] @[accumu.scala 38:16]
      output.mat[42] <= _output_WIRE_1.mat[42] @[accumu.scala 38:16]
      output.mat[43] <= _output_WIRE_1.mat[43] @[accumu.scala 38:16]
      output.mat[44] <= _output_WIRE_1.mat[44] @[accumu.scala 38:16]
      output.mat[45] <= _output_WIRE_1.mat[45] @[accumu.scala 38:16]
      output.mat[46] <= _output_WIRE_1.mat[46] @[accumu.scala 38:16]
      output.mat[47] <= _output_WIRE_1.mat[47] @[accumu.scala 38:16]
      output.mat[48] <= _output_WIRE_1.mat[48] @[accumu.scala 38:16]
      output.mat[49] <= _output_WIRE_1.mat[49] @[accumu.scala 38:16]
      output.mat[50] <= _output_WIRE_1.mat[50] @[accumu.scala 38:16]
      output.mat[51] <= _output_WIRE_1.mat[51] @[accumu.scala 38:16]
      output.mat[52] <= _output_WIRE_1.mat[52] @[accumu.scala 38:16]
      output.mat[53] <= _output_WIRE_1.mat[53] @[accumu.scala 38:16]
      output.mat[54] <= _output_WIRE_1.mat[54] @[accumu.scala 38:16]
      output.mat[55] <= _output_WIRE_1.mat[55] @[accumu.scala 38:16]
      output.mat[56] <= _output_WIRE_1.mat[56] @[accumu.scala 38:16]
      output.mat[57] <= _output_WIRE_1.mat[57] @[accumu.scala 38:16]
      output.mat[58] <= _output_WIRE_1.mat[58] @[accumu.scala 38:16]
      output.mat[59] <= _output_WIRE_1.mat[59] @[accumu.scala 38:16]
      output.mat[60] <= _output_WIRE_1.mat[60] @[accumu.scala 38:16]
      output.mat[61] <= _output_WIRE_1.mat[61] @[accumu.scala 38:16]
      output.mat[62] <= _output_WIRE_1.mat[62] @[accumu.scala 38:16]
      output.mat[63] <= _output_WIRE_1.mat[63] @[accumu.scala 38:16]
      now_addr.cend <= io.bias_end_addr @[utils.scala 26:14]
      now_addr.ccnt <= io.bias_begin_addr @[utils.scala 27:14]
      enable <= io.is_in_use @[accumu.scala 40:16]
      skip @[accumu.scala 36:22]
    else : @[accumu.scala 41:23]
      when enable : @[accumu.scala 41:23]
        when io.valid_in : @[accumu.scala 42:26]
          node _T = eq(counter.ccnt, counter.cend) @[accumu.scala 43:30]
          when _T : @[accumu.scala 43:46]
            io.valid_out <= UInt<1>("h00") @[accumu.scala 44:30]
            node _output_mat_0_T = add(io.in_from_calc8x8.mat[0], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_0_T_1 = tail(_output_mat_0_T, 1) @[accumu.scala 46:63]
            node _output_mat_0_T_2 = asSInt(_output_mat_0_T_1) @[accumu.scala 46:63]
            output.mat[0] <= _output_mat_0_T_2 @[accumu.scala 46:35]
            node _output_mat_1_T = add(io.in_from_calc8x8.mat[1], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_1_T_1 = tail(_output_mat_1_T, 1) @[accumu.scala 46:63]
            node _output_mat_1_T_2 = asSInt(_output_mat_1_T_1) @[accumu.scala 46:63]
            output.mat[1] <= _output_mat_1_T_2 @[accumu.scala 46:35]
            node _output_mat_2_T = add(io.in_from_calc8x8.mat[2], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_2_T_1 = tail(_output_mat_2_T, 1) @[accumu.scala 46:63]
            node _output_mat_2_T_2 = asSInt(_output_mat_2_T_1) @[accumu.scala 46:63]
            output.mat[2] <= _output_mat_2_T_2 @[accumu.scala 46:35]
            node _output_mat_3_T = add(io.in_from_calc8x8.mat[3], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_3_T_1 = tail(_output_mat_3_T, 1) @[accumu.scala 46:63]
            node _output_mat_3_T_2 = asSInt(_output_mat_3_T_1) @[accumu.scala 46:63]
            output.mat[3] <= _output_mat_3_T_2 @[accumu.scala 46:35]
            node _output_mat_4_T = add(io.in_from_calc8x8.mat[4], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_4_T_1 = tail(_output_mat_4_T, 1) @[accumu.scala 46:63]
            node _output_mat_4_T_2 = asSInt(_output_mat_4_T_1) @[accumu.scala 46:63]
            output.mat[4] <= _output_mat_4_T_2 @[accumu.scala 46:35]
            node _output_mat_5_T = add(io.in_from_calc8x8.mat[5], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_5_T_1 = tail(_output_mat_5_T, 1) @[accumu.scala 46:63]
            node _output_mat_5_T_2 = asSInt(_output_mat_5_T_1) @[accumu.scala 46:63]
            output.mat[5] <= _output_mat_5_T_2 @[accumu.scala 46:35]
            node _output_mat_6_T = add(io.in_from_calc8x8.mat[6], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_6_T_1 = tail(_output_mat_6_T, 1) @[accumu.scala 46:63]
            node _output_mat_6_T_2 = asSInt(_output_mat_6_T_1) @[accumu.scala 46:63]
            output.mat[6] <= _output_mat_6_T_2 @[accumu.scala 46:35]
            node _output_mat_7_T = add(io.in_from_calc8x8.mat[7], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_7_T_1 = tail(_output_mat_7_T, 1) @[accumu.scala 46:63]
            node _output_mat_7_T_2 = asSInt(_output_mat_7_T_1) @[accumu.scala 46:63]
            output.mat[7] <= _output_mat_7_T_2 @[accumu.scala 46:35]
            node _output_mat_8_T = add(io.in_from_calc8x8.mat[8], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_8_T_1 = tail(_output_mat_8_T, 1) @[accumu.scala 46:63]
            node _output_mat_8_T_2 = asSInt(_output_mat_8_T_1) @[accumu.scala 46:63]
            output.mat[8] <= _output_mat_8_T_2 @[accumu.scala 46:35]
            node _output_mat_9_T = add(io.in_from_calc8x8.mat[9], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_9_T_1 = tail(_output_mat_9_T, 1) @[accumu.scala 46:63]
            node _output_mat_9_T_2 = asSInt(_output_mat_9_T_1) @[accumu.scala 46:63]
            output.mat[9] <= _output_mat_9_T_2 @[accumu.scala 46:35]
            node _output_mat_10_T = add(io.in_from_calc8x8.mat[10], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_10_T_1 = tail(_output_mat_10_T, 1) @[accumu.scala 46:63]
            node _output_mat_10_T_2 = asSInt(_output_mat_10_T_1) @[accumu.scala 46:63]
            output.mat[10] <= _output_mat_10_T_2 @[accumu.scala 46:35]
            node _output_mat_11_T = add(io.in_from_calc8x8.mat[11], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_11_T_1 = tail(_output_mat_11_T, 1) @[accumu.scala 46:63]
            node _output_mat_11_T_2 = asSInt(_output_mat_11_T_1) @[accumu.scala 46:63]
            output.mat[11] <= _output_mat_11_T_2 @[accumu.scala 46:35]
            node _output_mat_12_T = add(io.in_from_calc8x8.mat[12], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_12_T_1 = tail(_output_mat_12_T, 1) @[accumu.scala 46:63]
            node _output_mat_12_T_2 = asSInt(_output_mat_12_T_1) @[accumu.scala 46:63]
            output.mat[12] <= _output_mat_12_T_2 @[accumu.scala 46:35]
            node _output_mat_13_T = add(io.in_from_calc8x8.mat[13], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_13_T_1 = tail(_output_mat_13_T, 1) @[accumu.scala 46:63]
            node _output_mat_13_T_2 = asSInt(_output_mat_13_T_1) @[accumu.scala 46:63]
            output.mat[13] <= _output_mat_13_T_2 @[accumu.scala 46:35]
            node _output_mat_14_T = add(io.in_from_calc8x8.mat[14], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_14_T_1 = tail(_output_mat_14_T, 1) @[accumu.scala 46:63]
            node _output_mat_14_T_2 = asSInt(_output_mat_14_T_1) @[accumu.scala 46:63]
            output.mat[14] <= _output_mat_14_T_2 @[accumu.scala 46:35]
            node _output_mat_15_T = add(io.in_from_calc8x8.mat[15], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_15_T_1 = tail(_output_mat_15_T, 1) @[accumu.scala 46:63]
            node _output_mat_15_T_2 = asSInt(_output_mat_15_T_1) @[accumu.scala 46:63]
            output.mat[15] <= _output_mat_15_T_2 @[accumu.scala 46:35]
            node _output_mat_16_T = add(io.in_from_calc8x8.mat[16], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_16_T_1 = tail(_output_mat_16_T, 1) @[accumu.scala 46:63]
            node _output_mat_16_T_2 = asSInt(_output_mat_16_T_1) @[accumu.scala 46:63]
            output.mat[16] <= _output_mat_16_T_2 @[accumu.scala 46:35]
            node _output_mat_17_T = add(io.in_from_calc8x8.mat[17], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_17_T_1 = tail(_output_mat_17_T, 1) @[accumu.scala 46:63]
            node _output_mat_17_T_2 = asSInt(_output_mat_17_T_1) @[accumu.scala 46:63]
            output.mat[17] <= _output_mat_17_T_2 @[accumu.scala 46:35]
            node _output_mat_18_T = add(io.in_from_calc8x8.mat[18], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_18_T_1 = tail(_output_mat_18_T, 1) @[accumu.scala 46:63]
            node _output_mat_18_T_2 = asSInt(_output_mat_18_T_1) @[accumu.scala 46:63]
            output.mat[18] <= _output_mat_18_T_2 @[accumu.scala 46:35]
            node _output_mat_19_T = add(io.in_from_calc8x8.mat[19], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_19_T_1 = tail(_output_mat_19_T, 1) @[accumu.scala 46:63]
            node _output_mat_19_T_2 = asSInt(_output_mat_19_T_1) @[accumu.scala 46:63]
            output.mat[19] <= _output_mat_19_T_2 @[accumu.scala 46:35]
            node _output_mat_20_T = add(io.in_from_calc8x8.mat[20], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_20_T_1 = tail(_output_mat_20_T, 1) @[accumu.scala 46:63]
            node _output_mat_20_T_2 = asSInt(_output_mat_20_T_1) @[accumu.scala 46:63]
            output.mat[20] <= _output_mat_20_T_2 @[accumu.scala 46:35]
            node _output_mat_21_T = add(io.in_from_calc8x8.mat[21], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_21_T_1 = tail(_output_mat_21_T, 1) @[accumu.scala 46:63]
            node _output_mat_21_T_2 = asSInt(_output_mat_21_T_1) @[accumu.scala 46:63]
            output.mat[21] <= _output_mat_21_T_2 @[accumu.scala 46:35]
            node _output_mat_22_T = add(io.in_from_calc8x8.mat[22], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_22_T_1 = tail(_output_mat_22_T, 1) @[accumu.scala 46:63]
            node _output_mat_22_T_2 = asSInt(_output_mat_22_T_1) @[accumu.scala 46:63]
            output.mat[22] <= _output_mat_22_T_2 @[accumu.scala 46:35]
            node _output_mat_23_T = add(io.in_from_calc8x8.mat[23], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_23_T_1 = tail(_output_mat_23_T, 1) @[accumu.scala 46:63]
            node _output_mat_23_T_2 = asSInt(_output_mat_23_T_1) @[accumu.scala 46:63]
            output.mat[23] <= _output_mat_23_T_2 @[accumu.scala 46:35]
            node _output_mat_24_T = add(io.in_from_calc8x8.mat[24], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_24_T_1 = tail(_output_mat_24_T, 1) @[accumu.scala 46:63]
            node _output_mat_24_T_2 = asSInt(_output_mat_24_T_1) @[accumu.scala 46:63]
            output.mat[24] <= _output_mat_24_T_2 @[accumu.scala 46:35]
            node _output_mat_25_T = add(io.in_from_calc8x8.mat[25], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_25_T_1 = tail(_output_mat_25_T, 1) @[accumu.scala 46:63]
            node _output_mat_25_T_2 = asSInt(_output_mat_25_T_1) @[accumu.scala 46:63]
            output.mat[25] <= _output_mat_25_T_2 @[accumu.scala 46:35]
            node _output_mat_26_T = add(io.in_from_calc8x8.mat[26], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_26_T_1 = tail(_output_mat_26_T, 1) @[accumu.scala 46:63]
            node _output_mat_26_T_2 = asSInt(_output_mat_26_T_1) @[accumu.scala 46:63]
            output.mat[26] <= _output_mat_26_T_2 @[accumu.scala 46:35]
            node _output_mat_27_T = add(io.in_from_calc8x8.mat[27], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_27_T_1 = tail(_output_mat_27_T, 1) @[accumu.scala 46:63]
            node _output_mat_27_T_2 = asSInt(_output_mat_27_T_1) @[accumu.scala 46:63]
            output.mat[27] <= _output_mat_27_T_2 @[accumu.scala 46:35]
            node _output_mat_28_T = add(io.in_from_calc8x8.mat[28], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_28_T_1 = tail(_output_mat_28_T, 1) @[accumu.scala 46:63]
            node _output_mat_28_T_2 = asSInt(_output_mat_28_T_1) @[accumu.scala 46:63]
            output.mat[28] <= _output_mat_28_T_2 @[accumu.scala 46:35]
            node _output_mat_29_T = add(io.in_from_calc8x8.mat[29], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_29_T_1 = tail(_output_mat_29_T, 1) @[accumu.scala 46:63]
            node _output_mat_29_T_2 = asSInt(_output_mat_29_T_1) @[accumu.scala 46:63]
            output.mat[29] <= _output_mat_29_T_2 @[accumu.scala 46:35]
            node _output_mat_30_T = add(io.in_from_calc8x8.mat[30], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_30_T_1 = tail(_output_mat_30_T, 1) @[accumu.scala 46:63]
            node _output_mat_30_T_2 = asSInt(_output_mat_30_T_1) @[accumu.scala 46:63]
            output.mat[30] <= _output_mat_30_T_2 @[accumu.scala 46:35]
            node _output_mat_31_T = add(io.in_from_calc8x8.mat[31], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_31_T_1 = tail(_output_mat_31_T, 1) @[accumu.scala 46:63]
            node _output_mat_31_T_2 = asSInt(_output_mat_31_T_1) @[accumu.scala 46:63]
            output.mat[31] <= _output_mat_31_T_2 @[accumu.scala 46:35]
            node _output_mat_32_T = add(io.in_from_calc8x8.mat[32], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_32_T_1 = tail(_output_mat_32_T, 1) @[accumu.scala 46:63]
            node _output_mat_32_T_2 = asSInt(_output_mat_32_T_1) @[accumu.scala 46:63]
            output.mat[32] <= _output_mat_32_T_2 @[accumu.scala 46:35]
            node _output_mat_33_T = add(io.in_from_calc8x8.mat[33], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_33_T_1 = tail(_output_mat_33_T, 1) @[accumu.scala 46:63]
            node _output_mat_33_T_2 = asSInt(_output_mat_33_T_1) @[accumu.scala 46:63]
            output.mat[33] <= _output_mat_33_T_2 @[accumu.scala 46:35]
            node _output_mat_34_T = add(io.in_from_calc8x8.mat[34], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_34_T_1 = tail(_output_mat_34_T, 1) @[accumu.scala 46:63]
            node _output_mat_34_T_2 = asSInt(_output_mat_34_T_1) @[accumu.scala 46:63]
            output.mat[34] <= _output_mat_34_T_2 @[accumu.scala 46:35]
            node _output_mat_35_T = add(io.in_from_calc8x8.mat[35], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_35_T_1 = tail(_output_mat_35_T, 1) @[accumu.scala 46:63]
            node _output_mat_35_T_2 = asSInt(_output_mat_35_T_1) @[accumu.scala 46:63]
            output.mat[35] <= _output_mat_35_T_2 @[accumu.scala 46:35]
            node _output_mat_36_T = add(io.in_from_calc8x8.mat[36], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_36_T_1 = tail(_output_mat_36_T, 1) @[accumu.scala 46:63]
            node _output_mat_36_T_2 = asSInt(_output_mat_36_T_1) @[accumu.scala 46:63]
            output.mat[36] <= _output_mat_36_T_2 @[accumu.scala 46:35]
            node _output_mat_37_T = add(io.in_from_calc8x8.mat[37], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_37_T_1 = tail(_output_mat_37_T, 1) @[accumu.scala 46:63]
            node _output_mat_37_T_2 = asSInt(_output_mat_37_T_1) @[accumu.scala 46:63]
            output.mat[37] <= _output_mat_37_T_2 @[accumu.scala 46:35]
            node _output_mat_38_T = add(io.in_from_calc8x8.mat[38], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_38_T_1 = tail(_output_mat_38_T, 1) @[accumu.scala 46:63]
            node _output_mat_38_T_2 = asSInt(_output_mat_38_T_1) @[accumu.scala 46:63]
            output.mat[38] <= _output_mat_38_T_2 @[accumu.scala 46:35]
            node _output_mat_39_T = add(io.in_from_calc8x8.mat[39], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_39_T_1 = tail(_output_mat_39_T, 1) @[accumu.scala 46:63]
            node _output_mat_39_T_2 = asSInt(_output_mat_39_T_1) @[accumu.scala 46:63]
            output.mat[39] <= _output_mat_39_T_2 @[accumu.scala 46:35]
            node _output_mat_40_T = add(io.in_from_calc8x8.mat[40], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_40_T_1 = tail(_output_mat_40_T, 1) @[accumu.scala 46:63]
            node _output_mat_40_T_2 = asSInt(_output_mat_40_T_1) @[accumu.scala 46:63]
            output.mat[40] <= _output_mat_40_T_2 @[accumu.scala 46:35]
            node _output_mat_41_T = add(io.in_from_calc8x8.mat[41], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_41_T_1 = tail(_output_mat_41_T, 1) @[accumu.scala 46:63]
            node _output_mat_41_T_2 = asSInt(_output_mat_41_T_1) @[accumu.scala 46:63]
            output.mat[41] <= _output_mat_41_T_2 @[accumu.scala 46:35]
            node _output_mat_42_T = add(io.in_from_calc8x8.mat[42], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_42_T_1 = tail(_output_mat_42_T, 1) @[accumu.scala 46:63]
            node _output_mat_42_T_2 = asSInt(_output_mat_42_T_1) @[accumu.scala 46:63]
            output.mat[42] <= _output_mat_42_T_2 @[accumu.scala 46:35]
            node _output_mat_43_T = add(io.in_from_calc8x8.mat[43], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_43_T_1 = tail(_output_mat_43_T, 1) @[accumu.scala 46:63]
            node _output_mat_43_T_2 = asSInt(_output_mat_43_T_1) @[accumu.scala 46:63]
            output.mat[43] <= _output_mat_43_T_2 @[accumu.scala 46:35]
            node _output_mat_44_T = add(io.in_from_calc8x8.mat[44], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_44_T_1 = tail(_output_mat_44_T, 1) @[accumu.scala 46:63]
            node _output_mat_44_T_2 = asSInt(_output_mat_44_T_1) @[accumu.scala 46:63]
            output.mat[44] <= _output_mat_44_T_2 @[accumu.scala 46:35]
            node _output_mat_45_T = add(io.in_from_calc8x8.mat[45], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_45_T_1 = tail(_output_mat_45_T, 1) @[accumu.scala 46:63]
            node _output_mat_45_T_2 = asSInt(_output_mat_45_T_1) @[accumu.scala 46:63]
            output.mat[45] <= _output_mat_45_T_2 @[accumu.scala 46:35]
            node _output_mat_46_T = add(io.in_from_calc8x8.mat[46], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_46_T_1 = tail(_output_mat_46_T, 1) @[accumu.scala 46:63]
            node _output_mat_46_T_2 = asSInt(_output_mat_46_T_1) @[accumu.scala 46:63]
            output.mat[46] <= _output_mat_46_T_2 @[accumu.scala 46:35]
            node _output_mat_47_T = add(io.in_from_calc8x8.mat[47], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_47_T_1 = tail(_output_mat_47_T, 1) @[accumu.scala 46:63]
            node _output_mat_47_T_2 = asSInt(_output_mat_47_T_1) @[accumu.scala 46:63]
            output.mat[47] <= _output_mat_47_T_2 @[accumu.scala 46:35]
            node _output_mat_48_T = add(io.in_from_calc8x8.mat[48], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_48_T_1 = tail(_output_mat_48_T, 1) @[accumu.scala 46:63]
            node _output_mat_48_T_2 = asSInt(_output_mat_48_T_1) @[accumu.scala 46:63]
            output.mat[48] <= _output_mat_48_T_2 @[accumu.scala 46:35]
            node _output_mat_49_T = add(io.in_from_calc8x8.mat[49], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_49_T_1 = tail(_output_mat_49_T, 1) @[accumu.scala 46:63]
            node _output_mat_49_T_2 = asSInt(_output_mat_49_T_1) @[accumu.scala 46:63]
            output.mat[49] <= _output_mat_49_T_2 @[accumu.scala 46:35]
            node _output_mat_50_T = add(io.in_from_calc8x8.mat[50], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_50_T_1 = tail(_output_mat_50_T, 1) @[accumu.scala 46:63]
            node _output_mat_50_T_2 = asSInt(_output_mat_50_T_1) @[accumu.scala 46:63]
            output.mat[50] <= _output_mat_50_T_2 @[accumu.scala 46:35]
            node _output_mat_51_T = add(io.in_from_calc8x8.mat[51], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_51_T_1 = tail(_output_mat_51_T, 1) @[accumu.scala 46:63]
            node _output_mat_51_T_2 = asSInt(_output_mat_51_T_1) @[accumu.scala 46:63]
            output.mat[51] <= _output_mat_51_T_2 @[accumu.scala 46:35]
            node _output_mat_52_T = add(io.in_from_calc8x8.mat[52], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_52_T_1 = tail(_output_mat_52_T, 1) @[accumu.scala 46:63]
            node _output_mat_52_T_2 = asSInt(_output_mat_52_T_1) @[accumu.scala 46:63]
            output.mat[52] <= _output_mat_52_T_2 @[accumu.scala 46:35]
            node _output_mat_53_T = add(io.in_from_calc8x8.mat[53], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_53_T_1 = tail(_output_mat_53_T, 1) @[accumu.scala 46:63]
            node _output_mat_53_T_2 = asSInt(_output_mat_53_T_1) @[accumu.scala 46:63]
            output.mat[53] <= _output_mat_53_T_2 @[accumu.scala 46:35]
            node _output_mat_54_T = add(io.in_from_calc8x8.mat[54], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_54_T_1 = tail(_output_mat_54_T, 1) @[accumu.scala 46:63]
            node _output_mat_54_T_2 = asSInt(_output_mat_54_T_1) @[accumu.scala 46:63]
            output.mat[54] <= _output_mat_54_T_2 @[accumu.scala 46:35]
            node _output_mat_55_T = add(io.in_from_calc8x8.mat[55], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_55_T_1 = tail(_output_mat_55_T, 1) @[accumu.scala 46:63]
            node _output_mat_55_T_2 = asSInt(_output_mat_55_T_1) @[accumu.scala 46:63]
            output.mat[55] <= _output_mat_55_T_2 @[accumu.scala 46:35]
            node _output_mat_56_T = add(io.in_from_calc8x8.mat[56], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_56_T_1 = tail(_output_mat_56_T, 1) @[accumu.scala 46:63]
            node _output_mat_56_T_2 = asSInt(_output_mat_56_T_1) @[accumu.scala 46:63]
            output.mat[56] <= _output_mat_56_T_2 @[accumu.scala 46:35]
            node _output_mat_57_T = add(io.in_from_calc8x8.mat[57], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_57_T_1 = tail(_output_mat_57_T, 1) @[accumu.scala 46:63]
            node _output_mat_57_T_2 = asSInt(_output_mat_57_T_1) @[accumu.scala 46:63]
            output.mat[57] <= _output_mat_57_T_2 @[accumu.scala 46:35]
            node _output_mat_58_T = add(io.in_from_calc8x8.mat[58], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_58_T_1 = tail(_output_mat_58_T, 1) @[accumu.scala 46:63]
            node _output_mat_58_T_2 = asSInt(_output_mat_58_T_1) @[accumu.scala 46:63]
            output.mat[58] <= _output_mat_58_T_2 @[accumu.scala 46:35]
            node _output_mat_59_T = add(io.in_from_calc8x8.mat[59], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_59_T_1 = tail(_output_mat_59_T, 1) @[accumu.scala 46:63]
            node _output_mat_59_T_2 = asSInt(_output_mat_59_T_1) @[accumu.scala 46:63]
            output.mat[59] <= _output_mat_59_T_2 @[accumu.scala 46:35]
            node _output_mat_60_T = add(io.in_from_calc8x8.mat[60], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_60_T_1 = tail(_output_mat_60_T, 1) @[accumu.scala 46:63]
            node _output_mat_60_T_2 = asSInt(_output_mat_60_T_1) @[accumu.scala 46:63]
            output.mat[60] <= _output_mat_60_T_2 @[accumu.scala 46:35]
            node _output_mat_61_T = add(io.in_from_calc8x8.mat[61], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_61_T_1 = tail(_output_mat_61_T, 1) @[accumu.scala 46:63]
            node _output_mat_61_T_2 = asSInt(_output_mat_61_T_1) @[accumu.scala 46:63]
            output.mat[61] <= _output_mat_61_T_2 @[accumu.scala 46:35]
            node _output_mat_62_T = add(io.in_from_calc8x8.mat[62], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_62_T_1 = tail(_output_mat_62_T, 1) @[accumu.scala 46:63]
            node _output_mat_62_T_2 = asSInt(_output_mat_62_T_1) @[accumu.scala 46:63]
            output.mat[62] <= _output_mat_62_T_2 @[accumu.scala 46:35]
            node _output_mat_63_T = add(io.in_from_calc8x8.mat[63], io.bias_in) @[accumu.scala 46:63]
            node _output_mat_63_T_1 = tail(_output_mat_63_T, 1) @[accumu.scala 46:63]
            node _output_mat_63_T_2 = asSInt(_output_mat_63_T_1) @[accumu.scala 46:63]
            output.mat[63] <= _output_mat_63_T_2 @[accumu.scala 46:35]
            node _counter_ccnt_T = sub(counter.ccnt, UInt<1>("h01")) @[accumu.scala 47:45]
            node _counter_ccnt_T_1 = tail(_counter_ccnt_T, 1) @[accumu.scala 47:45]
            counter.ccnt <= _counter_ccnt_T_1 @[accumu.scala 47:30]
            skip @[accumu.scala 43:46]
          else : @[accumu.scala 48:43]
            node _T_1 = eq(counter.ccnt, UInt<1>("h00")) @[accumu.scala 48:36]
            when _T_1 : @[accumu.scala 48:43]
              io.valid_out <= UInt<1>("h01") @[accumu.scala 49:30]
              node _io_result_mat_0_T = add(io.in_from_calc8x8.mat[0], output.mat[0]) @[accumu.scala 51:66]
              node _io_result_mat_0_T_1 = tail(_io_result_mat_0_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_0_T_2 = asSInt(_io_result_mat_0_T_1) @[accumu.scala 51:66]
              io.result.mat[0] <= _io_result_mat_0_T_2 @[accumu.scala 51:38]
              node _io_result_mat_1_T = add(io.in_from_calc8x8.mat[1], output.mat[1]) @[accumu.scala 51:66]
              node _io_result_mat_1_T_1 = tail(_io_result_mat_1_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_1_T_2 = asSInt(_io_result_mat_1_T_1) @[accumu.scala 51:66]
              io.result.mat[1] <= _io_result_mat_1_T_2 @[accumu.scala 51:38]
              node _io_result_mat_2_T = add(io.in_from_calc8x8.mat[2], output.mat[2]) @[accumu.scala 51:66]
              node _io_result_mat_2_T_1 = tail(_io_result_mat_2_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_2_T_2 = asSInt(_io_result_mat_2_T_1) @[accumu.scala 51:66]
              io.result.mat[2] <= _io_result_mat_2_T_2 @[accumu.scala 51:38]
              node _io_result_mat_3_T = add(io.in_from_calc8x8.mat[3], output.mat[3]) @[accumu.scala 51:66]
              node _io_result_mat_3_T_1 = tail(_io_result_mat_3_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_3_T_2 = asSInt(_io_result_mat_3_T_1) @[accumu.scala 51:66]
              io.result.mat[3] <= _io_result_mat_3_T_2 @[accumu.scala 51:38]
              node _io_result_mat_4_T = add(io.in_from_calc8x8.mat[4], output.mat[4]) @[accumu.scala 51:66]
              node _io_result_mat_4_T_1 = tail(_io_result_mat_4_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_4_T_2 = asSInt(_io_result_mat_4_T_1) @[accumu.scala 51:66]
              io.result.mat[4] <= _io_result_mat_4_T_2 @[accumu.scala 51:38]
              node _io_result_mat_5_T = add(io.in_from_calc8x8.mat[5], output.mat[5]) @[accumu.scala 51:66]
              node _io_result_mat_5_T_1 = tail(_io_result_mat_5_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_5_T_2 = asSInt(_io_result_mat_5_T_1) @[accumu.scala 51:66]
              io.result.mat[5] <= _io_result_mat_5_T_2 @[accumu.scala 51:38]
              node _io_result_mat_6_T = add(io.in_from_calc8x8.mat[6], output.mat[6]) @[accumu.scala 51:66]
              node _io_result_mat_6_T_1 = tail(_io_result_mat_6_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_6_T_2 = asSInt(_io_result_mat_6_T_1) @[accumu.scala 51:66]
              io.result.mat[6] <= _io_result_mat_6_T_2 @[accumu.scala 51:38]
              node _io_result_mat_7_T = add(io.in_from_calc8x8.mat[7], output.mat[7]) @[accumu.scala 51:66]
              node _io_result_mat_7_T_1 = tail(_io_result_mat_7_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_7_T_2 = asSInt(_io_result_mat_7_T_1) @[accumu.scala 51:66]
              io.result.mat[7] <= _io_result_mat_7_T_2 @[accumu.scala 51:38]
              node _io_result_mat_8_T = add(io.in_from_calc8x8.mat[8], output.mat[8]) @[accumu.scala 51:66]
              node _io_result_mat_8_T_1 = tail(_io_result_mat_8_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_8_T_2 = asSInt(_io_result_mat_8_T_1) @[accumu.scala 51:66]
              io.result.mat[8] <= _io_result_mat_8_T_2 @[accumu.scala 51:38]
              node _io_result_mat_9_T = add(io.in_from_calc8x8.mat[9], output.mat[9]) @[accumu.scala 51:66]
              node _io_result_mat_9_T_1 = tail(_io_result_mat_9_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_9_T_2 = asSInt(_io_result_mat_9_T_1) @[accumu.scala 51:66]
              io.result.mat[9] <= _io_result_mat_9_T_2 @[accumu.scala 51:38]
              node _io_result_mat_10_T = add(io.in_from_calc8x8.mat[10], output.mat[10]) @[accumu.scala 51:66]
              node _io_result_mat_10_T_1 = tail(_io_result_mat_10_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_10_T_2 = asSInt(_io_result_mat_10_T_1) @[accumu.scala 51:66]
              io.result.mat[10] <= _io_result_mat_10_T_2 @[accumu.scala 51:38]
              node _io_result_mat_11_T = add(io.in_from_calc8x8.mat[11], output.mat[11]) @[accumu.scala 51:66]
              node _io_result_mat_11_T_1 = tail(_io_result_mat_11_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_11_T_2 = asSInt(_io_result_mat_11_T_1) @[accumu.scala 51:66]
              io.result.mat[11] <= _io_result_mat_11_T_2 @[accumu.scala 51:38]
              node _io_result_mat_12_T = add(io.in_from_calc8x8.mat[12], output.mat[12]) @[accumu.scala 51:66]
              node _io_result_mat_12_T_1 = tail(_io_result_mat_12_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_12_T_2 = asSInt(_io_result_mat_12_T_1) @[accumu.scala 51:66]
              io.result.mat[12] <= _io_result_mat_12_T_2 @[accumu.scala 51:38]
              node _io_result_mat_13_T = add(io.in_from_calc8x8.mat[13], output.mat[13]) @[accumu.scala 51:66]
              node _io_result_mat_13_T_1 = tail(_io_result_mat_13_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_13_T_2 = asSInt(_io_result_mat_13_T_1) @[accumu.scala 51:66]
              io.result.mat[13] <= _io_result_mat_13_T_2 @[accumu.scala 51:38]
              node _io_result_mat_14_T = add(io.in_from_calc8x8.mat[14], output.mat[14]) @[accumu.scala 51:66]
              node _io_result_mat_14_T_1 = tail(_io_result_mat_14_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_14_T_2 = asSInt(_io_result_mat_14_T_1) @[accumu.scala 51:66]
              io.result.mat[14] <= _io_result_mat_14_T_2 @[accumu.scala 51:38]
              node _io_result_mat_15_T = add(io.in_from_calc8x8.mat[15], output.mat[15]) @[accumu.scala 51:66]
              node _io_result_mat_15_T_1 = tail(_io_result_mat_15_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_15_T_2 = asSInt(_io_result_mat_15_T_1) @[accumu.scala 51:66]
              io.result.mat[15] <= _io_result_mat_15_T_2 @[accumu.scala 51:38]
              node _io_result_mat_16_T = add(io.in_from_calc8x8.mat[16], output.mat[16]) @[accumu.scala 51:66]
              node _io_result_mat_16_T_1 = tail(_io_result_mat_16_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_16_T_2 = asSInt(_io_result_mat_16_T_1) @[accumu.scala 51:66]
              io.result.mat[16] <= _io_result_mat_16_T_2 @[accumu.scala 51:38]
              node _io_result_mat_17_T = add(io.in_from_calc8x8.mat[17], output.mat[17]) @[accumu.scala 51:66]
              node _io_result_mat_17_T_1 = tail(_io_result_mat_17_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_17_T_2 = asSInt(_io_result_mat_17_T_1) @[accumu.scala 51:66]
              io.result.mat[17] <= _io_result_mat_17_T_2 @[accumu.scala 51:38]
              node _io_result_mat_18_T = add(io.in_from_calc8x8.mat[18], output.mat[18]) @[accumu.scala 51:66]
              node _io_result_mat_18_T_1 = tail(_io_result_mat_18_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_18_T_2 = asSInt(_io_result_mat_18_T_1) @[accumu.scala 51:66]
              io.result.mat[18] <= _io_result_mat_18_T_2 @[accumu.scala 51:38]
              node _io_result_mat_19_T = add(io.in_from_calc8x8.mat[19], output.mat[19]) @[accumu.scala 51:66]
              node _io_result_mat_19_T_1 = tail(_io_result_mat_19_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_19_T_2 = asSInt(_io_result_mat_19_T_1) @[accumu.scala 51:66]
              io.result.mat[19] <= _io_result_mat_19_T_2 @[accumu.scala 51:38]
              node _io_result_mat_20_T = add(io.in_from_calc8x8.mat[20], output.mat[20]) @[accumu.scala 51:66]
              node _io_result_mat_20_T_1 = tail(_io_result_mat_20_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_20_T_2 = asSInt(_io_result_mat_20_T_1) @[accumu.scala 51:66]
              io.result.mat[20] <= _io_result_mat_20_T_2 @[accumu.scala 51:38]
              node _io_result_mat_21_T = add(io.in_from_calc8x8.mat[21], output.mat[21]) @[accumu.scala 51:66]
              node _io_result_mat_21_T_1 = tail(_io_result_mat_21_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_21_T_2 = asSInt(_io_result_mat_21_T_1) @[accumu.scala 51:66]
              io.result.mat[21] <= _io_result_mat_21_T_2 @[accumu.scala 51:38]
              node _io_result_mat_22_T = add(io.in_from_calc8x8.mat[22], output.mat[22]) @[accumu.scala 51:66]
              node _io_result_mat_22_T_1 = tail(_io_result_mat_22_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_22_T_2 = asSInt(_io_result_mat_22_T_1) @[accumu.scala 51:66]
              io.result.mat[22] <= _io_result_mat_22_T_2 @[accumu.scala 51:38]
              node _io_result_mat_23_T = add(io.in_from_calc8x8.mat[23], output.mat[23]) @[accumu.scala 51:66]
              node _io_result_mat_23_T_1 = tail(_io_result_mat_23_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_23_T_2 = asSInt(_io_result_mat_23_T_1) @[accumu.scala 51:66]
              io.result.mat[23] <= _io_result_mat_23_T_2 @[accumu.scala 51:38]
              node _io_result_mat_24_T = add(io.in_from_calc8x8.mat[24], output.mat[24]) @[accumu.scala 51:66]
              node _io_result_mat_24_T_1 = tail(_io_result_mat_24_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_24_T_2 = asSInt(_io_result_mat_24_T_1) @[accumu.scala 51:66]
              io.result.mat[24] <= _io_result_mat_24_T_2 @[accumu.scala 51:38]
              node _io_result_mat_25_T = add(io.in_from_calc8x8.mat[25], output.mat[25]) @[accumu.scala 51:66]
              node _io_result_mat_25_T_1 = tail(_io_result_mat_25_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_25_T_2 = asSInt(_io_result_mat_25_T_1) @[accumu.scala 51:66]
              io.result.mat[25] <= _io_result_mat_25_T_2 @[accumu.scala 51:38]
              node _io_result_mat_26_T = add(io.in_from_calc8x8.mat[26], output.mat[26]) @[accumu.scala 51:66]
              node _io_result_mat_26_T_1 = tail(_io_result_mat_26_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_26_T_2 = asSInt(_io_result_mat_26_T_1) @[accumu.scala 51:66]
              io.result.mat[26] <= _io_result_mat_26_T_2 @[accumu.scala 51:38]
              node _io_result_mat_27_T = add(io.in_from_calc8x8.mat[27], output.mat[27]) @[accumu.scala 51:66]
              node _io_result_mat_27_T_1 = tail(_io_result_mat_27_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_27_T_2 = asSInt(_io_result_mat_27_T_1) @[accumu.scala 51:66]
              io.result.mat[27] <= _io_result_mat_27_T_2 @[accumu.scala 51:38]
              node _io_result_mat_28_T = add(io.in_from_calc8x8.mat[28], output.mat[28]) @[accumu.scala 51:66]
              node _io_result_mat_28_T_1 = tail(_io_result_mat_28_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_28_T_2 = asSInt(_io_result_mat_28_T_1) @[accumu.scala 51:66]
              io.result.mat[28] <= _io_result_mat_28_T_2 @[accumu.scala 51:38]
              node _io_result_mat_29_T = add(io.in_from_calc8x8.mat[29], output.mat[29]) @[accumu.scala 51:66]
              node _io_result_mat_29_T_1 = tail(_io_result_mat_29_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_29_T_2 = asSInt(_io_result_mat_29_T_1) @[accumu.scala 51:66]
              io.result.mat[29] <= _io_result_mat_29_T_2 @[accumu.scala 51:38]
              node _io_result_mat_30_T = add(io.in_from_calc8x8.mat[30], output.mat[30]) @[accumu.scala 51:66]
              node _io_result_mat_30_T_1 = tail(_io_result_mat_30_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_30_T_2 = asSInt(_io_result_mat_30_T_1) @[accumu.scala 51:66]
              io.result.mat[30] <= _io_result_mat_30_T_2 @[accumu.scala 51:38]
              node _io_result_mat_31_T = add(io.in_from_calc8x8.mat[31], output.mat[31]) @[accumu.scala 51:66]
              node _io_result_mat_31_T_1 = tail(_io_result_mat_31_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_31_T_2 = asSInt(_io_result_mat_31_T_1) @[accumu.scala 51:66]
              io.result.mat[31] <= _io_result_mat_31_T_2 @[accumu.scala 51:38]
              node _io_result_mat_32_T = add(io.in_from_calc8x8.mat[32], output.mat[32]) @[accumu.scala 51:66]
              node _io_result_mat_32_T_1 = tail(_io_result_mat_32_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_32_T_2 = asSInt(_io_result_mat_32_T_1) @[accumu.scala 51:66]
              io.result.mat[32] <= _io_result_mat_32_T_2 @[accumu.scala 51:38]
              node _io_result_mat_33_T = add(io.in_from_calc8x8.mat[33], output.mat[33]) @[accumu.scala 51:66]
              node _io_result_mat_33_T_1 = tail(_io_result_mat_33_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_33_T_2 = asSInt(_io_result_mat_33_T_1) @[accumu.scala 51:66]
              io.result.mat[33] <= _io_result_mat_33_T_2 @[accumu.scala 51:38]
              node _io_result_mat_34_T = add(io.in_from_calc8x8.mat[34], output.mat[34]) @[accumu.scala 51:66]
              node _io_result_mat_34_T_1 = tail(_io_result_mat_34_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_34_T_2 = asSInt(_io_result_mat_34_T_1) @[accumu.scala 51:66]
              io.result.mat[34] <= _io_result_mat_34_T_2 @[accumu.scala 51:38]
              node _io_result_mat_35_T = add(io.in_from_calc8x8.mat[35], output.mat[35]) @[accumu.scala 51:66]
              node _io_result_mat_35_T_1 = tail(_io_result_mat_35_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_35_T_2 = asSInt(_io_result_mat_35_T_1) @[accumu.scala 51:66]
              io.result.mat[35] <= _io_result_mat_35_T_2 @[accumu.scala 51:38]
              node _io_result_mat_36_T = add(io.in_from_calc8x8.mat[36], output.mat[36]) @[accumu.scala 51:66]
              node _io_result_mat_36_T_1 = tail(_io_result_mat_36_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_36_T_2 = asSInt(_io_result_mat_36_T_1) @[accumu.scala 51:66]
              io.result.mat[36] <= _io_result_mat_36_T_2 @[accumu.scala 51:38]
              node _io_result_mat_37_T = add(io.in_from_calc8x8.mat[37], output.mat[37]) @[accumu.scala 51:66]
              node _io_result_mat_37_T_1 = tail(_io_result_mat_37_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_37_T_2 = asSInt(_io_result_mat_37_T_1) @[accumu.scala 51:66]
              io.result.mat[37] <= _io_result_mat_37_T_2 @[accumu.scala 51:38]
              node _io_result_mat_38_T = add(io.in_from_calc8x8.mat[38], output.mat[38]) @[accumu.scala 51:66]
              node _io_result_mat_38_T_1 = tail(_io_result_mat_38_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_38_T_2 = asSInt(_io_result_mat_38_T_1) @[accumu.scala 51:66]
              io.result.mat[38] <= _io_result_mat_38_T_2 @[accumu.scala 51:38]
              node _io_result_mat_39_T = add(io.in_from_calc8x8.mat[39], output.mat[39]) @[accumu.scala 51:66]
              node _io_result_mat_39_T_1 = tail(_io_result_mat_39_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_39_T_2 = asSInt(_io_result_mat_39_T_1) @[accumu.scala 51:66]
              io.result.mat[39] <= _io_result_mat_39_T_2 @[accumu.scala 51:38]
              node _io_result_mat_40_T = add(io.in_from_calc8x8.mat[40], output.mat[40]) @[accumu.scala 51:66]
              node _io_result_mat_40_T_1 = tail(_io_result_mat_40_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_40_T_2 = asSInt(_io_result_mat_40_T_1) @[accumu.scala 51:66]
              io.result.mat[40] <= _io_result_mat_40_T_2 @[accumu.scala 51:38]
              node _io_result_mat_41_T = add(io.in_from_calc8x8.mat[41], output.mat[41]) @[accumu.scala 51:66]
              node _io_result_mat_41_T_1 = tail(_io_result_mat_41_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_41_T_2 = asSInt(_io_result_mat_41_T_1) @[accumu.scala 51:66]
              io.result.mat[41] <= _io_result_mat_41_T_2 @[accumu.scala 51:38]
              node _io_result_mat_42_T = add(io.in_from_calc8x8.mat[42], output.mat[42]) @[accumu.scala 51:66]
              node _io_result_mat_42_T_1 = tail(_io_result_mat_42_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_42_T_2 = asSInt(_io_result_mat_42_T_1) @[accumu.scala 51:66]
              io.result.mat[42] <= _io_result_mat_42_T_2 @[accumu.scala 51:38]
              node _io_result_mat_43_T = add(io.in_from_calc8x8.mat[43], output.mat[43]) @[accumu.scala 51:66]
              node _io_result_mat_43_T_1 = tail(_io_result_mat_43_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_43_T_2 = asSInt(_io_result_mat_43_T_1) @[accumu.scala 51:66]
              io.result.mat[43] <= _io_result_mat_43_T_2 @[accumu.scala 51:38]
              node _io_result_mat_44_T = add(io.in_from_calc8x8.mat[44], output.mat[44]) @[accumu.scala 51:66]
              node _io_result_mat_44_T_1 = tail(_io_result_mat_44_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_44_T_2 = asSInt(_io_result_mat_44_T_1) @[accumu.scala 51:66]
              io.result.mat[44] <= _io_result_mat_44_T_2 @[accumu.scala 51:38]
              node _io_result_mat_45_T = add(io.in_from_calc8x8.mat[45], output.mat[45]) @[accumu.scala 51:66]
              node _io_result_mat_45_T_1 = tail(_io_result_mat_45_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_45_T_2 = asSInt(_io_result_mat_45_T_1) @[accumu.scala 51:66]
              io.result.mat[45] <= _io_result_mat_45_T_2 @[accumu.scala 51:38]
              node _io_result_mat_46_T = add(io.in_from_calc8x8.mat[46], output.mat[46]) @[accumu.scala 51:66]
              node _io_result_mat_46_T_1 = tail(_io_result_mat_46_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_46_T_2 = asSInt(_io_result_mat_46_T_1) @[accumu.scala 51:66]
              io.result.mat[46] <= _io_result_mat_46_T_2 @[accumu.scala 51:38]
              node _io_result_mat_47_T = add(io.in_from_calc8x8.mat[47], output.mat[47]) @[accumu.scala 51:66]
              node _io_result_mat_47_T_1 = tail(_io_result_mat_47_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_47_T_2 = asSInt(_io_result_mat_47_T_1) @[accumu.scala 51:66]
              io.result.mat[47] <= _io_result_mat_47_T_2 @[accumu.scala 51:38]
              node _io_result_mat_48_T = add(io.in_from_calc8x8.mat[48], output.mat[48]) @[accumu.scala 51:66]
              node _io_result_mat_48_T_1 = tail(_io_result_mat_48_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_48_T_2 = asSInt(_io_result_mat_48_T_1) @[accumu.scala 51:66]
              io.result.mat[48] <= _io_result_mat_48_T_2 @[accumu.scala 51:38]
              node _io_result_mat_49_T = add(io.in_from_calc8x8.mat[49], output.mat[49]) @[accumu.scala 51:66]
              node _io_result_mat_49_T_1 = tail(_io_result_mat_49_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_49_T_2 = asSInt(_io_result_mat_49_T_1) @[accumu.scala 51:66]
              io.result.mat[49] <= _io_result_mat_49_T_2 @[accumu.scala 51:38]
              node _io_result_mat_50_T = add(io.in_from_calc8x8.mat[50], output.mat[50]) @[accumu.scala 51:66]
              node _io_result_mat_50_T_1 = tail(_io_result_mat_50_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_50_T_2 = asSInt(_io_result_mat_50_T_1) @[accumu.scala 51:66]
              io.result.mat[50] <= _io_result_mat_50_T_2 @[accumu.scala 51:38]
              node _io_result_mat_51_T = add(io.in_from_calc8x8.mat[51], output.mat[51]) @[accumu.scala 51:66]
              node _io_result_mat_51_T_1 = tail(_io_result_mat_51_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_51_T_2 = asSInt(_io_result_mat_51_T_1) @[accumu.scala 51:66]
              io.result.mat[51] <= _io_result_mat_51_T_2 @[accumu.scala 51:38]
              node _io_result_mat_52_T = add(io.in_from_calc8x8.mat[52], output.mat[52]) @[accumu.scala 51:66]
              node _io_result_mat_52_T_1 = tail(_io_result_mat_52_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_52_T_2 = asSInt(_io_result_mat_52_T_1) @[accumu.scala 51:66]
              io.result.mat[52] <= _io_result_mat_52_T_2 @[accumu.scala 51:38]
              node _io_result_mat_53_T = add(io.in_from_calc8x8.mat[53], output.mat[53]) @[accumu.scala 51:66]
              node _io_result_mat_53_T_1 = tail(_io_result_mat_53_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_53_T_2 = asSInt(_io_result_mat_53_T_1) @[accumu.scala 51:66]
              io.result.mat[53] <= _io_result_mat_53_T_2 @[accumu.scala 51:38]
              node _io_result_mat_54_T = add(io.in_from_calc8x8.mat[54], output.mat[54]) @[accumu.scala 51:66]
              node _io_result_mat_54_T_1 = tail(_io_result_mat_54_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_54_T_2 = asSInt(_io_result_mat_54_T_1) @[accumu.scala 51:66]
              io.result.mat[54] <= _io_result_mat_54_T_2 @[accumu.scala 51:38]
              node _io_result_mat_55_T = add(io.in_from_calc8x8.mat[55], output.mat[55]) @[accumu.scala 51:66]
              node _io_result_mat_55_T_1 = tail(_io_result_mat_55_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_55_T_2 = asSInt(_io_result_mat_55_T_1) @[accumu.scala 51:66]
              io.result.mat[55] <= _io_result_mat_55_T_2 @[accumu.scala 51:38]
              node _io_result_mat_56_T = add(io.in_from_calc8x8.mat[56], output.mat[56]) @[accumu.scala 51:66]
              node _io_result_mat_56_T_1 = tail(_io_result_mat_56_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_56_T_2 = asSInt(_io_result_mat_56_T_1) @[accumu.scala 51:66]
              io.result.mat[56] <= _io_result_mat_56_T_2 @[accumu.scala 51:38]
              node _io_result_mat_57_T = add(io.in_from_calc8x8.mat[57], output.mat[57]) @[accumu.scala 51:66]
              node _io_result_mat_57_T_1 = tail(_io_result_mat_57_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_57_T_2 = asSInt(_io_result_mat_57_T_1) @[accumu.scala 51:66]
              io.result.mat[57] <= _io_result_mat_57_T_2 @[accumu.scala 51:38]
              node _io_result_mat_58_T = add(io.in_from_calc8x8.mat[58], output.mat[58]) @[accumu.scala 51:66]
              node _io_result_mat_58_T_1 = tail(_io_result_mat_58_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_58_T_2 = asSInt(_io_result_mat_58_T_1) @[accumu.scala 51:66]
              io.result.mat[58] <= _io_result_mat_58_T_2 @[accumu.scala 51:38]
              node _io_result_mat_59_T = add(io.in_from_calc8x8.mat[59], output.mat[59]) @[accumu.scala 51:66]
              node _io_result_mat_59_T_1 = tail(_io_result_mat_59_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_59_T_2 = asSInt(_io_result_mat_59_T_1) @[accumu.scala 51:66]
              io.result.mat[59] <= _io_result_mat_59_T_2 @[accumu.scala 51:38]
              node _io_result_mat_60_T = add(io.in_from_calc8x8.mat[60], output.mat[60]) @[accumu.scala 51:66]
              node _io_result_mat_60_T_1 = tail(_io_result_mat_60_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_60_T_2 = asSInt(_io_result_mat_60_T_1) @[accumu.scala 51:66]
              io.result.mat[60] <= _io_result_mat_60_T_2 @[accumu.scala 51:38]
              node _io_result_mat_61_T = add(io.in_from_calc8x8.mat[61], output.mat[61]) @[accumu.scala 51:66]
              node _io_result_mat_61_T_1 = tail(_io_result_mat_61_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_61_T_2 = asSInt(_io_result_mat_61_T_1) @[accumu.scala 51:66]
              io.result.mat[61] <= _io_result_mat_61_T_2 @[accumu.scala 51:38]
              node _io_result_mat_62_T = add(io.in_from_calc8x8.mat[62], output.mat[62]) @[accumu.scala 51:66]
              node _io_result_mat_62_T_1 = tail(_io_result_mat_62_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_62_T_2 = asSInt(_io_result_mat_62_T_1) @[accumu.scala 51:66]
              io.result.mat[62] <= _io_result_mat_62_T_2 @[accumu.scala 51:38]
              node _io_result_mat_63_T = add(io.in_from_calc8x8.mat[63], output.mat[63]) @[accumu.scala 51:66]
              node _io_result_mat_63_T_1 = tail(_io_result_mat_63_T, 1) @[accumu.scala 51:66]
              node _io_result_mat_63_T_2 = asSInt(_io_result_mat_63_T_1) @[accumu.scala 51:66]
              io.result.mat[63] <= _io_result_mat_63_T_2 @[accumu.scala 51:38]
              counter.ccnt <= counter.cend @[accumu.scala 52:30]
              skip @[accumu.scala 48:43]
            else : @[accumu.scala 53:24]
              io.valid_out <= UInt<1>("h00") @[accumu.scala 54:30]
              node _output_mat_0_T_3 = add(output.mat[0], io.in_from_calc8x8.mat[0]) @[accumu.scala 56:51]
              node _output_mat_0_T_4 = tail(_output_mat_0_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_0_T_5 = asSInt(_output_mat_0_T_4) @[accumu.scala 56:51]
              output.mat[0] <= _output_mat_0_T_5 @[accumu.scala 56:35]
              node _output_mat_1_T_3 = add(output.mat[1], io.in_from_calc8x8.mat[1]) @[accumu.scala 56:51]
              node _output_mat_1_T_4 = tail(_output_mat_1_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_1_T_5 = asSInt(_output_mat_1_T_4) @[accumu.scala 56:51]
              output.mat[1] <= _output_mat_1_T_5 @[accumu.scala 56:35]
              node _output_mat_2_T_3 = add(output.mat[2], io.in_from_calc8x8.mat[2]) @[accumu.scala 56:51]
              node _output_mat_2_T_4 = tail(_output_mat_2_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_2_T_5 = asSInt(_output_mat_2_T_4) @[accumu.scala 56:51]
              output.mat[2] <= _output_mat_2_T_5 @[accumu.scala 56:35]
              node _output_mat_3_T_3 = add(output.mat[3], io.in_from_calc8x8.mat[3]) @[accumu.scala 56:51]
              node _output_mat_3_T_4 = tail(_output_mat_3_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_3_T_5 = asSInt(_output_mat_3_T_4) @[accumu.scala 56:51]
              output.mat[3] <= _output_mat_3_T_5 @[accumu.scala 56:35]
              node _output_mat_4_T_3 = add(output.mat[4], io.in_from_calc8x8.mat[4]) @[accumu.scala 56:51]
              node _output_mat_4_T_4 = tail(_output_mat_4_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_4_T_5 = asSInt(_output_mat_4_T_4) @[accumu.scala 56:51]
              output.mat[4] <= _output_mat_4_T_5 @[accumu.scala 56:35]
              node _output_mat_5_T_3 = add(output.mat[5], io.in_from_calc8x8.mat[5]) @[accumu.scala 56:51]
              node _output_mat_5_T_4 = tail(_output_mat_5_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_5_T_5 = asSInt(_output_mat_5_T_4) @[accumu.scala 56:51]
              output.mat[5] <= _output_mat_5_T_5 @[accumu.scala 56:35]
              node _output_mat_6_T_3 = add(output.mat[6], io.in_from_calc8x8.mat[6]) @[accumu.scala 56:51]
              node _output_mat_6_T_4 = tail(_output_mat_6_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_6_T_5 = asSInt(_output_mat_6_T_4) @[accumu.scala 56:51]
              output.mat[6] <= _output_mat_6_T_5 @[accumu.scala 56:35]
              node _output_mat_7_T_3 = add(output.mat[7], io.in_from_calc8x8.mat[7]) @[accumu.scala 56:51]
              node _output_mat_7_T_4 = tail(_output_mat_7_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_7_T_5 = asSInt(_output_mat_7_T_4) @[accumu.scala 56:51]
              output.mat[7] <= _output_mat_7_T_5 @[accumu.scala 56:35]
              node _output_mat_8_T_3 = add(output.mat[8], io.in_from_calc8x8.mat[8]) @[accumu.scala 56:51]
              node _output_mat_8_T_4 = tail(_output_mat_8_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_8_T_5 = asSInt(_output_mat_8_T_4) @[accumu.scala 56:51]
              output.mat[8] <= _output_mat_8_T_5 @[accumu.scala 56:35]
              node _output_mat_9_T_3 = add(output.mat[9], io.in_from_calc8x8.mat[9]) @[accumu.scala 56:51]
              node _output_mat_9_T_4 = tail(_output_mat_9_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_9_T_5 = asSInt(_output_mat_9_T_4) @[accumu.scala 56:51]
              output.mat[9] <= _output_mat_9_T_5 @[accumu.scala 56:35]
              node _output_mat_10_T_3 = add(output.mat[10], io.in_from_calc8x8.mat[10]) @[accumu.scala 56:51]
              node _output_mat_10_T_4 = tail(_output_mat_10_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_10_T_5 = asSInt(_output_mat_10_T_4) @[accumu.scala 56:51]
              output.mat[10] <= _output_mat_10_T_5 @[accumu.scala 56:35]
              node _output_mat_11_T_3 = add(output.mat[11], io.in_from_calc8x8.mat[11]) @[accumu.scala 56:51]
              node _output_mat_11_T_4 = tail(_output_mat_11_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_11_T_5 = asSInt(_output_mat_11_T_4) @[accumu.scala 56:51]
              output.mat[11] <= _output_mat_11_T_5 @[accumu.scala 56:35]
              node _output_mat_12_T_3 = add(output.mat[12], io.in_from_calc8x8.mat[12]) @[accumu.scala 56:51]
              node _output_mat_12_T_4 = tail(_output_mat_12_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_12_T_5 = asSInt(_output_mat_12_T_4) @[accumu.scala 56:51]
              output.mat[12] <= _output_mat_12_T_5 @[accumu.scala 56:35]
              node _output_mat_13_T_3 = add(output.mat[13], io.in_from_calc8x8.mat[13]) @[accumu.scala 56:51]
              node _output_mat_13_T_4 = tail(_output_mat_13_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_13_T_5 = asSInt(_output_mat_13_T_4) @[accumu.scala 56:51]
              output.mat[13] <= _output_mat_13_T_5 @[accumu.scala 56:35]
              node _output_mat_14_T_3 = add(output.mat[14], io.in_from_calc8x8.mat[14]) @[accumu.scala 56:51]
              node _output_mat_14_T_4 = tail(_output_mat_14_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_14_T_5 = asSInt(_output_mat_14_T_4) @[accumu.scala 56:51]
              output.mat[14] <= _output_mat_14_T_5 @[accumu.scala 56:35]
              node _output_mat_15_T_3 = add(output.mat[15], io.in_from_calc8x8.mat[15]) @[accumu.scala 56:51]
              node _output_mat_15_T_4 = tail(_output_mat_15_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_15_T_5 = asSInt(_output_mat_15_T_4) @[accumu.scala 56:51]
              output.mat[15] <= _output_mat_15_T_5 @[accumu.scala 56:35]
              node _output_mat_16_T_3 = add(output.mat[16], io.in_from_calc8x8.mat[16]) @[accumu.scala 56:51]
              node _output_mat_16_T_4 = tail(_output_mat_16_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_16_T_5 = asSInt(_output_mat_16_T_4) @[accumu.scala 56:51]
              output.mat[16] <= _output_mat_16_T_5 @[accumu.scala 56:35]
              node _output_mat_17_T_3 = add(output.mat[17], io.in_from_calc8x8.mat[17]) @[accumu.scala 56:51]
              node _output_mat_17_T_4 = tail(_output_mat_17_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_17_T_5 = asSInt(_output_mat_17_T_4) @[accumu.scala 56:51]
              output.mat[17] <= _output_mat_17_T_5 @[accumu.scala 56:35]
              node _output_mat_18_T_3 = add(output.mat[18], io.in_from_calc8x8.mat[18]) @[accumu.scala 56:51]
              node _output_mat_18_T_4 = tail(_output_mat_18_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_18_T_5 = asSInt(_output_mat_18_T_4) @[accumu.scala 56:51]
              output.mat[18] <= _output_mat_18_T_5 @[accumu.scala 56:35]
              node _output_mat_19_T_3 = add(output.mat[19], io.in_from_calc8x8.mat[19]) @[accumu.scala 56:51]
              node _output_mat_19_T_4 = tail(_output_mat_19_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_19_T_5 = asSInt(_output_mat_19_T_4) @[accumu.scala 56:51]
              output.mat[19] <= _output_mat_19_T_5 @[accumu.scala 56:35]
              node _output_mat_20_T_3 = add(output.mat[20], io.in_from_calc8x8.mat[20]) @[accumu.scala 56:51]
              node _output_mat_20_T_4 = tail(_output_mat_20_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_20_T_5 = asSInt(_output_mat_20_T_4) @[accumu.scala 56:51]
              output.mat[20] <= _output_mat_20_T_5 @[accumu.scala 56:35]
              node _output_mat_21_T_3 = add(output.mat[21], io.in_from_calc8x8.mat[21]) @[accumu.scala 56:51]
              node _output_mat_21_T_4 = tail(_output_mat_21_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_21_T_5 = asSInt(_output_mat_21_T_4) @[accumu.scala 56:51]
              output.mat[21] <= _output_mat_21_T_5 @[accumu.scala 56:35]
              node _output_mat_22_T_3 = add(output.mat[22], io.in_from_calc8x8.mat[22]) @[accumu.scala 56:51]
              node _output_mat_22_T_4 = tail(_output_mat_22_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_22_T_5 = asSInt(_output_mat_22_T_4) @[accumu.scala 56:51]
              output.mat[22] <= _output_mat_22_T_5 @[accumu.scala 56:35]
              node _output_mat_23_T_3 = add(output.mat[23], io.in_from_calc8x8.mat[23]) @[accumu.scala 56:51]
              node _output_mat_23_T_4 = tail(_output_mat_23_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_23_T_5 = asSInt(_output_mat_23_T_4) @[accumu.scala 56:51]
              output.mat[23] <= _output_mat_23_T_5 @[accumu.scala 56:35]
              node _output_mat_24_T_3 = add(output.mat[24], io.in_from_calc8x8.mat[24]) @[accumu.scala 56:51]
              node _output_mat_24_T_4 = tail(_output_mat_24_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_24_T_5 = asSInt(_output_mat_24_T_4) @[accumu.scala 56:51]
              output.mat[24] <= _output_mat_24_T_5 @[accumu.scala 56:35]
              node _output_mat_25_T_3 = add(output.mat[25], io.in_from_calc8x8.mat[25]) @[accumu.scala 56:51]
              node _output_mat_25_T_4 = tail(_output_mat_25_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_25_T_5 = asSInt(_output_mat_25_T_4) @[accumu.scala 56:51]
              output.mat[25] <= _output_mat_25_T_5 @[accumu.scala 56:35]
              node _output_mat_26_T_3 = add(output.mat[26], io.in_from_calc8x8.mat[26]) @[accumu.scala 56:51]
              node _output_mat_26_T_4 = tail(_output_mat_26_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_26_T_5 = asSInt(_output_mat_26_T_4) @[accumu.scala 56:51]
              output.mat[26] <= _output_mat_26_T_5 @[accumu.scala 56:35]
              node _output_mat_27_T_3 = add(output.mat[27], io.in_from_calc8x8.mat[27]) @[accumu.scala 56:51]
              node _output_mat_27_T_4 = tail(_output_mat_27_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_27_T_5 = asSInt(_output_mat_27_T_4) @[accumu.scala 56:51]
              output.mat[27] <= _output_mat_27_T_5 @[accumu.scala 56:35]
              node _output_mat_28_T_3 = add(output.mat[28], io.in_from_calc8x8.mat[28]) @[accumu.scala 56:51]
              node _output_mat_28_T_4 = tail(_output_mat_28_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_28_T_5 = asSInt(_output_mat_28_T_4) @[accumu.scala 56:51]
              output.mat[28] <= _output_mat_28_T_5 @[accumu.scala 56:35]
              node _output_mat_29_T_3 = add(output.mat[29], io.in_from_calc8x8.mat[29]) @[accumu.scala 56:51]
              node _output_mat_29_T_4 = tail(_output_mat_29_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_29_T_5 = asSInt(_output_mat_29_T_4) @[accumu.scala 56:51]
              output.mat[29] <= _output_mat_29_T_5 @[accumu.scala 56:35]
              node _output_mat_30_T_3 = add(output.mat[30], io.in_from_calc8x8.mat[30]) @[accumu.scala 56:51]
              node _output_mat_30_T_4 = tail(_output_mat_30_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_30_T_5 = asSInt(_output_mat_30_T_4) @[accumu.scala 56:51]
              output.mat[30] <= _output_mat_30_T_5 @[accumu.scala 56:35]
              node _output_mat_31_T_3 = add(output.mat[31], io.in_from_calc8x8.mat[31]) @[accumu.scala 56:51]
              node _output_mat_31_T_4 = tail(_output_mat_31_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_31_T_5 = asSInt(_output_mat_31_T_4) @[accumu.scala 56:51]
              output.mat[31] <= _output_mat_31_T_5 @[accumu.scala 56:35]
              node _output_mat_32_T_3 = add(output.mat[32], io.in_from_calc8x8.mat[32]) @[accumu.scala 56:51]
              node _output_mat_32_T_4 = tail(_output_mat_32_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_32_T_5 = asSInt(_output_mat_32_T_4) @[accumu.scala 56:51]
              output.mat[32] <= _output_mat_32_T_5 @[accumu.scala 56:35]
              node _output_mat_33_T_3 = add(output.mat[33], io.in_from_calc8x8.mat[33]) @[accumu.scala 56:51]
              node _output_mat_33_T_4 = tail(_output_mat_33_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_33_T_5 = asSInt(_output_mat_33_T_4) @[accumu.scala 56:51]
              output.mat[33] <= _output_mat_33_T_5 @[accumu.scala 56:35]
              node _output_mat_34_T_3 = add(output.mat[34], io.in_from_calc8x8.mat[34]) @[accumu.scala 56:51]
              node _output_mat_34_T_4 = tail(_output_mat_34_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_34_T_5 = asSInt(_output_mat_34_T_4) @[accumu.scala 56:51]
              output.mat[34] <= _output_mat_34_T_5 @[accumu.scala 56:35]
              node _output_mat_35_T_3 = add(output.mat[35], io.in_from_calc8x8.mat[35]) @[accumu.scala 56:51]
              node _output_mat_35_T_4 = tail(_output_mat_35_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_35_T_5 = asSInt(_output_mat_35_T_4) @[accumu.scala 56:51]
              output.mat[35] <= _output_mat_35_T_5 @[accumu.scala 56:35]
              node _output_mat_36_T_3 = add(output.mat[36], io.in_from_calc8x8.mat[36]) @[accumu.scala 56:51]
              node _output_mat_36_T_4 = tail(_output_mat_36_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_36_T_5 = asSInt(_output_mat_36_T_4) @[accumu.scala 56:51]
              output.mat[36] <= _output_mat_36_T_5 @[accumu.scala 56:35]
              node _output_mat_37_T_3 = add(output.mat[37], io.in_from_calc8x8.mat[37]) @[accumu.scala 56:51]
              node _output_mat_37_T_4 = tail(_output_mat_37_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_37_T_5 = asSInt(_output_mat_37_T_4) @[accumu.scala 56:51]
              output.mat[37] <= _output_mat_37_T_5 @[accumu.scala 56:35]
              node _output_mat_38_T_3 = add(output.mat[38], io.in_from_calc8x8.mat[38]) @[accumu.scala 56:51]
              node _output_mat_38_T_4 = tail(_output_mat_38_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_38_T_5 = asSInt(_output_mat_38_T_4) @[accumu.scala 56:51]
              output.mat[38] <= _output_mat_38_T_5 @[accumu.scala 56:35]
              node _output_mat_39_T_3 = add(output.mat[39], io.in_from_calc8x8.mat[39]) @[accumu.scala 56:51]
              node _output_mat_39_T_4 = tail(_output_mat_39_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_39_T_5 = asSInt(_output_mat_39_T_4) @[accumu.scala 56:51]
              output.mat[39] <= _output_mat_39_T_5 @[accumu.scala 56:35]
              node _output_mat_40_T_3 = add(output.mat[40], io.in_from_calc8x8.mat[40]) @[accumu.scala 56:51]
              node _output_mat_40_T_4 = tail(_output_mat_40_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_40_T_5 = asSInt(_output_mat_40_T_4) @[accumu.scala 56:51]
              output.mat[40] <= _output_mat_40_T_5 @[accumu.scala 56:35]
              node _output_mat_41_T_3 = add(output.mat[41], io.in_from_calc8x8.mat[41]) @[accumu.scala 56:51]
              node _output_mat_41_T_4 = tail(_output_mat_41_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_41_T_5 = asSInt(_output_mat_41_T_4) @[accumu.scala 56:51]
              output.mat[41] <= _output_mat_41_T_5 @[accumu.scala 56:35]
              node _output_mat_42_T_3 = add(output.mat[42], io.in_from_calc8x8.mat[42]) @[accumu.scala 56:51]
              node _output_mat_42_T_4 = tail(_output_mat_42_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_42_T_5 = asSInt(_output_mat_42_T_4) @[accumu.scala 56:51]
              output.mat[42] <= _output_mat_42_T_5 @[accumu.scala 56:35]
              node _output_mat_43_T_3 = add(output.mat[43], io.in_from_calc8x8.mat[43]) @[accumu.scala 56:51]
              node _output_mat_43_T_4 = tail(_output_mat_43_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_43_T_5 = asSInt(_output_mat_43_T_4) @[accumu.scala 56:51]
              output.mat[43] <= _output_mat_43_T_5 @[accumu.scala 56:35]
              node _output_mat_44_T_3 = add(output.mat[44], io.in_from_calc8x8.mat[44]) @[accumu.scala 56:51]
              node _output_mat_44_T_4 = tail(_output_mat_44_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_44_T_5 = asSInt(_output_mat_44_T_4) @[accumu.scala 56:51]
              output.mat[44] <= _output_mat_44_T_5 @[accumu.scala 56:35]
              node _output_mat_45_T_3 = add(output.mat[45], io.in_from_calc8x8.mat[45]) @[accumu.scala 56:51]
              node _output_mat_45_T_4 = tail(_output_mat_45_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_45_T_5 = asSInt(_output_mat_45_T_4) @[accumu.scala 56:51]
              output.mat[45] <= _output_mat_45_T_5 @[accumu.scala 56:35]
              node _output_mat_46_T_3 = add(output.mat[46], io.in_from_calc8x8.mat[46]) @[accumu.scala 56:51]
              node _output_mat_46_T_4 = tail(_output_mat_46_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_46_T_5 = asSInt(_output_mat_46_T_4) @[accumu.scala 56:51]
              output.mat[46] <= _output_mat_46_T_5 @[accumu.scala 56:35]
              node _output_mat_47_T_3 = add(output.mat[47], io.in_from_calc8x8.mat[47]) @[accumu.scala 56:51]
              node _output_mat_47_T_4 = tail(_output_mat_47_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_47_T_5 = asSInt(_output_mat_47_T_4) @[accumu.scala 56:51]
              output.mat[47] <= _output_mat_47_T_5 @[accumu.scala 56:35]
              node _output_mat_48_T_3 = add(output.mat[48], io.in_from_calc8x8.mat[48]) @[accumu.scala 56:51]
              node _output_mat_48_T_4 = tail(_output_mat_48_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_48_T_5 = asSInt(_output_mat_48_T_4) @[accumu.scala 56:51]
              output.mat[48] <= _output_mat_48_T_5 @[accumu.scala 56:35]
              node _output_mat_49_T_3 = add(output.mat[49], io.in_from_calc8x8.mat[49]) @[accumu.scala 56:51]
              node _output_mat_49_T_4 = tail(_output_mat_49_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_49_T_5 = asSInt(_output_mat_49_T_4) @[accumu.scala 56:51]
              output.mat[49] <= _output_mat_49_T_5 @[accumu.scala 56:35]
              node _output_mat_50_T_3 = add(output.mat[50], io.in_from_calc8x8.mat[50]) @[accumu.scala 56:51]
              node _output_mat_50_T_4 = tail(_output_mat_50_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_50_T_5 = asSInt(_output_mat_50_T_4) @[accumu.scala 56:51]
              output.mat[50] <= _output_mat_50_T_5 @[accumu.scala 56:35]
              node _output_mat_51_T_3 = add(output.mat[51], io.in_from_calc8x8.mat[51]) @[accumu.scala 56:51]
              node _output_mat_51_T_4 = tail(_output_mat_51_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_51_T_5 = asSInt(_output_mat_51_T_4) @[accumu.scala 56:51]
              output.mat[51] <= _output_mat_51_T_5 @[accumu.scala 56:35]
              node _output_mat_52_T_3 = add(output.mat[52], io.in_from_calc8x8.mat[52]) @[accumu.scala 56:51]
              node _output_mat_52_T_4 = tail(_output_mat_52_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_52_T_5 = asSInt(_output_mat_52_T_4) @[accumu.scala 56:51]
              output.mat[52] <= _output_mat_52_T_5 @[accumu.scala 56:35]
              node _output_mat_53_T_3 = add(output.mat[53], io.in_from_calc8x8.mat[53]) @[accumu.scala 56:51]
              node _output_mat_53_T_4 = tail(_output_mat_53_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_53_T_5 = asSInt(_output_mat_53_T_4) @[accumu.scala 56:51]
              output.mat[53] <= _output_mat_53_T_5 @[accumu.scala 56:35]
              node _output_mat_54_T_3 = add(output.mat[54], io.in_from_calc8x8.mat[54]) @[accumu.scala 56:51]
              node _output_mat_54_T_4 = tail(_output_mat_54_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_54_T_5 = asSInt(_output_mat_54_T_4) @[accumu.scala 56:51]
              output.mat[54] <= _output_mat_54_T_5 @[accumu.scala 56:35]
              node _output_mat_55_T_3 = add(output.mat[55], io.in_from_calc8x8.mat[55]) @[accumu.scala 56:51]
              node _output_mat_55_T_4 = tail(_output_mat_55_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_55_T_5 = asSInt(_output_mat_55_T_4) @[accumu.scala 56:51]
              output.mat[55] <= _output_mat_55_T_5 @[accumu.scala 56:35]
              node _output_mat_56_T_3 = add(output.mat[56], io.in_from_calc8x8.mat[56]) @[accumu.scala 56:51]
              node _output_mat_56_T_4 = tail(_output_mat_56_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_56_T_5 = asSInt(_output_mat_56_T_4) @[accumu.scala 56:51]
              output.mat[56] <= _output_mat_56_T_5 @[accumu.scala 56:35]
              node _output_mat_57_T_3 = add(output.mat[57], io.in_from_calc8x8.mat[57]) @[accumu.scala 56:51]
              node _output_mat_57_T_4 = tail(_output_mat_57_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_57_T_5 = asSInt(_output_mat_57_T_4) @[accumu.scala 56:51]
              output.mat[57] <= _output_mat_57_T_5 @[accumu.scala 56:35]
              node _output_mat_58_T_3 = add(output.mat[58], io.in_from_calc8x8.mat[58]) @[accumu.scala 56:51]
              node _output_mat_58_T_4 = tail(_output_mat_58_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_58_T_5 = asSInt(_output_mat_58_T_4) @[accumu.scala 56:51]
              output.mat[58] <= _output_mat_58_T_5 @[accumu.scala 56:35]
              node _output_mat_59_T_3 = add(output.mat[59], io.in_from_calc8x8.mat[59]) @[accumu.scala 56:51]
              node _output_mat_59_T_4 = tail(_output_mat_59_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_59_T_5 = asSInt(_output_mat_59_T_4) @[accumu.scala 56:51]
              output.mat[59] <= _output_mat_59_T_5 @[accumu.scala 56:35]
              node _output_mat_60_T_3 = add(output.mat[60], io.in_from_calc8x8.mat[60]) @[accumu.scala 56:51]
              node _output_mat_60_T_4 = tail(_output_mat_60_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_60_T_5 = asSInt(_output_mat_60_T_4) @[accumu.scala 56:51]
              output.mat[60] <= _output_mat_60_T_5 @[accumu.scala 56:35]
              node _output_mat_61_T_3 = add(output.mat[61], io.in_from_calc8x8.mat[61]) @[accumu.scala 56:51]
              node _output_mat_61_T_4 = tail(_output_mat_61_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_61_T_5 = asSInt(_output_mat_61_T_4) @[accumu.scala 56:51]
              output.mat[61] <= _output_mat_61_T_5 @[accumu.scala 56:35]
              node _output_mat_62_T_3 = add(output.mat[62], io.in_from_calc8x8.mat[62]) @[accumu.scala 56:51]
              node _output_mat_62_T_4 = tail(_output_mat_62_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_62_T_5 = asSInt(_output_mat_62_T_4) @[accumu.scala 56:51]
              output.mat[62] <= _output_mat_62_T_5 @[accumu.scala 56:35]
              node _output_mat_63_T_3 = add(output.mat[63], io.in_from_calc8x8.mat[63]) @[accumu.scala 56:51]
              node _output_mat_63_T_4 = tail(_output_mat_63_T_3, 1) @[accumu.scala 56:51]
              node _output_mat_63_T_5 = asSInt(_output_mat_63_T_4) @[accumu.scala 56:51]
              output.mat[63] <= _output_mat_63_T_5 @[accumu.scala 56:35]
              node _counter_ccnt_T_2 = sub(counter.ccnt, UInt<1>("h01")) @[accumu.scala 57:45]
              node _counter_ccnt_T_3 = tail(_counter_ccnt_T_2, 1) @[accumu.scala 57:45]
              counter.ccnt <= _counter_ccnt_T_3 @[accumu.scala 57:30]
              skip @[accumu.scala 53:24]
          node _T_2 = eq(counter.ccnt, UInt<1>("h01")) @[accumu.scala 59:30]
          when _T_2 : @[accumu.scala 59:37]
            wire nxt : UInt<1> @[utils.scala 16:23]
            node _nxt_T = eq(now_addr.ccnt, now_addr.cend) @[utils.scala 17:20]
            nxt <= _nxt_T @[utils.scala 17:13]
            node _now_addr_ccnt_T = add(now_addr.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _now_addr_ccnt_T_1 = tail(_now_addr_ccnt_T, 1) @[utils.scala 18:35]
            node _now_addr_ccnt_T_2 = mux(nxt, UInt<1>("h00"), _now_addr_ccnt_T_1) @[utils.scala 18:20]
            now_addr.ccnt <= _now_addr_ccnt_T_2 @[utils.scala 18:14]
            skip @[accumu.scala 59:37]
          skip @[accumu.scala 42:26]
        skip @[accumu.scala 41:23]
    
  module Quant : 
    input clock : Clock
    input reset : Reset
    output io : {flip valid_in : UInt<1>, valid_out : UInt<1>, flip flag_job : UInt<1>, flip in_from_accumu : {mat : SInt<44>[64]}, result : {mat : SInt<16>[64]}, flip quant_in : {in_q : UInt<6>, out_q : UInt<6>}}
    
    wire _quant_WIRE : {in_q : UInt<6>, out_q : UInt<6>} @[quant.scala 77:37]
    _quant_WIRE.out_q <= UInt<6>("h00") @[quant.scala 77:37]
    _quant_WIRE.in_q <= UInt<6>("h00") @[quant.scala 77:37]
    reg quant : {in_q : UInt<6>, out_q : UInt<6>}, clock with : (reset => (reset, _quant_WIRE)) @[quant.scala 77:24]
    io.valid_out <= UInt<1>("h00") @[quant.scala 79:18]
    wire _io_result_WIRE : {mat : SInt<16>[64]} @[quant.scala 80:30]
    node _io_result_T = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[0] <= _io_result_T @[quant.scala 80:30]
    node _io_result_T_1 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[1] <= _io_result_T_1 @[quant.scala 80:30]
    node _io_result_T_2 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[2] <= _io_result_T_2 @[quant.scala 80:30]
    node _io_result_T_3 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[3] <= _io_result_T_3 @[quant.scala 80:30]
    node _io_result_T_4 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[4] <= _io_result_T_4 @[quant.scala 80:30]
    node _io_result_T_5 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[5] <= _io_result_T_5 @[quant.scala 80:30]
    node _io_result_T_6 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[6] <= _io_result_T_6 @[quant.scala 80:30]
    node _io_result_T_7 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[7] <= _io_result_T_7 @[quant.scala 80:30]
    node _io_result_T_8 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[8] <= _io_result_T_8 @[quant.scala 80:30]
    node _io_result_T_9 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[9] <= _io_result_T_9 @[quant.scala 80:30]
    node _io_result_T_10 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[10] <= _io_result_T_10 @[quant.scala 80:30]
    node _io_result_T_11 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[11] <= _io_result_T_11 @[quant.scala 80:30]
    node _io_result_T_12 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[12] <= _io_result_T_12 @[quant.scala 80:30]
    node _io_result_T_13 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[13] <= _io_result_T_13 @[quant.scala 80:30]
    node _io_result_T_14 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[14] <= _io_result_T_14 @[quant.scala 80:30]
    node _io_result_T_15 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[15] <= _io_result_T_15 @[quant.scala 80:30]
    node _io_result_T_16 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[16] <= _io_result_T_16 @[quant.scala 80:30]
    node _io_result_T_17 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[17] <= _io_result_T_17 @[quant.scala 80:30]
    node _io_result_T_18 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[18] <= _io_result_T_18 @[quant.scala 80:30]
    node _io_result_T_19 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[19] <= _io_result_T_19 @[quant.scala 80:30]
    node _io_result_T_20 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[20] <= _io_result_T_20 @[quant.scala 80:30]
    node _io_result_T_21 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[21] <= _io_result_T_21 @[quant.scala 80:30]
    node _io_result_T_22 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[22] <= _io_result_T_22 @[quant.scala 80:30]
    node _io_result_T_23 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[23] <= _io_result_T_23 @[quant.scala 80:30]
    node _io_result_T_24 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[24] <= _io_result_T_24 @[quant.scala 80:30]
    node _io_result_T_25 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[25] <= _io_result_T_25 @[quant.scala 80:30]
    node _io_result_T_26 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[26] <= _io_result_T_26 @[quant.scala 80:30]
    node _io_result_T_27 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[27] <= _io_result_T_27 @[quant.scala 80:30]
    node _io_result_T_28 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[28] <= _io_result_T_28 @[quant.scala 80:30]
    node _io_result_T_29 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[29] <= _io_result_T_29 @[quant.scala 80:30]
    node _io_result_T_30 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[30] <= _io_result_T_30 @[quant.scala 80:30]
    node _io_result_T_31 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[31] <= _io_result_T_31 @[quant.scala 80:30]
    node _io_result_T_32 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[32] <= _io_result_T_32 @[quant.scala 80:30]
    node _io_result_T_33 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[33] <= _io_result_T_33 @[quant.scala 80:30]
    node _io_result_T_34 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[34] <= _io_result_T_34 @[quant.scala 80:30]
    node _io_result_T_35 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[35] <= _io_result_T_35 @[quant.scala 80:30]
    node _io_result_T_36 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[36] <= _io_result_T_36 @[quant.scala 80:30]
    node _io_result_T_37 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[37] <= _io_result_T_37 @[quant.scala 80:30]
    node _io_result_T_38 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[38] <= _io_result_T_38 @[quant.scala 80:30]
    node _io_result_T_39 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[39] <= _io_result_T_39 @[quant.scala 80:30]
    node _io_result_T_40 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[40] <= _io_result_T_40 @[quant.scala 80:30]
    node _io_result_T_41 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[41] <= _io_result_T_41 @[quant.scala 80:30]
    node _io_result_T_42 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[42] <= _io_result_T_42 @[quant.scala 80:30]
    node _io_result_T_43 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[43] <= _io_result_T_43 @[quant.scala 80:30]
    node _io_result_T_44 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[44] <= _io_result_T_44 @[quant.scala 80:30]
    node _io_result_T_45 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[45] <= _io_result_T_45 @[quant.scala 80:30]
    node _io_result_T_46 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[46] <= _io_result_T_46 @[quant.scala 80:30]
    node _io_result_T_47 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[47] <= _io_result_T_47 @[quant.scala 80:30]
    node _io_result_T_48 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[48] <= _io_result_T_48 @[quant.scala 80:30]
    node _io_result_T_49 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[49] <= _io_result_T_49 @[quant.scala 80:30]
    node _io_result_T_50 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[50] <= _io_result_T_50 @[quant.scala 80:30]
    node _io_result_T_51 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[51] <= _io_result_T_51 @[quant.scala 80:30]
    node _io_result_T_52 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[52] <= _io_result_T_52 @[quant.scala 80:30]
    node _io_result_T_53 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[53] <= _io_result_T_53 @[quant.scala 80:30]
    node _io_result_T_54 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[54] <= _io_result_T_54 @[quant.scala 80:30]
    node _io_result_T_55 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[55] <= _io_result_T_55 @[quant.scala 80:30]
    node _io_result_T_56 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[56] <= _io_result_T_56 @[quant.scala 80:30]
    node _io_result_T_57 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[57] <= _io_result_T_57 @[quant.scala 80:30]
    node _io_result_T_58 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[58] <= _io_result_T_58 @[quant.scala 80:30]
    node _io_result_T_59 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[59] <= _io_result_T_59 @[quant.scala 80:30]
    node _io_result_T_60 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[60] <= _io_result_T_60 @[quant.scala 80:30]
    node _io_result_T_61 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[61] <= _io_result_T_61 @[quant.scala 80:30]
    node _io_result_T_62 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[62] <= _io_result_T_62 @[quant.scala 80:30]
    node _io_result_T_63 = asSInt(UInt<16>("h00")) @[quant.scala 80:30]
    _io_result_WIRE.mat[63] <= _io_result_T_63 @[quant.scala 80:30]
    io.result.mat[0] <= _io_result_WIRE.mat[0] @[quant.scala 80:15]
    io.result.mat[1] <= _io_result_WIRE.mat[1] @[quant.scala 80:15]
    io.result.mat[2] <= _io_result_WIRE.mat[2] @[quant.scala 80:15]
    io.result.mat[3] <= _io_result_WIRE.mat[3] @[quant.scala 80:15]
    io.result.mat[4] <= _io_result_WIRE.mat[4] @[quant.scala 80:15]
    io.result.mat[5] <= _io_result_WIRE.mat[5] @[quant.scala 80:15]
    io.result.mat[6] <= _io_result_WIRE.mat[6] @[quant.scala 80:15]
    io.result.mat[7] <= _io_result_WIRE.mat[7] @[quant.scala 80:15]
    io.result.mat[8] <= _io_result_WIRE.mat[8] @[quant.scala 80:15]
    io.result.mat[9] <= _io_result_WIRE.mat[9] @[quant.scala 80:15]
    io.result.mat[10] <= _io_result_WIRE.mat[10] @[quant.scala 80:15]
    io.result.mat[11] <= _io_result_WIRE.mat[11] @[quant.scala 80:15]
    io.result.mat[12] <= _io_result_WIRE.mat[12] @[quant.scala 80:15]
    io.result.mat[13] <= _io_result_WIRE.mat[13] @[quant.scala 80:15]
    io.result.mat[14] <= _io_result_WIRE.mat[14] @[quant.scala 80:15]
    io.result.mat[15] <= _io_result_WIRE.mat[15] @[quant.scala 80:15]
    io.result.mat[16] <= _io_result_WIRE.mat[16] @[quant.scala 80:15]
    io.result.mat[17] <= _io_result_WIRE.mat[17] @[quant.scala 80:15]
    io.result.mat[18] <= _io_result_WIRE.mat[18] @[quant.scala 80:15]
    io.result.mat[19] <= _io_result_WIRE.mat[19] @[quant.scala 80:15]
    io.result.mat[20] <= _io_result_WIRE.mat[20] @[quant.scala 80:15]
    io.result.mat[21] <= _io_result_WIRE.mat[21] @[quant.scala 80:15]
    io.result.mat[22] <= _io_result_WIRE.mat[22] @[quant.scala 80:15]
    io.result.mat[23] <= _io_result_WIRE.mat[23] @[quant.scala 80:15]
    io.result.mat[24] <= _io_result_WIRE.mat[24] @[quant.scala 80:15]
    io.result.mat[25] <= _io_result_WIRE.mat[25] @[quant.scala 80:15]
    io.result.mat[26] <= _io_result_WIRE.mat[26] @[quant.scala 80:15]
    io.result.mat[27] <= _io_result_WIRE.mat[27] @[quant.scala 80:15]
    io.result.mat[28] <= _io_result_WIRE.mat[28] @[quant.scala 80:15]
    io.result.mat[29] <= _io_result_WIRE.mat[29] @[quant.scala 80:15]
    io.result.mat[30] <= _io_result_WIRE.mat[30] @[quant.scala 80:15]
    io.result.mat[31] <= _io_result_WIRE.mat[31] @[quant.scala 80:15]
    io.result.mat[32] <= _io_result_WIRE.mat[32] @[quant.scala 80:15]
    io.result.mat[33] <= _io_result_WIRE.mat[33] @[quant.scala 80:15]
    io.result.mat[34] <= _io_result_WIRE.mat[34] @[quant.scala 80:15]
    io.result.mat[35] <= _io_result_WIRE.mat[35] @[quant.scala 80:15]
    io.result.mat[36] <= _io_result_WIRE.mat[36] @[quant.scala 80:15]
    io.result.mat[37] <= _io_result_WIRE.mat[37] @[quant.scala 80:15]
    io.result.mat[38] <= _io_result_WIRE.mat[38] @[quant.scala 80:15]
    io.result.mat[39] <= _io_result_WIRE.mat[39] @[quant.scala 80:15]
    io.result.mat[40] <= _io_result_WIRE.mat[40] @[quant.scala 80:15]
    io.result.mat[41] <= _io_result_WIRE.mat[41] @[quant.scala 80:15]
    io.result.mat[42] <= _io_result_WIRE.mat[42] @[quant.scala 80:15]
    io.result.mat[43] <= _io_result_WIRE.mat[43] @[quant.scala 80:15]
    io.result.mat[44] <= _io_result_WIRE.mat[44] @[quant.scala 80:15]
    io.result.mat[45] <= _io_result_WIRE.mat[45] @[quant.scala 80:15]
    io.result.mat[46] <= _io_result_WIRE.mat[46] @[quant.scala 80:15]
    io.result.mat[47] <= _io_result_WIRE.mat[47] @[quant.scala 80:15]
    io.result.mat[48] <= _io_result_WIRE.mat[48] @[quant.scala 80:15]
    io.result.mat[49] <= _io_result_WIRE.mat[49] @[quant.scala 80:15]
    io.result.mat[50] <= _io_result_WIRE.mat[50] @[quant.scala 80:15]
    io.result.mat[51] <= _io_result_WIRE.mat[51] @[quant.scala 80:15]
    io.result.mat[52] <= _io_result_WIRE.mat[52] @[quant.scala 80:15]
    io.result.mat[53] <= _io_result_WIRE.mat[53] @[quant.scala 80:15]
    io.result.mat[54] <= _io_result_WIRE.mat[54] @[quant.scala 80:15]
    io.result.mat[55] <= _io_result_WIRE.mat[55] @[quant.scala 80:15]
    io.result.mat[56] <= _io_result_WIRE.mat[56] @[quant.scala 80:15]
    io.result.mat[57] <= _io_result_WIRE.mat[57] @[quant.scala 80:15]
    io.result.mat[58] <= _io_result_WIRE.mat[58] @[quant.scala 80:15]
    io.result.mat[59] <= _io_result_WIRE.mat[59] @[quant.scala 80:15]
    io.result.mat[60] <= _io_result_WIRE.mat[60] @[quant.scala 80:15]
    io.result.mat[61] <= _io_result_WIRE.mat[61] @[quant.scala 80:15]
    io.result.mat[62] <= _io_result_WIRE.mat[62] @[quant.scala 80:15]
    io.result.mat[63] <= _io_result_WIRE.mat[63] @[quant.scala 80:15]
    when io.flag_job : @[quant.scala 82:22]
      quant.out_q <= io.quant_in.out_q @[quant.scala 83:15]
      quant.in_q <= io.quant_in.in_q @[quant.scala 83:15]
      skip @[quant.scala 82:22]
    else : @[quant.scala 84:16]
      io.valid_out <= io.valid_in @[quant.scala 85:22]
      node _io_result_mat_0_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_0_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_0_T_2 = tail(_io_result_mat_0_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_0_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_0_ret1_T = dshl(io.in_from_accumu.mat[0], _io_result_mat_0_T_2) @[quant.scala 52:18]
      io_result_mat_0_ret1 <= _io_result_mat_0_ret1_T @[quant.scala 52:14]
      node _io_result_mat_0_T_3 = leq(io_result_mat_0_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_0_T_4 = geq(io_result_mat_0_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_0_T_5 = mux(_io_result_mat_0_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_0_ret1) @[quant.scala 53:41]
      node _io_result_mat_0_T_6 = mux(_io_result_mat_0_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_0_T_5) @[quant.scala 53:19]
      node _io_result_mat_0_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_0_T_8 = tail(_io_result_mat_0_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_0_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_0_ret1_T_1 = dshr(io.in_from_accumu.mat[0], _io_result_mat_0_T_8) @[quant.scala 59:18]
      io_result_mat_0_ret1_1 <= _io_result_mat_0_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_0_T_9 = leq(io_result_mat_0_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_0_T_10 = geq(io_result_mat_0_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_0_T_11 = mux(_io_result_mat_0_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_0_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_0_T_12 = mux(_io_result_mat_0_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_0_T_11) @[quant.scala 60:19]
      node _io_result_mat_0_T_13 = mux(_io_result_mat_0_T, _io_result_mat_0_T_6, _io_result_mat_0_T_12) @[quant.scala 63:19]
      io.result.mat[0] <= _io_result_mat_0_T_13 @[quant.scala 87:30]
      node _io_result_mat_1_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_1_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_1_T_2 = tail(_io_result_mat_1_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_1_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_1_ret1_T = dshl(io.in_from_accumu.mat[1], _io_result_mat_1_T_2) @[quant.scala 52:18]
      io_result_mat_1_ret1 <= _io_result_mat_1_ret1_T @[quant.scala 52:14]
      node _io_result_mat_1_T_3 = leq(io_result_mat_1_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_1_T_4 = geq(io_result_mat_1_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_1_T_5 = mux(_io_result_mat_1_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_1_ret1) @[quant.scala 53:41]
      node _io_result_mat_1_T_6 = mux(_io_result_mat_1_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_1_T_5) @[quant.scala 53:19]
      node _io_result_mat_1_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_1_T_8 = tail(_io_result_mat_1_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_1_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_1_ret1_T_1 = dshr(io.in_from_accumu.mat[1], _io_result_mat_1_T_8) @[quant.scala 59:18]
      io_result_mat_1_ret1_1 <= _io_result_mat_1_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_1_T_9 = leq(io_result_mat_1_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_1_T_10 = geq(io_result_mat_1_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_1_T_11 = mux(_io_result_mat_1_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_1_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_1_T_12 = mux(_io_result_mat_1_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_1_T_11) @[quant.scala 60:19]
      node _io_result_mat_1_T_13 = mux(_io_result_mat_1_T, _io_result_mat_1_T_6, _io_result_mat_1_T_12) @[quant.scala 63:19]
      io.result.mat[1] <= _io_result_mat_1_T_13 @[quant.scala 87:30]
      node _io_result_mat_2_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_2_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_2_T_2 = tail(_io_result_mat_2_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_2_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_2_ret1_T = dshl(io.in_from_accumu.mat[2], _io_result_mat_2_T_2) @[quant.scala 52:18]
      io_result_mat_2_ret1 <= _io_result_mat_2_ret1_T @[quant.scala 52:14]
      node _io_result_mat_2_T_3 = leq(io_result_mat_2_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_2_T_4 = geq(io_result_mat_2_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_2_T_5 = mux(_io_result_mat_2_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_2_ret1) @[quant.scala 53:41]
      node _io_result_mat_2_T_6 = mux(_io_result_mat_2_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_2_T_5) @[quant.scala 53:19]
      node _io_result_mat_2_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_2_T_8 = tail(_io_result_mat_2_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_2_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_2_ret1_T_1 = dshr(io.in_from_accumu.mat[2], _io_result_mat_2_T_8) @[quant.scala 59:18]
      io_result_mat_2_ret1_1 <= _io_result_mat_2_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_2_T_9 = leq(io_result_mat_2_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_2_T_10 = geq(io_result_mat_2_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_2_T_11 = mux(_io_result_mat_2_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_2_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_2_T_12 = mux(_io_result_mat_2_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_2_T_11) @[quant.scala 60:19]
      node _io_result_mat_2_T_13 = mux(_io_result_mat_2_T, _io_result_mat_2_T_6, _io_result_mat_2_T_12) @[quant.scala 63:19]
      io.result.mat[2] <= _io_result_mat_2_T_13 @[quant.scala 87:30]
      node _io_result_mat_3_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_3_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_3_T_2 = tail(_io_result_mat_3_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_3_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_3_ret1_T = dshl(io.in_from_accumu.mat[3], _io_result_mat_3_T_2) @[quant.scala 52:18]
      io_result_mat_3_ret1 <= _io_result_mat_3_ret1_T @[quant.scala 52:14]
      node _io_result_mat_3_T_3 = leq(io_result_mat_3_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_3_T_4 = geq(io_result_mat_3_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_3_T_5 = mux(_io_result_mat_3_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_3_ret1) @[quant.scala 53:41]
      node _io_result_mat_3_T_6 = mux(_io_result_mat_3_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_3_T_5) @[quant.scala 53:19]
      node _io_result_mat_3_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_3_T_8 = tail(_io_result_mat_3_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_3_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_3_ret1_T_1 = dshr(io.in_from_accumu.mat[3], _io_result_mat_3_T_8) @[quant.scala 59:18]
      io_result_mat_3_ret1_1 <= _io_result_mat_3_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_3_T_9 = leq(io_result_mat_3_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_3_T_10 = geq(io_result_mat_3_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_3_T_11 = mux(_io_result_mat_3_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_3_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_3_T_12 = mux(_io_result_mat_3_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_3_T_11) @[quant.scala 60:19]
      node _io_result_mat_3_T_13 = mux(_io_result_mat_3_T, _io_result_mat_3_T_6, _io_result_mat_3_T_12) @[quant.scala 63:19]
      io.result.mat[3] <= _io_result_mat_3_T_13 @[quant.scala 87:30]
      node _io_result_mat_4_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_4_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_4_T_2 = tail(_io_result_mat_4_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_4_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_4_ret1_T = dshl(io.in_from_accumu.mat[4], _io_result_mat_4_T_2) @[quant.scala 52:18]
      io_result_mat_4_ret1 <= _io_result_mat_4_ret1_T @[quant.scala 52:14]
      node _io_result_mat_4_T_3 = leq(io_result_mat_4_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_4_T_4 = geq(io_result_mat_4_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_4_T_5 = mux(_io_result_mat_4_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_4_ret1) @[quant.scala 53:41]
      node _io_result_mat_4_T_6 = mux(_io_result_mat_4_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_4_T_5) @[quant.scala 53:19]
      node _io_result_mat_4_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_4_T_8 = tail(_io_result_mat_4_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_4_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_4_ret1_T_1 = dshr(io.in_from_accumu.mat[4], _io_result_mat_4_T_8) @[quant.scala 59:18]
      io_result_mat_4_ret1_1 <= _io_result_mat_4_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_4_T_9 = leq(io_result_mat_4_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_4_T_10 = geq(io_result_mat_4_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_4_T_11 = mux(_io_result_mat_4_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_4_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_4_T_12 = mux(_io_result_mat_4_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_4_T_11) @[quant.scala 60:19]
      node _io_result_mat_4_T_13 = mux(_io_result_mat_4_T, _io_result_mat_4_T_6, _io_result_mat_4_T_12) @[quant.scala 63:19]
      io.result.mat[4] <= _io_result_mat_4_T_13 @[quant.scala 87:30]
      node _io_result_mat_5_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_5_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_5_T_2 = tail(_io_result_mat_5_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_5_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_5_ret1_T = dshl(io.in_from_accumu.mat[5], _io_result_mat_5_T_2) @[quant.scala 52:18]
      io_result_mat_5_ret1 <= _io_result_mat_5_ret1_T @[quant.scala 52:14]
      node _io_result_mat_5_T_3 = leq(io_result_mat_5_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_5_T_4 = geq(io_result_mat_5_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_5_T_5 = mux(_io_result_mat_5_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_5_ret1) @[quant.scala 53:41]
      node _io_result_mat_5_T_6 = mux(_io_result_mat_5_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_5_T_5) @[quant.scala 53:19]
      node _io_result_mat_5_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_5_T_8 = tail(_io_result_mat_5_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_5_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_5_ret1_T_1 = dshr(io.in_from_accumu.mat[5], _io_result_mat_5_T_8) @[quant.scala 59:18]
      io_result_mat_5_ret1_1 <= _io_result_mat_5_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_5_T_9 = leq(io_result_mat_5_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_5_T_10 = geq(io_result_mat_5_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_5_T_11 = mux(_io_result_mat_5_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_5_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_5_T_12 = mux(_io_result_mat_5_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_5_T_11) @[quant.scala 60:19]
      node _io_result_mat_5_T_13 = mux(_io_result_mat_5_T, _io_result_mat_5_T_6, _io_result_mat_5_T_12) @[quant.scala 63:19]
      io.result.mat[5] <= _io_result_mat_5_T_13 @[quant.scala 87:30]
      node _io_result_mat_6_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_6_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_6_T_2 = tail(_io_result_mat_6_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_6_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_6_ret1_T = dshl(io.in_from_accumu.mat[6], _io_result_mat_6_T_2) @[quant.scala 52:18]
      io_result_mat_6_ret1 <= _io_result_mat_6_ret1_T @[quant.scala 52:14]
      node _io_result_mat_6_T_3 = leq(io_result_mat_6_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_6_T_4 = geq(io_result_mat_6_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_6_T_5 = mux(_io_result_mat_6_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_6_ret1) @[quant.scala 53:41]
      node _io_result_mat_6_T_6 = mux(_io_result_mat_6_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_6_T_5) @[quant.scala 53:19]
      node _io_result_mat_6_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_6_T_8 = tail(_io_result_mat_6_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_6_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_6_ret1_T_1 = dshr(io.in_from_accumu.mat[6], _io_result_mat_6_T_8) @[quant.scala 59:18]
      io_result_mat_6_ret1_1 <= _io_result_mat_6_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_6_T_9 = leq(io_result_mat_6_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_6_T_10 = geq(io_result_mat_6_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_6_T_11 = mux(_io_result_mat_6_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_6_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_6_T_12 = mux(_io_result_mat_6_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_6_T_11) @[quant.scala 60:19]
      node _io_result_mat_6_T_13 = mux(_io_result_mat_6_T, _io_result_mat_6_T_6, _io_result_mat_6_T_12) @[quant.scala 63:19]
      io.result.mat[6] <= _io_result_mat_6_T_13 @[quant.scala 87:30]
      node _io_result_mat_7_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_7_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_7_T_2 = tail(_io_result_mat_7_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_7_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_7_ret1_T = dshl(io.in_from_accumu.mat[7], _io_result_mat_7_T_2) @[quant.scala 52:18]
      io_result_mat_7_ret1 <= _io_result_mat_7_ret1_T @[quant.scala 52:14]
      node _io_result_mat_7_T_3 = leq(io_result_mat_7_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_7_T_4 = geq(io_result_mat_7_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_7_T_5 = mux(_io_result_mat_7_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_7_ret1) @[quant.scala 53:41]
      node _io_result_mat_7_T_6 = mux(_io_result_mat_7_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_7_T_5) @[quant.scala 53:19]
      node _io_result_mat_7_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_7_T_8 = tail(_io_result_mat_7_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_7_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_7_ret1_T_1 = dshr(io.in_from_accumu.mat[7], _io_result_mat_7_T_8) @[quant.scala 59:18]
      io_result_mat_7_ret1_1 <= _io_result_mat_7_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_7_T_9 = leq(io_result_mat_7_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_7_T_10 = geq(io_result_mat_7_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_7_T_11 = mux(_io_result_mat_7_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_7_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_7_T_12 = mux(_io_result_mat_7_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_7_T_11) @[quant.scala 60:19]
      node _io_result_mat_7_T_13 = mux(_io_result_mat_7_T, _io_result_mat_7_T_6, _io_result_mat_7_T_12) @[quant.scala 63:19]
      io.result.mat[7] <= _io_result_mat_7_T_13 @[quant.scala 87:30]
      node _io_result_mat_8_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_8_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_8_T_2 = tail(_io_result_mat_8_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_8_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_8_ret1_T = dshl(io.in_from_accumu.mat[8], _io_result_mat_8_T_2) @[quant.scala 52:18]
      io_result_mat_8_ret1 <= _io_result_mat_8_ret1_T @[quant.scala 52:14]
      node _io_result_mat_8_T_3 = leq(io_result_mat_8_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_8_T_4 = geq(io_result_mat_8_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_8_T_5 = mux(_io_result_mat_8_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_8_ret1) @[quant.scala 53:41]
      node _io_result_mat_8_T_6 = mux(_io_result_mat_8_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_8_T_5) @[quant.scala 53:19]
      node _io_result_mat_8_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_8_T_8 = tail(_io_result_mat_8_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_8_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_8_ret1_T_1 = dshr(io.in_from_accumu.mat[8], _io_result_mat_8_T_8) @[quant.scala 59:18]
      io_result_mat_8_ret1_1 <= _io_result_mat_8_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_8_T_9 = leq(io_result_mat_8_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_8_T_10 = geq(io_result_mat_8_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_8_T_11 = mux(_io_result_mat_8_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_8_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_8_T_12 = mux(_io_result_mat_8_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_8_T_11) @[quant.scala 60:19]
      node _io_result_mat_8_T_13 = mux(_io_result_mat_8_T, _io_result_mat_8_T_6, _io_result_mat_8_T_12) @[quant.scala 63:19]
      io.result.mat[8] <= _io_result_mat_8_T_13 @[quant.scala 87:30]
      node _io_result_mat_9_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_9_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_9_T_2 = tail(_io_result_mat_9_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_9_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_9_ret1_T = dshl(io.in_from_accumu.mat[9], _io_result_mat_9_T_2) @[quant.scala 52:18]
      io_result_mat_9_ret1 <= _io_result_mat_9_ret1_T @[quant.scala 52:14]
      node _io_result_mat_9_T_3 = leq(io_result_mat_9_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_9_T_4 = geq(io_result_mat_9_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_9_T_5 = mux(_io_result_mat_9_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_9_ret1) @[quant.scala 53:41]
      node _io_result_mat_9_T_6 = mux(_io_result_mat_9_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_9_T_5) @[quant.scala 53:19]
      node _io_result_mat_9_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_9_T_8 = tail(_io_result_mat_9_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_9_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_9_ret1_T_1 = dshr(io.in_from_accumu.mat[9], _io_result_mat_9_T_8) @[quant.scala 59:18]
      io_result_mat_9_ret1_1 <= _io_result_mat_9_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_9_T_9 = leq(io_result_mat_9_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_9_T_10 = geq(io_result_mat_9_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_9_T_11 = mux(_io_result_mat_9_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_9_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_9_T_12 = mux(_io_result_mat_9_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_9_T_11) @[quant.scala 60:19]
      node _io_result_mat_9_T_13 = mux(_io_result_mat_9_T, _io_result_mat_9_T_6, _io_result_mat_9_T_12) @[quant.scala 63:19]
      io.result.mat[9] <= _io_result_mat_9_T_13 @[quant.scala 87:30]
      node _io_result_mat_10_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_10_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_10_T_2 = tail(_io_result_mat_10_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_10_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_10_ret1_T = dshl(io.in_from_accumu.mat[10], _io_result_mat_10_T_2) @[quant.scala 52:18]
      io_result_mat_10_ret1 <= _io_result_mat_10_ret1_T @[quant.scala 52:14]
      node _io_result_mat_10_T_3 = leq(io_result_mat_10_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_10_T_4 = geq(io_result_mat_10_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_10_T_5 = mux(_io_result_mat_10_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_10_ret1) @[quant.scala 53:41]
      node _io_result_mat_10_T_6 = mux(_io_result_mat_10_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_10_T_5) @[quant.scala 53:19]
      node _io_result_mat_10_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_10_T_8 = tail(_io_result_mat_10_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_10_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_10_ret1_T_1 = dshr(io.in_from_accumu.mat[10], _io_result_mat_10_T_8) @[quant.scala 59:18]
      io_result_mat_10_ret1_1 <= _io_result_mat_10_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_10_T_9 = leq(io_result_mat_10_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_10_T_10 = geq(io_result_mat_10_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_10_T_11 = mux(_io_result_mat_10_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_10_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_10_T_12 = mux(_io_result_mat_10_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_10_T_11) @[quant.scala 60:19]
      node _io_result_mat_10_T_13 = mux(_io_result_mat_10_T, _io_result_mat_10_T_6, _io_result_mat_10_T_12) @[quant.scala 63:19]
      io.result.mat[10] <= _io_result_mat_10_T_13 @[quant.scala 87:30]
      node _io_result_mat_11_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_11_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_11_T_2 = tail(_io_result_mat_11_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_11_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_11_ret1_T = dshl(io.in_from_accumu.mat[11], _io_result_mat_11_T_2) @[quant.scala 52:18]
      io_result_mat_11_ret1 <= _io_result_mat_11_ret1_T @[quant.scala 52:14]
      node _io_result_mat_11_T_3 = leq(io_result_mat_11_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_11_T_4 = geq(io_result_mat_11_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_11_T_5 = mux(_io_result_mat_11_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_11_ret1) @[quant.scala 53:41]
      node _io_result_mat_11_T_6 = mux(_io_result_mat_11_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_11_T_5) @[quant.scala 53:19]
      node _io_result_mat_11_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_11_T_8 = tail(_io_result_mat_11_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_11_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_11_ret1_T_1 = dshr(io.in_from_accumu.mat[11], _io_result_mat_11_T_8) @[quant.scala 59:18]
      io_result_mat_11_ret1_1 <= _io_result_mat_11_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_11_T_9 = leq(io_result_mat_11_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_11_T_10 = geq(io_result_mat_11_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_11_T_11 = mux(_io_result_mat_11_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_11_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_11_T_12 = mux(_io_result_mat_11_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_11_T_11) @[quant.scala 60:19]
      node _io_result_mat_11_T_13 = mux(_io_result_mat_11_T, _io_result_mat_11_T_6, _io_result_mat_11_T_12) @[quant.scala 63:19]
      io.result.mat[11] <= _io_result_mat_11_T_13 @[quant.scala 87:30]
      node _io_result_mat_12_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_12_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_12_T_2 = tail(_io_result_mat_12_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_12_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_12_ret1_T = dshl(io.in_from_accumu.mat[12], _io_result_mat_12_T_2) @[quant.scala 52:18]
      io_result_mat_12_ret1 <= _io_result_mat_12_ret1_T @[quant.scala 52:14]
      node _io_result_mat_12_T_3 = leq(io_result_mat_12_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_12_T_4 = geq(io_result_mat_12_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_12_T_5 = mux(_io_result_mat_12_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_12_ret1) @[quant.scala 53:41]
      node _io_result_mat_12_T_6 = mux(_io_result_mat_12_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_12_T_5) @[quant.scala 53:19]
      node _io_result_mat_12_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_12_T_8 = tail(_io_result_mat_12_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_12_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_12_ret1_T_1 = dshr(io.in_from_accumu.mat[12], _io_result_mat_12_T_8) @[quant.scala 59:18]
      io_result_mat_12_ret1_1 <= _io_result_mat_12_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_12_T_9 = leq(io_result_mat_12_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_12_T_10 = geq(io_result_mat_12_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_12_T_11 = mux(_io_result_mat_12_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_12_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_12_T_12 = mux(_io_result_mat_12_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_12_T_11) @[quant.scala 60:19]
      node _io_result_mat_12_T_13 = mux(_io_result_mat_12_T, _io_result_mat_12_T_6, _io_result_mat_12_T_12) @[quant.scala 63:19]
      io.result.mat[12] <= _io_result_mat_12_T_13 @[quant.scala 87:30]
      node _io_result_mat_13_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_13_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_13_T_2 = tail(_io_result_mat_13_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_13_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_13_ret1_T = dshl(io.in_from_accumu.mat[13], _io_result_mat_13_T_2) @[quant.scala 52:18]
      io_result_mat_13_ret1 <= _io_result_mat_13_ret1_T @[quant.scala 52:14]
      node _io_result_mat_13_T_3 = leq(io_result_mat_13_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_13_T_4 = geq(io_result_mat_13_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_13_T_5 = mux(_io_result_mat_13_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_13_ret1) @[quant.scala 53:41]
      node _io_result_mat_13_T_6 = mux(_io_result_mat_13_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_13_T_5) @[quant.scala 53:19]
      node _io_result_mat_13_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_13_T_8 = tail(_io_result_mat_13_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_13_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_13_ret1_T_1 = dshr(io.in_from_accumu.mat[13], _io_result_mat_13_T_8) @[quant.scala 59:18]
      io_result_mat_13_ret1_1 <= _io_result_mat_13_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_13_T_9 = leq(io_result_mat_13_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_13_T_10 = geq(io_result_mat_13_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_13_T_11 = mux(_io_result_mat_13_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_13_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_13_T_12 = mux(_io_result_mat_13_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_13_T_11) @[quant.scala 60:19]
      node _io_result_mat_13_T_13 = mux(_io_result_mat_13_T, _io_result_mat_13_T_6, _io_result_mat_13_T_12) @[quant.scala 63:19]
      io.result.mat[13] <= _io_result_mat_13_T_13 @[quant.scala 87:30]
      node _io_result_mat_14_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_14_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_14_T_2 = tail(_io_result_mat_14_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_14_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_14_ret1_T = dshl(io.in_from_accumu.mat[14], _io_result_mat_14_T_2) @[quant.scala 52:18]
      io_result_mat_14_ret1 <= _io_result_mat_14_ret1_T @[quant.scala 52:14]
      node _io_result_mat_14_T_3 = leq(io_result_mat_14_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_14_T_4 = geq(io_result_mat_14_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_14_T_5 = mux(_io_result_mat_14_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_14_ret1) @[quant.scala 53:41]
      node _io_result_mat_14_T_6 = mux(_io_result_mat_14_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_14_T_5) @[quant.scala 53:19]
      node _io_result_mat_14_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_14_T_8 = tail(_io_result_mat_14_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_14_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_14_ret1_T_1 = dshr(io.in_from_accumu.mat[14], _io_result_mat_14_T_8) @[quant.scala 59:18]
      io_result_mat_14_ret1_1 <= _io_result_mat_14_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_14_T_9 = leq(io_result_mat_14_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_14_T_10 = geq(io_result_mat_14_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_14_T_11 = mux(_io_result_mat_14_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_14_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_14_T_12 = mux(_io_result_mat_14_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_14_T_11) @[quant.scala 60:19]
      node _io_result_mat_14_T_13 = mux(_io_result_mat_14_T, _io_result_mat_14_T_6, _io_result_mat_14_T_12) @[quant.scala 63:19]
      io.result.mat[14] <= _io_result_mat_14_T_13 @[quant.scala 87:30]
      node _io_result_mat_15_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_15_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_15_T_2 = tail(_io_result_mat_15_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_15_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_15_ret1_T = dshl(io.in_from_accumu.mat[15], _io_result_mat_15_T_2) @[quant.scala 52:18]
      io_result_mat_15_ret1 <= _io_result_mat_15_ret1_T @[quant.scala 52:14]
      node _io_result_mat_15_T_3 = leq(io_result_mat_15_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_15_T_4 = geq(io_result_mat_15_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_15_T_5 = mux(_io_result_mat_15_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_15_ret1) @[quant.scala 53:41]
      node _io_result_mat_15_T_6 = mux(_io_result_mat_15_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_15_T_5) @[quant.scala 53:19]
      node _io_result_mat_15_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_15_T_8 = tail(_io_result_mat_15_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_15_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_15_ret1_T_1 = dshr(io.in_from_accumu.mat[15], _io_result_mat_15_T_8) @[quant.scala 59:18]
      io_result_mat_15_ret1_1 <= _io_result_mat_15_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_15_T_9 = leq(io_result_mat_15_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_15_T_10 = geq(io_result_mat_15_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_15_T_11 = mux(_io_result_mat_15_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_15_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_15_T_12 = mux(_io_result_mat_15_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_15_T_11) @[quant.scala 60:19]
      node _io_result_mat_15_T_13 = mux(_io_result_mat_15_T, _io_result_mat_15_T_6, _io_result_mat_15_T_12) @[quant.scala 63:19]
      io.result.mat[15] <= _io_result_mat_15_T_13 @[quant.scala 87:30]
      node _io_result_mat_16_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_16_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_16_T_2 = tail(_io_result_mat_16_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_16_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_16_ret1_T = dshl(io.in_from_accumu.mat[16], _io_result_mat_16_T_2) @[quant.scala 52:18]
      io_result_mat_16_ret1 <= _io_result_mat_16_ret1_T @[quant.scala 52:14]
      node _io_result_mat_16_T_3 = leq(io_result_mat_16_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_16_T_4 = geq(io_result_mat_16_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_16_T_5 = mux(_io_result_mat_16_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_16_ret1) @[quant.scala 53:41]
      node _io_result_mat_16_T_6 = mux(_io_result_mat_16_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_16_T_5) @[quant.scala 53:19]
      node _io_result_mat_16_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_16_T_8 = tail(_io_result_mat_16_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_16_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_16_ret1_T_1 = dshr(io.in_from_accumu.mat[16], _io_result_mat_16_T_8) @[quant.scala 59:18]
      io_result_mat_16_ret1_1 <= _io_result_mat_16_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_16_T_9 = leq(io_result_mat_16_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_16_T_10 = geq(io_result_mat_16_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_16_T_11 = mux(_io_result_mat_16_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_16_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_16_T_12 = mux(_io_result_mat_16_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_16_T_11) @[quant.scala 60:19]
      node _io_result_mat_16_T_13 = mux(_io_result_mat_16_T, _io_result_mat_16_T_6, _io_result_mat_16_T_12) @[quant.scala 63:19]
      io.result.mat[16] <= _io_result_mat_16_T_13 @[quant.scala 87:30]
      node _io_result_mat_17_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_17_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_17_T_2 = tail(_io_result_mat_17_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_17_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_17_ret1_T = dshl(io.in_from_accumu.mat[17], _io_result_mat_17_T_2) @[quant.scala 52:18]
      io_result_mat_17_ret1 <= _io_result_mat_17_ret1_T @[quant.scala 52:14]
      node _io_result_mat_17_T_3 = leq(io_result_mat_17_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_17_T_4 = geq(io_result_mat_17_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_17_T_5 = mux(_io_result_mat_17_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_17_ret1) @[quant.scala 53:41]
      node _io_result_mat_17_T_6 = mux(_io_result_mat_17_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_17_T_5) @[quant.scala 53:19]
      node _io_result_mat_17_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_17_T_8 = tail(_io_result_mat_17_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_17_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_17_ret1_T_1 = dshr(io.in_from_accumu.mat[17], _io_result_mat_17_T_8) @[quant.scala 59:18]
      io_result_mat_17_ret1_1 <= _io_result_mat_17_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_17_T_9 = leq(io_result_mat_17_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_17_T_10 = geq(io_result_mat_17_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_17_T_11 = mux(_io_result_mat_17_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_17_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_17_T_12 = mux(_io_result_mat_17_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_17_T_11) @[quant.scala 60:19]
      node _io_result_mat_17_T_13 = mux(_io_result_mat_17_T, _io_result_mat_17_T_6, _io_result_mat_17_T_12) @[quant.scala 63:19]
      io.result.mat[17] <= _io_result_mat_17_T_13 @[quant.scala 87:30]
      node _io_result_mat_18_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_18_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_18_T_2 = tail(_io_result_mat_18_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_18_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_18_ret1_T = dshl(io.in_from_accumu.mat[18], _io_result_mat_18_T_2) @[quant.scala 52:18]
      io_result_mat_18_ret1 <= _io_result_mat_18_ret1_T @[quant.scala 52:14]
      node _io_result_mat_18_T_3 = leq(io_result_mat_18_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_18_T_4 = geq(io_result_mat_18_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_18_T_5 = mux(_io_result_mat_18_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_18_ret1) @[quant.scala 53:41]
      node _io_result_mat_18_T_6 = mux(_io_result_mat_18_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_18_T_5) @[quant.scala 53:19]
      node _io_result_mat_18_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_18_T_8 = tail(_io_result_mat_18_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_18_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_18_ret1_T_1 = dshr(io.in_from_accumu.mat[18], _io_result_mat_18_T_8) @[quant.scala 59:18]
      io_result_mat_18_ret1_1 <= _io_result_mat_18_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_18_T_9 = leq(io_result_mat_18_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_18_T_10 = geq(io_result_mat_18_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_18_T_11 = mux(_io_result_mat_18_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_18_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_18_T_12 = mux(_io_result_mat_18_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_18_T_11) @[quant.scala 60:19]
      node _io_result_mat_18_T_13 = mux(_io_result_mat_18_T, _io_result_mat_18_T_6, _io_result_mat_18_T_12) @[quant.scala 63:19]
      io.result.mat[18] <= _io_result_mat_18_T_13 @[quant.scala 87:30]
      node _io_result_mat_19_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_19_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_19_T_2 = tail(_io_result_mat_19_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_19_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_19_ret1_T = dshl(io.in_from_accumu.mat[19], _io_result_mat_19_T_2) @[quant.scala 52:18]
      io_result_mat_19_ret1 <= _io_result_mat_19_ret1_T @[quant.scala 52:14]
      node _io_result_mat_19_T_3 = leq(io_result_mat_19_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_19_T_4 = geq(io_result_mat_19_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_19_T_5 = mux(_io_result_mat_19_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_19_ret1) @[quant.scala 53:41]
      node _io_result_mat_19_T_6 = mux(_io_result_mat_19_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_19_T_5) @[quant.scala 53:19]
      node _io_result_mat_19_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_19_T_8 = tail(_io_result_mat_19_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_19_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_19_ret1_T_1 = dshr(io.in_from_accumu.mat[19], _io_result_mat_19_T_8) @[quant.scala 59:18]
      io_result_mat_19_ret1_1 <= _io_result_mat_19_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_19_T_9 = leq(io_result_mat_19_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_19_T_10 = geq(io_result_mat_19_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_19_T_11 = mux(_io_result_mat_19_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_19_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_19_T_12 = mux(_io_result_mat_19_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_19_T_11) @[quant.scala 60:19]
      node _io_result_mat_19_T_13 = mux(_io_result_mat_19_T, _io_result_mat_19_T_6, _io_result_mat_19_T_12) @[quant.scala 63:19]
      io.result.mat[19] <= _io_result_mat_19_T_13 @[quant.scala 87:30]
      node _io_result_mat_20_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_20_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_20_T_2 = tail(_io_result_mat_20_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_20_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_20_ret1_T = dshl(io.in_from_accumu.mat[20], _io_result_mat_20_T_2) @[quant.scala 52:18]
      io_result_mat_20_ret1 <= _io_result_mat_20_ret1_T @[quant.scala 52:14]
      node _io_result_mat_20_T_3 = leq(io_result_mat_20_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_20_T_4 = geq(io_result_mat_20_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_20_T_5 = mux(_io_result_mat_20_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_20_ret1) @[quant.scala 53:41]
      node _io_result_mat_20_T_6 = mux(_io_result_mat_20_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_20_T_5) @[quant.scala 53:19]
      node _io_result_mat_20_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_20_T_8 = tail(_io_result_mat_20_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_20_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_20_ret1_T_1 = dshr(io.in_from_accumu.mat[20], _io_result_mat_20_T_8) @[quant.scala 59:18]
      io_result_mat_20_ret1_1 <= _io_result_mat_20_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_20_T_9 = leq(io_result_mat_20_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_20_T_10 = geq(io_result_mat_20_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_20_T_11 = mux(_io_result_mat_20_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_20_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_20_T_12 = mux(_io_result_mat_20_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_20_T_11) @[quant.scala 60:19]
      node _io_result_mat_20_T_13 = mux(_io_result_mat_20_T, _io_result_mat_20_T_6, _io_result_mat_20_T_12) @[quant.scala 63:19]
      io.result.mat[20] <= _io_result_mat_20_T_13 @[quant.scala 87:30]
      node _io_result_mat_21_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_21_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_21_T_2 = tail(_io_result_mat_21_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_21_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_21_ret1_T = dshl(io.in_from_accumu.mat[21], _io_result_mat_21_T_2) @[quant.scala 52:18]
      io_result_mat_21_ret1 <= _io_result_mat_21_ret1_T @[quant.scala 52:14]
      node _io_result_mat_21_T_3 = leq(io_result_mat_21_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_21_T_4 = geq(io_result_mat_21_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_21_T_5 = mux(_io_result_mat_21_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_21_ret1) @[quant.scala 53:41]
      node _io_result_mat_21_T_6 = mux(_io_result_mat_21_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_21_T_5) @[quant.scala 53:19]
      node _io_result_mat_21_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_21_T_8 = tail(_io_result_mat_21_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_21_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_21_ret1_T_1 = dshr(io.in_from_accumu.mat[21], _io_result_mat_21_T_8) @[quant.scala 59:18]
      io_result_mat_21_ret1_1 <= _io_result_mat_21_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_21_T_9 = leq(io_result_mat_21_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_21_T_10 = geq(io_result_mat_21_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_21_T_11 = mux(_io_result_mat_21_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_21_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_21_T_12 = mux(_io_result_mat_21_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_21_T_11) @[quant.scala 60:19]
      node _io_result_mat_21_T_13 = mux(_io_result_mat_21_T, _io_result_mat_21_T_6, _io_result_mat_21_T_12) @[quant.scala 63:19]
      io.result.mat[21] <= _io_result_mat_21_T_13 @[quant.scala 87:30]
      node _io_result_mat_22_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_22_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_22_T_2 = tail(_io_result_mat_22_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_22_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_22_ret1_T = dshl(io.in_from_accumu.mat[22], _io_result_mat_22_T_2) @[quant.scala 52:18]
      io_result_mat_22_ret1 <= _io_result_mat_22_ret1_T @[quant.scala 52:14]
      node _io_result_mat_22_T_3 = leq(io_result_mat_22_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_22_T_4 = geq(io_result_mat_22_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_22_T_5 = mux(_io_result_mat_22_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_22_ret1) @[quant.scala 53:41]
      node _io_result_mat_22_T_6 = mux(_io_result_mat_22_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_22_T_5) @[quant.scala 53:19]
      node _io_result_mat_22_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_22_T_8 = tail(_io_result_mat_22_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_22_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_22_ret1_T_1 = dshr(io.in_from_accumu.mat[22], _io_result_mat_22_T_8) @[quant.scala 59:18]
      io_result_mat_22_ret1_1 <= _io_result_mat_22_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_22_T_9 = leq(io_result_mat_22_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_22_T_10 = geq(io_result_mat_22_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_22_T_11 = mux(_io_result_mat_22_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_22_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_22_T_12 = mux(_io_result_mat_22_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_22_T_11) @[quant.scala 60:19]
      node _io_result_mat_22_T_13 = mux(_io_result_mat_22_T, _io_result_mat_22_T_6, _io_result_mat_22_T_12) @[quant.scala 63:19]
      io.result.mat[22] <= _io_result_mat_22_T_13 @[quant.scala 87:30]
      node _io_result_mat_23_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_23_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_23_T_2 = tail(_io_result_mat_23_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_23_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_23_ret1_T = dshl(io.in_from_accumu.mat[23], _io_result_mat_23_T_2) @[quant.scala 52:18]
      io_result_mat_23_ret1 <= _io_result_mat_23_ret1_T @[quant.scala 52:14]
      node _io_result_mat_23_T_3 = leq(io_result_mat_23_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_23_T_4 = geq(io_result_mat_23_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_23_T_5 = mux(_io_result_mat_23_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_23_ret1) @[quant.scala 53:41]
      node _io_result_mat_23_T_6 = mux(_io_result_mat_23_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_23_T_5) @[quant.scala 53:19]
      node _io_result_mat_23_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_23_T_8 = tail(_io_result_mat_23_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_23_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_23_ret1_T_1 = dshr(io.in_from_accumu.mat[23], _io_result_mat_23_T_8) @[quant.scala 59:18]
      io_result_mat_23_ret1_1 <= _io_result_mat_23_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_23_T_9 = leq(io_result_mat_23_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_23_T_10 = geq(io_result_mat_23_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_23_T_11 = mux(_io_result_mat_23_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_23_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_23_T_12 = mux(_io_result_mat_23_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_23_T_11) @[quant.scala 60:19]
      node _io_result_mat_23_T_13 = mux(_io_result_mat_23_T, _io_result_mat_23_T_6, _io_result_mat_23_T_12) @[quant.scala 63:19]
      io.result.mat[23] <= _io_result_mat_23_T_13 @[quant.scala 87:30]
      node _io_result_mat_24_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_24_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_24_T_2 = tail(_io_result_mat_24_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_24_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_24_ret1_T = dshl(io.in_from_accumu.mat[24], _io_result_mat_24_T_2) @[quant.scala 52:18]
      io_result_mat_24_ret1 <= _io_result_mat_24_ret1_T @[quant.scala 52:14]
      node _io_result_mat_24_T_3 = leq(io_result_mat_24_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_24_T_4 = geq(io_result_mat_24_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_24_T_5 = mux(_io_result_mat_24_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_24_ret1) @[quant.scala 53:41]
      node _io_result_mat_24_T_6 = mux(_io_result_mat_24_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_24_T_5) @[quant.scala 53:19]
      node _io_result_mat_24_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_24_T_8 = tail(_io_result_mat_24_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_24_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_24_ret1_T_1 = dshr(io.in_from_accumu.mat[24], _io_result_mat_24_T_8) @[quant.scala 59:18]
      io_result_mat_24_ret1_1 <= _io_result_mat_24_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_24_T_9 = leq(io_result_mat_24_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_24_T_10 = geq(io_result_mat_24_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_24_T_11 = mux(_io_result_mat_24_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_24_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_24_T_12 = mux(_io_result_mat_24_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_24_T_11) @[quant.scala 60:19]
      node _io_result_mat_24_T_13 = mux(_io_result_mat_24_T, _io_result_mat_24_T_6, _io_result_mat_24_T_12) @[quant.scala 63:19]
      io.result.mat[24] <= _io_result_mat_24_T_13 @[quant.scala 87:30]
      node _io_result_mat_25_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_25_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_25_T_2 = tail(_io_result_mat_25_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_25_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_25_ret1_T = dshl(io.in_from_accumu.mat[25], _io_result_mat_25_T_2) @[quant.scala 52:18]
      io_result_mat_25_ret1 <= _io_result_mat_25_ret1_T @[quant.scala 52:14]
      node _io_result_mat_25_T_3 = leq(io_result_mat_25_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_25_T_4 = geq(io_result_mat_25_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_25_T_5 = mux(_io_result_mat_25_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_25_ret1) @[quant.scala 53:41]
      node _io_result_mat_25_T_6 = mux(_io_result_mat_25_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_25_T_5) @[quant.scala 53:19]
      node _io_result_mat_25_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_25_T_8 = tail(_io_result_mat_25_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_25_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_25_ret1_T_1 = dshr(io.in_from_accumu.mat[25], _io_result_mat_25_T_8) @[quant.scala 59:18]
      io_result_mat_25_ret1_1 <= _io_result_mat_25_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_25_T_9 = leq(io_result_mat_25_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_25_T_10 = geq(io_result_mat_25_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_25_T_11 = mux(_io_result_mat_25_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_25_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_25_T_12 = mux(_io_result_mat_25_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_25_T_11) @[quant.scala 60:19]
      node _io_result_mat_25_T_13 = mux(_io_result_mat_25_T, _io_result_mat_25_T_6, _io_result_mat_25_T_12) @[quant.scala 63:19]
      io.result.mat[25] <= _io_result_mat_25_T_13 @[quant.scala 87:30]
      node _io_result_mat_26_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_26_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_26_T_2 = tail(_io_result_mat_26_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_26_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_26_ret1_T = dshl(io.in_from_accumu.mat[26], _io_result_mat_26_T_2) @[quant.scala 52:18]
      io_result_mat_26_ret1 <= _io_result_mat_26_ret1_T @[quant.scala 52:14]
      node _io_result_mat_26_T_3 = leq(io_result_mat_26_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_26_T_4 = geq(io_result_mat_26_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_26_T_5 = mux(_io_result_mat_26_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_26_ret1) @[quant.scala 53:41]
      node _io_result_mat_26_T_6 = mux(_io_result_mat_26_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_26_T_5) @[quant.scala 53:19]
      node _io_result_mat_26_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_26_T_8 = tail(_io_result_mat_26_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_26_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_26_ret1_T_1 = dshr(io.in_from_accumu.mat[26], _io_result_mat_26_T_8) @[quant.scala 59:18]
      io_result_mat_26_ret1_1 <= _io_result_mat_26_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_26_T_9 = leq(io_result_mat_26_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_26_T_10 = geq(io_result_mat_26_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_26_T_11 = mux(_io_result_mat_26_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_26_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_26_T_12 = mux(_io_result_mat_26_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_26_T_11) @[quant.scala 60:19]
      node _io_result_mat_26_T_13 = mux(_io_result_mat_26_T, _io_result_mat_26_T_6, _io_result_mat_26_T_12) @[quant.scala 63:19]
      io.result.mat[26] <= _io_result_mat_26_T_13 @[quant.scala 87:30]
      node _io_result_mat_27_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_27_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_27_T_2 = tail(_io_result_mat_27_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_27_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_27_ret1_T = dshl(io.in_from_accumu.mat[27], _io_result_mat_27_T_2) @[quant.scala 52:18]
      io_result_mat_27_ret1 <= _io_result_mat_27_ret1_T @[quant.scala 52:14]
      node _io_result_mat_27_T_3 = leq(io_result_mat_27_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_27_T_4 = geq(io_result_mat_27_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_27_T_5 = mux(_io_result_mat_27_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_27_ret1) @[quant.scala 53:41]
      node _io_result_mat_27_T_6 = mux(_io_result_mat_27_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_27_T_5) @[quant.scala 53:19]
      node _io_result_mat_27_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_27_T_8 = tail(_io_result_mat_27_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_27_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_27_ret1_T_1 = dshr(io.in_from_accumu.mat[27], _io_result_mat_27_T_8) @[quant.scala 59:18]
      io_result_mat_27_ret1_1 <= _io_result_mat_27_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_27_T_9 = leq(io_result_mat_27_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_27_T_10 = geq(io_result_mat_27_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_27_T_11 = mux(_io_result_mat_27_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_27_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_27_T_12 = mux(_io_result_mat_27_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_27_T_11) @[quant.scala 60:19]
      node _io_result_mat_27_T_13 = mux(_io_result_mat_27_T, _io_result_mat_27_T_6, _io_result_mat_27_T_12) @[quant.scala 63:19]
      io.result.mat[27] <= _io_result_mat_27_T_13 @[quant.scala 87:30]
      node _io_result_mat_28_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_28_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_28_T_2 = tail(_io_result_mat_28_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_28_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_28_ret1_T = dshl(io.in_from_accumu.mat[28], _io_result_mat_28_T_2) @[quant.scala 52:18]
      io_result_mat_28_ret1 <= _io_result_mat_28_ret1_T @[quant.scala 52:14]
      node _io_result_mat_28_T_3 = leq(io_result_mat_28_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_28_T_4 = geq(io_result_mat_28_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_28_T_5 = mux(_io_result_mat_28_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_28_ret1) @[quant.scala 53:41]
      node _io_result_mat_28_T_6 = mux(_io_result_mat_28_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_28_T_5) @[quant.scala 53:19]
      node _io_result_mat_28_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_28_T_8 = tail(_io_result_mat_28_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_28_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_28_ret1_T_1 = dshr(io.in_from_accumu.mat[28], _io_result_mat_28_T_8) @[quant.scala 59:18]
      io_result_mat_28_ret1_1 <= _io_result_mat_28_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_28_T_9 = leq(io_result_mat_28_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_28_T_10 = geq(io_result_mat_28_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_28_T_11 = mux(_io_result_mat_28_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_28_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_28_T_12 = mux(_io_result_mat_28_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_28_T_11) @[quant.scala 60:19]
      node _io_result_mat_28_T_13 = mux(_io_result_mat_28_T, _io_result_mat_28_T_6, _io_result_mat_28_T_12) @[quant.scala 63:19]
      io.result.mat[28] <= _io_result_mat_28_T_13 @[quant.scala 87:30]
      node _io_result_mat_29_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_29_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_29_T_2 = tail(_io_result_mat_29_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_29_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_29_ret1_T = dshl(io.in_from_accumu.mat[29], _io_result_mat_29_T_2) @[quant.scala 52:18]
      io_result_mat_29_ret1 <= _io_result_mat_29_ret1_T @[quant.scala 52:14]
      node _io_result_mat_29_T_3 = leq(io_result_mat_29_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_29_T_4 = geq(io_result_mat_29_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_29_T_5 = mux(_io_result_mat_29_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_29_ret1) @[quant.scala 53:41]
      node _io_result_mat_29_T_6 = mux(_io_result_mat_29_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_29_T_5) @[quant.scala 53:19]
      node _io_result_mat_29_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_29_T_8 = tail(_io_result_mat_29_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_29_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_29_ret1_T_1 = dshr(io.in_from_accumu.mat[29], _io_result_mat_29_T_8) @[quant.scala 59:18]
      io_result_mat_29_ret1_1 <= _io_result_mat_29_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_29_T_9 = leq(io_result_mat_29_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_29_T_10 = geq(io_result_mat_29_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_29_T_11 = mux(_io_result_mat_29_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_29_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_29_T_12 = mux(_io_result_mat_29_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_29_T_11) @[quant.scala 60:19]
      node _io_result_mat_29_T_13 = mux(_io_result_mat_29_T, _io_result_mat_29_T_6, _io_result_mat_29_T_12) @[quant.scala 63:19]
      io.result.mat[29] <= _io_result_mat_29_T_13 @[quant.scala 87:30]
      node _io_result_mat_30_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_30_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_30_T_2 = tail(_io_result_mat_30_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_30_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_30_ret1_T = dshl(io.in_from_accumu.mat[30], _io_result_mat_30_T_2) @[quant.scala 52:18]
      io_result_mat_30_ret1 <= _io_result_mat_30_ret1_T @[quant.scala 52:14]
      node _io_result_mat_30_T_3 = leq(io_result_mat_30_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_30_T_4 = geq(io_result_mat_30_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_30_T_5 = mux(_io_result_mat_30_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_30_ret1) @[quant.scala 53:41]
      node _io_result_mat_30_T_6 = mux(_io_result_mat_30_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_30_T_5) @[quant.scala 53:19]
      node _io_result_mat_30_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_30_T_8 = tail(_io_result_mat_30_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_30_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_30_ret1_T_1 = dshr(io.in_from_accumu.mat[30], _io_result_mat_30_T_8) @[quant.scala 59:18]
      io_result_mat_30_ret1_1 <= _io_result_mat_30_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_30_T_9 = leq(io_result_mat_30_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_30_T_10 = geq(io_result_mat_30_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_30_T_11 = mux(_io_result_mat_30_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_30_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_30_T_12 = mux(_io_result_mat_30_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_30_T_11) @[quant.scala 60:19]
      node _io_result_mat_30_T_13 = mux(_io_result_mat_30_T, _io_result_mat_30_T_6, _io_result_mat_30_T_12) @[quant.scala 63:19]
      io.result.mat[30] <= _io_result_mat_30_T_13 @[quant.scala 87:30]
      node _io_result_mat_31_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_31_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_31_T_2 = tail(_io_result_mat_31_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_31_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_31_ret1_T = dshl(io.in_from_accumu.mat[31], _io_result_mat_31_T_2) @[quant.scala 52:18]
      io_result_mat_31_ret1 <= _io_result_mat_31_ret1_T @[quant.scala 52:14]
      node _io_result_mat_31_T_3 = leq(io_result_mat_31_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_31_T_4 = geq(io_result_mat_31_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_31_T_5 = mux(_io_result_mat_31_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_31_ret1) @[quant.scala 53:41]
      node _io_result_mat_31_T_6 = mux(_io_result_mat_31_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_31_T_5) @[quant.scala 53:19]
      node _io_result_mat_31_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_31_T_8 = tail(_io_result_mat_31_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_31_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_31_ret1_T_1 = dshr(io.in_from_accumu.mat[31], _io_result_mat_31_T_8) @[quant.scala 59:18]
      io_result_mat_31_ret1_1 <= _io_result_mat_31_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_31_T_9 = leq(io_result_mat_31_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_31_T_10 = geq(io_result_mat_31_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_31_T_11 = mux(_io_result_mat_31_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_31_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_31_T_12 = mux(_io_result_mat_31_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_31_T_11) @[quant.scala 60:19]
      node _io_result_mat_31_T_13 = mux(_io_result_mat_31_T, _io_result_mat_31_T_6, _io_result_mat_31_T_12) @[quant.scala 63:19]
      io.result.mat[31] <= _io_result_mat_31_T_13 @[quant.scala 87:30]
      node _io_result_mat_32_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_32_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_32_T_2 = tail(_io_result_mat_32_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_32_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_32_ret1_T = dshl(io.in_from_accumu.mat[32], _io_result_mat_32_T_2) @[quant.scala 52:18]
      io_result_mat_32_ret1 <= _io_result_mat_32_ret1_T @[quant.scala 52:14]
      node _io_result_mat_32_T_3 = leq(io_result_mat_32_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_32_T_4 = geq(io_result_mat_32_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_32_T_5 = mux(_io_result_mat_32_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_32_ret1) @[quant.scala 53:41]
      node _io_result_mat_32_T_6 = mux(_io_result_mat_32_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_32_T_5) @[quant.scala 53:19]
      node _io_result_mat_32_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_32_T_8 = tail(_io_result_mat_32_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_32_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_32_ret1_T_1 = dshr(io.in_from_accumu.mat[32], _io_result_mat_32_T_8) @[quant.scala 59:18]
      io_result_mat_32_ret1_1 <= _io_result_mat_32_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_32_T_9 = leq(io_result_mat_32_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_32_T_10 = geq(io_result_mat_32_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_32_T_11 = mux(_io_result_mat_32_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_32_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_32_T_12 = mux(_io_result_mat_32_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_32_T_11) @[quant.scala 60:19]
      node _io_result_mat_32_T_13 = mux(_io_result_mat_32_T, _io_result_mat_32_T_6, _io_result_mat_32_T_12) @[quant.scala 63:19]
      io.result.mat[32] <= _io_result_mat_32_T_13 @[quant.scala 87:30]
      node _io_result_mat_33_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_33_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_33_T_2 = tail(_io_result_mat_33_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_33_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_33_ret1_T = dshl(io.in_from_accumu.mat[33], _io_result_mat_33_T_2) @[quant.scala 52:18]
      io_result_mat_33_ret1 <= _io_result_mat_33_ret1_T @[quant.scala 52:14]
      node _io_result_mat_33_T_3 = leq(io_result_mat_33_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_33_T_4 = geq(io_result_mat_33_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_33_T_5 = mux(_io_result_mat_33_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_33_ret1) @[quant.scala 53:41]
      node _io_result_mat_33_T_6 = mux(_io_result_mat_33_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_33_T_5) @[quant.scala 53:19]
      node _io_result_mat_33_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_33_T_8 = tail(_io_result_mat_33_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_33_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_33_ret1_T_1 = dshr(io.in_from_accumu.mat[33], _io_result_mat_33_T_8) @[quant.scala 59:18]
      io_result_mat_33_ret1_1 <= _io_result_mat_33_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_33_T_9 = leq(io_result_mat_33_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_33_T_10 = geq(io_result_mat_33_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_33_T_11 = mux(_io_result_mat_33_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_33_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_33_T_12 = mux(_io_result_mat_33_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_33_T_11) @[quant.scala 60:19]
      node _io_result_mat_33_T_13 = mux(_io_result_mat_33_T, _io_result_mat_33_T_6, _io_result_mat_33_T_12) @[quant.scala 63:19]
      io.result.mat[33] <= _io_result_mat_33_T_13 @[quant.scala 87:30]
      node _io_result_mat_34_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_34_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_34_T_2 = tail(_io_result_mat_34_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_34_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_34_ret1_T = dshl(io.in_from_accumu.mat[34], _io_result_mat_34_T_2) @[quant.scala 52:18]
      io_result_mat_34_ret1 <= _io_result_mat_34_ret1_T @[quant.scala 52:14]
      node _io_result_mat_34_T_3 = leq(io_result_mat_34_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_34_T_4 = geq(io_result_mat_34_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_34_T_5 = mux(_io_result_mat_34_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_34_ret1) @[quant.scala 53:41]
      node _io_result_mat_34_T_6 = mux(_io_result_mat_34_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_34_T_5) @[quant.scala 53:19]
      node _io_result_mat_34_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_34_T_8 = tail(_io_result_mat_34_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_34_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_34_ret1_T_1 = dshr(io.in_from_accumu.mat[34], _io_result_mat_34_T_8) @[quant.scala 59:18]
      io_result_mat_34_ret1_1 <= _io_result_mat_34_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_34_T_9 = leq(io_result_mat_34_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_34_T_10 = geq(io_result_mat_34_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_34_T_11 = mux(_io_result_mat_34_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_34_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_34_T_12 = mux(_io_result_mat_34_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_34_T_11) @[quant.scala 60:19]
      node _io_result_mat_34_T_13 = mux(_io_result_mat_34_T, _io_result_mat_34_T_6, _io_result_mat_34_T_12) @[quant.scala 63:19]
      io.result.mat[34] <= _io_result_mat_34_T_13 @[quant.scala 87:30]
      node _io_result_mat_35_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_35_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_35_T_2 = tail(_io_result_mat_35_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_35_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_35_ret1_T = dshl(io.in_from_accumu.mat[35], _io_result_mat_35_T_2) @[quant.scala 52:18]
      io_result_mat_35_ret1 <= _io_result_mat_35_ret1_T @[quant.scala 52:14]
      node _io_result_mat_35_T_3 = leq(io_result_mat_35_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_35_T_4 = geq(io_result_mat_35_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_35_T_5 = mux(_io_result_mat_35_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_35_ret1) @[quant.scala 53:41]
      node _io_result_mat_35_T_6 = mux(_io_result_mat_35_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_35_T_5) @[quant.scala 53:19]
      node _io_result_mat_35_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_35_T_8 = tail(_io_result_mat_35_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_35_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_35_ret1_T_1 = dshr(io.in_from_accumu.mat[35], _io_result_mat_35_T_8) @[quant.scala 59:18]
      io_result_mat_35_ret1_1 <= _io_result_mat_35_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_35_T_9 = leq(io_result_mat_35_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_35_T_10 = geq(io_result_mat_35_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_35_T_11 = mux(_io_result_mat_35_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_35_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_35_T_12 = mux(_io_result_mat_35_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_35_T_11) @[quant.scala 60:19]
      node _io_result_mat_35_T_13 = mux(_io_result_mat_35_T, _io_result_mat_35_T_6, _io_result_mat_35_T_12) @[quant.scala 63:19]
      io.result.mat[35] <= _io_result_mat_35_T_13 @[quant.scala 87:30]
      node _io_result_mat_36_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_36_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_36_T_2 = tail(_io_result_mat_36_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_36_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_36_ret1_T = dshl(io.in_from_accumu.mat[36], _io_result_mat_36_T_2) @[quant.scala 52:18]
      io_result_mat_36_ret1 <= _io_result_mat_36_ret1_T @[quant.scala 52:14]
      node _io_result_mat_36_T_3 = leq(io_result_mat_36_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_36_T_4 = geq(io_result_mat_36_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_36_T_5 = mux(_io_result_mat_36_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_36_ret1) @[quant.scala 53:41]
      node _io_result_mat_36_T_6 = mux(_io_result_mat_36_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_36_T_5) @[quant.scala 53:19]
      node _io_result_mat_36_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_36_T_8 = tail(_io_result_mat_36_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_36_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_36_ret1_T_1 = dshr(io.in_from_accumu.mat[36], _io_result_mat_36_T_8) @[quant.scala 59:18]
      io_result_mat_36_ret1_1 <= _io_result_mat_36_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_36_T_9 = leq(io_result_mat_36_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_36_T_10 = geq(io_result_mat_36_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_36_T_11 = mux(_io_result_mat_36_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_36_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_36_T_12 = mux(_io_result_mat_36_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_36_T_11) @[quant.scala 60:19]
      node _io_result_mat_36_T_13 = mux(_io_result_mat_36_T, _io_result_mat_36_T_6, _io_result_mat_36_T_12) @[quant.scala 63:19]
      io.result.mat[36] <= _io_result_mat_36_T_13 @[quant.scala 87:30]
      node _io_result_mat_37_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_37_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_37_T_2 = tail(_io_result_mat_37_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_37_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_37_ret1_T = dshl(io.in_from_accumu.mat[37], _io_result_mat_37_T_2) @[quant.scala 52:18]
      io_result_mat_37_ret1 <= _io_result_mat_37_ret1_T @[quant.scala 52:14]
      node _io_result_mat_37_T_3 = leq(io_result_mat_37_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_37_T_4 = geq(io_result_mat_37_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_37_T_5 = mux(_io_result_mat_37_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_37_ret1) @[quant.scala 53:41]
      node _io_result_mat_37_T_6 = mux(_io_result_mat_37_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_37_T_5) @[quant.scala 53:19]
      node _io_result_mat_37_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_37_T_8 = tail(_io_result_mat_37_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_37_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_37_ret1_T_1 = dshr(io.in_from_accumu.mat[37], _io_result_mat_37_T_8) @[quant.scala 59:18]
      io_result_mat_37_ret1_1 <= _io_result_mat_37_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_37_T_9 = leq(io_result_mat_37_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_37_T_10 = geq(io_result_mat_37_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_37_T_11 = mux(_io_result_mat_37_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_37_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_37_T_12 = mux(_io_result_mat_37_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_37_T_11) @[quant.scala 60:19]
      node _io_result_mat_37_T_13 = mux(_io_result_mat_37_T, _io_result_mat_37_T_6, _io_result_mat_37_T_12) @[quant.scala 63:19]
      io.result.mat[37] <= _io_result_mat_37_T_13 @[quant.scala 87:30]
      node _io_result_mat_38_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_38_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_38_T_2 = tail(_io_result_mat_38_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_38_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_38_ret1_T = dshl(io.in_from_accumu.mat[38], _io_result_mat_38_T_2) @[quant.scala 52:18]
      io_result_mat_38_ret1 <= _io_result_mat_38_ret1_T @[quant.scala 52:14]
      node _io_result_mat_38_T_3 = leq(io_result_mat_38_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_38_T_4 = geq(io_result_mat_38_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_38_T_5 = mux(_io_result_mat_38_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_38_ret1) @[quant.scala 53:41]
      node _io_result_mat_38_T_6 = mux(_io_result_mat_38_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_38_T_5) @[quant.scala 53:19]
      node _io_result_mat_38_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_38_T_8 = tail(_io_result_mat_38_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_38_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_38_ret1_T_1 = dshr(io.in_from_accumu.mat[38], _io_result_mat_38_T_8) @[quant.scala 59:18]
      io_result_mat_38_ret1_1 <= _io_result_mat_38_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_38_T_9 = leq(io_result_mat_38_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_38_T_10 = geq(io_result_mat_38_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_38_T_11 = mux(_io_result_mat_38_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_38_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_38_T_12 = mux(_io_result_mat_38_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_38_T_11) @[quant.scala 60:19]
      node _io_result_mat_38_T_13 = mux(_io_result_mat_38_T, _io_result_mat_38_T_6, _io_result_mat_38_T_12) @[quant.scala 63:19]
      io.result.mat[38] <= _io_result_mat_38_T_13 @[quant.scala 87:30]
      node _io_result_mat_39_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_39_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_39_T_2 = tail(_io_result_mat_39_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_39_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_39_ret1_T = dshl(io.in_from_accumu.mat[39], _io_result_mat_39_T_2) @[quant.scala 52:18]
      io_result_mat_39_ret1 <= _io_result_mat_39_ret1_T @[quant.scala 52:14]
      node _io_result_mat_39_T_3 = leq(io_result_mat_39_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_39_T_4 = geq(io_result_mat_39_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_39_T_5 = mux(_io_result_mat_39_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_39_ret1) @[quant.scala 53:41]
      node _io_result_mat_39_T_6 = mux(_io_result_mat_39_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_39_T_5) @[quant.scala 53:19]
      node _io_result_mat_39_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_39_T_8 = tail(_io_result_mat_39_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_39_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_39_ret1_T_1 = dshr(io.in_from_accumu.mat[39], _io_result_mat_39_T_8) @[quant.scala 59:18]
      io_result_mat_39_ret1_1 <= _io_result_mat_39_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_39_T_9 = leq(io_result_mat_39_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_39_T_10 = geq(io_result_mat_39_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_39_T_11 = mux(_io_result_mat_39_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_39_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_39_T_12 = mux(_io_result_mat_39_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_39_T_11) @[quant.scala 60:19]
      node _io_result_mat_39_T_13 = mux(_io_result_mat_39_T, _io_result_mat_39_T_6, _io_result_mat_39_T_12) @[quant.scala 63:19]
      io.result.mat[39] <= _io_result_mat_39_T_13 @[quant.scala 87:30]
      node _io_result_mat_40_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_40_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_40_T_2 = tail(_io_result_mat_40_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_40_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_40_ret1_T = dshl(io.in_from_accumu.mat[40], _io_result_mat_40_T_2) @[quant.scala 52:18]
      io_result_mat_40_ret1 <= _io_result_mat_40_ret1_T @[quant.scala 52:14]
      node _io_result_mat_40_T_3 = leq(io_result_mat_40_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_40_T_4 = geq(io_result_mat_40_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_40_T_5 = mux(_io_result_mat_40_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_40_ret1) @[quant.scala 53:41]
      node _io_result_mat_40_T_6 = mux(_io_result_mat_40_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_40_T_5) @[quant.scala 53:19]
      node _io_result_mat_40_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_40_T_8 = tail(_io_result_mat_40_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_40_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_40_ret1_T_1 = dshr(io.in_from_accumu.mat[40], _io_result_mat_40_T_8) @[quant.scala 59:18]
      io_result_mat_40_ret1_1 <= _io_result_mat_40_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_40_T_9 = leq(io_result_mat_40_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_40_T_10 = geq(io_result_mat_40_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_40_T_11 = mux(_io_result_mat_40_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_40_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_40_T_12 = mux(_io_result_mat_40_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_40_T_11) @[quant.scala 60:19]
      node _io_result_mat_40_T_13 = mux(_io_result_mat_40_T, _io_result_mat_40_T_6, _io_result_mat_40_T_12) @[quant.scala 63:19]
      io.result.mat[40] <= _io_result_mat_40_T_13 @[quant.scala 87:30]
      node _io_result_mat_41_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_41_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_41_T_2 = tail(_io_result_mat_41_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_41_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_41_ret1_T = dshl(io.in_from_accumu.mat[41], _io_result_mat_41_T_2) @[quant.scala 52:18]
      io_result_mat_41_ret1 <= _io_result_mat_41_ret1_T @[quant.scala 52:14]
      node _io_result_mat_41_T_3 = leq(io_result_mat_41_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_41_T_4 = geq(io_result_mat_41_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_41_T_5 = mux(_io_result_mat_41_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_41_ret1) @[quant.scala 53:41]
      node _io_result_mat_41_T_6 = mux(_io_result_mat_41_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_41_T_5) @[quant.scala 53:19]
      node _io_result_mat_41_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_41_T_8 = tail(_io_result_mat_41_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_41_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_41_ret1_T_1 = dshr(io.in_from_accumu.mat[41], _io_result_mat_41_T_8) @[quant.scala 59:18]
      io_result_mat_41_ret1_1 <= _io_result_mat_41_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_41_T_9 = leq(io_result_mat_41_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_41_T_10 = geq(io_result_mat_41_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_41_T_11 = mux(_io_result_mat_41_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_41_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_41_T_12 = mux(_io_result_mat_41_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_41_T_11) @[quant.scala 60:19]
      node _io_result_mat_41_T_13 = mux(_io_result_mat_41_T, _io_result_mat_41_T_6, _io_result_mat_41_T_12) @[quant.scala 63:19]
      io.result.mat[41] <= _io_result_mat_41_T_13 @[quant.scala 87:30]
      node _io_result_mat_42_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_42_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_42_T_2 = tail(_io_result_mat_42_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_42_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_42_ret1_T = dshl(io.in_from_accumu.mat[42], _io_result_mat_42_T_2) @[quant.scala 52:18]
      io_result_mat_42_ret1 <= _io_result_mat_42_ret1_T @[quant.scala 52:14]
      node _io_result_mat_42_T_3 = leq(io_result_mat_42_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_42_T_4 = geq(io_result_mat_42_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_42_T_5 = mux(_io_result_mat_42_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_42_ret1) @[quant.scala 53:41]
      node _io_result_mat_42_T_6 = mux(_io_result_mat_42_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_42_T_5) @[quant.scala 53:19]
      node _io_result_mat_42_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_42_T_8 = tail(_io_result_mat_42_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_42_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_42_ret1_T_1 = dshr(io.in_from_accumu.mat[42], _io_result_mat_42_T_8) @[quant.scala 59:18]
      io_result_mat_42_ret1_1 <= _io_result_mat_42_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_42_T_9 = leq(io_result_mat_42_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_42_T_10 = geq(io_result_mat_42_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_42_T_11 = mux(_io_result_mat_42_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_42_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_42_T_12 = mux(_io_result_mat_42_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_42_T_11) @[quant.scala 60:19]
      node _io_result_mat_42_T_13 = mux(_io_result_mat_42_T, _io_result_mat_42_T_6, _io_result_mat_42_T_12) @[quant.scala 63:19]
      io.result.mat[42] <= _io_result_mat_42_T_13 @[quant.scala 87:30]
      node _io_result_mat_43_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_43_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_43_T_2 = tail(_io_result_mat_43_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_43_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_43_ret1_T = dshl(io.in_from_accumu.mat[43], _io_result_mat_43_T_2) @[quant.scala 52:18]
      io_result_mat_43_ret1 <= _io_result_mat_43_ret1_T @[quant.scala 52:14]
      node _io_result_mat_43_T_3 = leq(io_result_mat_43_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_43_T_4 = geq(io_result_mat_43_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_43_T_5 = mux(_io_result_mat_43_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_43_ret1) @[quant.scala 53:41]
      node _io_result_mat_43_T_6 = mux(_io_result_mat_43_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_43_T_5) @[quant.scala 53:19]
      node _io_result_mat_43_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_43_T_8 = tail(_io_result_mat_43_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_43_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_43_ret1_T_1 = dshr(io.in_from_accumu.mat[43], _io_result_mat_43_T_8) @[quant.scala 59:18]
      io_result_mat_43_ret1_1 <= _io_result_mat_43_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_43_T_9 = leq(io_result_mat_43_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_43_T_10 = geq(io_result_mat_43_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_43_T_11 = mux(_io_result_mat_43_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_43_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_43_T_12 = mux(_io_result_mat_43_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_43_T_11) @[quant.scala 60:19]
      node _io_result_mat_43_T_13 = mux(_io_result_mat_43_T, _io_result_mat_43_T_6, _io_result_mat_43_T_12) @[quant.scala 63:19]
      io.result.mat[43] <= _io_result_mat_43_T_13 @[quant.scala 87:30]
      node _io_result_mat_44_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_44_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_44_T_2 = tail(_io_result_mat_44_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_44_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_44_ret1_T = dshl(io.in_from_accumu.mat[44], _io_result_mat_44_T_2) @[quant.scala 52:18]
      io_result_mat_44_ret1 <= _io_result_mat_44_ret1_T @[quant.scala 52:14]
      node _io_result_mat_44_T_3 = leq(io_result_mat_44_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_44_T_4 = geq(io_result_mat_44_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_44_T_5 = mux(_io_result_mat_44_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_44_ret1) @[quant.scala 53:41]
      node _io_result_mat_44_T_6 = mux(_io_result_mat_44_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_44_T_5) @[quant.scala 53:19]
      node _io_result_mat_44_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_44_T_8 = tail(_io_result_mat_44_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_44_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_44_ret1_T_1 = dshr(io.in_from_accumu.mat[44], _io_result_mat_44_T_8) @[quant.scala 59:18]
      io_result_mat_44_ret1_1 <= _io_result_mat_44_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_44_T_9 = leq(io_result_mat_44_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_44_T_10 = geq(io_result_mat_44_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_44_T_11 = mux(_io_result_mat_44_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_44_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_44_T_12 = mux(_io_result_mat_44_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_44_T_11) @[quant.scala 60:19]
      node _io_result_mat_44_T_13 = mux(_io_result_mat_44_T, _io_result_mat_44_T_6, _io_result_mat_44_T_12) @[quant.scala 63:19]
      io.result.mat[44] <= _io_result_mat_44_T_13 @[quant.scala 87:30]
      node _io_result_mat_45_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_45_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_45_T_2 = tail(_io_result_mat_45_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_45_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_45_ret1_T = dshl(io.in_from_accumu.mat[45], _io_result_mat_45_T_2) @[quant.scala 52:18]
      io_result_mat_45_ret1 <= _io_result_mat_45_ret1_T @[quant.scala 52:14]
      node _io_result_mat_45_T_3 = leq(io_result_mat_45_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_45_T_4 = geq(io_result_mat_45_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_45_T_5 = mux(_io_result_mat_45_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_45_ret1) @[quant.scala 53:41]
      node _io_result_mat_45_T_6 = mux(_io_result_mat_45_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_45_T_5) @[quant.scala 53:19]
      node _io_result_mat_45_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_45_T_8 = tail(_io_result_mat_45_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_45_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_45_ret1_T_1 = dshr(io.in_from_accumu.mat[45], _io_result_mat_45_T_8) @[quant.scala 59:18]
      io_result_mat_45_ret1_1 <= _io_result_mat_45_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_45_T_9 = leq(io_result_mat_45_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_45_T_10 = geq(io_result_mat_45_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_45_T_11 = mux(_io_result_mat_45_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_45_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_45_T_12 = mux(_io_result_mat_45_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_45_T_11) @[quant.scala 60:19]
      node _io_result_mat_45_T_13 = mux(_io_result_mat_45_T, _io_result_mat_45_T_6, _io_result_mat_45_T_12) @[quant.scala 63:19]
      io.result.mat[45] <= _io_result_mat_45_T_13 @[quant.scala 87:30]
      node _io_result_mat_46_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_46_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_46_T_2 = tail(_io_result_mat_46_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_46_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_46_ret1_T = dshl(io.in_from_accumu.mat[46], _io_result_mat_46_T_2) @[quant.scala 52:18]
      io_result_mat_46_ret1 <= _io_result_mat_46_ret1_T @[quant.scala 52:14]
      node _io_result_mat_46_T_3 = leq(io_result_mat_46_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_46_T_4 = geq(io_result_mat_46_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_46_T_5 = mux(_io_result_mat_46_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_46_ret1) @[quant.scala 53:41]
      node _io_result_mat_46_T_6 = mux(_io_result_mat_46_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_46_T_5) @[quant.scala 53:19]
      node _io_result_mat_46_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_46_T_8 = tail(_io_result_mat_46_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_46_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_46_ret1_T_1 = dshr(io.in_from_accumu.mat[46], _io_result_mat_46_T_8) @[quant.scala 59:18]
      io_result_mat_46_ret1_1 <= _io_result_mat_46_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_46_T_9 = leq(io_result_mat_46_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_46_T_10 = geq(io_result_mat_46_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_46_T_11 = mux(_io_result_mat_46_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_46_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_46_T_12 = mux(_io_result_mat_46_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_46_T_11) @[quant.scala 60:19]
      node _io_result_mat_46_T_13 = mux(_io_result_mat_46_T, _io_result_mat_46_T_6, _io_result_mat_46_T_12) @[quant.scala 63:19]
      io.result.mat[46] <= _io_result_mat_46_T_13 @[quant.scala 87:30]
      node _io_result_mat_47_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_47_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_47_T_2 = tail(_io_result_mat_47_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_47_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_47_ret1_T = dshl(io.in_from_accumu.mat[47], _io_result_mat_47_T_2) @[quant.scala 52:18]
      io_result_mat_47_ret1 <= _io_result_mat_47_ret1_T @[quant.scala 52:14]
      node _io_result_mat_47_T_3 = leq(io_result_mat_47_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_47_T_4 = geq(io_result_mat_47_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_47_T_5 = mux(_io_result_mat_47_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_47_ret1) @[quant.scala 53:41]
      node _io_result_mat_47_T_6 = mux(_io_result_mat_47_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_47_T_5) @[quant.scala 53:19]
      node _io_result_mat_47_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_47_T_8 = tail(_io_result_mat_47_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_47_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_47_ret1_T_1 = dshr(io.in_from_accumu.mat[47], _io_result_mat_47_T_8) @[quant.scala 59:18]
      io_result_mat_47_ret1_1 <= _io_result_mat_47_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_47_T_9 = leq(io_result_mat_47_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_47_T_10 = geq(io_result_mat_47_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_47_T_11 = mux(_io_result_mat_47_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_47_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_47_T_12 = mux(_io_result_mat_47_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_47_T_11) @[quant.scala 60:19]
      node _io_result_mat_47_T_13 = mux(_io_result_mat_47_T, _io_result_mat_47_T_6, _io_result_mat_47_T_12) @[quant.scala 63:19]
      io.result.mat[47] <= _io_result_mat_47_T_13 @[quant.scala 87:30]
      node _io_result_mat_48_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_48_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_48_T_2 = tail(_io_result_mat_48_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_48_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_48_ret1_T = dshl(io.in_from_accumu.mat[48], _io_result_mat_48_T_2) @[quant.scala 52:18]
      io_result_mat_48_ret1 <= _io_result_mat_48_ret1_T @[quant.scala 52:14]
      node _io_result_mat_48_T_3 = leq(io_result_mat_48_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_48_T_4 = geq(io_result_mat_48_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_48_T_5 = mux(_io_result_mat_48_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_48_ret1) @[quant.scala 53:41]
      node _io_result_mat_48_T_6 = mux(_io_result_mat_48_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_48_T_5) @[quant.scala 53:19]
      node _io_result_mat_48_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_48_T_8 = tail(_io_result_mat_48_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_48_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_48_ret1_T_1 = dshr(io.in_from_accumu.mat[48], _io_result_mat_48_T_8) @[quant.scala 59:18]
      io_result_mat_48_ret1_1 <= _io_result_mat_48_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_48_T_9 = leq(io_result_mat_48_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_48_T_10 = geq(io_result_mat_48_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_48_T_11 = mux(_io_result_mat_48_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_48_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_48_T_12 = mux(_io_result_mat_48_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_48_T_11) @[quant.scala 60:19]
      node _io_result_mat_48_T_13 = mux(_io_result_mat_48_T, _io_result_mat_48_T_6, _io_result_mat_48_T_12) @[quant.scala 63:19]
      io.result.mat[48] <= _io_result_mat_48_T_13 @[quant.scala 87:30]
      node _io_result_mat_49_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_49_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_49_T_2 = tail(_io_result_mat_49_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_49_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_49_ret1_T = dshl(io.in_from_accumu.mat[49], _io_result_mat_49_T_2) @[quant.scala 52:18]
      io_result_mat_49_ret1 <= _io_result_mat_49_ret1_T @[quant.scala 52:14]
      node _io_result_mat_49_T_3 = leq(io_result_mat_49_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_49_T_4 = geq(io_result_mat_49_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_49_T_5 = mux(_io_result_mat_49_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_49_ret1) @[quant.scala 53:41]
      node _io_result_mat_49_T_6 = mux(_io_result_mat_49_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_49_T_5) @[quant.scala 53:19]
      node _io_result_mat_49_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_49_T_8 = tail(_io_result_mat_49_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_49_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_49_ret1_T_1 = dshr(io.in_from_accumu.mat[49], _io_result_mat_49_T_8) @[quant.scala 59:18]
      io_result_mat_49_ret1_1 <= _io_result_mat_49_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_49_T_9 = leq(io_result_mat_49_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_49_T_10 = geq(io_result_mat_49_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_49_T_11 = mux(_io_result_mat_49_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_49_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_49_T_12 = mux(_io_result_mat_49_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_49_T_11) @[quant.scala 60:19]
      node _io_result_mat_49_T_13 = mux(_io_result_mat_49_T, _io_result_mat_49_T_6, _io_result_mat_49_T_12) @[quant.scala 63:19]
      io.result.mat[49] <= _io_result_mat_49_T_13 @[quant.scala 87:30]
      node _io_result_mat_50_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_50_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_50_T_2 = tail(_io_result_mat_50_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_50_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_50_ret1_T = dshl(io.in_from_accumu.mat[50], _io_result_mat_50_T_2) @[quant.scala 52:18]
      io_result_mat_50_ret1 <= _io_result_mat_50_ret1_T @[quant.scala 52:14]
      node _io_result_mat_50_T_3 = leq(io_result_mat_50_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_50_T_4 = geq(io_result_mat_50_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_50_T_5 = mux(_io_result_mat_50_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_50_ret1) @[quant.scala 53:41]
      node _io_result_mat_50_T_6 = mux(_io_result_mat_50_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_50_T_5) @[quant.scala 53:19]
      node _io_result_mat_50_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_50_T_8 = tail(_io_result_mat_50_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_50_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_50_ret1_T_1 = dshr(io.in_from_accumu.mat[50], _io_result_mat_50_T_8) @[quant.scala 59:18]
      io_result_mat_50_ret1_1 <= _io_result_mat_50_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_50_T_9 = leq(io_result_mat_50_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_50_T_10 = geq(io_result_mat_50_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_50_T_11 = mux(_io_result_mat_50_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_50_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_50_T_12 = mux(_io_result_mat_50_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_50_T_11) @[quant.scala 60:19]
      node _io_result_mat_50_T_13 = mux(_io_result_mat_50_T, _io_result_mat_50_T_6, _io_result_mat_50_T_12) @[quant.scala 63:19]
      io.result.mat[50] <= _io_result_mat_50_T_13 @[quant.scala 87:30]
      node _io_result_mat_51_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_51_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_51_T_2 = tail(_io_result_mat_51_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_51_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_51_ret1_T = dshl(io.in_from_accumu.mat[51], _io_result_mat_51_T_2) @[quant.scala 52:18]
      io_result_mat_51_ret1 <= _io_result_mat_51_ret1_T @[quant.scala 52:14]
      node _io_result_mat_51_T_3 = leq(io_result_mat_51_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_51_T_4 = geq(io_result_mat_51_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_51_T_5 = mux(_io_result_mat_51_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_51_ret1) @[quant.scala 53:41]
      node _io_result_mat_51_T_6 = mux(_io_result_mat_51_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_51_T_5) @[quant.scala 53:19]
      node _io_result_mat_51_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_51_T_8 = tail(_io_result_mat_51_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_51_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_51_ret1_T_1 = dshr(io.in_from_accumu.mat[51], _io_result_mat_51_T_8) @[quant.scala 59:18]
      io_result_mat_51_ret1_1 <= _io_result_mat_51_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_51_T_9 = leq(io_result_mat_51_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_51_T_10 = geq(io_result_mat_51_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_51_T_11 = mux(_io_result_mat_51_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_51_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_51_T_12 = mux(_io_result_mat_51_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_51_T_11) @[quant.scala 60:19]
      node _io_result_mat_51_T_13 = mux(_io_result_mat_51_T, _io_result_mat_51_T_6, _io_result_mat_51_T_12) @[quant.scala 63:19]
      io.result.mat[51] <= _io_result_mat_51_T_13 @[quant.scala 87:30]
      node _io_result_mat_52_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_52_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_52_T_2 = tail(_io_result_mat_52_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_52_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_52_ret1_T = dshl(io.in_from_accumu.mat[52], _io_result_mat_52_T_2) @[quant.scala 52:18]
      io_result_mat_52_ret1 <= _io_result_mat_52_ret1_T @[quant.scala 52:14]
      node _io_result_mat_52_T_3 = leq(io_result_mat_52_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_52_T_4 = geq(io_result_mat_52_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_52_T_5 = mux(_io_result_mat_52_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_52_ret1) @[quant.scala 53:41]
      node _io_result_mat_52_T_6 = mux(_io_result_mat_52_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_52_T_5) @[quant.scala 53:19]
      node _io_result_mat_52_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_52_T_8 = tail(_io_result_mat_52_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_52_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_52_ret1_T_1 = dshr(io.in_from_accumu.mat[52], _io_result_mat_52_T_8) @[quant.scala 59:18]
      io_result_mat_52_ret1_1 <= _io_result_mat_52_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_52_T_9 = leq(io_result_mat_52_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_52_T_10 = geq(io_result_mat_52_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_52_T_11 = mux(_io_result_mat_52_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_52_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_52_T_12 = mux(_io_result_mat_52_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_52_T_11) @[quant.scala 60:19]
      node _io_result_mat_52_T_13 = mux(_io_result_mat_52_T, _io_result_mat_52_T_6, _io_result_mat_52_T_12) @[quant.scala 63:19]
      io.result.mat[52] <= _io_result_mat_52_T_13 @[quant.scala 87:30]
      node _io_result_mat_53_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_53_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_53_T_2 = tail(_io_result_mat_53_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_53_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_53_ret1_T = dshl(io.in_from_accumu.mat[53], _io_result_mat_53_T_2) @[quant.scala 52:18]
      io_result_mat_53_ret1 <= _io_result_mat_53_ret1_T @[quant.scala 52:14]
      node _io_result_mat_53_T_3 = leq(io_result_mat_53_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_53_T_4 = geq(io_result_mat_53_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_53_T_5 = mux(_io_result_mat_53_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_53_ret1) @[quant.scala 53:41]
      node _io_result_mat_53_T_6 = mux(_io_result_mat_53_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_53_T_5) @[quant.scala 53:19]
      node _io_result_mat_53_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_53_T_8 = tail(_io_result_mat_53_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_53_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_53_ret1_T_1 = dshr(io.in_from_accumu.mat[53], _io_result_mat_53_T_8) @[quant.scala 59:18]
      io_result_mat_53_ret1_1 <= _io_result_mat_53_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_53_T_9 = leq(io_result_mat_53_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_53_T_10 = geq(io_result_mat_53_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_53_T_11 = mux(_io_result_mat_53_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_53_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_53_T_12 = mux(_io_result_mat_53_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_53_T_11) @[quant.scala 60:19]
      node _io_result_mat_53_T_13 = mux(_io_result_mat_53_T, _io_result_mat_53_T_6, _io_result_mat_53_T_12) @[quant.scala 63:19]
      io.result.mat[53] <= _io_result_mat_53_T_13 @[quant.scala 87:30]
      node _io_result_mat_54_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_54_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_54_T_2 = tail(_io_result_mat_54_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_54_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_54_ret1_T = dshl(io.in_from_accumu.mat[54], _io_result_mat_54_T_2) @[quant.scala 52:18]
      io_result_mat_54_ret1 <= _io_result_mat_54_ret1_T @[quant.scala 52:14]
      node _io_result_mat_54_T_3 = leq(io_result_mat_54_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_54_T_4 = geq(io_result_mat_54_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_54_T_5 = mux(_io_result_mat_54_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_54_ret1) @[quant.scala 53:41]
      node _io_result_mat_54_T_6 = mux(_io_result_mat_54_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_54_T_5) @[quant.scala 53:19]
      node _io_result_mat_54_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_54_T_8 = tail(_io_result_mat_54_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_54_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_54_ret1_T_1 = dshr(io.in_from_accumu.mat[54], _io_result_mat_54_T_8) @[quant.scala 59:18]
      io_result_mat_54_ret1_1 <= _io_result_mat_54_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_54_T_9 = leq(io_result_mat_54_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_54_T_10 = geq(io_result_mat_54_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_54_T_11 = mux(_io_result_mat_54_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_54_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_54_T_12 = mux(_io_result_mat_54_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_54_T_11) @[quant.scala 60:19]
      node _io_result_mat_54_T_13 = mux(_io_result_mat_54_T, _io_result_mat_54_T_6, _io_result_mat_54_T_12) @[quant.scala 63:19]
      io.result.mat[54] <= _io_result_mat_54_T_13 @[quant.scala 87:30]
      node _io_result_mat_55_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_55_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_55_T_2 = tail(_io_result_mat_55_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_55_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_55_ret1_T = dshl(io.in_from_accumu.mat[55], _io_result_mat_55_T_2) @[quant.scala 52:18]
      io_result_mat_55_ret1 <= _io_result_mat_55_ret1_T @[quant.scala 52:14]
      node _io_result_mat_55_T_3 = leq(io_result_mat_55_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_55_T_4 = geq(io_result_mat_55_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_55_T_5 = mux(_io_result_mat_55_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_55_ret1) @[quant.scala 53:41]
      node _io_result_mat_55_T_6 = mux(_io_result_mat_55_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_55_T_5) @[quant.scala 53:19]
      node _io_result_mat_55_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_55_T_8 = tail(_io_result_mat_55_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_55_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_55_ret1_T_1 = dshr(io.in_from_accumu.mat[55], _io_result_mat_55_T_8) @[quant.scala 59:18]
      io_result_mat_55_ret1_1 <= _io_result_mat_55_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_55_T_9 = leq(io_result_mat_55_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_55_T_10 = geq(io_result_mat_55_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_55_T_11 = mux(_io_result_mat_55_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_55_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_55_T_12 = mux(_io_result_mat_55_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_55_T_11) @[quant.scala 60:19]
      node _io_result_mat_55_T_13 = mux(_io_result_mat_55_T, _io_result_mat_55_T_6, _io_result_mat_55_T_12) @[quant.scala 63:19]
      io.result.mat[55] <= _io_result_mat_55_T_13 @[quant.scala 87:30]
      node _io_result_mat_56_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_56_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_56_T_2 = tail(_io_result_mat_56_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_56_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_56_ret1_T = dshl(io.in_from_accumu.mat[56], _io_result_mat_56_T_2) @[quant.scala 52:18]
      io_result_mat_56_ret1 <= _io_result_mat_56_ret1_T @[quant.scala 52:14]
      node _io_result_mat_56_T_3 = leq(io_result_mat_56_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_56_T_4 = geq(io_result_mat_56_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_56_T_5 = mux(_io_result_mat_56_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_56_ret1) @[quant.scala 53:41]
      node _io_result_mat_56_T_6 = mux(_io_result_mat_56_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_56_T_5) @[quant.scala 53:19]
      node _io_result_mat_56_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_56_T_8 = tail(_io_result_mat_56_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_56_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_56_ret1_T_1 = dshr(io.in_from_accumu.mat[56], _io_result_mat_56_T_8) @[quant.scala 59:18]
      io_result_mat_56_ret1_1 <= _io_result_mat_56_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_56_T_9 = leq(io_result_mat_56_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_56_T_10 = geq(io_result_mat_56_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_56_T_11 = mux(_io_result_mat_56_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_56_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_56_T_12 = mux(_io_result_mat_56_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_56_T_11) @[quant.scala 60:19]
      node _io_result_mat_56_T_13 = mux(_io_result_mat_56_T, _io_result_mat_56_T_6, _io_result_mat_56_T_12) @[quant.scala 63:19]
      io.result.mat[56] <= _io_result_mat_56_T_13 @[quant.scala 87:30]
      node _io_result_mat_57_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_57_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_57_T_2 = tail(_io_result_mat_57_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_57_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_57_ret1_T = dshl(io.in_from_accumu.mat[57], _io_result_mat_57_T_2) @[quant.scala 52:18]
      io_result_mat_57_ret1 <= _io_result_mat_57_ret1_T @[quant.scala 52:14]
      node _io_result_mat_57_T_3 = leq(io_result_mat_57_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_57_T_4 = geq(io_result_mat_57_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_57_T_5 = mux(_io_result_mat_57_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_57_ret1) @[quant.scala 53:41]
      node _io_result_mat_57_T_6 = mux(_io_result_mat_57_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_57_T_5) @[quant.scala 53:19]
      node _io_result_mat_57_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_57_T_8 = tail(_io_result_mat_57_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_57_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_57_ret1_T_1 = dshr(io.in_from_accumu.mat[57], _io_result_mat_57_T_8) @[quant.scala 59:18]
      io_result_mat_57_ret1_1 <= _io_result_mat_57_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_57_T_9 = leq(io_result_mat_57_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_57_T_10 = geq(io_result_mat_57_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_57_T_11 = mux(_io_result_mat_57_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_57_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_57_T_12 = mux(_io_result_mat_57_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_57_T_11) @[quant.scala 60:19]
      node _io_result_mat_57_T_13 = mux(_io_result_mat_57_T, _io_result_mat_57_T_6, _io_result_mat_57_T_12) @[quant.scala 63:19]
      io.result.mat[57] <= _io_result_mat_57_T_13 @[quant.scala 87:30]
      node _io_result_mat_58_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_58_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_58_T_2 = tail(_io_result_mat_58_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_58_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_58_ret1_T = dshl(io.in_from_accumu.mat[58], _io_result_mat_58_T_2) @[quant.scala 52:18]
      io_result_mat_58_ret1 <= _io_result_mat_58_ret1_T @[quant.scala 52:14]
      node _io_result_mat_58_T_3 = leq(io_result_mat_58_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_58_T_4 = geq(io_result_mat_58_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_58_T_5 = mux(_io_result_mat_58_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_58_ret1) @[quant.scala 53:41]
      node _io_result_mat_58_T_6 = mux(_io_result_mat_58_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_58_T_5) @[quant.scala 53:19]
      node _io_result_mat_58_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_58_T_8 = tail(_io_result_mat_58_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_58_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_58_ret1_T_1 = dshr(io.in_from_accumu.mat[58], _io_result_mat_58_T_8) @[quant.scala 59:18]
      io_result_mat_58_ret1_1 <= _io_result_mat_58_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_58_T_9 = leq(io_result_mat_58_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_58_T_10 = geq(io_result_mat_58_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_58_T_11 = mux(_io_result_mat_58_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_58_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_58_T_12 = mux(_io_result_mat_58_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_58_T_11) @[quant.scala 60:19]
      node _io_result_mat_58_T_13 = mux(_io_result_mat_58_T, _io_result_mat_58_T_6, _io_result_mat_58_T_12) @[quant.scala 63:19]
      io.result.mat[58] <= _io_result_mat_58_T_13 @[quant.scala 87:30]
      node _io_result_mat_59_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_59_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_59_T_2 = tail(_io_result_mat_59_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_59_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_59_ret1_T = dshl(io.in_from_accumu.mat[59], _io_result_mat_59_T_2) @[quant.scala 52:18]
      io_result_mat_59_ret1 <= _io_result_mat_59_ret1_T @[quant.scala 52:14]
      node _io_result_mat_59_T_3 = leq(io_result_mat_59_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_59_T_4 = geq(io_result_mat_59_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_59_T_5 = mux(_io_result_mat_59_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_59_ret1) @[quant.scala 53:41]
      node _io_result_mat_59_T_6 = mux(_io_result_mat_59_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_59_T_5) @[quant.scala 53:19]
      node _io_result_mat_59_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_59_T_8 = tail(_io_result_mat_59_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_59_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_59_ret1_T_1 = dshr(io.in_from_accumu.mat[59], _io_result_mat_59_T_8) @[quant.scala 59:18]
      io_result_mat_59_ret1_1 <= _io_result_mat_59_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_59_T_9 = leq(io_result_mat_59_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_59_T_10 = geq(io_result_mat_59_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_59_T_11 = mux(_io_result_mat_59_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_59_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_59_T_12 = mux(_io_result_mat_59_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_59_T_11) @[quant.scala 60:19]
      node _io_result_mat_59_T_13 = mux(_io_result_mat_59_T, _io_result_mat_59_T_6, _io_result_mat_59_T_12) @[quant.scala 63:19]
      io.result.mat[59] <= _io_result_mat_59_T_13 @[quant.scala 87:30]
      node _io_result_mat_60_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_60_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_60_T_2 = tail(_io_result_mat_60_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_60_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_60_ret1_T = dshl(io.in_from_accumu.mat[60], _io_result_mat_60_T_2) @[quant.scala 52:18]
      io_result_mat_60_ret1 <= _io_result_mat_60_ret1_T @[quant.scala 52:14]
      node _io_result_mat_60_T_3 = leq(io_result_mat_60_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_60_T_4 = geq(io_result_mat_60_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_60_T_5 = mux(_io_result_mat_60_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_60_ret1) @[quant.scala 53:41]
      node _io_result_mat_60_T_6 = mux(_io_result_mat_60_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_60_T_5) @[quant.scala 53:19]
      node _io_result_mat_60_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_60_T_8 = tail(_io_result_mat_60_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_60_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_60_ret1_T_1 = dshr(io.in_from_accumu.mat[60], _io_result_mat_60_T_8) @[quant.scala 59:18]
      io_result_mat_60_ret1_1 <= _io_result_mat_60_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_60_T_9 = leq(io_result_mat_60_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_60_T_10 = geq(io_result_mat_60_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_60_T_11 = mux(_io_result_mat_60_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_60_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_60_T_12 = mux(_io_result_mat_60_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_60_T_11) @[quant.scala 60:19]
      node _io_result_mat_60_T_13 = mux(_io_result_mat_60_T, _io_result_mat_60_T_6, _io_result_mat_60_T_12) @[quant.scala 63:19]
      io.result.mat[60] <= _io_result_mat_60_T_13 @[quant.scala 87:30]
      node _io_result_mat_61_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_61_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_61_T_2 = tail(_io_result_mat_61_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_61_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_61_ret1_T = dshl(io.in_from_accumu.mat[61], _io_result_mat_61_T_2) @[quant.scala 52:18]
      io_result_mat_61_ret1 <= _io_result_mat_61_ret1_T @[quant.scala 52:14]
      node _io_result_mat_61_T_3 = leq(io_result_mat_61_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_61_T_4 = geq(io_result_mat_61_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_61_T_5 = mux(_io_result_mat_61_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_61_ret1) @[quant.scala 53:41]
      node _io_result_mat_61_T_6 = mux(_io_result_mat_61_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_61_T_5) @[quant.scala 53:19]
      node _io_result_mat_61_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_61_T_8 = tail(_io_result_mat_61_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_61_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_61_ret1_T_1 = dshr(io.in_from_accumu.mat[61], _io_result_mat_61_T_8) @[quant.scala 59:18]
      io_result_mat_61_ret1_1 <= _io_result_mat_61_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_61_T_9 = leq(io_result_mat_61_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_61_T_10 = geq(io_result_mat_61_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_61_T_11 = mux(_io_result_mat_61_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_61_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_61_T_12 = mux(_io_result_mat_61_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_61_T_11) @[quant.scala 60:19]
      node _io_result_mat_61_T_13 = mux(_io_result_mat_61_T, _io_result_mat_61_T_6, _io_result_mat_61_T_12) @[quant.scala 63:19]
      io.result.mat[61] <= _io_result_mat_61_T_13 @[quant.scala 87:30]
      node _io_result_mat_62_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_62_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_62_T_2 = tail(_io_result_mat_62_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_62_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_62_ret1_T = dshl(io.in_from_accumu.mat[62], _io_result_mat_62_T_2) @[quant.scala 52:18]
      io_result_mat_62_ret1 <= _io_result_mat_62_ret1_T @[quant.scala 52:14]
      node _io_result_mat_62_T_3 = leq(io_result_mat_62_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_62_T_4 = geq(io_result_mat_62_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_62_T_5 = mux(_io_result_mat_62_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_62_ret1) @[quant.scala 53:41]
      node _io_result_mat_62_T_6 = mux(_io_result_mat_62_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_62_T_5) @[quant.scala 53:19]
      node _io_result_mat_62_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_62_T_8 = tail(_io_result_mat_62_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_62_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_62_ret1_T_1 = dshr(io.in_from_accumu.mat[62], _io_result_mat_62_T_8) @[quant.scala 59:18]
      io_result_mat_62_ret1_1 <= _io_result_mat_62_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_62_T_9 = leq(io_result_mat_62_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_62_T_10 = geq(io_result_mat_62_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_62_T_11 = mux(_io_result_mat_62_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_62_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_62_T_12 = mux(_io_result_mat_62_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_62_T_11) @[quant.scala 60:19]
      node _io_result_mat_62_T_13 = mux(_io_result_mat_62_T, _io_result_mat_62_T_6, _io_result_mat_62_T_12) @[quant.scala 63:19]
      io.result.mat[62] <= _io_result_mat_62_T_13 @[quant.scala 87:30]
      node _io_result_mat_63_T = leq(quant.in_q, quant.out_q) @[quant.scala 63:24]
      node _io_result_mat_63_T_1 = sub(quant.out_q, quant.in_q) @[quant.scala 63:51]
      node _io_result_mat_63_T_2 = tail(_io_result_mat_63_T_1, 1) @[quant.scala 63:51]
      wire io_result_mat_63_ret1 : SInt<64> @[quant.scala 51:24]
      node _io_result_mat_63_ret1_T = dshl(io.in_from_accumu.mat[63], _io_result_mat_63_T_2) @[quant.scala 52:18]
      io_result_mat_63_ret1 <= _io_result_mat_63_ret1_T @[quant.scala 52:14]
      node _io_result_mat_63_T_3 = leq(io_result_mat_63_ret1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 53:24]
      node _io_result_mat_63_T_4 = geq(io_result_mat_63_ret1, asSInt(UInt<64>("h07fff"))) @[quant.scala 53:46]
      node _io_result_mat_63_T_5 = mux(_io_result_mat_63_T_4, asSInt(UInt<64>("h07fff")), io_result_mat_63_ret1) @[quant.scala 53:41]
      node _io_result_mat_63_T_6 = mux(_io_result_mat_63_T_3, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_63_T_5) @[quant.scala 53:19]
      node _io_result_mat_63_T_7 = sub(quant.in_q, quant.out_q) @[quant.scala 63:76]
      node _io_result_mat_63_T_8 = tail(_io_result_mat_63_T_7, 1) @[quant.scala 63:76]
      wire io_result_mat_63_ret1_1 : SInt<64> @[quant.scala 58:24]
      node _io_result_mat_63_ret1_T_1 = dshr(io.in_from_accumu.mat[63], _io_result_mat_63_T_8) @[quant.scala 59:18]
      io_result_mat_63_ret1_1 <= _io_result_mat_63_ret1_T_1 @[quant.scala 59:14]
      node _io_result_mat_63_T_9 = leq(io_result_mat_63_ret1_1, asSInt(UInt<64>("h0ffffffffffff8000"))) @[quant.scala 60:24]
      node _io_result_mat_63_T_10 = geq(io_result_mat_63_ret1_1, asSInt(UInt<64>("h07fff"))) @[quant.scala 60:46]
      node _io_result_mat_63_T_11 = mux(_io_result_mat_63_T_10, asSInt(UInt<64>("h07fff")), io_result_mat_63_ret1_1) @[quant.scala 60:41]
      node _io_result_mat_63_T_12 = mux(_io_result_mat_63_T_9, asSInt(UInt<64>("h0ffffffffffff8000")), _io_result_mat_63_T_11) @[quant.scala 60:19]
      node _io_result_mat_63_T_13 = mux(_io_result_mat_63_T, _io_result_mat_63_T_6, _io_result_mat_63_T_12) @[quant.scala 63:19]
      io.result.mat[63] <= _io_result_mat_63_T_13 @[quant.scala 87:30]
      skip @[quant.scala 84:16]
    
  module WriteSwitch : 
    input clock : Clock
    input reset : Reset
    output io : {flip valid_in : UInt<1>[3], valid_out : UInt<1>, flip input : {mat : SInt<16>[64]}[3], output : {mat : SInt<16>[64]}}
    
    wire _io_output_WIRE : {mat : SInt<16>[64]} @[switch.scala 78:38]
    node _io_output_T = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[0] <= _io_output_T @[switch.scala 78:38]
    node _io_output_T_1 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[1] <= _io_output_T_1 @[switch.scala 78:38]
    node _io_output_T_2 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[2] <= _io_output_T_2 @[switch.scala 78:38]
    node _io_output_T_3 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[3] <= _io_output_T_3 @[switch.scala 78:38]
    node _io_output_T_4 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[4] <= _io_output_T_4 @[switch.scala 78:38]
    node _io_output_T_5 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[5] <= _io_output_T_5 @[switch.scala 78:38]
    node _io_output_T_6 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[6] <= _io_output_T_6 @[switch.scala 78:38]
    node _io_output_T_7 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[7] <= _io_output_T_7 @[switch.scala 78:38]
    node _io_output_T_8 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[8] <= _io_output_T_8 @[switch.scala 78:38]
    node _io_output_T_9 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[9] <= _io_output_T_9 @[switch.scala 78:38]
    node _io_output_T_10 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[10] <= _io_output_T_10 @[switch.scala 78:38]
    node _io_output_T_11 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[11] <= _io_output_T_11 @[switch.scala 78:38]
    node _io_output_T_12 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[12] <= _io_output_T_12 @[switch.scala 78:38]
    node _io_output_T_13 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[13] <= _io_output_T_13 @[switch.scala 78:38]
    node _io_output_T_14 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[14] <= _io_output_T_14 @[switch.scala 78:38]
    node _io_output_T_15 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[15] <= _io_output_T_15 @[switch.scala 78:38]
    node _io_output_T_16 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[16] <= _io_output_T_16 @[switch.scala 78:38]
    node _io_output_T_17 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[17] <= _io_output_T_17 @[switch.scala 78:38]
    node _io_output_T_18 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[18] <= _io_output_T_18 @[switch.scala 78:38]
    node _io_output_T_19 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[19] <= _io_output_T_19 @[switch.scala 78:38]
    node _io_output_T_20 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[20] <= _io_output_T_20 @[switch.scala 78:38]
    node _io_output_T_21 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[21] <= _io_output_T_21 @[switch.scala 78:38]
    node _io_output_T_22 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[22] <= _io_output_T_22 @[switch.scala 78:38]
    node _io_output_T_23 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[23] <= _io_output_T_23 @[switch.scala 78:38]
    node _io_output_T_24 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[24] <= _io_output_T_24 @[switch.scala 78:38]
    node _io_output_T_25 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[25] <= _io_output_T_25 @[switch.scala 78:38]
    node _io_output_T_26 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[26] <= _io_output_T_26 @[switch.scala 78:38]
    node _io_output_T_27 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[27] <= _io_output_T_27 @[switch.scala 78:38]
    node _io_output_T_28 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[28] <= _io_output_T_28 @[switch.scala 78:38]
    node _io_output_T_29 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[29] <= _io_output_T_29 @[switch.scala 78:38]
    node _io_output_T_30 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[30] <= _io_output_T_30 @[switch.scala 78:38]
    node _io_output_T_31 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[31] <= _io_output_T_31 @[switch.scala 78:38]
    node _io_output_T_32 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[32] <= _io_output_T_32 @[switch.scala 78:38]
    node _io_output_T_33 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[33] <= _io_output_T_33 @[switch.scala 78:38]
    node _io_output_T_34 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[34] <= _io_output_T_34 @[switch.scala 78:38]
    node _io_output_T_35 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[35] <= _io_output_T_35 @[switch.scala 78:38]
    node _io_output_T_36 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[36] <= _io_output_T_36 @[switch.scala 78:38]
    node _io_output_T_37 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[37] <= _io_output_T_37 @[switch.scala 78:38]
    node _io_output_T_38 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[38] <= _io_output_T_38 @[switch.scala 78:38]
    node _io_output_T_39 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[39] <= _io_output_T_39 @[switch.scala 78:38]
    node _io_output_T_40 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[40] <= _io_output_T_40 @[switch.scala 78:38]
    node _io_output_T_41 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[41] <= _io_output_T_41 @[switch.scala 78:38]
    node _io_output_T_42 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[42] <= _io_output_T_42 @[switch.scala 78:38]
    node _io_output_T_43 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[43] <= _io_output_T_43 @[switch.scala 78:38]
    node _io_output_T_44 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[44] <= _io_output_T_44 @[switch.scala 78:38]
    node _io_output_T_45 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[45] <= _io_output_T_45 @[switch.scala 78:38]
    node _io_output_T_46 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[46] <= _io_output_T_46 @[switch.scala 78:38]
    node _io_output_T_47 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[47] <= _io_output_T_47 @[switch.scala 78:38]
    node _io_output_T_48 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[48] <= _io_output_T_48 @[switch.scala 78:38]
    node _io_output_T_49 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[49] <= _io_output_T_49 @[switch.scala 78:38]
    node _io_output_T_50 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[50] <= _io_output_T_50 @[switch.scala 78:38]
    node _io_output_T_51 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[51] <= _io_output_T_51 @[switch.scala 78:38]
    node _io_output_T_52 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[52] <= _io_output_T_52 @[switch.scala 78:38]
    node _io_output_T_53 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[53] <= _io_output_T_53 @[switch.scala 78:38]
    node _io_output_T_54 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[54] <= _io_output_T_54 @[switch.scala 78:38]
    node _io_output_T_55 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[55] <= _io_output_T_55 @[switch.scala 78:38]
    node _io_output_T_56 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[56] <= _io_output_T_56 @[switch.scala 78:38]
    node _io_output_T_57 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[57] <= _io_output_T_57 @[switch.scala 78:38]
    node _io_output_T_58 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[58] <= _io_output_T_58 @[switch.scala 78:38]
    node _io_output_T_59 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[59] <= _io_output_T_59 @[switch.scala 78:38]
    node _io_output_T_60 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[60] <= _io_output_T_60 @[switch.scala 78:38]
    node _io_output_T_61 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[61] <= _io_output_T_61 @[switch.scala 78:38]
    node _io_output_T_62 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[62] <= _io_output_T_62 @[switch.scala 78:38]
    node _io_output_T_63 = asSInt(UInt<16>("h00")) @[switch.scala 78:38]
    _io_output_WIRE.mat[63] <= _io_output_T_63 @[switch.scala 78:38]
    node _io_output_T_64 = mux(io.valid_in[2], io.input[2], _io_output_WIRE) @[Mux.scala 98:16]
    node _io_output_T_65 = mux(io.valid_in[1], io.input[1], _io_output_T_64) @[Mux.scala 98:16]
    node _io_output_T_66 = mux(io.valid_in[0], io.input[0], _io_output_T_65) @[Mux.scala 98:16]
    io.output.mat[0] <= _io_output_T_66.mat[0] @[switch.scala 78:15]
    io.output.mat[1] <= _io_output_T_66.mat[1] @[switch.scala 78:15]
    io.output.mat[2] <= _io_output_T_66.mat[2] @[switch.scala 78:15]
    io.output.mat[3] <= _io_output_T_66.mat[3] @[switch.scala 78:15]
    io.output.mat[4] <= _io_output_T_66.mat[4] @[switch.scala 78:15]
    io.output.mat[5] <= _io_output_T_66.mat[5] @[switch.scala 78:15]
    io.output.mat[6] <= _io_output_T_66.mat[6] @[switch.scala 78:15]
    io.output.mat[7] <= _io_output_T_66.mat[7] @[switch.scala 78:15]
    io.output.mat[8] <= _io_output_T_66.mat[8] @[switch.scala 78:15]
    io.output.mat[9] <= _io_output_T_66.mat[9] @[switch.scala 78:15]
    io.output.mat[10] <= _io_output_T_66.mat[10] @[switch.scala 78:15]
    io.output.mat[11] <= _io_output_T_66.mat[11] @[switch.scala 78:15]
    io.output.mat[12] <= _io_output_T_66.mat[12] @[switch.scala 78:15]
    io.output.mat[13] <= _io_output_T_66.mat[13] @[switch.scala 78:15]
    io.output.mat[14] <= _io_output_T_66.mat[14] @[switch.scala 78:15]
    io.output.mat[15] <= _io_output_T_66.mat[15] @[switch.scala 78:15]
    io.output.mat[16] <= _io_output_T_66.mat[16] @[switch.scala 78:15]
    io.output.mat[17] <= _io_output_T_66.mat[17] @[switch.scala 78:15]
    io.output.mat[18] <= _io_output_T_66.mat[18] @[switch.scala 78:15]
    io.output.mat[19] <= _io_output_T_66.mat[19] @[switch.scala 78:15]
    io.output.mat[20] <= _io_output_T_66.mat[20] @[switch.scala 78:15]
    io.output.mat[21] <= _io_output_T_66.mat[21] @[switch.scala 78:15]
    io.output.mat[22] <= _io_output_T_66.mat[22] @[switch.scala 78:15]
    io.output.mat[23] <= _io_output_T_66.mat[23] @[switch.scala 78:15]
    io.output.mat[24] <= _io_output_T_66.mat[24] @[switch.scala 78:15]
    io.output.mat[25] <= _io_output_T_66.mat[25] @[switch.scala 78:15]
    io.output.mat[26] <= _io_output_T_66.mat[26] @[switch.scala 78:15]
    io.output.mat[27] <= _io_output_T_66.mat[27] @[switch.scala 78:15]
    io.output.mat[28] <= _io_output_T_66.mat[28] @[switch.scala 78:15]
    io.output.mat[29] <= _io_output_T_66.mat[29] @[switch.scala 78:15]
    io.output.mat[30] <= _io_output_T_66.mat[30] @[switch.scala 78:15]
    io.output.mat[31] <= _io_output_T_66.mat[31] @[switch.scala 78:15]
    io.output.mat[32] <= _io_output_T_66.mat[32] @[switch.scala 78:15]
    io.output.mat[33] <= _io_output_T_66.mat[33] @[switch.scala 78:15]
    io.output.mat[34] <= _io_output_T_66.mat[34] @[switch.scala 78:15]
    io.output.mat[35] <= _io_output_T_66.mat[35] @[switch.scala 78:15]
    io.output.mat[36] <= _io_output_T_66.mat[36] @[switch.scala 78:15]
    io.output.mat[37] <= _io_output_T_66.mat[37] @[switch.scala 78:15]
    io.output.mat[38] <= _io_output_T_66.mat[38] @[switch.scala 78:15]
    io.output.mat[39] <= _io_output_T_66.mat[39] @[switch.scala 78:15]
    io.output.mat[40] <= _io_output_T_66.mat[40] @[switch.scala 78:15]
    io.output.mat[41] <= _io_output_T_66.mat[41] @[switch.scala 78:15]
    io.output.mat[42] <= _io_output_T_66.mat[42] @[switch.scala 78:15]
    io.output.mat[43] <= _io_output_T_66.mat[43] @[switch.scala 78:15]
    io.output.mat[44] <= _io_output_T_66.mat[44] @[switch.scala 78:15]
    io.output.mat[45] <= _io_output_T_66.mat[45] @[switch.scala 78:15]
    io.output.mat[46] <= _io_output_T_66.mat[46] @[switch.scala 78:15]
    io.output.mat[47] <= _io_output_T_66.mat[47] @[switch.scala 78:15]
    io.output.mat[48] <= _io_output_T_66.mat[48] @[switch.scala 78:15]
    io.output.mat[49] <= _io_output_T_66.mat[49] @[switch.scala 78:15]
    io.output.mat[50] <= _io_output_T_66.mat[50] @[switch.scala 78:15]
    io.output.mat[51] <= _io_output_T_66.mat[51] @[switch.scala 78:15]
    io.output.mat[52] <= _io_output_T_66.mat[52] @[switch.scala 78:15]
    io.output.mat[53] <= _io_output_T_66.mat[53] @[switch.scala 78:15]
    io.output.mat[54] <= _io_output_T_66.mat[54] @[switch.scala 78:15]
    io.output.mat[55] <= _io_output_T_66.mat[55] @[switch.scala 78:15]
    io.output.mat[56] <= _io_output_T_66.mat[56] @[switch.scala 78:15]
    io.output.mat[57] <= _io_output_T_66.mat[57] @[switch.scala 78:15]
    io.output.mat[58] <= _io_output_T_66.mat[58] @[switch.scala 78:15]
    io.output.mat[59] <= _io_output_T_66.mat[59] @[switch.scala 78:15]
    io.output.mat[60] <= _io_output_T_66.mat[60] @[switch.scala 78:15]
    io.output.mat[61] <= _io_output_T_66.mat[61] @[switch.scala 78:15]
    io.output.mat[62] <= _io_output_T_66.mat[62] @[switch.scala 78:15]
    io.output.mat[63] <= _io_output_T_66.mat[63] @[switch.scala 78:15]
    node _io_valid_out_T = or(io.valid_in[0], io.valid_in[1]) @[switch.scala 81:42]
    node _io_valid_out_T_1 = or(_io_valid_out_T, io.valid_in[2]) @[switch.scala 81:42]
    io.valid_out <= _io_valid_out_T_1 @[switch.scala 81:18]
    
  module RealWriter : 
    input clock : Clock
    input reset : Reset
    output io : {flip valid_in : UInt<1>, valid_out : UInt<1>, flip flag_job : UInt<1>, flip in_from_quant : {mat : SInt<16>[64]}, flip job : {job : {big : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, a : UInt<10>}, small : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, a : UInt<10>, ano_bank_id : UInt<3>}[2]}[2], out_chan : UInt<10>}, to_bigbank : {data : SInt<16>[48]}, to_smallbank : {data : SInt<16>[8]}[2], to_banks : {addrs : {addr : UInt<10>, bank_id : UInt<3>}[3]}}
    
    wire _gen_WIRE : {big : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, a : UInt<10>}, small : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, a : UInt<10>, ano_bank_id : UInt<3>, cnt_swap : {ccnt : UInt<1>, cend : UInt<1>}, y_begin_addr : UInt<10>}[2]} @[write.scala 71:55]
    _gen_WIRE.small[0].y_begin_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].cnt_swap.cend <= UInt<1>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].cnt_swap.ccnt <= UInt<1>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].ano_bank_id <= UInt<3>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].a <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].column_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].block_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].bank_id <= UInt<3>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].cnt_y.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].cnt_y.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].cnt_x.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].cnt_x.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].cnt_ic.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].cnt_ic.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].now_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].min_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[0].max_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].y_begin_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].cnt_swap.cend <= UInt<1>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].cnt_swap.ccnt <= UInt<1>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].ano_bank_id <= UInt<3>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].a <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].column_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].block_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].bank_id <= UInt<3>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].cnt_y.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].cnt_y.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].cnt_x.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].cnt_x.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].cnt_ic.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].cnt_ic.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].now_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].min_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.small[1].max_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.a <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.column_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.block_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.bank_id <= UInt<3>("h00") @[write.scala 71:55]
    _gen_WIRE.big.cnt_y.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.cnt_y.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.cnt_x.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.cnt_x.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.cnt_ic.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.cnt_ic.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.now_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.min_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE.big.max_addr <= UInt<10>("h00") @[write.scala 71:55]
    wire _gen_WIRE_1 : {big : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, a : UInt<10>}, small : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, a : UInt<10>, ano_bank_id : UInt<3>, cnt_swap : {ccnt : UInt<1>, cend : UInt<1>}, y_begin_addr : UInt<10>}[2]} @[write.scala 71:55]
    _gen_WIRE_1.small[0].y_begin_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].cnt_swap.cend <= UInt<1>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].cnt_swap.ccnt <= UInt<1>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].ano_bank_id <= UInt<3>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].a <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].column_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].block_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].bank_id <= UInt<3>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].cnt_y.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].cnt_y.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].cnt_x.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].cnt_x.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].cnt_ic.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].cnt_ic.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].now_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].min_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[0].max_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].y_begin_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].cnt_swap.cend <= UInt<1>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].cnt_swap.ccnt <= UInt<1>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].ano_bank_id <= UInt<3>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].a <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].column_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].block_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].bank_id <= UInt<3>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].cnt_y.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].cnt_y.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].cnt_x.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].cnt_x.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].cnt_ic.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].cnt_ic.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].now_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].min_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.small[1].max_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.a <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.column_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.block_size <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.bank_id <= UInt<3>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.cnt_y.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.cnt_y.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.cnt_x.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.cnt_x.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.cnt_ic.cend <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.cnt_ic.ccnt <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.now_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.min_addr <= UInt<10>("h00") @[write.scala 71:55]
    _gen_WIRE_1.big.max_addr <= UInt<10>("h00") @[write.scala 71:55]
    wire _gen_WIRE_2 : {big : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, a : UInt<10>}, small : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, a : UInt<10>, ano_bank_id : UInt<3>, cnt_swap : {ccnt : UInt<1>, cend : UInt<1>}, y_begin_addr : UInt<10>}[2]}[2] @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].y_begin_addr <= _gen_WIRE.small[0].y_begin_addr @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].cnt_swap.cend <= _gen_WIRE.small[0].cnt_swap.cend @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].cnt_swap.ccnt <= _gen_WIRE.small[0].cnt_swap.ccnt @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].ano_bank_id <= _gen_WIRE.small[0].ano_bank_id @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].a <= _gen_WIRE.small[0].a @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].column_size <= _gen_WIRE.small[0].column_size @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].block_size <= _gen_WIRE.small[0].block_size @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].bank_id <= _gen_WIRE.small[0].bank_id @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].cnt_y.cend <= _gen_WIRE.small[0].cnt_y.cend @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].cnt_y.ccnt <= _gen_WIRE.small[0].cnt_y.ccnt @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].cnt_x.cend <= _gen_WIRE.small[0].cnt_x.cend @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].cnt_x.ccnt <= _gen_WIRE.small[0].cnt_x.ccnt @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].cnt_ic.cend <= _gen_WIRE.small[0].cnt_ic.cend @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].cnt_ic.ccnt <= _gen_WIRE.small[0].cnt_ic.ccnt @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].now_addr <= _gen_WIRE.small[0].now_addr @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].min_addr <= _gen_WIRE.small[0].min_addr @[write.scala 71:30]
    _gen_WIRE_2[0].small[0].max_addr <= _gen_WIRE.small[0].max_addr @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].y_begin_addr <= _gen_WIRE.small[1].y_begin_addr @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].cnt_swap.cend <= _gen_WIRE.small[1].cnt_swap.cend @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].cnt_swap.ccnt <= _gen_WIRE.small[1].cnt_swap.ccnt @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].ano_bank_id <= _gen_WIRE.small[1].ano_bank_id @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].a <= _gen_WIRE.small[1].a @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].column_size <= _gen_WIRE.small[1].column_size @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].block_size <= _gen_WIRE.small[1].block_size @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].bank_id <= _gen_WIRE.small[1].bank_id @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].cnt_y.cend <= _gen_WIRE.small[1].cnt_y.cend @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].cnt_y.ccnt <= _gen_WIRE.small[1].cnt_y.ccnt @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].cnt_x.cend <= _gen_WIRE.small[1].cnt_x.cend @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].cnt_x.ccnt <= _gen_WIRE.small[1].cnt_x.ccnt @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].cnt_ic.cend <= _gen_WIRE.small[1].cnt_ic.cend @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].cnt_ic.ccnt <= _gen_WIRE.small[1].cnt_ic.ccnt @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].now_addr <= _gen_WIRE.small[1].now_addr @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].min_addr <= _gen_WIRE.small[1].min_addr @[write.scala 71:30]
    _gen_WIRE_2[0].small[1].max_addr <= _gen_WIRE.small[1].max_addr @[write.scala 71:30]
    _gen_WIRE_2[0].big.a <= _gen_WIRE.big.a @[write.scala 71:30]
    _gen_WIRE_2[0].big.column_size <= _gen_WIRE.big.column_size @[write.scala 71:30]
    _gen_WIRE_2[0].big.block_size <= _gen_WIRE.big.block_size @[write.scala 71:30]
    _gen_WIRE_2[0].big.bank_id <= _gen_WIRE.big.bank_id @[write.scala 71:30]
    _gen_WIRE_2[0].big.cnt_y.cend <= _gen_WIRE.big.cnt_y.cend @[write.scala 71:30]
    _gen_WIRE_2[0].big.cnt_y.ccnt <= _gen_WIRE.big.cnt_y.ccnt @[write.scala 71:30]
    _gen_WIRE_2[0].big.cnt_x.cend <= _gen_WIRE.big.cnt_x.cend @[write.scala 71:30]
    _gen_WIRE_2[0].big.cnt_x.ccnt <= _gen_WIRE.big.cnt_x.ccnt @[write.scala 71:30]
    _gen_WIRE_2[0].big.cnt_ic.cend <= _gen_WIRE.big.cnt_ic.cend @[write.scala 71:30]
    _gen_WIRE_2[0].big.cnt_ic.ccnt <= _gen_WIRE.big.cnt_ic.ccnt @[write.scala 71:30]
    _gen_WIRE_2[0].big.now_addr <= _gen_WIRE.big.now_addr @[write.scala 71:30]
    _gen_WIRE_2[0].big.min_addr <= _gen_WIRE.big.min_addr @[write.scala 71:30]
    _gen_WIRE_2[0].big.max_addr <= _gen_WIRE.big.max_addr @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].y_begin_addr <= _gen_WIRE_1.small[0].y_begin_addr @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].cnt_swap.cend <= _gen_WIRE_1.small[0].cnt_swap.cend @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].cnt_swap.ccnt <= _gen_WIRE_1.small[0].cnt_swap.ccnt @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].ano_bank_id <= _gen_WIRE_1.small[0].ano_bank_id @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].a <= _gen_WIRE_1.small[0].a @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].column_size <= _gen_WIRE_1.small[0].column_size @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].block_size <= _gen_WIRE_1.small[0].block_size @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].bank_id <= _gen_WIRE_1.small[0].bank_id @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].cnt_y.cend <= _gen_WIRE_1.small[0].cnt_y.cend @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].cnt_y.ccnt <= _gen_WIRE_1.small[0].cnt_y.ccnt @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].cnt_x.cend <= _gen_WIRE_1.small[0].cnt_x.cend @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].cnt_x.ccnt <= _gen_WIRE_1.small[0].cnt_x.ccnt @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].cnt_ic.cend <= _gen_WIRE_1.small[0].cnt_ic.cend @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].cnt_ic.ccnt <= _gen_WIRE_1.small[0].cnt_ic.ccnt @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].now_addr <= _gen_WIRE_1.small[0].now_addr @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].min_addr <= _gen_WIRE_1.small[0].min_addr @[write.scala 71:30]
    _gen_WIRE_2[1].small[0].max_addr <= _gen_WIRE_1.small[0].max_addr @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].y_begin_addr <= _gen_WIRE_1.small[1].y_begin_addr @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].cnt_swap.cend <= _gen_WIRE_1.small[1].cnt_swap.cend @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].cnt_swap.ccnt <= _gen_WIRE_1.small[1].cnt_swap.ccnt @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].ano_bank_id <= _gen_WIRE_1.small[1].ano_bank_id @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].a <= _gen_WIRE_1.small[1].a @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].column_size <= _gen_WIRE_1.small[1].column_size @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].block_size <= _gen_WIRE_1.small[1].block_size @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].bank_id <= _gen_WIRE_1.small[1].bank_id @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].cnt_y.cend <= _gen_WIRE_1.small[1].cnt_y.cend @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].cnt_y.ccnt <= _gen_WIRE_1.small[1].cnt_y.ccnt @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].cnt_x.cend <= _gen_WIRE_1.small[1].cnt_x.cend @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].cnt_x.ccnt <= _gen_WIRE_1.small[1].cnt_x.ccnt @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].cnt_ic.cend <= _gen_WIRE_1.small[1].cnt_ic.cend @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].cnt_ic.ccnt <= _gen_WIRE_1.small[1].cnt_ic.ccnt @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].now_addr <= _gen_WIRE_1.small[1].now_addr @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].min_addr <= _gen_WIRE_1.small[1].min_addr @[write.scala 71:30]
    _gen_WIRE_2[1].small[1].max_addr <= _gen_WIRE_1.small[1].max_addr @[write.scala 71:30]
    _gen_WIRE_2[1].big.a <= _gen_WIRE_1.big.a @[write.scala 71:30]
    _gen_WIRE_2[1].big.column_size <= _gen_WIRE_1.big.column_size @[write.scala 71:30]
    _gen_WIRE_2[1].big.block_size <= _gen_WIRE_1.big.block_size @[write.scala 71:30]
    _gen_WIRE_2[1].big.bank_id <= _gen_WIRE_1.big.bank_id @[write.scala 71:30]
    _gen_WIRE_2[1].big.cnt_y.cend <= _gen_WIRE_1.big.cnt_y.cend @[write.scala 71:30]
    _gen_WIRE_2[1].big.cnt_y.ccnt <= _gen_WIRE_1.big.cnt_y.ccnt @[write.scala 71:30]
    _gen_WIRE_2[1].big.cnt_x.cend <= _gen_WIRE_1.big.cnt_x.cend @[write.scala 71:30]
    _gen_WIRE_2[1].big.cnt_x.ccnt <= _gen_WIRE_1.big.cnt_x.ccnt @[write.scala 71:30]
    _gen_WIRE_2[1].big.cnt_ic.cend <= _gen_WIRE_1.big.cnt_ic.cend @[write.scala 71:30]
    _gen_WIRE_2[1].big.cnt_ic.ccnt <= _gen_WIRE_1.big.cnt_ic.ccnt @[write.scala 71:30]
    _gen_WIRE_2[1].big.now_addr <= _gen_WIRE_1.big.now_addr @[write.scala 71:30]
    _gen_WIRE_2[1].big.min_addr <= _gen_WIRE_1.big.min_addr @[write.scala 71:30]
    _gen_WIRE_2[1].big.max_addr <= _gen_WIRE_1.big.max_addr @[write.scala 71:30]
    reg gen : {big : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, a : UInt<10>}, small : {max_addr : UInt<10>, min_addr : UInt<10>, now_addr : UInt<10>, cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, cnt_x : {ccnt : UInt<10>, cend : UInt<10>}, cnt_y : {ccnt : UInt<10>, cend : UInt<10>}, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, a : UInt<10>, ano_bank_id : UInt<3>, cnt_swap : {ccnt : UInt<1>, cend : UInt<1>}, y_begin_addr : UInt<10>}[2]}[2], clock with : (reset => (reset, _gen_WIRE_2)) @[write.scala 71:22]
    wire _cnt_ic_WIRE : {ccnt : UInt<10>, cend : UInt<10>} @[write.scala 72:38]
    _cnt_ic_WIRE.cend <= UInt<10>("h00") @[write.scala 72:38]
    _cnt_ic_WIRE.ccnt <= UInt<10>("h00") @[write.scala 72:38]
    reg cnt_ic : {ccnt : UInt<10>, cend : UInt<10>}, clock with : (reset => (reset, _cnt_ic_WIRE)) @[write.scala 72:25]
    reg state : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[write.scala 73:24]
    io.to_bigbank.data[0] <= io.in_from_quant.mat[1] @[write.scala 77:39]
    io.to_bigbank.data[1] <= io.in_from_quant.mat[2] @[write.scala 77:39]
    io.to_bigbank.data[2] <= io.in_from_quant.mat[3] @[write.scala 77:39]
    io.to_bigbank.data[3] <= io.in_from_quant.mat[4] @[write.scala 77:39]
    io.to_bigbank.data[4] <= io.in_from_quant.mat[5] @[write.scala 77:39]
    io.to_bigbank.data[5] <= io.in_from_quant.mat[6] @[write.scala 77:39]
    io.to_bigbank.data[6] <= io.in_from_quant.mat[9] @[write.scala 77:39]
    io.to_bigbank.data[7] <= io.in_from_quant.mat[10] @[write.scala 77:39]
    io.to_bigbank.data[8] <= io.in_from_quant.mat[11] @[write.scala 77:39]
    io.to_bigbank.data[9] <= io.in_from_quant.mat[12] @[write.scala 77:39]
    io.to_bigbank.data[10] <= io.in_from_quant.mat[13] @[write.scala 77:39]
    io.to_bigbank.data[11] <= io.in_from_quant.mat[14] @[write.scala 77:39]
    io.to_bigbank.data[12] <= io.in_from_quant.mat[17] @[write.scala 77:39]
    io.to_bigbank.data[13] <= io.in_from_quant.mat[18] @[write.scala 77:39]
    io.to_bigbank.data[14] <= io.in_from_quant.mat[19] @[write.scala 77:39]
    io.to_bigbank.data[15] <= io.in_from_quant.mat[20] @[write.scala 77:39]
    io.to_bigbank.data[16] <= io.in_from_quant.mat[21] @[write.scala 77:39]
    io.to_bigbank.data[17] <= io.in_from_quant.mat[22] @[write.scala 77:39]
    io.to_bigbank.data[18] <= io.in_from_quant.mat[25] @[write.scala 77:39]
    io.to_bigbank.data[19] <= io.in_from_quant.mat[26] @[write.scala 77:39]
    io.to_bigbank.data[20] <= io.in_from_quant.mat[27] @[write.scala 77:39]
    io.to_bigbank.data[21] <= io.in_from_quant.mat[28] @[write.scala 77:39]
    io.to_bigbank.data[22] <= io.in_from_quant.mat[29] @[write.scala 77:39]
    io.to_bigbank.data[23] <= io.in_from_quant.mat[30] @[write.scala 77:39]
    io.to_bigbank.data[24] <= io.in_from_quant.mat[33] @[write.scala 77:39]
    io.to_bigbank.data[25] <= io.in_from_quant.mat[34] @[write.scala 77:39]
    io.to_bigbank.data[26] <= io.in_from_quant.mat[35] @[write.scala 77:39]
    io.to_bigbank.data[27] <= io.in_from_quant.mat[36] @[write.scala 77:39]
    io.to_bigbank.data[28] <= io.in_from_quant.mat[37] @[write.scala 77:39]
    io.to_bigbank.data[29] <= io.in_from_quant.mat[38] @[write.scala 77:39]
    io.to_bigbank.data[30] <= io.in_from_quant.mat[41] @[write.scala 77:39]
    io.to_bigbank.data[31] <= io.in_from_quant.mat[42] @[write.scala 77:39]
    io.to_bigbank.data[32] <= io.in_from_quant.mat[43] @[write.scala 77:39]
    io.to_bigbank.data[33] <= io.in_from_quant.mat[44] @[write.scala 77:39]
    io.to_bigbank.data[34] <= io.in_from_quant.mat[45] @[write.scala 77:39]
    io.to_bigbank.data[35] <= io.in_from_quant.mat[46] @[write.scala 77:39]
    io.to_bigbank.data[36] <= io.in_from_quant.mat[49] @[write.scala 77:39]
    io.to_bigbank.data[37] <= io.in_from_quant.mat[50] @[write.scala 77:39]
    io.to_bigbank.data[38] <= io.in_from_quant.mat[51] @[write.scala 77:39]
    io.to_bigbank.data[39] <= io.in_from_quant.mat[52] @[write.scala 77:39]
    io.to_bigbank.data[40] <= io.in_from_quant.mat[53] @[write.scala 77:39]
    io.to_bigbank.data[41] <= io.in_from_quant.mat[54] @[write.scala 77:39]
    io.to_bigbank.data[42] <= io.in_from_quant.mat[57] @[write.scala 77:39]
    io.to_bigbank.data[43] <= io.in_from_quant.mat[58] @[write.scala 77:39]
    io.to_bigbank.data[44] <= io.in_from_quant.mat[59] @[write.scala 77:39]
    io.to_bigbank.data[45] <= io.in_from_quant.mat[60] @[write.scala 77:39]
    io.to_bigbank.data[46] <= io.in_from_quant.mat[61] @[write.scala 77:39]
    io.to_bigbank.data[47] <= io.in_from_quant.mat[62] @[write.scala 77:39]
    io.to_smallbank[0].data[0] <= io.in_from_quant.mat[0] @[write.scala 79:36]
    io.to_smallbank[0].data[1] <= io.in_from_quant.mat[8] @[write.scala 79:36]
    io.to_smallbank[0].data[2] <= io.in_from_quant.mat[16] @[write.scala 79:36]
    io.to_smallbank[0].data[3] <= io.in_from_quant.mat[24] @[write.scala 79:36]
    io.to_smallbank[0].data[4] <= io.in_from_quant.mat[32] @[write.scala 79:36]
    io.to_smallbank[0].data[5] <= io.in_from_quant.mat[40] @[write.scala 79:36]
    io.to_smallbank[0].data[6] <= io.in_from_quant.mat[48] @[write.scala 79:36]
    io.to_smallbank[0].data[7] <= io.in_from_quant.mat[56] @[write.scala 79:36]
    io.to_smallbank[1].data[0] <= io.in_from_quant.mat[7] @[write.scala 81:36]
    io.to_smallbank[1].data[1] <= io.in_from_quant.mat[15] @[write.scala 81:36]
    io.to_smallbank[1].data[2] <= io.in_from_quant.mat[23] @[write.scala 81:36]
    io.to_smallbank[1].data[3] <= io.in_from_quant.mat[31] @[write.scala 81:36]
    io.to_smallbank[1].data[4] <= io.in_from_quant.mat[39] @[write.scala 81:36]
    io.to_smallbank[1].data[5] <= io.in_from_quant.mat[47] @[write.scala 81:36]
    io.to_smallbank[1].data[6] <= io.in_from_quant.mat[55] @[write.scala 81:36]
    io.to_smallbank[1].data[7] <= io.in_from_quant.mat[63] @[write.scala 81:36]
    wire io_to_banks_ret : {addrs : {addr : UInt<10>, bank_id : UInt<3>}[3]} @[gen_addr.scala 343:23]
    wire io_to_banks_ret_addrs_0_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
    io_to_banks_ret_addrs_0_ret.addr <= gen[state].big.now_addr @[gen_addr.scala 15:18]
    io_to_banks_ret_addrs_0_ret.bank_id <= gen[state].big.bank_id @[gen_addr.scala 16:21]
    io_to_banks_ret.addrs[0].bank_id <= io_to_banks_ret_addrs_0_ret.bank_id @[gen_addr.scala 344:22]
    io_to_banks_ret.addrs[0].addr <= io_to_banks_ret_addrs_0_ret.addr @[gen_addr.scala 344:22]
    wire io_to_banks_ret_addrs_1_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
    io_to_banks_ret_addrs_1_ret.addr <= gen[state].small[0].now_addr @[gen_addr.scala 15:18]
    io_to_banks_ret_addrs_1_ret.bank_id <= gen[state].small[0].bank_id @[gen_addr.scala 16:21]
    io_to_banks_ret.addrs[1].bank_id <= io_to_banks_ret_addrs_1_ret.bank_id @[gen_addr.scala 346:28]
    io_to_banks_ret.addrs[1].addr <= io_to_banks_ret_addrs_1_ret.addr @[gen_addr.scala 346:28]
    wire io_to_banks_ret_addrs_2_ret : {addr : UInt<10>, bank_id : UInt<3>} @[gen_addr.scala 14:23]
    io_to_banks_ret_addrs_2_ret.addr <= gen[state].small[1].now_addr @[gen_addr.scala 15:18]
    io_to_banks_ret_addrs_2_ret.bank_id <= gen[state].small[1].bank_id @[gen_addr.scala 16:21]
    io_to_banks_ret.addrs[2].bank_id <= io_to_banks_ret_addrs_2_ret.bank_id @[gen_addr.scala 346:28]
    io_to_banks_ret.addrs[2].addr <= io_to_banks_ret_addrs_2_ret.addr @[gen_addr.scala 346:28]
    io.to_banks.addrs[0].bank_id <= io_to_banks_ret.addrs[0].bank_id @[write.scala 83:17]
    io.to_banks.addrs[0].addr <= io_to_banks_ret.addrs[0].addr @[write.scala 83:17]
    io.to_banks.addrs[1].bank_id <= io_to_banks_ret.addrs[1].bank_id @[write.scala 83:17]
    io.to_banks.addrs[1].addr <= io_to_banks_ret.addrs[1].addr @[write.scala 83:17]
    io.to_banks.addrs[2].bank_id <= io_to_banks_ret.addrs[2].bank_id @[write.scala 83:17]
    io.to_banks.addrs[2].addr <= io_to_banks_ret.addrs[2].addr @[write.scala 83:17]
    io.valid_out <= UInt<1>("h00") @[write.scala 84:18]
    when io.flag_job : @[write.scala 85:22]
      gen[0].big.max_addr <= io.job.job[0].big.max_addr @[gen_addr.scala 56:18]
      gen[0].big.min_addr <= io.job.job[0].big.min_addr @[gen_addr.scala 57:18]
      gen[0].big.now_addr <= io.job.job[0].big.begin_addr @[gen_addr.scala 58:18]
      gen[0].big.block_size <= io.job.job[0].big.block_size @[gen_addr.scala 59:20]
      gen[0].big.column_size <= io.job.job[0].big.column_size @[gen_addr.scala 60:21]
      gen[0].big.cnt_ic.cend <= io.job.job[0].big.cnt_ic_end @[utils.scala 22:14]
      gen[0].big.cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[0].big.cnt_x.cend <= io.job.job[0].big.cnt_x_end @[utils.scala 22:14]
      gen[0].big.cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[0].big.cnt_y.cend <= io.job.job[0].big.cnt_y_end @[utils.scala 22:14]
      gen[0].big.cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[0].big.bank_id <= io.job.job[0].big.bank_id @[gen_addr.scala 64:17]
      gen[0].big.a <= io.job.job[0].big.a @[gen_addr.scala 293:11]
      gen[0].small[0].max_addr <= io.job.job[0].small[0].max_addr @[gen_addr.scala 56:18]
      gen[0].small[0].min_addr <= io.job.job[0].small[0].min_addr @[gen_addr.scala 57:18]
      gen[0].small[0].now_addr <= io.job.job[0].small[0].begin_addr @[gen_addr.scala 58:18]
      gen[0].small[0].block_size <= io.job.job[0].small[0].block_size @[gen_addr.scala 59:20]
      gen[0].small[0].column_size <= io.job.job[0].small[0].column_size @[gen_addr.scala 60:21]
      gen[0].small[0].cnt_ic.cend <= io.job.job[0].small[0].cnt_ic_end @[utils.scala 22:14]
      gen[0].small[0].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[0].small[0].cnt_x.cend <= io.job.job[0].small[0].cnt_x_end @[utils.scala 22:14]
      gen[0].small[0].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[0].small[0].cnt_y.cend <= io.job.job[0].small[0].cnt_y_end @[utils.scala 22:14]
      gen[0].small[0].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[0].small[0].bank_id <= io.job.job[0].small[0].bank_id @[gen_addr.scala 64:17]
      gen[0].small[0].a <= io.job.job[0].small[0].a @[gen_addr.scala 271:11]
      gen[0].small[0].ano_bank_id <= io.job.job[0].small[0].ano_bank_id @[gen_addr.scala 272:21]
      gen[0].small[0].y_begin_addr <= io.job.job[0].small[0].begin_addr @[gen_addr.scala 273:22]
      gen[0].small[0].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen[0].small[0].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[0].small[1].max_addr <= io.job.job[0].small[1].max_addr @[gen_addr.scala 56:18]
      gen[0].small[1].min_addr <= io.job.job[0].small[1].min_addr @[gen_addr.scala 57:18]
      gen[0].small[1].now_addr <= io.job.job[0].small[1].begin_addr @[gen_addr.scala 58:18]
      gen[0].small[1].block_size <= io.job.job[0].small[1].block_size @[gen_addr.scala 59:20]
      gen[0].small[1].column_size <= io.job.job[0].small[1].column_size @[gen_addr.scala 60:21]
      gen[0].small[1].cnt_ic.cend <= io.job.job[0].small[1].cnt_ic_end @[utils.scala 22:14]
      gen[0].small[1].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[0].small[1].cnt_x.cend <= io.job.job[0].small[1].cnt_x_end @[utils.scala 22:14]
      gen[0].small[1].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[0].small[1].cnt_y.cend <= io.job.job[0].small[1].cnt_y_end @[utils.scala 22:14]
      gen[0].small[1].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[0].small[1].bank_id <= io.job.job[0].small[1].bank_id @[gen_addr.scala 64:17]
      gen[0].small[1].a <= io.job.job[0].small[1].a @[gen_addr.scala 271:11]
      gen[0].small[1].ano_bank_id <= io.job.job[0].small[1].ano_bank_id @[gen_addr.scala 272:21]
      gen[0].small[1].y_begin_addr <= io.job.job[0].small[1].begin_addr @[gen_addr.scala 273:22]
      gen[0].small[1].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen[0].small[1].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[1].big.max_addr <= io.job.job[1].big.max_addr @[gen_addr.scala 56:18]
      gen[1].big.min_addr <= io.job.job[1].big.min_addr @[gen_addr.scala 57:18]
      gen[1].big.now_addr <= io.job.job[1].big.begin_addr @[gen_addr.scala 58:18]
      gen[1].big.block_size <= io.job.job[1].big.block_size @[gen_addr.scala 59:20]
      gen[1].big.column_size <= io.job.job[1].big.column_size @[gen_addr.scala 60:21]
      gen[1].big.cnt_ic.cend <= io.job.job[1].big.cnt_ic_end @[utils.scala 22:14]
      gen[1].big.cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[1].big.cnt_x.cend <= io.job.job[1].big.cnt_x_end @[utils.scala 22:14]
      gen[1].big.cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[1].big.cnt_y.cend <= io.job.job[1].big.cnt_y_end @[utils.scala 22:14]
      gen[1].big.cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[1].big.bank_id <= io.job.job[1].big.bank_id @[gen_addr.scala 64:17]
      gen[1].big.a <= io.job.job[1].big.a @[gen_addr.scala 293:11]
      gen[1].small[0].max_addr <= io.job.job[1].small[0].max_addr @[gen_addr.scala 56:18]
      gen[1].small[0].min_addr <= io.job.job[1].small[0].min_addr @[gen_addr.scala 57:18]
      gen[1].small[0].now_addr <= io.job.job[1].small[0].begin_addr @[gen_addr.scala 58:18]
      gen[1].small[0].block_size <= io.job.job[1].small[0].block_size @[gen_addr.scala 59:20]
      gen[1].small[0].column_size <= io.job.job[1].small[0].column_size @[gen_addr.scala 60:21]
      gen[1].small[0].cnt_ic.cend <= io.job.job[1].small[0].cnt_ic_end @[utils.scala 22:14]
      gen[1].small[0].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[1].small[0].cnt_x.cend <= io.job.job[1].small[0].cnt_x_end @[utils.scala 22:14]
      gen[1].small[0].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[1].small[0].cnt_y.cend <= io.job.job[1].small[0].cnt_y_end @[utils.scala 22:14]
      gen[1].small[0].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[1].small[0].bank_id <= io.job.job[1].small[0].bank_id @[gen_addr.scala 64:17]
      gen[1].small[0].a <= io.job.job[1].small[0].a @[gen_addr.scala 271:11]
      gen[1].small[0].ano_bank_id <= io.job.job[1].small[0].ano_bank_id @[gen_addr.scala 272:21]
      gen[1].small[0].y_begin_addr <= io.job.job[1].small[0].begin_addr @[gen_addr.scala 273:22]
      gen[1].small[0].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen[1].small[0].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[1].small[1].max_addr <= io.job.job[1].small[1].max_addr @[gen_addr.scala 56:18]
      gen[1].small[1].min_addr <= io.job.job[1].small[1].min_addr @[gen_addr.scala 57:18]
      gen[1].small[1].now_addr <= io.job.job[1].small[1].begin_addr @[gen_addr.scala 58:18]
      gen[1].small[1].block_size <= io.job.job[1].small[1].block_size @[gen_addr.scala 59:20]
      gen[1].small[1].column_size <= io.job.job[1].small[1].column_size @[gen_addr.scala 60:21]
      gen[1].small[1].cnt_ic.cend <= io.job.job[1].small[1].cnt_ic_end @[utils.scala 22:14]
      gen[1].small[1].cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[1].small[1].cnt_x.cend <= io.job.job[1].small[1].cnt_x_end @[utils.scala 22:14]
      gen[1].small[1].cnt_x.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[1].small[1].cnt_y.cend <= io.job.job[1].small[1].cnt_y_end @[utils.scala 22:14]
      gen[1].small[1].cnt_y.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      gen[1].small[1].bank_id <= io.job.job[1].small[1].bank_id @[gen_addr.scala 64:17]
      gen[1].small[1].a <= io.job.job[1].small[1].a @[gen_addr.scala 271:11]
      gen[1].small[1].ano_bank_id <= io.job.job[1].small[1].ano_bank_id @[gen_addr.scala 272:21]
      gen[1].small[1].y_begin_addr <= io.job.job[1].small[1].begin_addr @[gen_addr.scala 273:22]
      gen[1].small[1].cnt_swap.cend <= UInt<1>("h01") @[utils.scala 22:14]
      gen[1].small[1].cnt_swap.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      cnt_ic.cend <= io.job.out_chan @[utils.scala 22:14]
      cnt_ic.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      skip @[write.scala 85:22]
    else : @[write.scala 89:16]
      when io.valid_in : @[write.scala 90:26]
        io.valid_out <= UInt<1>("h01") @[write.scala 91:26]
        wire nxt_addr : UInt<10> @[gen_addr.scala 281:28]
        nxt_addr <= UInt<1>("h00") @[gen_addr.scala 282:18]
        wire nxt : UInt<1> @[utils.scala 16:23]
        node _nxt_T = eq(gen[state].big.cnt_ic.ccnt, gen[state].big.cnt_ic.cend) @[utils.scala 17:20]
        nxt <= _nxt_T @[utils.scala 17:13]
        node _gen_big_cnt_ic_ccnt_T = add(gen[state].big.cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
        node _gen_big_cnt_ic_ccnt_T_1 = tail(_gen_big_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
        node _gen_big_cnt_ic_ccnt_T_2 = mux(nxt, UInt<1>("h00"), _gen_big_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
        gen[state].big.cnt_ic.ccnt <= _gen_big_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
        when nxt : @[gen_addr.scala 283:27]
          node _nxt_addr_T = add(gen[state].big.now_addr, gen[state].big.a) @[gen_addr.scala 284:33]
          node _nxt_addr_T_1 = tail(_nxt_addr_T, 1) @[gen_addr.scala 284:33]
          nxt_addr <= _nxt_addr_T_1 @[gen_addr.scala 284:22]
          skip @[gen_addr.scala 283:27]
        else : @[gen_addr.scala 285:20]
          node _nxt_addr_T_2 = add(gen[state].big.now_addr, UInt<1>("h01")) @[gen_addr.scala 286:33]
          node _nxt_addr_T_3 = tail(_nxt_addr_T_2, 1) @[gen_addr.scala 286:33]
          nxt_addr <= _nxt_addr_T_3 @[gen_addr.scala 286:22]
          skip @[gen_addr.scala 285:20]
        wire gen_big_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
        node _gen_big_now_addr_T = geq(nxt_addr, gen[state].big.max_addr) @[gen_addr.scala 48:18]
        when _gen_big_now_addr_T : @[gen_addr.scala 48:29]
          node _gen_big_now_addr_nxt_T = sub(nxt_addr, gen[state].big.max_addr) @[gen_addr.scala 49:24]
          node _gen_big_now_addr_nxt_T_1 = tail(_gen_big_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
          node _gen_big_now_addr_nxt_T_2 = add(_gen_big_now_addr_nxt_T_1, gen[state].big.min_addr) @[gen_addr.scala 49:33]
          node _gen_big_now_addr_nxt_T_3 = tail(_gen_big_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
          gen_big_now_addr_nxt <= _gen_big_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
          skip @[gen_addr.scala 48:29]
        else : @[gen_addr.scala 50:20]
          gen_big_now_addr_nxt <= nxt_addr @[gen_addr.scala 51:17]
          skip @[gen_addr.scala 50:20]
        gen[state].big.now_addr <= gen_big_now_addr_nxt @[gen_addr.scala 288:18]
        wire nxt_addr_1 : UInt<10> @[gen_addr.scala 248:28]
        nxt_addr_1 <= UInt<1>("h00") @[gen_addr.scala 249:18]
        wire nxt_1 : UInt<1> @[utils.scala 16:23]
        node _nxt_T_1 = eq(gen[state].small[0].cnt_ic.ccnt, gen[state].small[0].cnt_ic.cend) @[utils.scala 17:20]
        nxt_1 <= _nxt_T_1 @[utils.scala 17:13]
        node _gen_small_0_cnt_ic_ccnt_T = add(gen[state].small[0].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
        node _gen_small_0_cnt_ic_ccnt_T_1 = tail(_gen_small_0_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
        node _gen_small_0_cnt_ic_ccnt_T_2 = mux(nxt_1, UInt<1>("h00"), _gen_small_0_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
        gen[state].small[0].cnt_ic.ccnt <= _gen_small_0_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
        when nxt_1 : @[gen_addr.scala 250:27]
          wire nxt_2 : UInt<1> @[utils.scala 16:23]
          node _nxt_T_2 = eq(gen[state].small[0].cnt_y.ccnt, gen[state].small[0].cnt_y.cend) @[utils.scala 17:20]
          nxt_2 <= _nxt_T_2 @[utils.scala 17:13]
          node _gen_small_0_cnt_y_ccnt_T = add(gen[state].small[0].cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_small_0_cnt_y_ccnt_T_1 = tail(_gen_small_0_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_small_0_cnt_y_ccnt_T_2 = mux(nxt_2, UInt<1>("h00"), _gen_small_0_cnt_y_ccnt_T_1) @[utils.scala 18:20]
          gen[state].small[0].cnt_y.ccnt <= _gen_small_0_cnt_y_ccnt_T_2 @[utils.scala 18:14]
          when nxt_2 : @[gen_addr.scala 251:30]
            wire nxt_3 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_3 = eq(gen[state].small[0].cnt_swap.ccnt, gen[state].small[0].cnt_swap.cend) @[utils.scala 17:20]
            nxt_3 <= _nxt_T_3 @[utils.scala 17:13]
            node _gen_small_0_cnt_swap_ccnt_T = add(gen[state].small[0].cnt_swap.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_0_cnt_swap_ccnt_T_1 = tail(_gen_small_0_cnt_swap_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_0_cnt_swap_ccnt_T_2 = mux(nxt_3, UInt<1>("h00"), _gen_small_0_cnt_swap_ccnt_T_1) @[utils.scala 18:20]
            gen[state].small[0].cnt_swap.ccnt <= _gen_small_0_cnt_swap_ccnt_T_2 @[utils.scala 18:14]
            when nxt_3 : @[gen_addr.scala 252:37]
              node _nxt_addr_T_4 = add(gen[state].small[0].now_addr, gen[state].small[0].a) @[gen_addr.scala 253:41]
              node _nxt_addr_T_5 = tail(_nxt_addr_T_4, 1) @[gen_addr.scala 253:41]
              nxt_addr_1 <= _nxt_addr_T_5 @[gen_addr.scala 253:30]
              wire gen_small_0_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
              node _gen_small_0_y_begin_addr_T = geq(nxt_addr_1, gen[state].small[0].max_addr) @[gen_addr.scala 48:18]
              when _gen_small_0_y_begin_addr_T : @[gen_addr.scala 48:29]
                node _gen_small_0_y_begin_addr_nxt_T = sub(nxt_addr_1, gen[state].small[0].max_addr) @[gen_addr.scala 49:24]
                node _gen_small_0_y_begin_addr_nxt_T_1 = tail(_gen_small_0_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                node _gen_small_0_y_begin_addr_nxt_T_2 = add(_gen_small_0_y_begin_addr_nxt_T_1, gen[state].small[0].min_addr) @[gen_addr.scala 49:33]
                node _gen_small_0_y_begin_addr_nxt_T_3 = tail(_gen_small_0_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                gen_small_0_y_begin_addr_nxt <= _gen_small_0_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                skip @[gen_addr.scala 48:29]
              else : @[gen_addr.scala 50:20]
                gen_small_0_y_begin_addr_nxt <= nxt_addr_1 @[gen_addr.scala 51:17]
                skip @[gen_addr.scala 50:20]
              gen[state].small[0].y_begin_addr <= gen_small_0_y_begin_addr_nxt @[gen_addr.scala 254:34]
              skip @[gen_addr.scala 252:37]
            else : @[gen_addr.scala 255:28]
              nxt_addr_1 <= gen[state].small[0].y_begin_addr @[gen_addr.scala 256:30]
              skip @[gen_addr.scala 255:28]
            gen[state].small[0].bank_id <= gen[state].small[0].ano_bank_id @[gen_addr.scala 258:25]
            gen[state].small[0].ano_bank_id <= gen[state].small[0].bank_id @[gen_addr.scala 259:29]
            skip @[gen_addr.scala 251:30]
          else : @[gen_addr.scala 260:24]
            node _nxt_addr_T_6 = add(gen[state].small[0].now_addr, gen[state].small[0].a) @[gen_addr.scala 261:37]
            node _nxt_addr_T_7 = tail(_nxt_addr_T_6, 1) @[gen_addr.scala 261:37]
            nxt_addr_1 <= _nxt_addr_T_7 @[gen_addr.scala 261:26]
            skip @[gen_addr.scala 260:24]
          skip @[gen_addr.scala 250:27]
        else : @[gen_addr.scala 263:20]
          node _nxt_addr_T_8 = add(gen[state].small[0].now_addr, UInt<1>("h01")) @[gen_addr.scala 264:33]
          node _nxt_addr_T_9 = tail(_nxt_addr_T_8, 1) @[gen_addr.scala 264:33]
          nxt_addr_1 <= _nxt_addr_T_9 @[gen_addr.scala 264:22]
          skip @[gen_addr.scala 263:20]
        wire gen_small_0_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
        node _gen_small_0_now_addr_T = geq(nxt_addr_1, gen[state].small[0].max_addr) @[gen_addr.scala 48:18]
        when _gen_small_0_now_addr_T : @[gen_addr.scala 48:29]
          node _gen_small_0_now_addr_nxt_T = sub(nxt_addr_1, gen[state].small[0].max_addr) @[gen_addr.scala 49:24]
          node _gen_small_0_now_addr_nxt_T_1 = tail(_gen_small_0_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
          node _gen_small_0_now_addr_nxt_T_2 = add(_gen_small_0_now_addr_nxt_T_1, gen[state].small[0].min_addr) @[gen_addr.scala 49:33]
          node _gen_small_0_now_addr_nxt_T_3 = tail(_gen_small_0_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
          gen_small_0_now_addr_nxt <= _gen_small_0_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
          skip @[gen_addr.scala 48:29]
        else : @[gen_addr.scala 50:20]
          gen_small_0_now_addr_nxt <= nxt_addr_1 @[gen_addr.scala 51:17]
          skip @[gen_addr.scala 50:20]
        gen[state].small[0].now_addr <= gen_small_0_now_addr_nxt @[gen_addr.scala 266:18]
        wire nxt_addr_2 : UInt<10> @[gen_addr.scala 248:28]
        nxt_addr_2 <= UInt<1>("h00") @[gen_addr.scala 249:18]
        wire nxt_4 : UInt<1> @[utils.scala 16:23]
        node _nxt_T_4 = eq(gen[state].small[1].cnt_ic.ccnt, gen[state].small[1].cnt_ic.cend) @[utils.scala 17:20]
        nxt_4 <= _nxt_T_4 @[utils.scala 17:13]
        node _gen_small_1_cnt_ic_ccnt_T = add(gen[state].small[1].cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
        node _gen_small_1_cnt_ic_ccnt_T_1 = tail(_gen_small_1_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
        node _gen_small_1_cnt_ic_ccnt_T_2 = mux(nxt_4, UInt<1>("h00"), _gen_small_1_cnt_ic_ccnt_T_1) @[utils.scala 18:20]
        gen[state].small[1].cnt_ic.ccnt <= _gen_small_1_cnt_ic_ccnt_T_2 @[utils.scala 18:14]
        when nxt_4 : @[gen_addr.scala 250:27]
          wire nxt_5 : UInt<1> @[utils.scala 16:23]
          node _nxt_T_5 = eq(gen[state].small[1].cnt_y.ccnt, gen[state].small[1].cnt_y.cend) @[utils.scala 17:20]
          nxt_5 <= _nxt_T_5 @[utils.scala 17:13]
          node _gen_small_1_cnt_y_ccnt_T = add(gen[state].small[1].cnt_y.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _gen_small_1_cnt_y_ccnt_T_1 = tail(_gen_small_1_cnt_y_ccnt_T, 1) @[utils.scala 18:35]
          node _gen_small_1_cnt_y_ccnt_T_2 = mux(nxt_5, UInt<1>("h00"), _gen_small_1_cnt_y_ccnt_T_1) @[utils.scala 18:20]
          gen[state].small[1].cnt_y.ccnt <= _gen_small_1_cnt_y_ccnt_T_2 @[utils.scala 18:14]
          when nxt_5 : @[gen_addr.scala 251:30]
            wire nxt_6 : UInt<1> @[utils.scala 16:23]
            node _nxt_T_6 = eq(gen[state].small[1].cnt_swap.ccnt, gen[state].small[1].cnt_swap.cend) @[utils.scala 17:20]
            nxt_6 <= _nxt_T_6 @[utils.scala 17:13]
            node _gen_small_1_cnt_swap_ccnt_T = add(gen[state].small[1].cnt_swap.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
            node _gen_small_1_cnt_swap_ccnt_T_1 = tail(_gen_small_1_cnt_swap_ccnt_T, 1) @[utils.scala 18:35]
            node _gen_small_1_cnt_swap_ccnt_T_2 = mux(nxt_6, UInt<1>("h00"), _gen_small_1_cnt_swap_ccnt_T_1) @[utils.scala 18:20]
            gen[state].small[1].cnt_swap.ccnt <= _gen_small_1_cnt_swap_ccnt_T_2 @[utils.scala 18:14]
            when nxt_6 : @[gen_addr.scala 252:37]
              node _nxt_addr_T_10 = add(gen[state].small[1].now_addr, gen[state].small[1].a) @[gen_addr.scala 253:41]
              node _nxt_addr_T_11 = tail(_nxt_addr_T_10, 1) @[gen_addr.scala 253:41]
              nxt_addr_2 <= _nxt_addr_T_11 @[gen_addr.scala 253:30]
              wire gen_small_1_y_begin_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
              node _gen_small_1_y_begin_addr_T = geq(nxt_addr_2, gen[state].small[1].max_addr) @[gen_addr.scala 48:18]
              when _gen_small_1_y_begin_addr_T : @[gen_addr.scala 48:29]
                node _gen_small_1_y_begin_addr_nxt_T = sub(nxt_addr_2, gen[state].small[1].max_addr) @[gen_addr.scala 49:24]
                node _gen_small_1_y_begin_addr_nxt_T_1 = tail(_gen_small_1_y_begin_addr_nxt_T, 1) @[gen_addr.scala 49:24]
                node _gen_small_1_y_begin_addr_nxt_T_2 = add(_gen_small_1_y_begin_addr_nxt_T_1, gen[state].small[1].min_addr) @[gen_addr.scala 49:33]
                node _gen_small_1_y_begin_addr_nxt_T_3 = tail(_gen_small_1_y_begin_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
                gen_small_1_y_begin_addr_nxt <= _gen_small_1_y_begin_addr_nxt_T_3 @[gen_addr.scala 49:17]
                skip @[gen_addr.scala 48:29]
              else : @[gen_addr.scala 50:20]
                gen_small_1_y_begin_addr_nxt <= nxt_addr_2 @[gen_addr.scala 51:17]
                skip @[gen_addr.scala 50:20]
              gen[state].small[1].y_begin_addr <= gen_small_1_y_begin_addr_nxt @[gen_addr.scala 254:34]
              skip @[gen_addr.scala 252:37]
            else : @[gen_addr.scala 255:28]
              nxt_addr_2 <= gen[state].small[1].y_begin_addr @[gen_addr.scala 256:30]
              skip @[gen_addr.scala 255:28]
            gen[state].small[1].bank_id <= gen[state].small[1].ano_bank_id @[gen_addr.scala 258:25]
            gen[state].small[1].ano_bank_id <= gen[state].small[1].bank_id @[gen_addr.scala 259:29]
            skip @[gen_addr.scala 251:30]
          else : @[gen_addr.scala 260:24]
            node _nxt_addr_T_12 = add(gen[state].small[1].now_addr, gen[state].small[1].a) @[gen_addr.scala 261:37]
            node _nxt_addr_T_13 = tail(_nxt_addr_T_12, 1) @[gen_addr.scala 261:37]
            nxt_addr_2 <= _nxt_addr_T_13 @[gen_addr.scala 261:26]
            skip @[gen_addr.scala 260:24]
          skip @[gen_addr.scala 250:27]
        else : @[gen_addr.scala 263:20]
          node _nxt_addr_T_14 = add(gen[state].small[1].now_addr, UInt<1>("h01")) @[gen_addr.scala 264:33]
          node _nxt_addr_T_15 = tail(_nxt_addr_T_14, 1) @[gen_addr.scala 264:33]
          nxt_addr_2 <= _nxt_addr_T_15 @[gen_addr.scala 264:22]
          skip @[gen_addr.scala 263:20]
        wire gen_small_1_now_addr_nxt : UInt<10> @[gen_addr.scala 47:23]
        node _gen_small_1_now_addr_T = geq(nxt_addr_2, gen[state].small[1].max_addr) @[gen_addr.scala 48:18]
        when _gen_small_1_now_addr_T : @[gen_addr.scala 48:29]
          node _gen_small_1_now_addr_nxt_T = sub(nxt_addr_2, gen[state].small[1].max_addr) @[gen_addr.scala 49:24]
          node _gen_small_1_now_addr_nxt_T_1 = tail(_gen_small_1_now_addr_nxt_T, 1) @[gen_addr.scala 49:24]
          node _gen_small_1_now_addr_nxt_T_2 = add(_gen_small_1_now_addr_nxt_T_1, gen[state].small[1].min_addr) @[gen_addr.scala 49:33]
          node _gen_small_1_now_addr_nxt_T_3 = tail(_gen_small_1_now_addr_nxt_T_2, 1) @[gen_addr.scala 49:33]
          gen_small_1_now_addr_nxt <= _gen_small_1_now_addr_nxt_T_3 @[gen_addr.scala 49:17]
          skip @[gen_addr.scala 48:29]
        else : @[gen_addr.scala 50:20]
          gen_small_1_now_addr_nxt <= nxt_addr_2 @[gen_addr.scala 51:17]
          skip @[gen_addr.scala 50:20]
        gen[state].small[1].now_addr <= gen_small_1_now_addr_nxt @[gen_addr.scala 266:18]
        wire nxt_7 : UInt<1> @[utils.scala 16:23]
        node _nxt_T_7 = eq(cnt_ic.ccnt, cnt_ic.cend) @[utils.scala 17:20]
        nxt_7 <= _nxt_T_7 @[utils.scala 17:13]
        node _cnt_ic_ccnt_T = add(cnt_ic.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
        node _cnt_ic_ccnt_T_1 = tail(_cnt_ic_ccnt_T, 1) @[utils.scala 18:35]
        node _cnt_ic_ccnt_T_2 = mux(nxt_7, UInt<1>("h00"), _cnt_ic_ccnt_T_1) @[utils.scala 18:20]
        cnt_ic.ccnt <= _cnt_ic_ccnt_T_2 @[utils.scala 18:14]
        when nxt_7 : @[write.scala 93:31]
          node _state_T = not(state) @[write.scala 94:26]
          state <= _state_T @[write.scala 94:23]
          skip @[write.scala 93:31]
        skip @[write.scala 90:26]
      skip @[write.scala 89:16]
    
  module Maxpool : 
    input clock : Clock
    input reset : Reset
    output io : {flip from_big : {data : SInt<16>[48]}[2], flip from_small : {data : SInt<16>[8]}[2][2], flip valid_in : UInt<1>, valid_out : UInt<1>, result : {mat : SInt<16>[64]}}
    
    reg state : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[maxpool.scala 14:24]
    wire _output_WIRE : SInt<16>[32] @[maxpool.scala 15:33]
    _output_WIRE[0] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[1] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[2] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[3] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[4] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[5] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[6] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[7] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[8] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[9] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[10] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[11] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[12] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[13] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[14] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[15] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[16] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[17] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[18] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[19] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[20] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[21] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[22] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[23] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[24] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[25] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[26] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[27] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[28] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[29] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[30] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    _output_WIRE[31] <= asSInt(UInt<16>("h00")) @[maxpool.scala 15:33]
    reg output : SInt<16>[32], clock with : (reset => (reset, _output_WIRE)) @[maxpool.scala 15:25]
    wire cache : SInt<16>[32] @[maxpool.scala 16:21]
    wire _WIRE : SInt<16>[32] @[maxpool.scala 18:26]
    node _T = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[0] <= _T @[maxpool.scala 18:26]
    node _T_1 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[1] <= _T_1 @[maxpool.scala 18:26]
    node _T_2 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[2] <= _T_2 @[maxpool.scala 18:26]
    node _T_3 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[3] <= _T_3 @[maxpool.scala 18:26]
    node _T_4 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[4] <= _T_4 @[maxpool.scala 18:26]
    node _T_5 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[5] <= _T_5 @[maxpool.scala 18:26]
    node _T_6 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[6] <= _T_6 @[maxpool.scala 18:26]
    node _T_7 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[7] <= _T_7 @[maxpool.scala 18:26]
    node _T_8 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[8] <= _T_8 @[maxpool.scala 18:26]
    node _T_9 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[9] <= _T_9 @[maxpool.scala 18:26]
    node _T_10 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[10] <= _T_10 @[maxpool.scala 18:26]
    node _T_11 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[11] <= _T_11 @[maxpool.scala 18:26]
    node _T_12 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[12] <= _T_12 @[maxpool.scala 18:26]
    node _T_13 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[13] <= _T_13 @[maxpool.scala 18:26]
    node _T_14 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[14] <= _T_14 @[maxpool.scala 18:26]
    node _T_15 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[15] <= _T_15 @[maxpool.scala 18:26]
    node _T_16 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[16] <= _T_16 @[maxpool.scala 18:26]
    node _T_17 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[17] <= _T_17 @[maxpool.scala 18:26]
    node _T_18 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[18] <= _T_18 @[maxpool.scala 18:26]
    node _T_19 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[19] <= _T_19 @[maxpool.scala 18:26]
    node _T_20 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[20] <= _T_20 @[maxpool.scala 18:26]
    node _T_21 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[21] <= _T_21 @[maxpool.scala 18:26]
    node _T_22 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[22] <= _T_22 @[maxpool.scala 18:26]
    node _T_23 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[23] <= _T_23 @[maxpool.scala 18:26]
    node _T_24 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[24] <= _T_24 @[maxpool.scala 18:26]
    node _T_25 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[25] <= _T_25 @[maxpool.scala 18:26]
    node _T_26 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[26] <= _T_26 @[maxpool.scala 18:26]
    node _T_27 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[27] <= _T_27 @[maxpool.scala 18:26]
    node _T_28 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[28] <= _T_28 @[maxpool.scala 18:26]
    node _T_29 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[29] <= _T_29 @[maxpool.scala 18:26]
    node _T_30 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[30] <= _T_30 @[maxpool.scala 18:26]
    node _T_31 = asSInt(UInt<16>("h00")) @[maxpool.scala 18:26]
    _WIRE[31] <= _T_31 @[maxpool.scala 18:26]
    cache[0] <= _WIRE[0] @[maxpool.scala 18:11]
    cache[1] <= _WIRE[1] @[maxpool.scala 18:11]
    cache[2] <= _WIRE[2] @[maxpool.scala 18:11]
    cache[3] <= _WIRE[3] @[maxpool.scala 18:11]
    cache[4] <= _WIRE[4] @[maxpool.scala 18:11]
    cache[5] <= _WIRE[5] @[maxpool.scala 18:11]
    cache[6] <= _WIRE[6] @[maxpool.scala 18:11]
    cache[7] <= _WIRE[7] @[maxpool.scala 18:11]
    cache[8] <= _WIRE[8] @[maxpool.scala 18:11]
    cache[9] <= _WIRE[9] @[maxpool.scala 18:11]
    cache[10] <= _WIRE[10] @[maxpool.scala 18:11]
    cache[11] <= _WIRE[11] @[maxpool.scala 18:11]
    cache[12] <= _WIRE[12] @[maxpool.scala 18:11]
    cache[13] <= _WIRE[13] @[maxpool.scala 18:11]
    cache[14] <= _WIRE[14] @[maxpool.scala 18:11]
    cache[15] <= _WIRE[15] @[maxpool.scala 18:11]
    cache[16] <= _WIRE[16] @[maxpool.scala 18:11]
    cache[17] <= _WIRE[17] @[maxpool.scala 18:11]
    cache[18] <= _WIRE[18] @[maxpool.scala 18:11]
    cache[19] <= _WIRE[19] @[maxpool.scala 18:11]
    cache[20] <= _WIRE[20] @[maxpool.scala 18:11]
    cache[21] <= _WIRE[21] @[maxpool.scala 18:11]
    cache[22] <= _WIRE[22] @[maxpool.scala 18:11]
    cache[23] <= _WIRE[23] @[maxpool.scala 18:11]
    cache[24] <= _WIRE[24] @[maxpool.scala 18:11]
    cache[25] <= _WIRE[25] @[maxpool.scala 18:11]
    cache[26] <= _WIRE[26] @[maxpool.scala 18:11]
    cache[27] <= _WIRE[27] @[maxpool.scala 18:11]
    cache[28] <= _WIRE[28] @[maxpool.scala 18:11]
    cache[29] <= _WIRE[29] @[maxpool.scala 18:11]
    cache[30] <= _WIRE[30] @[maxpool.scala 18:11]
    cache[31] <= _WIRE[31] @[maxpool.scala 18:11]
    io.valid_out <= UInt<1>("h00") @[maxpool.scala 20:18]
    wire _io_result_WIRE : {mat : SInt<16>[64]} @[maxpool.scala 21:30]
    node _io_result_T = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[0] <= _io_result_T @[maxpool.scala 21:30]
    node _io_result_T_1 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[1] <= _io_result_T_1 @[maxpool.scala 21:30]
    node _io_result_T_2 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[2] <= _io_result_T_2 @[maxpool.scala 21:30]
    node _io_result_T_3 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[3] <= _io_result_T_3 @[maxpool.scala 21:30]
    node _io_result_T_4 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[4] <= _io_result_T_4 @[maxpool.scala 21:30]
    node _io_result_T_5 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[5] <= _io_result_T_5 @[maxpool.scala 21:30]
    node _io_result_T_6 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[6] <= _io_result_T_6 @[maxpool.scala 21:30]
    node _io_result_T_7 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[7] <= _io_result_T_7 @[maxpool.scala 21:30]
    node _io_result_T_8 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[8] <= _io_result_T_8 @[maxpool.scala 21:30]
    node _io_result_T_9 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[9] <= _io_result_T_9 @[maxpool.scala 21:30]
    node _io_result_T_10 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[10] <= _io_result_T_10 @[maxpool.scala 21:30]
    node _io_result_T_11 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[11] <= _io_result_T_11 @[maxpool.scala 21:30]
    node _io_result_T_12 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[12] <= _io_result_T_12 @[maxpool.scala 21:30]
    node _io_result_T_13 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[13] <= _io_result_T_13 @[maxpool.scala 21:30]
    node _io_result_T_14 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[14] <= _io_result_T_14 @[maxpool.scala 21:30]
    node _io_result_T_15 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[15] <= _io_result_T_15 @[maxpool.scala 21:30]
    node _io_result_T_16 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[16] <= _io_result_T_16 @[maxpool.scala 21:30]
    node _io_result_T_17 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[17] <= _io_result_T_17 @[maxpool.scala 21:30]
    node _io_result_T_18 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[18] <= _io_result_T_18 @[maxpool.scala 21:30]
    node _io_result_T_19 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[19] <= _io_result_T_19 @[maxpool.scala 21:30]
    node _io_result_T_20 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[20] <= _io_result_T_20 @[maxpool.scala 21:30]
    node _io_result_T_21 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[21] <= _io_result_T_21 @[maxpool.scala 21:30]
    node _io_result_T_22 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[22] <= _io_result_T_22 @[maxpool.scala 21:30]
    node _io_result_T_23 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[23] <= _io_result_T_23 @[maxpool.scala 21:30]
    node _io_result_T_24 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[24] <= _io_result_T_24 @[maxpool.scala 21:30]
    node _io_result_T_25 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[25] <= _io_result_T_25 @[maxpool.scala 21:30]
    node _io_result_T_26 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[26] <= _io_result_T_26 @[maxpool.scala 21:30]
    node _io_result_T_27 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[27] <= _io_result_T_27 @[maxpool.scala 21:30]
    node _io_result_T_28 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[28] <= _io_result_T_28 @[maxpool.scala 21:30]
    node _io_result_T_29 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[29] <= _io_result_T_29 @[maxpool.scala 21:30]
    node _io_result_T_30 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[30] <= _io_result_T_30 @[maxpool.scala 21:30]
    node _io_result_T_31 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[31] <= _io_result_T_31 @[maxpool.scala 21:30]
    node _io_result_T_32 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[32] <= _io_result_T_32 @[maxpool.scala 21:30]
    node _io_result_T_33 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[33] <= _io_result_T_33 @[maxpool.scala 21:30]
    node _io_result_T_34 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[34] <= _io_result_T_34 @[maxpool.scala 21:30]
    node _io_result_T_35 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[35] <= _io_result_T_35 @[maxpool.scala 21:30]
    node _io_result_T_36 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[36] <= _io_result_T_36 @[maxpool.scala 21:30]
    node _io_result_T_37 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[37] <= _io_result_T_37 @[maxpool.scala 21:30]
    node _io_result_T_38 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[38] <= _io_result_T_38 @[maxpool.scala 21:30]
    node _io_result_T_39 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[39] <= _io_result_T_39 @[maxpool.scala 21:30]
    node _io_result_T_40 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[40] <= _io_result_T_40 @[maxpool.scala 21:30]
    node _io_result_T_41 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[41] <= _io_result_T_41 @[maxpool.scala 21:30]
    node _io_result_T_42 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[42] <= _io_result_T_42 @[maxpool.scala 21:30]
    node _io_result_T_43 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[43] <= _io_result_T_43 @[maxpool.scala 21:30]
    node _io_result_T_44 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[44] <= _io_result_T_44 @[maxpool.scala 21:30]
    node _io_result_T_45 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[45] <= _io_result_T_45 @[maxpool.scala 21:30]
    node _io_result_T_46 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[46] <= _io_result_T_46 @[maxpool.scala 21:30]
    node _io_result_T_47 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[47] <= _io_result_T_47 @[maxpool.scala 21:30]
    node _io_result_T_48 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[48] <= _io_result_T_48 @[maxpool.scala 21:30]
    node _io_result_T_49 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[49] <= _io_result_T_49 @[maxpool.scala 21:30]
    node _io_result_T_50 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[50] <= _io_result_T_50 @[maxpool.scala 21:30]
    node _io_result_T_51 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[51] <= _io_result_T_51 @[maxpool.scala 21:30]
    node _io_result_T_52 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[52] <= _io_result_T_52 @[maxpool.scala 21:30]
    node _io_result_T_53 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[53] <= _io_result_T_53 @[maxpool.scala 21:30]
    node _io_result_T_54 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[54] <= _io_result_T_54 @[maxpool.scala 21:30]
    node _io_result_T_55 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[55] <= _io_result_T_55 @[maxpool.scala 21:30]
    node _io_result_T_56 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[56] <= _io_result_T_56 @[maxpool.scala 21:30]
    node _io_result_T_57 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[57] <= _io_result_T_57 @[maxpool.scala 21:30]
    node _io_result_T_58 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[58] <= _io_result_T_58 @[maxpool.scala 21:30]
    node _io_result_T_59 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[59] <= _io_result_T_59 @[maxpool.scala 21:30]
    node _io_result_T_60 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[60] <= _io_result_T_60 @[maxpool.scala 21:30]
    node _io_result_T_61 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[61] <= _io_result_T_61 @[maxpool.scala 21:30]
    node _io_result_T_62 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[62] <= _io_result_T_62 @[maxpool.scala 21:30]
    node _io_result_T_63 = asSInt(UInt<16>("h00")) @[maxpool.scala 21:30]
    _io_result_WIRE.mat[63] <= _io_result_T_63 @[maxpool.scala 21:30]
    io.result.mat[0] <= _io_result_WIRE.mat[0] @[maxpool.scala 21:15]
    io.result.mat[1] <= _io_result_WIRE.mat[1] @[maxpool.scala 21:15]
    io.result.mat[2] <= _io_result_WIRE.mat[2] @[maxpool.scala 21:15]
    io.result.mat[3] <= _io_result_WIRE.mat[3] @[maxpool.scala 21:15]
    io.result.mat[4] <= _io_result_WIRE.mat[4] @[maxpool.scala 21:15]
    io.result.mat[5] <= _io_result_WIRE.mat[5] @[maxpool.scala 21:15]
    io.result.mat[6] <= _io_result_WIRE.mat[6] @[maxpool.scala 21:15]
    io.result.mat[7] <= _io_result_WIRE.mat[7] @[maxpool.scala 21:15]
    io.result.mat[8] <= _io_result_WIRE.mat[8] @[maxpool.scala 21:15]
    io.result.mat[9] <= _io_result_WIRE.mat[9] @[maxpool.scala 21:15]
    io.result.mat[10] <= _io_result_WIRE.mat[10] @[maxpool.scala 21:15]
    io.result.mat[11] <= _io_result_WIRE.mat[11] @[maxpool.scala 21:15]
    io.result.mat[12] <= _io_result_WIRE.mat[12] @[maxpool.scala 21:15]
    io.result.mat[13] <= _io_result_WIRE.mat[13] @[maxpool.scala 21:15]
    io.result.mat[14] <= _io_result_WIRE.mat[14] @[maxpool.scala 21:15]
    io.result.mat[15] <= _io_result_WIRE.mat[15] @[maxpool.scala 21:15]
    io.result.mat[16] <= _io_result_WIRE.mat[16] @[maxpool.scala 21:15]
    io.result.mat[17] <= _io_result_WIRE.mat[17] @[maxpool.scala 21:15]
    io.result.mat[18] <= _io_result_WIRE.mat[18] @[maxpool.scala 21:15]
    io.result.mat[19] <= _io_result_WIRE.mat[19] @[maxpool.scala 21:15]
    io.result.mat[20] <= _io_result_WIRE.mat[20] @[maxpool.scala 21:15]
    io.result.mat[21] <= _io_result_WIRE.mat[21] @[maxpool.scala 21:15]
    io.result.mat[22] <= _io_result_WIRE.mat[22] @[maxpool.scala 21:15]
    io.result.mat[23] <= _io_result_WIRE.mat[23] @[maxpool.scala 21:15]
    io.result.mat[24] <= _io_result_WIRE.mat[24] @[maxpool.scala 21:15]
    io.result.mat[25] <= _io_result_WIRE.mat[25] @[maxpool.scala 21:15]
    io.result.mat[26] <= _io_result_WIRE.mat[26] @[maxpool.scala 21:15]
    io.result.mat[27] <= _io_result_WIRE.mat[27] @[maxpool.scala 21:15]
    io.result.mat[28] <= _io_result_WIRE.mat[28] @[maxpool.scala 21:15]
    io.result.mat[29] <= _io_result_WIRE.mat[29] @[maxpool.scala 21:15]
    io.result.mat[30] <= _io_result_WIRE.mat[30] @[maxpool.scala 21:15]
    io.result.mat[31] <= _io_result_WIRE.mat[31] @[maxpool.scala 21:15]
    io.result.mat[32] <= _io_result_WIRE.mat[32] @[maxpool.scala 21:15]
    io.result.mat[33] <= _io_result_WIRE.mat[33] @[maxpool.scala 21:15]
    io.result.mat[34] <= _io_result_WIRE.mat[34] @[maxpool.scala 21:15]
    io.result.mat[35] <= _io_result_WIRE.mat[35] @[maxpool.scala 21:15]
    io.result.mat[36] <= _io_result_WIRE.mat[36] @[maxpool.scala 21:15]
    io.result.mat[37] <= _io_result_WIRE.mat[37] @[maxpool.scala 21:15]
    io.result.mat[38] <= _io_result_WIRE.mat[38] @[maxpool.scala 21:15]
    io.result.mat[39] <= _io_result_WIRE.mat[39] @[maxpool.scala 21:15]
    io.result.mat[40] <= _io_result_WIRE.mat[40] @[maxpool.scala 21:15]
    io.result.mat[41] <= _io_result_WIRE.mat[41] @[maxpool.scala 21:15]
    io.result.mat[42] <= _io_result_WIRE.mat[42] @[maxpool.scala 21:15]
    io.result.mat[43] <= _io_result_WIRE.mat[43] @[maxpool.scala 21:15]
    io.result.mat[44] <= _io_result_WIRE.mat[44] @[maxpool.scala 21:15]
    io.result.mat[45] <= _io_result_WIRE.mat[45] @[maxpool.scala 21:15]
    io.result.mat[46] <= _io_result_WIRE.mat[46] @[maxpool.scala 21:15]
    io.result.mat[47] <= _io_result_WIRE.mat[47] @[maxpool.scala 21:15]
    io.result.mat[48] <= _io_result_WIRE.mat[48] @[maxpool.scala 21:15]
    io.result.mat[49] <= _io_result_WIRE.mat[49] @[maxpool.scala 21:15]
    io.result.mat[50] <= _io_result_WIRE.mat[50] @[maxpool.scala 21:15]
    io.result.mat[51] <= _io_result_WIRE.mat[51] @[maxpool.scala 21:15]
    io.result.mat[52] <= _io_result_WIRE.mat[52] @[maxpool.scala 21:15]
    io.result.mat[53] <= _io_result_WIRE.mat[53] @[maxpool.scala 21:15]
    io.result.mat[54] <= _io_result_WIRE.mat[54] @[maxpool.scala 21:15]
    io.result.mat[55] <= _io_result_WIRE.mat[55] @[maxpool.scala 21:15]
    io.result.mat[56] <= _io_result_WIRE.mat[56] @[maxpool.scala 21:15]
    io.result.mat[57] <= _io_result_WIRE.mat[57] @[maxpool.scala 21:15]
    io.result.mat[58] <= _io_result_WIRE.mat[58] @[maxpool.scala 21:15]
    io.result.mat[59] <= _io_result_WIRE.mat[59] @[maxpool.scala 21:15]
    io.result.mat[60] <= _io_result_WIRE.mat[60] @[maxpool.scala 21:15]
    io.result.mat[61] <= _io_result_WIRE.mat[61] @[maxpool.scala 21:15]
    io.result.mat[62] <= _io_result_WIRE.mat[62] @[maxpool.scala 21:15]
    io.result.mat[63] <= _io_result_WIRE.mat[63] @[maxpool.scala 21:15]
    wire w4 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2 : SInt<16> @[maxpool.scala 27:30]
    wire b2 : SInt<16> @[maxpool.scala 28:30]
    w4[0] <= io.from_small[0][0].data[0] @[maxpool.scala 34:39]
    w4[1] <= io.from_big[0].data[0] @[maxpool.scala 38:39]
    w4[2] <= io.from_small[0][0].data[1] @[maxpool.scala 34:39]
    w4[3] <= io.from_big[0].data[6] @[maxpool.scala 38:39]
    node _a2_T = lt(w4[0], w4[1]) @[maxpool.scala 42:32]
    node _a2_T_1 = mux(_a2_T, w4[1], w4[0]) @[maxpool.scala 42:26]
    a2 <= _a2_T_1 @[maxpool.scala 42:20]
    node _b2_T = lt(w4[2], w4[3]) @[maxpool.scala 43:32]
    node _b2_T_1 = mux(_b2_T, w4[2], w4[3]) @[maxpool.scala 43:26]
    b2 <= _b2_T_1 @[maxpool.scala 43:20]
    node _cache_0_T = lt(a2, b2) @[maxpool.scala 44:47]
    node _cache_0_T_1 = mux(_cache_0_T, b2, a2) @[maxpool.scala 44:44]
    cache[0] <= _cache_0_T_1 @[maxpool.scala 44:38]
    wire w4_1 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_1 : SInt<16> @[maxpool.scala 27:30]
    wire b2_1 : SInt<16> @[maxpool.scala 28:30]
    w4_1[0] <= io.from_big[0].data[1] @[maxpool.scala 38:39]
    w4_1[1] <= io.from_big[0].data[2] @[maxpool.scala 38:39]
    w4_1[2] <= io.from_big[0].data[7] @[maxpool.scala 38:39]
    w4_1[3] <= io.from_big[0].data[8] @[maxpool.scala 38:39]
    node _a2_T_2 = lt(w4_1[0], w4_1[1]) @[maxpool.scala 42:32]
    node _a2_T_3 = mux(_a2_T_2, w4_1[1], w4_1[0]) @[maxpool.scala 42:26]
    a2_1 <= _a2_T_3 @[maxpool.scala 42:20]
    node _b2_T_2 = lt(w4_1[2], w4_1[3]) @[maxpool.scala 43:32]
    node _b2_T_3 = mux(_b2_T_2, w4_1[2], w4_1[3]) @[maxpool.scala 43:26]
    b2_1 <= _b2_T_3 @[maxpool.scala 43:20]
    node _cache_1_T = lt(a2_1, b2_1) @[maxpool.scala 44:47]
    node _cache_1_T_1 = mux(_cache_1_T, b2_1, a2_1) @[maxpool.scala 44:44]
    cache[1] <= _cache_1_T_1 @[maxpool.scala 44:38]
    wire w4_2 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_2 : SInt<16> @[maxpool.scala 27:30]
    wire b2_2 : SInt<16> @[maxpool.scala 28:30]
    w4_2[0] <= io.from_big[0].data[3] @[maxpool.scala 38:39]
    w4_2[1] <= io.from_big[0].data[4] @[maxpool.scala 38:39]
    w4_2[2] <= io.from_big[0].data[9] @[maxpool.scala 38:39]
    w4_2[3] <= io.from_big[0].data[10] @[maxpool.scala 38:39]
    node _a2_T_4 = lt(w4_2[0], w4_2[1]) @[maxpool.scala 42:32]
    node _a2_T_5 = mux(_a2_T_4, w4_2[1], w4_2[0]) @[maxpool.scala 42:26]
    a2_2 <= _a2_T_5 @[maxpool.scala 42:20]
    node _b2_T_4 = lt(w4_2[2], w4_2[3]) @[maxpool.scala 43:32]
    node _b2_T_5 = mux(_b2_T_4, w4_2[2], w4_2[3]) @[maxpool.scala 43:26]
    b2_2 <= _b2_T_5 @[maxpool.scala 43:20]
    node _cache_2_T = lt(a2_2, b2_2) @[maxpool.scala 44:47]
    node _cache_2_T_1 = mux(_cache_2_T, b2_2, a2_2) @[maxpool.scala 44:44]
    cache[2] <= _cache_2_T_1 @[maxpool.scala 44:38]
    wire w4_3 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_3 : SInt<16> @[maxpool.scala 27:30]
    wire b2_3 : SInt<16> @[maxpool.scala 28:30]
    w4_3[0] <= io.from_big[0].data[5] @[maxpool.scala 38:39]
    w4_3[1] <= io.from_small[0][1].data[0] @[maxpool.scala 36:39]
    w4_3[2] <= io.from_big[0].data[11] @[maxpool.scala 38:39]
    w4_3[3] <= io.from_small[0][1].data[1] @[maxpool.scala 36:39]
    node _a2_T_6 = lt(w4_3[0], w4_3[1]) @[maxpool.scala 42:32]
    node _a2_T_7 = mux(_a2_T_6, w4_3[1], w4_3[0]) @[maxpool.scala 42:26]
    a2_3 <= _a2_T_7 @[maxpool.scala 42:20]
    node _b2_T_6 = lt(w4_3[2], w4_3[3]) @[maxpool.scala 43:32]
    node _b2_T_7 = mux(_b2_T_6, w4_3[2], w4_3[3]) @[maxpool.scala 43:26]
    b2_3 <= _b2_T_7 @[maxpool.scala 43:20]
    node _cache_3_T = lt(a2_3, b2_3) @[maxpool.scala 44:47]
    node _cache_3_T_1 = mux(_cache_3_T, b2_3, a2_3) @[maxpool.scala 44:44]
    cache[3] <= _cache_3_T_1 @[maxpool.scala 44:38]
    wire w4_4 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_4 : SInt<16> @[maxpool.scala 27:30]
    wire b2_4 : SInt<16> @[maxpool.scala 28:30]
    w4_4[0] <= io.from_small[0][0].data[2] @[maxpool.scala 34:39]
    w4_4[1] <= io.from_big[0].data[12] @[maxpool.scala 38:39]
    w4_4[2] <= io.from_small[0][0].data[3] @[maxpool.scala 34:39]
    w4_4[3] <= io.from_big[0].data[18] @[maxpool.scala 38:39]
    node _a2_T_8 = lt(w4_4[0], w4_4[1]) @[maxpool.scala 42:32]
    node _a2_T_9 = mux(_a2_T_8, w4_4[1], w4_4[0]) @[maxpool.scala 42:26]
    a2_4 <= _a2_T_9 @[maxpool.scala 42:20]
    node _b2_T_8 = lt(w4_4[2], w4_4[3]) @[maxpool.scala 43:32]
    node _b2_T_9 = mux(_b2_T_8, w4_4[2], w4_4[3]) @[maxpool.scala 43:26]
    b2_4 <= _b2_T_9 @[maxpool.scala 43:20]
    node _cache_4_T = lt(a2_4, b2_4) @[maxpool.scala 44:47]
    node _cache_4_T_1 = mux(_cache_4_T, b2_4, a2_4) @[maxpool.scala 44:44]
    cache[4] <= _cache_4_T_1 @[maxpool.scala 44:38]
    wire w4_5 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_5 : SInt<16> @[maxpool.scala 27:30]
    wire b2_5 : SInt<16> @[maxpool.scala 28:30]
    w4_5[0] <= io.from_big[0].data[13] @[maxpool.scala 38:39]
    w4_5[1] <= io.from_big[0].data[14] @[maxpool.scala 38:39]
    w4_5[2] <= io.from_big[0].data[19] @[maxpool.scala 38:39]
    w4_5[3] <= io.from_big[0].data[20] @[maxpool.scala 38:39]
    node _a2_T_10 = lt(w4_5[0], w4_5[1]) @[maxpool.scala 42:32]
    node _a2_T_11 = mux(_a2_T_10, w4_5[1], w4_5[0]) @[maxpool.scala 42:26]
    a2_5 <= _a2_T_11 @[maxpool.scala 42:20]
    node _b2_T_10 = lt(w4_5[2], w4_5[3]) @[maxpool.scala 43:32]
    node _b2_T_11 = mux(_b2_T_10, w4_5[2], w4_5[3]) @[maxpool.scala 43:26]
    b2_5 <= _b2_T_11 @[maxpool.scala 43:20]
    node _cache_5_T = lt(a2_5, b2_5) @[maxpool.scala 44:47]
    node _cache_5_T_1 = mux(_cache_5_T, b2_5, a2_5) @[maxpool.scala 44:44]
    cache[5] <= _cache_5_T_1 @[maxpool.scala 44:38]
    wire w4_6 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_6 : SInt<16> @[maxpool.scala 27:30]
    wire b2_6 : SInt<16> @[maxpool.scala 28:30]
    w4_6[0] <= io.from_big[0].data[15] @[maxpool.scala 38:39]
    w4_6[1] <= io.from_big[0].data[16] @[maxpool.scala 38:39]
    w4_6[2] <= io.from_big[0].data[21] @[maxpool.scala 38:39]
    w4_6[3] <= io.from_big[0].data[22] @[maxpool.scala 38:39]
    node _a2_T_12 = lt(w4_6[0], w4_6[1]) @[maxpool.scala 42:32]
    node _a2_T_13 = mux(_a2_T_12, w4_6[1], w4_6[0]) @[maxpool.scala 42:26]
    a2_6 <= _a2_T_13 @[maxpool.scala 42:20]
    node _b2_T_12 = lt(w4_6[2], w4_6[3]) @[maxpool.scala 43:32]
    node _b2_T_13 = mux(_b2_T_12, w4_6[2], w4_6[3]) @[maxpool.scala 43:26]
    b2_6 <= _b2_T_13 @[maxpool.scala 43:20]
    node _cache_6_T = lt(a2_6, b2_6) @[maxpool.scala 44:47]
    node _cache_6_T_1 = mux(_cache_6_T, b2_6, a2_6) @[maxpool.scala 44:44]
    cache[6] <= _cache_6_T_1 @[maxpool.scala 44:38]
    wire w4_7 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_7 : SInt<16> @[maxpool.scala 27:30]
    wire b2_7 : SInt<16> @[maxpool.scala 28:30]
    w4_7[0] <= io.from_big[0].data[17] @[maxpool.scala 38:39]
    w4_7[1] <= io.from_small[0][1].data[2] @[maxpool.scala 36:39]
    w4_7[2] <= io.from_big[0].data[23] @[maxpool.scala 38:39]
    w4_7[3] <= io.from_small[0][1].data[3] @[maxpool.scala 36:39]
    node _a2_T_14 = lt(w4_7[0], w4_7[1]) @[maxpool.scala 42:32]
    node _a2_T_15 = mux(_a2_T_14, w4_7[1], w4_7[0]) @[maxpool.scala 42:26]
    a2_7 <= _a2_T_15 @[maxpool.scala 42:20]
    node _b2_T_14 = lt(w4_7[2], w4_7[3]) @[maxpool.scala 43:32]
    node _b2_T_15 = mux(_b2_T_14, w4_7[2], w4_7[3]) @[maxpool.scala 43:26]
    b2_7 <= _b2_T_15 @[maxpool.scala 43:20]
    node _cache_7_T = lt(a2_7, b2_7) @[maxpool.scala 44:47]
    node _cache_7_T_1 = mux(_cache_7_T, b2_7, a2_7) @[maxpool.scala 44:44]
    cache[7] <= _cache_7_T_1 @[maxpool.scala 44:38]
    wire w4_8 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_8 : SInt<16> @[maxpool.scala 27:30]
    wire b2_8 : SInt<16> @[maxpool.scala 28:30]
    w4_8[0] <= io.from_small[0][0].data[4] @[maxpool.scala 34:39]
    w4_8[1] <= io.from_big[0].data[24] @[maxpool.scala 38:39]
    w4_8[2] <= io.from_small[0][0].data[5] @[maxpool.scala 34:39]
    w4_8[3] <= io.from_big[0].data[30] @[maxpool.scala 38:39]
    node _a2_T_16 = lt(w4_8[0], w4_8[1]) @[maxpool.scala 42:32]
    node _a2_T_17 = mux(_a2_T_16, w4_8[1], w4_8[0]) @[maxpool.scala 42:26]
    a2_8 <= _a2_T_17 @[maxpool.scala 42:20]
    node _b2_T_16 = lt(w4_8[2], w4_8[3]) @[maxpool.scala 43:32]
    node _b2_T_17 = mux(_b2_T_16, w4_8[2], w4_8[3]) @[maxpool.scala 43:26]
    b2_8 <= _b2_T_17 @[maxpool.scala 43:20]
    node _cache_8_T = lt(a2_8, b2_8) @[maxpool.scala 44:47]
    node _cache_8_T_1 = mux(_cache_8_T, b2_8, a2_8) @[maxpool.scala 44:44]
    cache[8] <= _cache_8_T_1 @[maxpool.scala 44:38]
    wire w4_9 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_9 : SInt<16> @[maxpool.scala 27:30]
    wire b2_9 : SInt<16> @[maxpool.scala 28:30]
    w4_9[0] <= io.from_big[0].data[25] @[maxpool.scala 38:39]
    w4_9[1] <= io.from_big[0].data[26] @[maxpool.scala 38:39]
    w4_9[2] <= io.from_big[0].data[31] @[maxpool.scala 38:39]
    w4_9[3] <= io.from_big[0].data[32] @[maxpool.scala 38:39]
    node _a2_T_18 = lt(w4_9[0], w4_9[1]) @[maxpool.scala 42:32]
    node _a2_T_19 = mux(_a2_T_18, w4_9[1], w4_9[0]) @[maxpool.scala 42:26]
    a2_9 <= _a2_T_19 @[maxpool.scala 42:20]
    node _b2_T_18 = lt(w4_9[2], w4_9[3]) @[maxpool.scala 43:32]
    node _b2_T_19 = mux(_b2_T_18, w4_9[2], w4_9[3]) @[maxpool.scala 43:26]
    b2_9 <= _b2_T_19 @[maxpool.scala 43:20]
    node _cache_9_T = lt(a2_9, b2_9) @[maxpool.scala 44:47]
    node _cache_9_T_1 = mux(_cache_9_T, b2_9, a2_9) @[maxpool.scala 44:44]
    cache[9] <= _cache_9_T_1 @[maxpool.scala 44:38]
    wire w4_10 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_10 : SInt<16> @[maxpool.scala 27:30]
    wire b2_10 : SInt<16> @[maxpool.scala 28:30]
    w4_10[0] <= io.from_big[0].data[27] @[maxpool.scala 38:39]
    w4_10[1] <= io.from_big[0].data[28] @[maxpool.scala 38:39]
    w4_10[2] <= io.from_big[0].data[33] @[maxpool.scala 38:39]
    w4_10[3] <= io.from_big[0].data[34] @[maxpool.scala 38:39]
    node _a2_T_20 = lt(w4_10[0], w4_10[1]) @[maxpool.scala 42:32]
    node _a2_T_21 = mux(_a2_T_20, w4_10[1], w4_10[0]) @[maxpool.scala 42:26]
    a2_10 <= _a2_T_21 @[maxpool.scala 42:20]
    node _b2_T_20 = lt(w4_10[2], w4_10[3]) @[maxpool.scala 43:32]
    node _b2_T_21 = mux(_b2_T_20, w4_10[2], w4_10[3]) @[maxpool.scala 43:26]
    b2_10 <= _b2_T_21 @[maxpool.scala 43:20]
    node _cache_10_T = lt(a2_10, b2_10) @[maxpool.scala 44:47]
    node _cache_10_T_1 = mux(_cache_10_T, b2_10, a2_10) @[maxpool.scala 44:44]
    cache[10] <= _cache_10_T_1 @[maxpool.scala 44:38]
    wire w4_11 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_11 : SInt<16> @[maxpool.scala 27:30]
    wire b2_11 : SInt<16> @[maxpool.scala 28:30]
    w4_11[0] <= io.from_big[0].data[29] @[maxpool.scala 38:39]
    w4_11[1] <= io.from_small[0][1].data[4] @[maxpool.scala 36:39]
    w4_11[2] <= io.from_big[0].data[35] @[maxpool.scala 38:39]
    w4_11[3] <= io.from_small[0][1].data[5] @[maxpool.scala 36:39]
    node _a2_T_22 = lt(w4_11[0], w4_11[1]) @[maxpool.scala 42:32]
    node _a2_T_23 = mux(_a2_T_22, w4_11[1], w4_11[0]) @[maxpool.scala 42:26]
    a2_11 <= _a2_T_23 @[maxpool.scala 42:20]
    node _b2_T_22 = lt(w4_11[2], w4_11[3]) @[maxpool.scala 43:32]
    node _b2_T_23 = mux(_b2_T_22, w4_11[2], w4_11[3]) @[maxpool.scala 43:26]
    b2_11 <= _b2_T_23 @[maxpool.scala 43:20]
    node _cache_11_T = lt(a2_11, b2_11) @[maxpool.scala 44:47]
    node _cache_11_T_1 = mux(_cache_11_T, b2_11, a2_11) @[maxpool.scala 44:44]
    cache[11] <= _cache_11_T_1 @[maxpool.scala 44:38]
    wire w4_12 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_12 : SInt<16> @[maxpool.scala 27:30]
    wire b2_12 : SInt<16> @[maxpool.scala 28:30]
    w4_12[0] <= io.from_small[0][0].data[6] @[maxpool.scala 34:39]
    w4_12[1] <= io.from_big[0].data[36] @[maxpool.scala 38:39]
    w4_12[2] <= io.from_small[0][0].data[7] @[maxpool.scala 34:39]
    w4_12[3] <= io.from_big[0].data[42] @[maxpool.scala 38:39]
    node _a2_T_24 = lt(w4_12[0], w4_12[1]) @[maxpool.scala 42:32]
    node _a2_T_25 = mux(_a2_T_24, w4_12[1], w4_12[0]) @[maxpool.scala 42:26]
    a2_12 <= _a2_T_25 @[maxpool.scala 42:20]
    node _b2_T_24 = lt(w4_12[2], w4_12[3]) @[maxpool.scala 43:32]
    node _b2_T_25 = mux(_b2_T_24, w4_12[2], w4_12[3]) @[maxpool.scala 43:26]
    b2_12 <= _b2_T_25 @[maxpool.scala 43:20]
    node _cache_12_T = lt(a2_12, b2_12) @[maxpool.scala 44:47]
    node _cache_12_T_1 = mux(_cache_12_T, b2_12, a2_12) @[maxpool.scala 44:44]
    cache[12] <= _cache_12_T_1 @[maxpool.scala 44:38]
    wire w4_13 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_13 : SInt<16> @[maxpool.scala 27:30]
    wire b2_13 : SInt<16> @[maxpool.scala 28:30]
    w4_13[0] <= io.from_big[0].data[37] @[maxpool.scala 38:39]
    w4_13[1] <= io.from_big[0].data[38] @[maxpool.scala 38:39]
    w4_13[2] <= io.from_big[0].data[43] @[maxpool.scala 38:39]
    w4_13[3] <= io.from_big[0].data[44] @[maxpool.scala 38:39]
    node _a2_T_26 = lt(w4_13[0], w4_13[1]) @[maxpool.scala 42:32]
    node _a2_T_27 = mux(_a2_T_26, w4_13[1], w4_13[0]) @[maxpool.scala 42:26]
    a2_13 <= _a2_T_27 @[maxpool.scala 42:20]
    node _b2_T_26 = lt(w4_13[2], w4_13[3]) @[maxpool.scala 43:32]
    node _b2_T_27 = mux(_b2_T_26, w4_13[2], w4_13[3]) @[maxpool.scala 43:26]
    b2_13 <= _b2_T_27 @[maxpool.scala 43:20]
    node _cache_13_T = lt(a2_13, b2_13) @[maxpool.scala 44:47]
    node _cache_13_T_1 = mux(_cache_13_T, b2_13, a2_13) @[maxpool.scala 44:44]
    cache[13] <= _cache_13_T_1 @[maxpool.scala 44:38]
    wire w4_14 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_14 : SInt<16> @[maxpool.scala 27:30]
    wire b2_14 : SInt<16> @[maxpool.scala 28:30]
    w4_14[0] <= io.from_big[0].data[39] @[maxpool.scala 38:39]
    w4_14[1] <= io.from_big[0].data[40] @[maxpool.scala 38:39]
    w4_14[2] <= io.from_big[0].data[45] @[maxpool.scala 38:39]
    w4_14[3] <= io.from_big[0].data[46] @[maxpool.scala 38:39]
    node _a2_T_28 = lt(w4_14[0], w4_14[1]) @[maxpool.scala 42:32]
    node _a2_T_29 = mux(_a2_T_28, w4_14[1], w4_14[0]) @[maxpool.scala 42:26]
    a2_14 <= _a2_T_29 @[maxpool.scala 42:20]
    node _b2_T_28 = lt(w4_14[2], w4_14[3]) @[maxpool.scala 43:32]
    node _b2_T_29 = mux(_b2_T_28, w4_14[2], w4_14[3]) @[maxpool.scala 43:26]
    b2_14 <= _b2_T_29 @[maxpool.scala 43:20]
    node _cache_14_T = lt(a2_14, b2_14) @[maxpool.scala 44:47]
    node _cache_14_T_1 = mux(_cache_14_T, b2_14, a2_14) @[maxpool.scala 44:44]
    cache[14] <= _cache_14_T_1 @[maxpool.scala 44:38]
    wire w4_15 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_15 : SInt<16> @[maxpool.scala 27:30]
    wire b2_15 : SInt<16> @[maxpool.scala 28:30]
    w4_15[0] <= io.from_big[0].data[41] @[maxpool.scala 38:39]
    w4_15[1] <= io.from_small[0][1].data[6] @[maxpool.scala 36:39]
    w4_15[2] <= io.from_big[0].data[47] @[maxpool.scala 38:39]
    w4_15[3] <= io.from_small[0][1].data[7] @[maxpool.scala 36:39]
    node _a2_T_30 = lt(w4_15[0], w4_15[1]) @[maxpool.scala 42:32]
    node _a2_T_31 = mux(_a2_T_30, w4_15[1], w4_15[0]) @[maxpool.scala 42:26]
    a2_15 <= _a2_T_31 @[maxpool.scala 42:20]
    node _b2_T_30 = lt(w4_15[2], w4_15[3]) @[maxpool.scala 43:32]
    node _b2_T_31 = mux(_b2_T_30, w4_15[2], w4_15[3]) @[maxpool.scala 43:26]
    b2_15 <= _b2_T_31 @[maxpool.scala 43:20]
    node _cache_15_T = lt(a2_15, b2_15) @[maxpool.scala 44:47]
    node _cache_15_T_1 = mux(_cache_15_T, b2_15, a2_15) @[maxpool.scala 44:44]
    cache[15] <= _cache_15_T_1 @[maxpool.scala 44:38]
    wire w4_16 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_16 : SInt<16> @[maxpool.scala 27:30]
    wire b2_16 : SInt<16> @[maxpool.scala 28:30]
    w4_16[0] <= io.from_small[1][0].data[0] @[maxpool.scala 34:39]
    w4_16[1] <= io.from_big[1].data[0] @[maxpool.scala 38:39]
    w4_16[2] <= io.from_small[1][0].data[1] @[maxpool.scala 34:39]
    w4_16[3] <= io.from_big[1].data[6] @[maxpool.scala 38:39]
    node _a2_T_32 = lt(w4_16[0], w4_16[1]) @[maxpool.scala 42:32]
    node _a2_T_33 = mux(_a2_T_32, w4_16[1], w4_16[0]) @[maxpool.scala 42:26]
    a2_16 <= _a2_T_33 @[maxpool.scala 42:20]
    node _b2_T_32 = lt(w4_16[2], w4_16[3]) @[maxpool.scala 43:32]
    node _b2_T_33 = mux(_b2_T_32, w4_16[2], w4_16[3]) @[maxpool.scala 43:26]
    b2_16 <= _b2_T_33 @[maxpool.scala 43:20]
    node _cache_16_T = lt(a2_16, b2_16) @[maxpool.scala 44:47]
    node _cache_16_T_1 = mux(_cache_16_T, b2_16, a2_16) @[maxpool.scala 44:44]
    cache[16] <= _cache_16_T_1 @[maxpool.scala 44:38]
    wire w4_17 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_17 : SInt<16> @[maxpool.scala 27:30]
    wire b2_17 : SInt<16> @[maxpool.scala 28:30]
    w4_17[0] <= io.from_big[1].data[1] @[maxpool.scala 38:39]
    w4_17[1] <= io.from_big[1].data[2] @[maxpool.scala 38:39]
    w4_17[2] <= io.from_big[1].data[7] @[maxpool.scala 38:39]
    w4_17[3] <= io.from_big[1].data[8] @[maxpool.scala 38:39]
    node _a2_T_34 = lt(w4_17[0], w4_17[1]) @[maxpool.scala 42:32]
    node _a2_T_35 = mux(_a2_T_34, w4_17[1], w4_17[0]) @[maxpool.scala 42:26]
    a2_17 <= _a2_T_35 @[maxpool.scala 42:20]
    node _b2_T_34 = lt(w4_17[2], w4_17[3]) @[maxpool.scala 43:32]
    node _b2_T_35 = mux(_b2_T_34, w4_17[2], w4_17[3]) @[maxpool.scala 43:26]
    b2_17 <= _b2_T_35 @[maxpool.scala 43:20]
    node _cache_17_T = lt(a2_17, b2_17) @[maxpool.scala 44:47]
    node _cache_17_T_1 = mux(_cache_17_T, b2_17, a2_17) @[maxpool.scala 44:44]
    cache[17] <= _cache_17_T_1 @[maxpool.scala 44:38]
    wire w4_18 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_18 : SInt<16> @[maxpool.scala 27:30]
    wire b2_18 : SInt<16> @[maxpool.scala 28:30]
    w4_18[0] <= io.from_big[1].data[3] @[maxpool.scala 38:39]
    w4_18[1] <= io.from_big[1].data[4] @[maxpool.scala 38:39]
    w4_18[2] <= io.from_big[1].data[9] @[maxpool.scala 38:39]
    w4_18[3] <= io.from_big[1].data[10] @[maxpool.scala 38:39]
    node _a2_T_36 = lt(w4_18[0], w4_18[1]) @[maxpool.scala 42:32]
    node _a2_T_37 = mux(_a2_T_36, w4_18[1], w4_18[0]) @[maxpool.scala 42:26]
    a2_18 <= _a2_T_37 @[maxpool.scala 42:20]
    node _b2_T_36 = lt(w4_18[2], w4_18[3]) @[maxpool.scala 43:32]
    node _b2_T_37 = mux(_b2_T_36, w4_18[2], w4_18[3]) @[maxpool.scala 43:26]
    b2_18 <= _b2_T_37 @[maxpool.scala 43:20]
    node _cache_18_T = lt(a2_18, b2_18) @[maxpool.scala 44:47]
    node _cache_18_T_1 = mux(_cache_18_T, b2_18, a2_18) @[maxpool.scala 44:44]
    cache[18] <= _cache_18_T_1 @[maxpool.scala 44:38]
    wire w4_19 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_19 : SInt<16> @[maxpool.scala 27:30]
    wire b2_19 : SInt<16> @[maxpool.scala 28:30]
    w4_19[0] <= io.from_big[1].data[5] @[maxpool.scala 38:39]
    w4_19[1] <= io.from_small[1][1].data[0] @[maxpool.scala 36:39]
    w4_19[2] <= io.from_big[1].data[11] @[maxpool.scala 38:39]
    w4_19[3] <= io.from_small[1][1].data[1] @[maxpool.scala 36:39]
    node _a2_T_38 = lt(w4_19[0], w4_19[1]) @[maxpool.scala 42:32]
    node _a2_T_39 = mux(_a2_T_38, w4_19[1], w4_19[0]) @[maxpool.scala 42:26]
    a2_19 <= _a2_T_39 @[maxpool.scala 42:20]
    node _b2_T_38 = lt(w4_19[2], w4_19[3]) @[maxpool.scala 43:32]
    node _b2_T_39 = mux(_b2_T_38, w4_19[2], w4_19[3]) @[maxpool.scala 43:26]
    b2_19 <= _b2_T_39 @[maxpool.scala 43:20]
    node _cache_19_T = lt(a2_19, b2_19) @[maxpool.scala 44:47]
    node _cache_19_T_1 = mux(_cache_19_T, b2_19, a2_19) @[maxpool.scala 44:44]
    cache[19] <= _cache_19_T_1 @[maxpool.scala 44:38]
    wire w4_20 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_20 : SInt<16> @[maxpool.scala 27:30]
    wire b2_20 : SInt<16> @[maxpool.scala 28:30]
    w4_20[0] <= io.from_small[1][0].data[2] @[maxpool.scala 34:39]
    w4_20[1] <= io.from_big[1].data[12] @[maxpool.scala 38:39]
    w4_20[2] <= io.from_small[1][0].data[3] @[maxpool.scala 34:39]
    w4_20[3] <= io.from_big[1].data[18] @[maxpool.scala 38:39]
    node _a2_T_40 = lt(w4_20[0], w4_20[1]) @[maxpool.scala 42:32]
    node _a2_T_41 = mux(_a2_T_40, w4_20[1], w4_20[0]) @[maxpool.scala 42:26]
    a2_20 <= _a2_T_41 @[maxpool.scala 42:20]
    node _b2_T_40 = lt(w4_20[2], w4_20[3]) @[maxpool.scala 43:32]
    node _b2_T_41 = mux(_b2_T_40, w4_20[2], w4_20[3]) @[maxpool.scala 43:26]
    b2_20 <= _b2_T_41 @[maxpool.scala 43:20]
    node _cache_20_T = lt(a2_20, b2_20) @[maxpool.scala 44:47]
    node _cache_20_T_1 = mux(_cache_20_T, b2_20, a2_20) @[maxpool.scala 44:44]
    cache[20] <= _cache_20_T_1 @[maxpool.scala 44:38]
    wire w4_21 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_21 : SInt<16> @[maxpool.scala 27:30]
    wire b2_21 : SInt<16> @[maxpool.scala 28:30]
    w4_21[0] <= io.from_big[1].data[13] @[maxpool.scala 38:39]
    w4_21[1] <= io.from_big[1].data[14] @[maxpool.scala 38:39]
    w4_21[2] <= io.from_big[1].data[19] @[maxpool.scala 38:39]
    w4_21[3] <= io.from_big[1].data[20] @[maxpool.scala 38:39]
    node _a2_T_42 = lt(w4_21[0], w4_21[1]) @[maxpool.scala 42:32]
    node _a2_T_43 = mux(_a2_T_42, w4_21[1], w4_21[0]) @[maxpool.scala 42:26]
    a2_21 <= _a2_T_43 @[maxpool.scala 42:20]
    node _b2_T_42 = lt(w4_21[2], w4_21[3]) @[maxpool.scala 43:32]
    node _b2_T_43 = mux(_b2_T_42, w4_21[2], w4_21[3]) @[maxpool.scala 43:26]
    b2_21 <= _b2_T_43 @[maxpool.scala 43:20]
    node _cache_21_T = lt(a2_21, b2_21) @[maxpool.scala 44:47]
    node _cache_21_T_1 = mux(_cache_21_T, b2_21, a2_21) @[maxpool.scala 44:44]
    cache[21] <= _cache_21_T_1 @[maxpool.scala 44:38]
    wire w4_22 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_22 : SInt<16> @[maxpool.scala 27:30]
    wire b2_22 : SInt<16> @[maxpool.scala 28:30]
    w4_22[0] <= io.from_big[1].data[15] @[maxpool.scala 38:39]
    w4_22[1] <= io.from_big[1].data[16] @[maxpool.scala 38:39]
    w4_22[2] <= io.from_big[1].data[21] @[maxpool.scala 38:39]
    w4_22[3] <= io.from_big[1].data[22] @[maxpool.scala 38:39]
    node _a2_T_44 = lt(w4_22[0], w4_22[1]) @[maxpool.scala 42:32]
    node _a2_T_45 = mux(_a2_T_44, w4_22[1], w4_22[0]) @[maxpool.scala 42:26]
    a2_22 <= _a2_T_45 @[maxpool.scala 42:20]
    node _b2_T_44 = lt(w4_22[2], w4_22[3]) @[maxpool.scala 43:32]
    node _b2_T_45 = mux(_b2_T_44, w4_22[2], w4_22[3]) @[maxpool.scala 43:26]
    b2_22 <= _b2_T_45 @[maxpool.scala 43:20]
    node _cache_22_T = lt(a2_22, b2_22) @[maxpool.scala 44:47]
    node _cache_22_T_1 = mux(_cache_22_T, b2_22, a2_22) @[maxpool.scala 44:44]
    cache[22] <= _cache_22_T_1 @[maxpool.scala 44:38]
    wire w4_23 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_23 : SInt<16> @[maxpool.scala 27:30]
    wire b2_23 : SInt<16> @[maxpool.scala 28:30]
    w4_23[0] <= io.from_big[1].data[17] @[maxpool.scala 38:39]
    w4_23[1] <= io.from_small[1][1].data[2] @[maxpool.scala 36:39]
    w4_23[2] <= io.from_big[1].data[23] @[maxpool.scala 38:39]
    w4_23[3] <= io.from_small[1][1].data[3] @[maxpool.scala 36:39]
    node _a2_T_46 = lt(w4_23[0], w4_23[1]) @[maxpool.scala 42:32]
    node _a2_T_47 = mux(_a2_T_46, w4_23[1], w4_23[0]) @[maxpool.scala 42:26]
    a2_23 <= _a2_T_47 @[maxpool.scala 42:20]
    node _b2_T_46 = lt(w4_23[2], w4_23[3]) @[maxpool.scala 43:32]
    node _b2_T_47 = mux(_b2_T_46, w4_23[2], w4_23[3]) @[maxpool.scala 43:26]
    b2_23 <= _b2_T_47 @[maxpool.scala 43:20]
    node _cache_23_T = lt(a2_23, b2_23) @[maxpool.scala 44:47]
    node _cache_23_T_1 = mux(_cache_23_T, b2_23, a2_23) @[maxpool.scala 44:44]
    cache[23] <= _cache_23_T_1 @[maxpool.scala 44:38]
    wire w4_24 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_24 : SInt<16> @[maxpool.scala 27:30]
    wire b2_24 : SInt<16> @[maxpool.scala 28:30]
    w4_24[0] <= io.from_small[1][0].data[4] @[maxpool.scala 34:39]
    w4_24[1] <= io.from_big[1].data[24] @[maxpool.scala 38:39]
    w4_24[2] <= io.from_small[1][0].data[5] @[maxpool.scala 34:39]
    w4_24[3] <= io.from_big[1].data[30] @[maxpool.scala 38:39]
    node _a2_T_48 = lt(w4_24[0], w4_24[1]) @[maxpool.scala 42:32]
    node _a2_T_49 = mux(_a2_T_48, w4_24[1], w4_24[0]) @[maxpool.scala 42:26]
    a2_24 <= _a2_T_49 @[maxpool.scala 42:20]
    node _b2_T_48 = lt(w4_24[2], w4_24[3]) @[maxpool.scala 43:32]
    node _b2_T_49 = mux(_b2_T_48, w4_24[2], w4_24[3]) @[maxpool.scala 43:26]
    b2_24 <= _b2_T_49 @[maxpool.scala 43:20]
    node _cache_24_T = lt(a2_24, b2_24) @[maxpool.scala 44:47]
    node _cache_24_T_1 = mux(_cache_24_T, b2_24, a2_24) @[maxpool.scala 44:44]
    cache[24] <= _cache_24_T_1 @[maxpool.scala 44:38]
    wire w4_25 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_25 : SInt<16> @[maxpool.scala 27:30]
    wire b2_25 : SInt<16> @[maxpool.scala 28:30]
    w4_25[0] <= io.from_big[1].data[25] @[maxpool.scala 38:39]
    w4_25[1] <= io.from_big[1].data[26] @[maxpool.scala 38:39]
    w4_25[2] <= io.from_big[1].data[31] @[maxpool.scala 38:39]
    w4_25[3] <= io.from_big[1].data[32] @[maxpool.scala 38:39]
    node _a2_T_50 = lt(w4_25[0], w4_25[1]) @[maxpool.scala 42:32]
    node _a2_T_51 = mux(_a2_T_50, w4_25[1], w4_25[0]) @[maxpool.scala 42:26]
    a2_25 <= _a2_T_51 @[maxpool.scala 42:20]
    node _b2_T_50 = lt(w4_25[2], w4_25[3]) @[maxpool.scala 43:32]
    node _b2_T_51 = mux(_b2_T_50, w4_25[2], w4_25[3]) @[maxpool.scala 43:26]
    b2_25 <= _b2_T_51 @[maxpool.scala 43:20]
    node _cache_25_T = lt(a2_25, b2_25) @[maxpool.scala 44:47]
    node _cache_25_T_1 = mux(_cache_25_T, b2_25, a2_25) @[maxpool.scala 44:44]
    cache[25] <= _cache_25_T_1 @[maxpool.scala 44:38]
    wire w4_26 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_26 : SInt<16> @[maxpool.scala 27:30]
    wire b2_26 : SInt<16> @[maxpool.scala 28:30]
    w4_26[0] <= io.from_big[1].data[27] @[maxpool.scala 38:39]
    w4_26[1] <= io.from_big[1].data[28] @[maxpool.scala 38:39]
    w4_26[2] <= io.from_big[1].data[33] @[maxpool.scala 38:39]
    w4_26[3] <= io.from_big[1].data[34] @[maxpool.scala 38:39]
    node _a2_T_52 = lt(w4_26[0], w4_26[1]) @[maxpool.scala 42:32]
    node _a2_T_53 = mux(_a2_T_52, w4_26[1], w4_26[0]) @[maxpool.scala 42:26]
    a2_26 <= _a2_T_53 @[maxpool.scala 42:20]
    node _b2_T_52 = lt(w4_26[2], w4_26[3]) @[maxpool.scala 43:32]
    node _b2_T_53 = mux(_b2_T_52, w4_26[2], w4_26[3]) @[maxpool.scala 43:26]
    b2_26 <= _b2_T_53 @[maxpool.scala 43:20]
    node _cache_26_T = lt(a2_26, b2_26) @[maxpool.scala 44:47]
    node _cache_26_T_1 = mux(_cache_26_T, b2_26, a2_26) @[maxpool.scala 44:44]
    cache[26] <= _cache_26_T_1 @[maxpool.scala 44:38]
    wire w4_27 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_27 : SInt<16> @[maxpool.scala 27:30]
    wire b2_27 : SInt<16> @[maxpool.scala 28:30]
    w4_27[0] <= io.from_big[1].data[29] @[maxpool.scala 38:39]
    w4_27[1] <= io.from_small[1][1].data[4] @[maxpool.scala 36:39]
    w4_27[2] <= io.from_big[1].data[35] @[maxpool.scala 38:39]
    w4_27[3] <= io.from_small[1][1].data[5] @[maxpool.scala 36:39]
    node _a2_T_54 = lt(w4_27[0], w4_27[1]) @[maxpool.scala 42:32]
    node _a2_T_55 = mux(_a2_T_54, w4_27[1], w4_27[0]) @[maxpool.scala 42:26]
    a2_27 <= _a2_T_55 @[maxpool.scala 42:20]
    node _b2_T_54 = lt(w4_27[2], w4_27[3]) @[maxpool.scala 43:32]
    node _b2_T_55 = mux(_b2_T_54, w4_27[2], w4_27[3]) @[maxpool.scala 43:26]
    b2_27 <= _b2_T_55 @[maxpool.scala 43:20]
    node _cache_27_T = lt(a2_27, b2_27) @[maxpool.scala 44:47]
    node _cache_27_T_1 = mux(_cache_27_T, b2_27, a2_27) @[maxpool.scala 44:44]
    cache[27] <= _cache_27_T_1 @[maxpool.scala 44:38]
    wire w4_28 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_28 : SInt<16> @[maxpool.scala 27:30]
    wire b2_28 : SInt<16> @[maxpool.scala 28:30]
    w4_28[0] <= io.from_small[1][0].data[6] @[maxpool.scala 34:39]
    w4_28[1] <= io.from_big[1].data[36] @[maxpool.scala 38:39]
    w4_28[2] <= io.from_small[1][0].data[7] @[maxpool.scala 34:39]
    w4_28[3] <= io.from_big[1].data[42] @[maxpool.scala 38:39]
    node _a2_T_56 = lt(w4_28[0], w4_28[1]) @[maxpool.scala 42:32]
    node _a2_T_57 = mux(_a2_T_56, w4_28[1], w4_28[0]) @[maxpool.scala 42:26]
    a2_28 <= _a2_T_57 @[maxpool.scala 42:20]
    node _b2_T_56 = lt(w4_28[2], w4_28[3]) @[maxpool.scala 43:32]
    node _b2_T_57 = mux(_b2_T_56, w4_28[2], w4_28[3]) @[maxpool.scala 43:26]
    b2_28 <= _b2_T_57 @[maxpool.scala 43:20]
    node _cache_28_T = lt(a2_28, b2_28) @[maxpool.scala 44:47]
    node _cache_28_T_1 = mux(_cache_28_T, b2_28, a2_28) @[maxpool.scala 44:44]
    cache[28] <= _cache_28_T_1 @[maxpool.scala 44:38]
    wire w4_29 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_29 : SInt<16> @[maxpool.scala 27:30]
    wire b2_29 : SInt<16> @[maxpool.scala 28:30]
    w4_29[0] <= io.from_big[1].data[37] @[maxpool.scala 38:39]
    w4_29[1] <= io.from_big[1].data[38] @[maxpool.scala 38:39]
    w4_29[2] <= io.from_big[1].data[43] @[maxpool.scala 38:39]
    w4_29[3] <= io.from_big[1].data[44] @[maxpool.scala 38:39]
    node _a2_T_58 = lt(w4_29[0], w4_29[1]) @[maxpool.scala 42:32]
    node _a2_T_59 = mux(_a2_T_58, w4_29[1], w4_29[0]) @[maxpool.scala 42:26]
    a2_29 <= _a2_T_59 @[maxpool.scala 42:20]
    node _b2_T_58 = lt(w4_29[2], w4_29[3]) @[maxpool.scala 43:32]
    node _b2_T_59 = mux(_b2_T_58, w4_29[2], w4_29[3]) @[maxpool.scala 43:26]
    b2_29 <= _b2_T_59 @[maxpool.scala 43:20]
    node _cache_29_T = lt(a2_29, b2_29) @[maxpool.scala 44:47]
    node _cache_29_T_1 = mux(_cache_29_T, b2_29, a2_29) @[maxpool.scala 44:44]
    cache[29] <= _cache_29_T_1 @[maxpool.scala 44:38]
    wire w4_30 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_30 : SInt<16> @[maxpool.scala 27:30]
    wire b2_30 : SInt<16> @[maxpool.scala 28:30]
    w4_30[0] <= io.from_big[1].data[39] @[maxpool.scala 38:39]
    w4_30[1] <= io.from_big[1].data[40] @[maxpool.scala 38:39]
    w4_30[2] <= io.from_big[1].data[45] @[maxpool.scala 38:39]
    w4_30[3] <= io.from_big[1].data[46] @[maxpool.scala 38:39]
    node _a2_T_60 = lt(w4_30[0], w4_30[1]) @[maxpool.scala 42:32]
    node _a2_T_61 = mux(_a2_T_60, w4_30[1], w4_30[0]) @[maxpool.scala 42:26]
    a2_30 <= _a2_T_61 @[maxpool.scala 42:20]
    node _b2_T_60 = lt(w4_30[2], w4_30[3]) @[maxpool.scala 43:32]
    node _b2_T_61 = mux(_b2_T_60, w4_30[2], w4_30[3]) @[maxpool.scala 43:26]
    b2_30 <= _b2_T_61 @[maxpool.scala 43:20]
    node _cache_30_T = lt(a2_30, b2_30) @[maxpool.scala 44:47]
    node _cache_30_T_1 = mux(_cache_30_T, b2_30, a2_30) @[maxpool.scala 44:44]
    cache[30] <= _cache_30_T_1 @[maxpool.scala 44:38]
    wire w4_31 : SInt<16>[4] @[maxpool.scala 26:30]
    wire a2_31 : SInt<16> @[maxpool.scala 27:30]
    wire b2_31 : SInt<16> @[maxpool.scala 28:30]
    w4_31[0] <= io.from_big[1].data[41] @[maxpool.scala 38:39]
    w4_31[1] <= io.from_small[1][1].data[6] @[maxpool.scala 36:39]
    w4_31[2] <= io.from_big[1].data[47] @[maxpool.scala 38:39]
    w4_31[3] <= io.from_small[1][1].data[7] @[maxpool.scala 36:39]
    node _a2_T_62 = lt(w4_31[0], w4_31[1]) @[maxpool.scala 42:32]
    node _a2_T_63 = mux(_a2_T_62, w4_31[1], w4_31[0]) @[maxpool.scala 42:26]
    a2_31 <= _a2_T_63 @[maxpool.scala 42:20]
    node _b2_T_62 = lt(w4_31[2], w4_31[3]) @[maxpool.scala 43:32]
    node _b2_T_63 = mux(_b2_T_62, w4_31[2], w4_31[3]) @[maxpool.scala 43:26]
    b2_31 <= _b2_T_63 @[maxpool.scala 43:20]
    node _cache_31_T = lt(a2_31, b2_31) @[maxpool.scala 44:47]
    node _cache_31_T_1 = mux(_cache_31_T, b2_31, a2_31) @[maxpool.scala 44:44]
    cache[31] <= _cache_31_T_1 @[maxpool.scala 44:38]
    when io.valid_in : @[maxpool.scala 48:22]
      node _T_32 = eq(UInt<1>("h00"), state) @[Conditional.scala 37:30]
      when _T_32 : @[Conditional.scala 40:58]
        output[0] <= cache[0] @[maxpool.scala 51:24]
        output[1] <= cache[1] @[maxpool.scala 51:24]
        output[2] <= cache[2] @[maxpool.scala 51:24]
        output[3] <= cache[3] @[maxpool.scala 51:24]
        output[4] <= cache[4] @[maxpool.scala 51:24]
        output[5] <= cache[5] @[maxpool.scala 51:24]
        output[6] <= cache[6] @[maxpool.scala 51:24]
        output[7] <= cache[7] @[maxpool.scala 51:24]
        output[8] <= cache[8] @[maxpool.scala 51:24]
        output[9] <= cache[9] @[maxpool.scala 51:24]
        output[10] <= cache[10] @[maxpool.scala 51:24]
        output[11] <= cache[11] @[maxpool.scala 51:24]
        output[12] <= cache[12] @[maxpool.scala 51:24]
        output[13] <= cache[13] @[maxpool.scala 51:24]
        output[14] <= cache[14] @[maxpool.scala 51:24]
        output[15] <= cache[15] @[maxpool.scala 51:24]
        output[16] <= cache[16] @[maxpool.scala 51:24]
        output[17] <= cache[17] @[maxpool.scala 51:24]
        output[18] <= cache[18] @[maxpool.scala 51:24]
        output[19] <= cache[19] @[maxpool.scala 51:24]
        output[20] <= cache[20] @[maxpool.scala 51:24]
        output[21] <= cache[21] @[maxpool.scala 51:24]
        output[22] <= cache[22] @[maxpool.scala 51:24]
        output[23] <= cache[23] @[maxpool.scala 51:24]
        output[24] <= cache[24] @[maxpool.scala 51:24]
        output[25] <= cache[25] @[maxpool.scala 51:24]
        output[26] <= cache[26] @[maxpool.scala 51:24]
        output[27] <= cache[27] @[maxpool.scala 51:24]
        output[28] <= cache[28] @[maxpool.scala 51:24]
        output[29] <= cache[29] @[maxpool.scala 51:24]
        output[30] <= cache[30] @[maxpool.scala 51:24]
        output[31] <= cache[31] @[maxpool.scala 51:24]
        state <= UInt<1>("h01") @[maxpool.scala 52:23]
        skip @[Conditional.scala 40:58]
      else : @[Conditional.scala 39:67]
        node _T_33 = eq(UInt<1>("h01"), state) @[Conditional.scala 37:30]
        when _T_33 : @[Conditional.scala 39:67]
          io.result.mat[0] <= output[0] @[maxpool.scala 57:46]
          io.result.mat[1] <= output[1] @[maxpool.scala 57:46]
          io.result.mat[2] <= output[2] @[maxpool.scala 57:46]
          io.result.mat[3] <= output[3] @[maxpool.scala 57:46]
          io.result.mat[8] <= output[4] @[maxpool.scala 57:46]
          io.result.mat[9] <= output[5] @[maxpool.scala 57:46]
          io.result.mat[10] <= output[6] @[maxpool.scala 57:46]
          io.result.mat[11] <= output[7] @[maxpool.scala 57:46]
          io.result.mat[16] <= output[8] @[maxpool.scala 57:46]
          io.result.mat[17] <= output[9] @[maxpool.scala 57:46]
          io.result.mat[18] <= output[10] @[maxpool.scala 57:46]
          io.result.mat[19] <= output[11] @[maxpool.scala 57:46]
          io.result.mat[24] <= output[12] @[maxpool.scala 57:46]
          io.result.mat[25] <= output[13] @[maxpool.scala 57:46]
          io.result.mat[26] <= output[14] @[maxpool.scala 57:46]
          io.result.mat[27] <= output[15] @[maxpool.scala 57:46]
          io.result.mat[32] <= output[16] @[maxpool.scala 60:50]
          io.result.mat[33] <= output[17] @[maxpool.scala 60:50]
          io.result.mat[34] <= output[18] @[maxpool.scala 60:50]
          io.result.mat[35] <= output[19] @[maxpool.scala 60:50]
          io.result.mat[40] <= output[20] @[maxpool.scala 60:50]
          io.result.mat[41] <= output[21] @[maxpool.scala 60:50]
          io.result.mat[42] <= output[22] @[maxpool.scala 60:50]
          io.result.mat[43] <= output[23] @[maxpool.scala 60:50]
          io.result.mat[48] <= output[24] @[maxpool.scala 60:50]
          io.result.mat[49] <= output[25] @[maxpool.scala 60:50]
          io.result.mat[50] <= output[26] @[maxpool.scala 60:50]
          io.result.mat[51] <= output[27] @[maxpool.scala 60:50]
          io.result.mat[56] <= output[28] @[maxpool.scala 60:50]
          io.result.mat[57] <= output[29] @[maxpool.scala 60:50]
          io.result.mat[58] <= output[30] @[maxpool.scala 60:50]
          io.result.mat[59] <= output[31] @[maxpool.scala 60:50]
          io.result.mat[4] <= cache[0] @[maxpool.scala 64:50]
          io.result.mat[5] <= cache[1] @[maxpool.scala 64:50]
          io.result.mat[6] <= cache[2] @[maxpool.scala 64:50]
          io.result.mat[7] <= cache[3] @[maxpool.scala 64:50]
          io.result.mat[12] <= cache[4] @[maxpool.scala 64:50]
          io.result.mat[13] <= cache[5] @[maxpool.scala 64:50]
          io.result.mat[14] <= cache[6] @[maxpool.scala 64:50]
          io.result.mat[15] <= cache[7] @[maxpool.scala 64:50]
          io.result.mat[20] <= cache[8] @[maxpool.scala 64:50]
          io.result.mat[21] <= cache[9] @[maxpool.scala 64:50]
          io.result.mat[22] <= cache[10] @[maxpool.scala 64:50]
          io.result.mat[23] <= cache[11] @[maxpool.scala 64:50]
          io.result.mat[28] <= cache[12] @[maxpool.scala 64:50]
          io.result.mat[29] <= cache[13] @[maxpool.scala 64:50]
          io.result.mat[30] <= cache[14] @[maxpool.scala 64:50]
          io.result.mat[31] <= cache[15] @[maxpool.scala 64:50]
          io.result.mat[36] <= cache[16] @[maxpool.scala 68:52]
          io.result.mat[37] <= cache[17] @[maxpool.scala 68:52]
          io.result.mat[38] <= cache[18] @[maxpool.scala 68:52]
          io.result.mat[39] <= cache[19] @[maxpool.scala 68:52]
          io.result.mat[44] <= cache[20] @[maxpool.scala 68:52]
          io.result.mat[45] <= cache[21] @[maxpool.scala 68:52]
          io.result.mat[46] <= cache[22] @[maxpool.scala 68:52]
          io.result.mat[47] <= cache[23] @[maxpool.scala 68:52]
          io.result.mat[52] <= cache[24] @[maxpool.scala 68:52]
          io.result.mat[53] <= cache[25] @[maxpool.scala 68:52]
          io.result.mat[54] <= cache[26] @[maxpool.scala 68:52]
          io.result.mat[55] <= cache[27] @[maxpool.scala 68:52]
          io.result.mat[60] <= cache[28] @[maxpool.scala 68:52]
          io.result.mat[61] <= cache[29] @[maxpool.scala 68:52]
          io.result.mat[62] <= cache[30] @[maxpool.scala 68:52]
          io.result.mat[63] <= cache[31] @[maxpool.scala 68:52]
          io.valid_out <= UInt<1>("h01") @[maxpool.scala 69:30]
          state <= UInt<1>("h00") @[maxpool.scala 70:23]
          skip @[Conditional.scala 39:67]
      skip @[maxpool.scala 48:22]
    
  extmodule weight0 : 
    input addra : UInt<14>
    input clka : Clock
    output douta : UInt<144>
    
    defname = weight0
    
    
  module ROMWeight : 
    input clock : Clock
    input reset : Reset
    output io : {flip addr : UInt<14>, out : SInt<16>[9]}
    
    inst weight0 of weight0 @[bram.scala 223:21]
    weight0.douta is invalid
    weight0.clka is invalid
    weight0.addra is invalid
    weight0.clka <= clock @[bram.scala 224:14]
    weight0.addra <= io.addr @[bram.scala 225:15]
    wire _WIRE : SInt<16>[9] @[bram.scala 226:33]
    wire _WIRE_1 : UInt<144>
    _WIRE_1 <= weight0.douta
    node _T = bits(_WIRE_1, 15, 0) @[bram.scala 226:33]
    node _T_1 = asSInt(_T) @[bram.scala 226:33]
    _WIRE[0] <= _T_1 @[bram.scala 226:33]
    node _T_2 = bits(_WIRE_1, 31, 16) @[bram.scala 226:33]
    node _T_3 = asSInt(_T_2) @[bram.scala 226:33]
    _WIRE[1] <= _T_3 @[bram.scala 226:33]
    node _T_4 = bits(_WIRE_1, 47, 32) @[bram.scala 226:33]
    node _T_5 = asSInt(_T_4) @[bram.scala 226:33]
    _WIRE[2] <= _T_5 @[bram.scala 226:33]
    node _T_6 = bits(_WIRE_1, 63, 48) @[bram.scala 226:33]
    node _T_7 = asSInt(_T_6) @[bram.scala 226:33]
    _WIRE[3] <= _T_7 @[bram.scala 226:33]
    node _T_8 = bits(_WIRE_1, 79, 64) @[bram.scala 226:33]
    node _T_9 = asSInt(_T_8) @[bram.scala 226:33]
    _WIRE[4] <= _T_9 @[bram.scala 226:33]
    node _T_10 = bits(_WIRE_1, 95, 80) @[bram.scala 226:33]
    node _T_11 = asSInt(_T_10) @[bram.scala 226:33]
    _WIRE[5] <= _T_11 @[bram.scala 226:33]
    node _T_12 = bits(_WIRE_1, 111, 96) @[bram.scala 226:33]
    node _T_13 = asSInt(_T_12) @[bram.scala 226:33]
    _WIRE[6] <= _T_13 @[bram.scala 226:33]
    node _T_14 = bits(_WIRE_1, 127, 112) @[bram.scala 226:33]
    node _T_15 = asSInt(_T_14) @[bram.scala 226:33]
    _WIRE[7] <= _T_15 @[bram.scala 226:33]
    node _T_16 = bits(_WIRE_1, 143, 128) @[bram.scala 226:33]
    node _T_17 = asSInt(_T_16) @[bram.scala 226:33]
    _WIRE[8] <= _T_17 @[bram.scala 226:33]
    io.out[0] <= _WIRE[0] @[bram.scala 226:12]
    io.out[1] <= _WIRE[1] @[bram.scala 226:12]
    io.out[2] <= _WIRE[2] @[bram.scala 226:12]
    io.out[3] <= _WIRE[3] @[bram.scala 226:12]
    io.out[4] <= _WIRE[4] @[bram.scala 226:12]
    io.out[5] <= _WIRE[5] @[bram.scala 226:12]
    io.out[6] <= _WIRE[6] @[bram.scala 226:12]
    io.out[7] <= _WIRE[7] @[bram.scala 226:12]
    io.out[8] <= _WIRE[8] @[bram.scala 226:12]
    
  extmodule bias0 : 
    input addra : UInt<8>
    input clka : Clock
    output douta : UInt<36>
    
    defname = bias0
    
    
  module ROMBias : 
    input clock : Clock
    input reset : Reset
    output io : {flip addr : UInt<8>, out : SInt<36>}
    
    inst bias0 of bias0 @[bram.scala 210:21]
    bias0.douta is invalid
    bias0.clka is invalid
    bias0.addra is invalid
    bias0.clka <= clock @[bram.scala 211:14]
    bias0.addra <= io.addr @[bram.scala 212:15]
    node _io_out_T = asSInt(bias0.douta) @[bram.scala 213:25]
    io.out <= _io_out_T @[bram.scala 213:12]
    
  extmodule bram_big_bank0 : 
    input addra : UInt<10>
    input clka : Clock
    input dina : UInt<768>
    output douta : UInt<768>
    input wea : UInt<1>
    input addrb : UInt<10>
    input clkb : Clock
    input dinb : UInt<768>
    output doutb : UInt<768>
    input web : UInt<1>
    
    defname = bram_big_bank0
    
    
  extmodule bram_big_bank0_1 : 
    input addra : UInt<10>
    input clka : Clock
    input dina : UInt<768>
    output douta : UInt<768>
    input wea : UInt<1>
    input addrb : UInt<10>
    input clkb : Clock
    input dinb : UInt<768>
    output doutb : UInt<768>
    input web : UInt<1>
    
    defname = bram_big_bank0
    
    
  extmodule bram_small_bank0 : 
    input addra : UInt<9>
    input clka : Clock
    input dina : UInt<128>
    output douta : UInt<128>
    input wea : UInt<1>
    input addrb : UInt<9>
    input clkb : Clock
    input dinb : UInt<128>
    output doutb : UInt<128>
    input web : UInt<1>
    
    defname = bram_small_bank0
    
    
  extmodule bram_small_bank1 : 
    input addra : UInt<9>
    input clka : Clock
    input dina : UInt<128>
    output douta : UInt<128>
    input wea : UInt<1>
    input addrb : UInt<9>
    input clkb : Clock
    input dinb : UInt<128>
    output doutb : UInt<128>
    input web : UInt<1>
    
    defname = bram_small_bank1
    
    
  extmodule bram_small_bank2 : 
    input addra : UInt<9>
    input clka : Clock
    input dina : UInt<128>
    output douta : UInt<128>
    input wea : UInt<1>
    input addrb : UInt<9>
    input clkb : Clock
    input dinb : UInt<128>
    output doutb : UInt<128>
    input web : UInt<1>
    
    defname = bram_small_bank2
    
    
  extmodule bram_small_bank3 : 
    input addra : UInt<9>
    input clka : Clock
    input dina : UInt<128>
    output douta : UInt<128>
    input wea : UInt<1>
    input addrb : UInt<9>
    input clkb : Clock
    input dinb : UInt<128>
    output doutb : UInt<128>
    input web : UInt<1>
    
    defname = bram_small_bank3
    
    
  extmodule bram_small_bank4 : 
    input addra : UInt<9>
    input clka : Clock
    input dina : UInt<128>
    output douta : UInt<128>
    input wea : UInt<1>
    input addrb : UInt<9>
    input clkb : Clock
    input dinb : UInt<128>
    output doutb : UInt<128>
    input web : UInt<1>
    
    defname = bram_small_bank4
    
    
  extmodule bram_small_bank5 : 
    input addra : UInt<9>
    input clka : Clock
    input dina : UInt<128>
    output douta : UInt<128>
    input wea : UInt<1>
    input addrb : UInt<9>
    input clkb : Clock
    input dinb : UInt<128>
    output doutb : UInt<128>
    input web : UInt<1>
    
    defname = bram_small_bank5
    
    
  extmodule bram_small_bank6 : 
    input addra : UInt<9>
    input clka : Clock
    input dina : UInt<128>
    output douta : UInt<128>
    input wea : UInt<1>
    input addrb : UInt<9>
    input clkb : Clock
    input dinb : UInt<128>
    output doutb : UInt<128>
    input web : UInt<1>
    
    defname = bram_small_bank6
    
    
  extmodule bram_small_bank7 : 
    input addra : UInt<9>
    input clka : Clock
    input dina : UInt<128>
    output douta : UInt<128>
    input wea : UInt<1>
    input addrb : UInt<9>
    input clkb : Clock
    input dinb : UInt<128>
    output doutb : UInt<128>
    input web : UInt<1>
    
    defname = bram_small_bank7
    
    
  module RAMGroup : 
    input clock : Clock
    input reset : Reset
    output io : {flip rd_valid_in : UInt<1>, rd_valid_out : UInt<1>, flip rd_addr1 : {addrs : {addr : UInt<10>, bank_id : UInt<3>}[5]}, flip rd_addr2 : {addrs : {addr : UInt<10>, bank_id : UInt<3>}[5]}, rd_big : {data : SInt<16>[48]}[2], rd_small : {data : SInt<16>[8]}[4][2], flip wr_addr : {addrs : {addr : UInt<10>, bank_id : UInt<3>}[3]}, flip wr_valid_in : UInt<1>, flip to_bigbank : {data : SInt<16>[48]}, flip to_smallbank : {data : SInt<16>[8]}[2]}
    
    reg reg_valid : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[bram.scala 87:28]
    reg_valid <= io.rd_valid_in @[bram.scala 87:28]
    io.rd_valid_out <= reg_valid @[bram.scala 88:21]
    wire _WIRE : {data : SInt<16>[48]}[2] @[bram.scala 89:30]
    node _T = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[0] <= _T @[bram.scala 89:30]
    node _T_1 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[1] <= _T_1 @[bram.scala 89:30]
    node _T_2 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[2] <= _T_2 @[bram.scala 89:30]
    node _T_3 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[3] <= _T_3 @[bram.scala 89:30]
    node _T_4 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[4] <= _T_4 @[bram.scala 89:30]
    node _T_5 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[5] <= _T_5 @[bram.scala 89:30]
    node _T_6 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[6] <= _T_6 @[bram.scala 89:30]
    node _T_7 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[7] <= _T_7 @[bram.scala 89:30]
    node _T_8 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[8] <= _T_8 @[bram.scala 89:30]
    node _T_9 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[9] <= _T_9 @[bram.scala 89:30]
    node _T_10 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[10] <= _T_10 @[bram.scala 89:30]
    node _T_11 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[11] <= _T_11 @[bram.scala 89:30]
    node _T_12 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[12] <= _T_12 @[bram.scala 89:30]
    node _T_13 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[13] <= _T_13 @[bram.scala 89:30]
    node _T_14 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[14] <= _T_14 @[bram.scala 89:30]
    node _T_15 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[15] <= _T_15 @[bram.scala 89:30]
    node _T_16 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[16] <= _T_16 @[bram.scala 89:30]
    node _T_17 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[17] <= _T_17 @[bram.scala 89:30]
    node _T_18 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[18] <= _T_18 @[bram.scala 89:30]
    node _T_19 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[19] <= _T_19 @[bram.scala 89:30]
    node _T_20 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[20] <= _T_20 @[bram.scala 89:30]
    node _T_21 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[21] <= _T_21 @[bram.scala 89:30]
    node _T_22 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[22] <= _T_22 @[bram.scala 89:30]
    node _T_23 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[23] <= _T_23 @[bram.scala 89:30]
    node _T_24 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[24] <= _T_24 @[bram.scala 89:30]
    node _T_25 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[25] <= _T_25 @[bram.scala 89:30]
    node _T_26 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[26] <= _T_26 @[bram.scala 89:30]
    node _T_27 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[27] <= _T_27 @[bram.scala 89:30]
    node _T_28 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[28] <= _T_28 @[bram.scala 89:30]
    node _T_29 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[29] <= _T_29 @[bram.scala 89:30]
    node _T_30 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[30] <= _T_30 @[bram.scala 89:30]
    node _T_31 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[31] <= _T_31 @[bram.scala 89:30]
    node _T_32 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[32] <= _T_32 @[bram.scala 89:30]
    node _T_33 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[33] <= _T_33 @[bram.scala 89:30]
    node _T_34 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[34] <= _T_34 @[bram.scala 89:30]
    node _T_35 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[35] <= _T_35 @[bram.scala 89:30]
    node _T_36 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[36] <= _T_36 @[bram.scala 89:30]
    node _T_37 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[37] <= _T_37 @[bram.scala 89:30]
    node _T_38 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[38] <= _T_38 @[bram.scala 89:30]
    node _T_39 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[39] <= _T_39 @[bram.scala 89:30]
    node _T_40 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[40] <= _T_40 @[bram.scala 89:30]
    node _T_41 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[41] <= _T_41 @[bram.scala 89:30]
    node _T_42 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[42] <= _T_42 @[bram.scala 89:30]
    node _T_43 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[43] <= _T_43 @[bram.scala 89:30]
    node _T_44 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[44] <= _T_44 @[bram.scala 89:30]
    node _T_45 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[45] <= _T_45 @[bram.scala 89:30]
    node _T_46 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[46] <= _T_46 @[bram.scala 89:30]
    node _T_47 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[0].data[47] <= _T_47 @[bram.scala 89:30]
    node _T_48 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[0] <= _T_48 @[bram.scala 89:30]
    node _T_49 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[1] <= _T_49 @[bram.scala 89:30]
    node _T_50 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[2] <= _T_50 @[bram.scala 89:30]
    node _T_51 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[3] <= _T_51 @[bram.scala 89:30]
    node _T_52 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[4] <= _T_52 @[bram.scala 89:30]
    node _T_53 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[5] <= _T_53 @[bram.scala 89:30]
    node _T_54 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[6] <= _T_54 @[bram.scala 89:30]
    node _T_55 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[7] <= _T_55 @[bram.scala 89:30]
    node _T_56 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[8] <= _T_56 @[bram.scala 89:30]
    node _T_57 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[9] <= _T_57 @[bram.scala 89:30]
    node _T_58 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[10] <= _T_58 @[bram.scala 89:30]
    node _T_59 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[11] <= _T_59 @[bram.scala 89:30]
    node _T_60 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[12] <= _T_60 @[bram.scala 89:30]
    node _T_61 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[13] <= _T_61 @[bram.scala 89:30]
    node _T_62 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[14] <= _T_62 @[bram.scala 89:30]
    node _T_63 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[15] <= _T_63 @[bram.scala 89:30]
    node _T_64 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[16] <= _T_64 @[bram.scala 89:30]
    node _T_65 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[17] <= _T_65 @[bram.scala 89:30]
    node _T_66 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[18] <= _T_66 @[bram.scala 89:30]
    node _T_67 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[19] <= _T_67 @[bram.scala 89:30]
    node _T_68 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[20] <= _T_68 @[bram.scala 89:30]
    node _T_69 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[21] <= _T_69 @[bram.scala 89:30]
    node _T_70 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[22] <= _T_70 @[bram.scala 89:30]
    node _T_71 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[23] <= _T_71 @[bram.scala 89:30]
    node _T_72 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[24] <= _T_72 @[bram.scala 89:30]
    node _T_73 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[25] <= _T_73 @[bram.scala 89:30]
    node _T_74 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[26] <= _T_74 @[bram.scala 89:30]
    node _T_75 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[27] <= _T_75 @[bram.scala 89:30]
    node _T_76 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[28] <= _T_76 @[bram.scala 89:30]
    node _T_77 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[29] <= _T_77 @[bram.scala 89:30]
    node _T_78 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[30] <= _T_78 @[bram.scala 89:30]
    node _T_79 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[31] <= _T_79 @[bram.scala 89:30]
    node _T_80 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[32] <= _T_80 @[bram.scala 89:30]
    node _T_81 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[33] <= _T_81 @[bram.scala 89:30]
    node _T_82 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[34] <= _T_82 @[bram.scala 89:30]
    node _T_83 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[35] <= _T_83 @[bram.scala 89:30]
    node _T_84 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[36] <= _T_84 @[bram.scala 89:30]
    node _T_85 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[37] <= _T_85 @[bram.scala 89:30]
    node _T_86 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[38] <= _T_86 @[bram.scala 89:30]
    node _T_87 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[39] <= _T_87 @[bram.scala 89:30]
    node _T_88 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[40] <= _T_88 @[bram.scala 89:30]
    node _T_89 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[41] <= _T_89 @[bram.scala 89:30]
    node _T_90 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[42] <= _T_90 @[bram.scala 89:30]
    node _T_91 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[43] <= _T_91 @[bram.scala 89:30]
    node _T_92 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[44] <= _T_92 @[bram.scala 89:30]
    node _T_93 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[45] <= _T_93 @[bram.scala 89:30]
    node _T_94 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[46] <= _T_94 @[bram.scala 89:30]
    node _T_95 = asSInt(UInt<16>("h00")) @[bram.scala 89:30]
    _WIRE[1].data[47] <= _T_95 @[bram.scala 89:30]
    io.rd_big[0].data[0] <= _WIRE[0].data[0] @[bram.scala 89:15]
    io.rd_big[0].data[1] <= _WIRE[0].data[1] @[bram.scala 89:15]
    io.rd_big[0].data[2] <= _WIRE[0].data[2] @[bram.scala 89:15]
    io.rd_big[0].data[3] <= _WIRE[0].data[3] @[bram.scala 89:15]
    io.rd_big[0].data[4] <= _WIRE[0].data[4] @[bram.scala 89:15]
    io.rd_big[0].data[5] <= _WIRE[0].data[5] @[bram.scala 89:15]
    io.rd_big[0].data[6] <= _WIRE[0].data[6] @[bram.scala 89:15]
    io.rd_big[0].data[7] <= _WIRE[0].data[7] @[bram.scala 89:15]
    io.rd_big[0].data[8] <= _WIRE[0].data[8] @[bram.scala 89:15]
    io.rd_big[0].data[9] <= _WIRE[0].data[9] @[bram.scala 89:15]
    io.rd_big[0].data[10] <= _WIRE[0].data[10] @[bram.scala 89:15]
    io.rd_big[0].data[11] <= _WIRE[0].data[11] @[bram.scala 89:15]
    io.rd_big[0].data[12] <= _WIRE[0].data[12] @[bram.scala 89:15]
    io.rd_big[0].data[13] <= _WIRE[0].data[13] @[bram.scala 89:15]
    io.rd_big[0].data[14] <= _WIRE[0].data[14] @[bram.scala 89:15]
    io.rd_big[0].data[15] <= _WIRE[0].data[15] @[bram.scala 89:15]
    io.rd_big[0].data[16] <= _WIRE[0].data[16] @[bram.scala 89:15]
    io.rd_big[0].data[17] <= _WIRE[0].data[17] @[bram.scala 89:15]
    io.rd_big[0].data[18] <= _WIRE[0].data[18] @[bram.scala 89:15]
    io.rd_big[0].data[19] <= _WIRE[0].data[19] @[bram.scala 89:15]
    io.rd_big[0].data[20] <= _WIRE[0].data[20] @[bram.scala 89:15]
    io.rd_big[0].data[21] <= _WIRE[0].data[21] @[bram.scala 89:15]
    io.rd_big[0].data[22] <= _WIRE[0].data[22] @[bram.scala 89:15]
    io.rd_big[0].data[23] <= _WIRE[0].data[23] @[bram.scala 89:15]
    io.rd_big[0].data[24] <= _WIRE[0].data[24] @[bram.scala 89:15]
    io.rd_big[0].data[25] <= _WIRE[0].data[25] @[bram.scala 89:15]
    io.rd_big[0].data[26] <= _WIRE[0].data[26] @[bram.scala 89:15]
    io.rd_big[0].data[27] <= _WIRE[0].data[27] @[bram.scala 89:15]
    io.rd_big[0].data[28] <= _WIRE[0].data[28] @[bram.scala 89:15]
    io.rd_big[0].data[29] <= _WIRE[0].data[29] @[bram.scala 89:15]
    io.rd_big[0].data[30] <= _WIRE[0].data[30] @[bram.scala 89:15]
    io.rd_big[0].data[31] <= _WIRE[0].data[31] @[bram.scala 89:15]
    io.rd_big[0].data[32] <= _WIRE[0].data[32] @[bram.scala 89:15]
    io.rd_big[0].data[33] <= _WIRE[0].data[33] @[bram.scala 89:15]
    io.rd_big[0].data[34] <= _WIRE[0].data[34] @[bram.scala 89:15]
    io.rd_big[0].data[35] <= _WIRE[0].data[35] @[bram.scala 89:15]
    io.rd_big[0].data[36] <= _WIRE[0].data[36] @[bram.scala 89:15]
    io.rd_big[0].data[37] <= _WIRE[0].data[37] @[bram.scala 89:15]
    io.rd_big[0].data[38] <= _WIRE[0].data[38] @[bram.scala 89:15]
    io.rd_big[0].data[39] <= _WIRE[0].data[39] @[bram.scala 89:15]
    io.rd_big[0].data[40] <= _WIRE[0].data[40] @[bram.scala 89:15]
    io.rd_big[0].data[41] <= _WIRE[0].data[41] @[bram.scala 89:15]
    io.rd_big[0].data[42] <= _WIRE[0].data[42] @[bram.scala 89:15]
    io.rd_big[0].data[43] <= _WIRE[0].data[43] @[bram.scala 89:15]
    io.rd_big[0].data[44] <= _WIRE[0].data[44] @[bram.scala 89:15]
    io.rd_big[0].data[45] <= _WIRE[0].data[45] @[bram.scala 89:15]
    io.rd_big[0].data[46] <= _WIRE[0].data[46] @[bram.scala 89:15]
    io.rd_big[0].data[47] <= _WIRE[0].data[47] @[bram.scala 89:15]
    io.rd_big[1].data[0] <= _WIRE[1].data[0] @[bram.scala 89:15]
    io.rd_big[1].data[1] <= _WIRE[1].data[1] @[bram.scala 89:15]
    io.rd_big[1].data[2] <= _WIRE[1].data[2] @[bram.scala 89:15]
    io.rd_big[1].data[3] <= _WIRE[1].data[3] @[bram.scala 89:15]
    io.rd_big[1].data[4] <= _WIRE[1].data[4] @[bram.scala 89:15]
    io.rd_big[1].data[5] <= _WIRE[1].data[5] @[bram.scala 89:15]
    io.rd_big[1].data[6] <= _WIRE[1].data[6] @[bram.scala 89:15]
    io.rd_big[1].data[7] <= _WIRE[1].data[7] @[bram.scala 89:15]
    io.rd_big[1].data[8] <= _WIRE[1].data[8] @[bram.scala 89:15]
    io.rd_big[1].data[9] <= _WIRE[1].data[9] @[bram.scala 89:15]
    io.rd_big[1].data[10] <= _WIRE[1].data[10] @[bram.scala 89:15]
    io.rd_big[1].data[11] <= _WIRE[1].data[11] @[bram.scala 89:15]
    io.rd_big[1].data[12] <= _WIRE[1].data[12] @[bram.scala 89:15]
    io.rd_big[1].data[13] <= _WIRE[1].data[13] @[bram.scala 89:15]
    io.rd_big[1].data[14] <= _WIRE[1].data[14] @[bram.scala 89:15]
    io.rd_big[1].data[15] <= _WIRE[1].data[15] @[bram.scala 89:15]
    io.rd_big[1].data[16] <= _WIRE[1].data[16] @[bram.scala 89:15]
    io.rd_big[1].data[17] <= _WIRE[1].data[17] @[bram.scala 89:15]
    io.rd_big[1].data[18] <= _WIRE[1].data[18] @[bram.scala 89:15]
    io.rd_big[1].data[19] <= _WIRE[1].data[19] @[bram.scala 89:15]
    io.rd_big[1].data[20] <= _WIRE[1].data[20] @[bram.scala 89:15]
    io.rd_big[1].data[21] <= _WIRE[1].data[21] @[bram.scala 89:15]
    io.rd_big[1].data[22] <= _WIRE[1].data[22] @[bram.scala 89:15]
    io.rd_big[1].data[23] <= _WIRE[1].data[23] @[bram.scala 89:15]
    io.rd_big[1].data[24] <= _WIRE[1].data[24] @[bram.scala 89:15]
    io.rd_big[1].data[25] <= _WIRE[1].data[25] @[bram.scala 89:15]
    io.rd_big[1].data[26] <= _WIRE[1].data[26] @[bram.scala 89:15]
    io.rd_big[1].data[27] <= _WIRE[1].data[27] @[bram.scala 89:15]
    io.rd_big[1].data[28] <= _WIRE[1].data[28] @[bram.scala 89:15]
    io.rd_big[1].data[29] <= _WIRE[1].data[29] @[bram.scala 89:15]
    io.rd_big[1].data[30] <= _WIRE[1].data[30] @[bram.scala 89:15]
    io.rd_big[1].data[31] <= _WIRE[1].data[31] @[bram.scala 89:15]
    io.rd_big[1].data[32] <= _WIRE[1].data[32] @[bram.scala 89:15]
    io.rd_big[1].data[33] <= _WIRE[1].data[33] @[bram.scala 89:15]
    io.rd_big[1].data[34] <= _WIRE[1].data[34] @[bram.scala 89:15]
    io.rd_big[1].data[35] <= _WIRE[1].data[35] @[bram.scala 89:15]
    io.rd_big[1].data[36] <= _WIRE[1].data[36] @[bram.scala 89:15]
    io.rd_big[1].data[37] <= _WIRE[1].data[37] @[bram.scala 89:15]
    io.rd_big[1].data[38] <= _WIRE[1].data[38] @[bram.scala 89:15]
    io.rd_big[1].data[39] <= _WIRE[1].data[39] @[bram.scala 89:15]
    io.rd_big[1].data[40] <= _WIRE[1].data[40] @[bram.scala 89:15]
    io.rd_big[1].data[41] <= _WIRE[1].data[41] @[bram.scala 89:15]
    io.rd_big[1].data[42] <= _WIRE[1].data[42] @[bram.scala 89:15]
    io.rd_big[1].data[43] <= _WIRE[1].data[43] @[bram.scala 89:15]
    io.rd_big[1].data[44] <= _WIRE[1].data[44] @[bram.scala 89:15]
    io.rd_big[1].data[45] <= _WIRE[1].data[45] @[bram.scala 89:15]
    io.rd_big[1].data[46] <= _WIRE[1].data[46] @[bram.scala 89:15]
    io.rd_big[1].data[47] <= _WIRE[1].data[47] @[bram.scala 89:15]
    wire _WIRE_1 : {data : SInt<16>[8]}[4][2] @[bram.scala 90:32]
    node _T_96 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][0].data[0] <= _T_96 @[bram.scala 90:32]
    node _T_97 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][0].data[1] <= _T_97 @[bram.scala 90:32]
    node _T_98 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][0].data[2] <= _T_98 @[bram.scala 90:32]
    node _T_99 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][0].data[3] <= _T_99 @[bram.scala 90:32]
    node _T_100 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][0].data[4] <= _T_100 @[bram.scala 90:32]
    node _T_101 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][0].data[5] <= _T_101 @[bram.scala 90:32]
    node _T_102 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][0].data[6] <= _T_102 @[bram.scala 90:32]
    node _T_103 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][0].data[7] <= _T_103 @[bram.scala 90:32]
    node _T_104 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][1].data[0] <= _T_104 @[bram.scala 90:32]
    node _T_105 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][1].data[1] <= _T_105 @[bram.scala 90:32]
    node _T_106 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][1].data[2] <= _T_106 @[bram.scala 90:32]
    node _T_107 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][1].data[3] <= _T_107 @[bram.scala 90:32]
    node _T_108 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][1].data[4] <= _T_108 @[bram.scala 90:32]
    node _T_109 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][1].data[5] <= _T_109 @[bram.scala 90:32]
    node _T_110 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][1].data[6] <= _T_110 @[bram.scala 90:32]
    node _T_111 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][1].data[7] <= _T_111 @[bram.scala 90:32]
    node _T_112 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][2].data[0] <= _T_112 @[bram.scala 90:32]
    node _T_113 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][2].data[1] <= _T_113 @[bram.scala 90:32]
    node _T_114 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][2].data[2] <= _T_114 @[bram.scala 90:32]
    node _T_115 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][2].data[3] <= _T_115 @[bram.scala 90:32]
    node _T_116 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][2].data[4] <= _T_116 @[bram.scala 90:32]
    node _T_117 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][2].data[5] <= _T_117 @[bram.scala 90:32]
    node _T_118 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][2].data[6] <= _T_118 @[bram.scala 90:32]
    node _T_119 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][2].data[7] <= _T_119 @[bram.scala 90:32]
    node _T_120 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][3].data[0] <= _T_120 @[bram.scala 90:32]
    node _T_121 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][3].data[1] <= _T_121 @[bram.scala 90:32]
    node _T_122 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][3].data[2] <= _T_122 @[bram.scala 90:32]
    node _T_123 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][3].data[3] <= _T_123 @[bram.scala 90:32]
    node _T_124 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][3].data[4] <= _T_124 @[bram.scala 90:32]
    node _T_125 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][3].data[5] <= _T_125 @[bram.scala 90:32]
    node _T_126 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][3].data[6] <= _T_126 @[bram.scala 90:32]
    node _T_127 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[0][3].data[7] <= _T_127 @[bram.scala 90:32]
    node _T_128 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][0].data[0] <= _T_128 @[bram.scala 90:32]
    node _T_129 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][0].data[1] <= _T_129 @[bram.scala 90:32]
    node _T_130 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][0].data[2] <= _T_130 @[bram.scala 90:32]
    node _T_131 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][0].data[3] <= _T_131 @[bram.scala 90:32]
    node _T_132 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][0].data[4] <= _T_132 @[bram.scala 90:32]
    node _T_133 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][0].data[5] <= _T_133 @[bram.scala 90:32]
    node _T_134 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][0].data[6] <= _T_134 @[bram.scala 90:32]
    node _T_135 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][0].data[7] <= _T_135 @[bram.scala 90:32]
    node _T_136 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][1].data[0] <= _T_136 @[bram.scala 90:32]
    node _T_137 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][1].data[1] <= _T_137 @[bram.scala 90:32]
    node _T_138 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][1].data[2] <= _T_138 @[bram.scala 90:32]
    node _T_139 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][1].data[3] <= _T_139 @[bram.scala 90:32]
    node _T_140 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][1].data[4] <= _T_140 @[bram.scala 90:32]
    node _T_141 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][1].data[5] <= _T_141 @[bram.scala 90:32]
    node _T_142 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][1].data[6] <= _T_142 @[bram.scala 90:32]
    node _T_143 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][1].data[7] <= _T_143 @[bram.scala 90:32]
    node _T_144 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][2].data[0] <= _T_144 @[bram.scala 90:32]
    node _T_145 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][2].data[1] <= _T_145 @[bram.scala 90:32]
    node _T_146 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][2].data[2] <= _T_146 @[bram.scala 90:32]
    node _T_147 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][2].data[3] <= _T_147 @[bram.scala 90:32]
    node _T_148 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][2].data[4] <= _T_148 @[bram.scala 90:32]
    node _T_149 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][2].data[5] <= _T_149 @[bram.scala 90:32]
    node _T_150 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][2].data[6] <= _T_150 @[bram.scala 90:32]
    node _T_151 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][2].data[7] <= _T_151 @[bram.scala 90:32]
    node _T_152 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][3].data[0] <= _T_152 @[bram.scala 90:32]
    node _T_153 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][3].data[1] <= _T_153 @[bram.scala 90:32]
    node _T_154 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][3].data[2] <= _T_154 @[bram.scala 90:32]
    node _T_155 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][3].data[3] <= _T_155 @[bram.scala 90:32]
    node _T_156 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][3].data[4] <= _T_156 @[bram.scala 90:32]
    node _T_157 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][3].data[5] <= _T_157 @[bram.scala 90:32]
    node _T_158 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][3].data[6] <= _T_158 @[bram.scala 90:32]
    node _T_159 = asSInt(UInt<16>("h00")) @[bram.scala 90:32]
    _WIRE_1[1][3].data[7] <= _T_159 @[bram.scala 90:32]
    io.rd_small[0][0].data[0] <= _WIRE_1[0][0].data[0] @[bram.scala 90:17]
    io.rd_small[0][0].data[1] <= _WIRE_1[0][0].data[1] @[bram.scala 90:17]
    io.rd_small[0][0].data[2] <= _WIRE_1[0][0].data[2] @[bram.scala 90:17]
    io.rd_small[0][0].data[3] <= _WIRE_1[0][0].data[3] @[bram.scala 90:17]
    io.rd_small[0][0].data[4] <= _WIRE_1[0][0].data[4] @[bram.scala 90:17]
    io.rd_small[0][0].data[5] <= _WIRE_1[0][0].data[5] @[bram.scala 90:17]
    io.rd_small[0][0].data[6] <= _WIRE_1[0][0].data[6] @[bram.scala 90:17]
    io.rd_small[0][0].data[7] <= _WIRE_1[0][0].data[7] @[bram.scala 90:17]
    io.rd_small[0][1].data[0] <= _WIRE_1[0][1].data[0] @[bram.scala 90:17]
    io.rd_small[0][1].data[1] <= _WIRE_1[0][1].data[1] @[bram.scala 90:17]
    io.rd_small[0][1].data[2] <= _WIRE_1[0][1].data[2] @[bram.scala 90:17]
    io.rd_small[0][1].data[3] <= _WIRE_1[0][1].data[3] @[bram.scala 90:17]
    io.rd_small[0][1].data[4] <= _WIRE_1[0][1].data[4] @[bram.scala 90:17]
    io.rd_small[0][1].data[5] <= _WIRE_1[0][1].data[5] @[bram.scala 90:17]
    io.rd_small[0][1].data[6] <= _WIRE_1[0][1].data[6] @[bram.scala 90:17]
    io.rd_small[0][1].data[7] <= _WIRE_1[0][1].data[7] @[bram.scala 90:17]
    io.rd_small[0][2].data[0] <= _WIRE_1[0][2].data[0] @[bram.scala 90:17]
    io.rd_small[0][2].data[1] <= _WIRE_1[0][2].data[1] @[bram.scala 90:17]
    io.rd_small[0][2].data[2] <= _WIRE_1[0][2].data[2] @[bram.scala 90:17]
    io.rd_small[0][2].data[3] <= _WIRE_1[0][2].data[3] @[bram.scala 90:17]
    io.rd_small[0][2].data[4] <= _WIRE_1[0][2].data[4] @[bram.scala 90:17]
    io.rd_small[0][2].data[5] <= _WIRE_1[0][2].data[5] @[bram.scala 90:17]
    io.rd_small[0][2].data[6] <= _WIRE_1[0][2].data[6] @[bram.scala 90:17]
    io.rd_small[0][2].data[7] <= _WIRE_1[0][2].data[7] @[bram.scala 90:17]
    io.rd_small[0][3].data[0] <= _WIRE_1[0][3].data[0] @[bram.scala 90:17]
    io.rd_small[0][3].data[1] <= _WIRE_1[0][3].data[1] @[bram.scala 90:17]
    io.rd_small[0][3].data[2] <= _WIRE_1[0][3].data[2] @[bram.scala 90:17]
    io.rd_small[0][3].data[3] <= _WIRE_1[0][3].data[3] @[bram.scala 90:17]
    io.rd_small[0][3].data[4] <= _WIRE_1[0][3].data[4] @[bram.scala 90:17]
    io.rd_small[0][3].data[5] <= _WIRE_1[0][3].data[5] @[bram.scala 90:17]
    io.rd_small[0][3].data[6] <= _WIRE_1[0][3].data[6] @[bram.scala 90:17]
    io.rd_small[0][3].data[7] <= _WIRE_1[0][3].data[7] @[bram.scala 90:17]
    io.rd_small[1][0].data[0] <= _WIRE_1[1][0].data[0] @[bram.scala 90:17]
    io.rd_small[1][0].data[1] <= _WIRE_1[1][0].data[1] @[bram.scala 90:17]
    io.rd_small[1][0].data[2] <= _WIRE_1[1][0].data[2] @[bram.scala 90:17]
    io.rd_small[1][0].data[3] <= _WIRE_1[1][0].data[3] @[bram.scala 90:17]
    io.rd_small[1][0].data[4] <= _WIRE_1[1][0].data[4] @[bram.scala 90:17]
    io.rd_small[1][0].data[5] <= _WIRE_1[1][0].data[5] @[bram.scala 90:17]
    io.rd_small[1][0].data[6] <= _WIRE_1[1][0].data[6] @[bram.scala 90:17]
    io.rd_small[1][0].data[7] <= _WIRE_1[1][0].data[7] @[bram.scala 90:17]
    io.rd_small[1][1].data[0] <= _WIRE_1[1][1].data[0] @[bram.scala 90:17]
    io.rd_small[1][1].data[1] <= _WIRE_1[1][1].data[1] @[bram.scala 90:17]
    io.rd_small[1][1].data[2] <= _WIRE_1[1][1].data[2] @[bram.scala 90:17]
    io.rd_small[1][1].data[3] <= _WIRE_1[1][1].data[3] @[bram.scala 90:17]
    io.rd_small[1][1].data[4] <= _WIRE_1[1][1].data[4] @[bram.scala 90:17]
    io.rd_small[1][1].data[5] <= _WIRE_1[1][1].data[5] @[bram.scala 90:17]
    io.rd_small[1][1].data[6] <= _WIRE_1[1][1].data[6] @[bram.scala 90:17]
    io.rd_small[1][1].data[7] <= _WIRE_1[1][1].data[7] @[bram.scala 90:17]
    io.rd_small[1][2].data[0] <= _WIRE_1[1][2].data[0] @[bram.scala 90:17]
    io.rd_small[1][2].data[1] <= _WIRE_1[1][2].data[1] @[bram.scala 90:17]
    io.rd_small[1][2].data[2] <= _WIRE_1[1][2].data[2] @[bram.scala 90:17]
    io.rd_small[1][2].data[3] <= _WIRE_1[1][2].data[3] @[bram.scala 90:17]
    io.rd_small[1][2].data[4] <= _WIRE_1[1][2].data[4] @[bram.scala 90:17]
    io.rd_small[1][2].data[5] <= _WIRE_1[1][2].data[5] @[bram.scala 90:17]
    io.rd_small[1][2].data[6] <= _WIRE_1[1][2].data[6] @[bram.scala 90:17]
    io.rd_small[1][2].data[7] <= _WIRE_1[1][2].data[7] @[bram.scala 90:17]
    io.rd_small[1][3].data[0] <= _WIRE_1[1][3].data[0] @[bram.scala 90:17]
    io.rd_small[1][3].data[1] <= _WIRE_1[1][3].data[1] @[bram.scala 90:17]
    io.rd_small[1][3].data[2] <= _WIRE_1[1][3].data[2] @[bram.scala 90:17]
    io.rd_small[1][3].data[3] <= _WIRE_1[1][3].data[3] @[bram.scala 90:17]
    io.rd_small[1][3].data[4] <= _WIRE_1[1][3].data[4] @[bram.scala 90:17]
    io.rd_small[1][3].data[5] <= _WIRE_1[1][3].data[5] @[bram.scala 90:17]
    io.rd_small[1][3].data[6] <= _WIRE_1[1][3].data[6] @[bram.scala 90:17]
    io.rd_small[1][3].data[7] <= _WIRE_1[1][3].data[7] @[bram.scala 90:17]
    wire big_banks : {flip addra : UInt<10>, flip clka : Clock, flip dina : UInt<768>, douta : UInt<768>, flip wea : UInt<1>, flip addrb : UInt<10>, flip clkb : Clock, flip dinb : UInt<768>, doutb : UInt<768>, flip web : UInt<1>}[2] @[bram.scala 93:25]
    wire small_banks : {flip addra : UInt<9>, flip clka : Clock, flip dina : UInt<128>, douta : UInt<128>, flip wea : UInt<1>, flip addrb : UInt<9>, flip clkb : Clock, flip dinb : UInt<128>, doutb : UInt<128>, flip web : UInt<1>}[8] @[bram.scala 94:27]
    inst bram_big_bank0 of bram_big_bank0 @[bram.scala 96:27]
    bram_big_bank0.web is invalid
    bram_big_bank0.doutb is invalid
    bram_big_bank0.dinb is invalid
    bram_big_bank0.clkb is invalid
    bram_big_bank0.addrb is invalid
    bram_big_bank0.wea is invalid
    bram_big_bank0.douta is invalid
    bram_big_bank0.dina is invalid
    bram_big_bank0.clka is invalid
    bram_big_bank0.addra is invalid
    big_banks[0].web <= bram_big_bank0.web @[bram.scala 96:18]
    big_banks[0].doutb <= bram_big_bank0.doutb @[bram.scala 96:18]
    big_banks[0].dinb <= bram_big_bank0.dinb @[bram.scala 96:18]
    big_banks[0].clkb <= bram_big_bank0.clkb @[bram.scala 96:18]
    big_banks[0].addrb <= bram_big_bank0.addrb @[bram.scala 96:18]
    big_banks[0].wea <= bram_big_bank0.wea @[bram.scala 96:18]
    big_banks[0].douta <= bram_big_bank0.douta @[bram.scala 96:18]
    big_banks[0].dina <= bram_big_bank0.dina @[bram.scala 96:18]
    big_banks[0].clka <= bram_big_bank0.clka @[bram.scala 96:18]
    big_banks[0].addra <= bram_big_bank0.addra @[bram.scala 96:18]
    inst bram_big_bank0_1 of bram_big_bank0_1 @[bram.scala 97:27]
    bram_big_bank0_1.web is invalid
    bram_big_bank0_1.doutb is invalid
    bram_big_bank0_1.dinb is invalid
    bram_big_bank0_1.clkb is invalid
    bram_big_bank0_1.addrb is invalid
    bram_big_bank0_1.wea is invalid
    bram_big_bank0_1.douta is invalid
    bram_big_bank0_1.dina is invalid
    bram_big_bank0_1.clka is invalid
    bram_big_bank0_1.addra is invalid
    big_banks[1].web <= bram_big_bank0_1.web @[bram.scala 97:18]
    big_banks[1].doutb <= bram_big_bank0_1.doutb @[bram.scala 97:18]
    big_banks[1].dinb <= bram_big_bank0_1.dinb @[bram.scala 97:18]
    big_banks[1].clkb <= bram_big_bank0_1.clkb @[bram.scala 97:18]
    big_banks[1].addrb <= bram_big_bank0_1.addrb @[bram.scala 97:18]
    big_banks[1].wea <= bram_big_bank0_1.wea @[bram.scala 97:18]
    big_banks[1].douta <= bram_big_bank0_1.douta @[bram.scala 97:18]
    big_banks[1].dina <= bram_big_bank0_1.dina @[bram.scala 97:18]
    big_banks[1].clka <= bram_big_bank0_1.clka @[bram.scala 97:18]
    big_banks[1].addra <= bram_big_bank0_1.addra @[bram.scala 97:18]
    inst bram_small_bank0 of bram_small_bank0 @[bram.scala 99:29]
    bram_small_bank0.web is invalid
    bram_small_bank0.doutb is invalid
    bram_small_bank0.dinb is invalid
    bram_small_bank0.clkb is invalid
    bram_small_bank0.addrb is invalid
    bram_small_bank0.wea is invalid
    bram_small_bank0.douta is invalid
    bram_small_bank0.dina is invalid
    bram_small_bank0.clka is invalid
    bram_small_bank0.addra is invalid
    small_banks[0].web <= bram_small_bank0.web @[bram.scala 99:20]
    small_banks[0].doutb <= bram_small_bank0.doutb @[bram.scala 99:20]
    small_banks[0].dinb <= bram_small_bank0.dinb @[bram.scala 99:20]
    small_banks[0].clkb <= bram_small_bank0.clkb @[bram.scala 99:20]
    small_banks[0].addrb <= bram_small_bank0.addrb @[bram.scala 99:20]
    small_banks[0].wea <= bram_small_bank0.wea @[bram.scala 99:20]
    small_banks[0].douta <= bram_small_bank0.douta @[bram.scala 99:20]
    small_banks[0].dina <= bram_small_bank0.dina @[bram.scala 99:20]
    small_banks[0].clka <= bram_small_bank0.clka @[bram.scala 99:20]
    small_banks[0].addra <= bram_small_bank0.addra @[bram.scala 99:20]
    inst bram_small_bank1 of bram_small_bank1 @[bram.scala 100:29]
    bram_small_bank1.web is invalid
    bram_small_bank1.doutb is invalid
    bram_small_bank1.dinb is invalid
    bram_small_bank1.clkb is invalid
    bram_small_bank1.addrb is invalid
    bram_small_bank1.wea is invalid
    bram_small_bank1.douta is invalid
    bram_small_bank1.dina is invalid
    bram_small_bank1.clka is invalid
    bram_small_bank1.addra is invalid
    small_banks[1].web <= bram_small_bank1.web @[bram.scala 100:20]
    small_banks[1].doutb <= bram_small_bank1.doutb @[bram.scala 100:20]
    small_banks[1].dinb <= bram_small_bank1.dinb @[bram.scala 100:20]
    small_banks[1].clkb <= bram_small_bank1.clkb @[bram.scala 100:20]
    small_banks[1].addrb <= bram_small_bank1.addrb @[bram.scala 100:20]
    small_banks[1].wea <= bram_small_bank1.wea @[bram.scala 100:20]
    small_banks[1].douta <= bram_small_bank1.douta @[bram.scala 100:20]
    small_banks[1].dina <= bram_small_bank1.dina @[bram.scala 100:20]
    small_banks[1].clka <= bram_small_bank1.clka @[bram.scala 100:20]
    small_banks[1].addra <= bram_small_bank1.addra @[bram.scala 100:20]
    inst bram_small_bank2 of bram_small_bank2 @[bram.scala 101:29]
    bram_small_bank2.web is invalid
    bram_small_bank2.doutb is invalid
    bram_small_bank2.dinb is invalid
    bram_small_bank2.clkb is invalid
    bram_small_bank2.addrb is invalid
    bram_small_bank2.wea is invalid
    bram_small_bank2.douta is invalid
    bram_small_bank2.dina is invalid
    bram_small_bank2.clka is invalid
    bram_small_bank2.addra is invalid
    small_banks[2].web <= bram_small_bank2.web @[bram.scala 101:20]
    small_banks[2].doutb <= bram_small_bank2.doutb @[bram.scala 101:20]
    small_banks[2].dinb <= bram_small_bank2.dinb @[bram.scala 101:20]
    small_banks[2].clkb <= bram_small_bank2.clkb @[bram.scala 101:20]
    small_banks[2].addrb <= bram_small_bank2.addrb @[bram.scala 101:20]
    small_banks[2].wea <= bram_small_bank2.wea @[bram.scala 101:20]
    small_banks[2].douta <= bram_small_bank2.douta @[bram.scala 101:20]
    small_banks[2].dina <= bram_small_bank2.dina @[bram.scala 101:20]
    small_banks[2].clka <= bram_small_bank2.clka @[bram.scala 101:20]
    small_banks[2].addra <= bram_small_bank2.addra @[bram.scala 101:20]
    inst bram_small_bank3 of bram_small_bank3 @[bram.scala 102:29]
    bram_small_bank3.web is invalid
    bram_small_bank3.doutb is invalid
    bram_small_bank3.dinb is invalid
    bram_small_bank3.clkb is invalid
    bram_small_bank3.addrb is invalid
    bram_small_bank3.wea is invalid
    bram_small_bank3.douta is invalid
    bram_small_bank3.dina is invalid
    bram_small_bank3.clka is invalid
    bram_small_bank3.addra is invalid
    small_banks[3].web <= bram_small_bank3.web @[bram.scala 102:20]
    small_banks[3].doutb <= bram_small_bank3.doutb @[bram.scala 102:20]
    small_banks[3].dinb <= bram_small_bank3.dinb @[bram.scala 102:20]
    small_banks[3].clkb <= bram_small_bank3.clkb @[bram.scala 102:20]
    small_banks[3].addrb <= bram_small_bank3.addrb @[bram.scala 102:20]
    small_banks[3].wea <= bram_small_bank3.wea @[bram.scala 102:20]
    small_banks[3].douta <= bram_small_bank3.douta @[bram.scala 102:20]
    small_banks[3].dina <= bram_small_bank3.dina @[bram.scala 102:20]
    small_banks[3].clka <= bram_small_bank3.clka @[bram.scala 102:20]
    small_banks[3].addra <= bram_small_bank3.addra @[bram.scala 102:20]
    inst bram_small_bank4 of bram_small_bank4 @[bram.scala 103:29]
    bram_small_bank4.web is invalid
    bram_small_bank4.doutb is invalid
    bram_small_bank4.dinb is invalid
    bram_small_bank4.clkb is invalid
    bram_small_bank4.addrb is invalid
    bram_small_bank4.wea is invalid
    bram_small_bank4.douta is invalid
    bram_small_bank4.dina is invalid
    bram_small_bank4.clka is invalid
    bram_small_bank4.addra is invalid
    small_banks[4].web <= bram_small_bank4.web @[bram.scala 103:20]
    small_banks[4].doutb <= bram_small_bank4.doutb @[bram.scala 103:20]
    small_banks[4].dinb <= bram_small_bank4.dinb @[bram.scala 103:20]
    small_banks[4].clkb <= bram_small_bank4.clkb @[bram.scala 103:20]
    small_banks[4].addrb <= bram_small_bank4.addrb @[bram.scala 103:20]
    small_banks[4].wea <= bram_small_bank4.wea @[bram.scala 103:20]
    small_banks[4].douta <= bram_small_bank4.douta @[bram.scala 103:20]
    small_banks[4].dina <= bram_small_bank4.dina @[bram.scala 103:20]
    small_banks[4].clka <= bram_small_bank4.clka @[bram.scala 103:20]
    small_banks[4].addra <= bram_small_bank4.addra @[bram.scala 103:20]
    inst bram_small_bank5 of bram_small_bank5 @[bram.scala 104:29]
    bram_small_bank5.web is invalid
    bram_small_bank5.doutb is invalid
    bram_small_bank5.dinb is invalid
    bram_small_bank5.clkb is invalid
    bram_small_bank5.addrb is invalid
    bram_small_bank5.wea is invalid
    bram_small_bank5.douta is invalid
    bram_small_bank5.dina is invalid
    bram_small_bank5.clka is invalid
    bram_small_bank5.addra is invalid
    small_banks[5].web <= bram_small_bank5.web @[bram.scala 104:20]
    small_banks[5].doutb <= bram_small_bank5.doutb @[bram.scala 104:20]
    small_banks[5].dinb <= bram_small_bank5.dinb @[bram.scala 104:20]
    small_banks[5].clkb <= bram_small_bank5.clkb @[bram.scala 104:20]
    small_banks[5].addrb <= bram_small_bank5.addrb @[bram.scala 104:20]
    small_banks[5].wea <= bram_small_bank5.wea @[bram.scala 104:20]
    small_banks[5].douta <= bram_small_bank5.douta @[bram.scala 104:20]
    small_banks[5].dina <= bram_small_bank5.dina @[bram.scala 104:20]
    small_banks[5].clka <= bram_small_bank5.clka @[bram.scala 104:20]
    small_banks[5].addra <= bram_small_bank5.addra @[bram.scala 104:20]
    inst bram_small_bank6 of bram_small_bank6 @[bram.scala 105:29]
    bram_small_bank6.web is invalid
    bram_small_bank6.doutb is invalid
    bram_small_bank6.dinb is invalid
    bram_small_bank6.clkb is invalid
    bram_small_bank6.addrb is invalid
    bram_small_bank6.wea is invalid
    bram_small_bank6.douta is invalid
    bram_small_bank6.dina is invalid
    bram_small_bank6.clka is invalid
    bram_small_bank6.addra is invalid
    small_banks[6].web <= bram_small_bank6.web @[bram.scala 105:20]
    small_banks[6].doutb <= bram_small_bank6.doutb @[bram.scala 105:20]
    small_banks[6].dinb <= bram_small_bank6.dinb @[bram.scala 105:20]
    small_banks[6].clkb <= bram_small_bank6.clkb @[bram.scala 105:20]
    small_banks[6].addrb <= bram_small_bank6.addrb @[bram.scala 105:20]
    small_banks[6].wea <= bram_small_bank6.wea @[bram.scala 105:20]
    small_banks[6].douta <= bram_small_bank6.douta @[bram.scala 105:20]
    small_banks[6].dina <= bram_small_bank6.dina @[bram.scala 105:20]
    small_banks[6].clka <= bram_small_bank6.clka @[bram.scala 105:20]
    small_banks[6].addra <= bram_small_bank6.addra @[bram.scala 105:20]
    inst bram_small_bank7 of bram_small_bank7 @[bram.scala 106:29]
    bram_small_bank7.web is invalid
    bram_small_bank7.doutb is invalid
    bram_small_bank7.dinb is invalid
    bram_small_bank7.clkb is invalid
    bram_small_bank7.addrb is invalid
    bram_small_bank7.wea is invalid
    bram_small_bank7.douta is invalid
    bram_small_bank7.dina is invalid
    bram_small_bank7.clka is invalid
    bram_small_bank7.addra is invalid
    small_banks[7].web <= bram_small_bank7.web @[bram.scala 106:20]
    small_banks[7].doutb <= bram_small_bank7.doutb @[bram.scala 106:20]
    small_banks[7].dinb <= bram_small_bank7.dinb @[bram.scala 106:20]
    small_banks[7].clkb <= bram_small_bank7.clkb @[bram.scala 106:20]
    small_banks[7].addrb <= bram_small_bank7.addrb @[bram.scala 106:20]
    small_banks[7].wea <= bram_small_bank7.wea @[bram.scala 106:20]
    small_banks[7].douta <= bram_small_bank7.douta @[bram.scala 106:20]
    small_banks[7].dina <= bram_small_bank7.dina @[bram.scala 106:20]
    small_banks[7].clka <= bram_small_bank7.clka @[bram.scala 106:20]
    small_banks[7].addra <= bram_small_bank7.addra @[bram.scala 106:20]
    big_banks[0].clka <= clock @[bram.scala 109:27]
    big_banks[0].clkb <= clock @[bram.scala 110:27]
    big_banks[0].wea <= UInt<1>("h00") @[bram.scala 111:26]
    big_banks[0].web <= UInt<1>("h00") @[bram.scala 112:26]
    big_banks[1].clka <= clock @[bram.scala 109:27]
    big_banks[1].clkb <= clock @[bram.scala 110:27]
    big_banks[1].wea <= UInt<1>("h00") @[bram.scala 111:26]
    big_banks[1].web <= UInt<1>("h00") @[bram.scala 112:26]
    small_banks[0].clka <= clock @[bram.scala 116:29]
    small_banks[0].clkb <= clock @[bram.scala 117:29]
    small_banks[0].wea <= UInt<1>("h00") @[bram.scala 118:28]
    small_banks[0].web <= UInt<1>("h00") @[bram.scala 119:28]
    small_banks[1].clka <= clock @[bram.scala 116:29]
    small_banks[1].clkb <= clock @[bram.scala 117:29]
    small_banks[1].wea <= UInt<1>("h00") @[bram.scala 118:28]
    small_banks[1].web <= UInt<1>("h00") @[bram.scala 119:28]
    small_banks[2].clka <= clock @[bram.scala 116:29]
    small_banks[2].clkb <= clock @[bram.scala 117:29]
    small_banks[2].wea <= UInt<1>("h00") @[bram.scala 118:28]
    small_banks[2].web <= UInt<1>("h00") @[bram.scala 119:28]
    small_banks[3].clka <= clock @[bram.scala 116:29]
    small_banks[3].clkb <= clock @[bram.scala 117:29]
    small_banks[3].wea <= UInt<1>("h00") @[bram.scala 118:28]
    small_banks[3].web <= UInt<1>("h00") @[bram.scala 119:28]
    small_banks[4].clka <= clock @[bram.scala 116:29]
    small_banks[4].clkb <= clock @[bram.scala 117:29]
    small_banks[4].wea <= UInt<1>("h00") @[bram.scala 118:28]
    small_banks[4].web <= UInt<1>("h00") @[bram.scala 119:28]
    small_banks[5].clka <= clock @[bram.scala 116:29]
    small_banks[5].clkb <= clock @[bram.scala 117:29]
    small_banks[5].wea <= UInt<1>("h00") @[bram.scala 118:28]
    small_banks[5].web <= UInt<1>("h00") @[bram.scala 119:28]
    small_banks[6].clka <= clock @[bram.scala 116:29]
    small_banks[6].clkb <= clock @[bram.scala 117:29]
    small_banks[6].wea <= UInt<1>("h00") @[bram.scala 118:28]
    small_banks[6].web <= UInt<1>("h00") @[bram.scala 119:28]
    small_banks[7].clka <= clock @[bram.scala 116:29]
    small_banks[7].clkb <= clock @[bram.scala 117:29]
    small_banks[7].wea <= UInt<1>("h00") @[bram.scala 118:28]
    small_banks[7].web <= UInt<1>("h00") @[bram.scala 119:28]
    reg big_typ : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[bram.scala 122:26]
    node _T_160 = eq(io.rd_addr1.addrs[0].bank_id, UInt<1>("h00")) @[bram.scala 124:38]
    when _T_160 : @[bram.scala 124:45]
      big_banks[0].addra <= io.rd_addr1.addrs[0].addr @[bram.scala 125:28]
      big_banks[1].addra <= io.rd_addr2.addrs[0].addr @[bram.scala 126:28]
      big_typ <= UInt<1>("h01") @[bram.scala 127:17]
      skip @[bram.scala 124:45]
    else : @[bram.scala 128:16]
      big_banks[1].addra <= io.rd_addr1.addrs[0].addr @[bram.scala 129:28]
      big_banks[0].addra <= io.rd_addr2.addrs[0].addr @[bram.scala 130:28]
      big_typ <= UInt<1>("h00") @[bram.scala 131:17]
      skip @[bram.scala 128:16]
    node _T_161 = eq(big_typ, UInt<1>("h01")) @[bram.scala 134:17]
    when _T_161 : @[bram.scala 134:24]
      wire _io_rd_big_0_WIRE : {data : SInt<16>[48]} @[bram.scala 135:52]
      wire _io_rd_big_0_WIRE_1 : UInt<768>
      _io_rd_big_0_WIRE_1 <= big_banks[0].douta
      node _io_rd_big_0_T = bits(_io_rd_big_0_WIRE_1, 15, 0) @[bram.scala 135:52]
      node _io_rd_big_0_T_1 = asSInt(_io_rd_big_0_T) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[0] <= _io_rd_big_0_T_1 @[bram.scala 135:52]
      node _io_rd_big_0_T_2 = bits(_io_rd_big_0_WIRE_1, 31, 16) @[bram.scala 135:52]
      node _io_rd_big_0_T_3 = asSInt(_io_rd_big_0_T_2) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[1] <= _io_rd_big_0_T_3 @[bram.scala 135:52]
      node _io_rd_big_0_T_4 = bits(_io_rd_big_0_WIRE_1, 47, 32) @[bram.scala 135:52]
      node _io_rd_big_0_T_5 = asSInt(_io_rd_big_0_T_4) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[2] <= _io_rd_big_0_T_5 @[bram.scala 135:52]
      node _io_rd_big_0_T_6 = bits(_io_rd_big_0_WIRE_1, 63, 48) @[bram.scala 135:52]
      node _io_rd_big_0_T_7 = asSInt(_io_rd_big_0_T_6) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[3] <= _io_rd_big_0_T_7 @[bram.scala 135:52]
      node _io_rd_big_0_T_8 = bits(_io_rd_big_0_WIRE_1, 79, 64) @[bram.scala 135:52]
      node _io_rd_big_0_T_9 = asSInt(_io_rd_big_0_T_8) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[4] <= _io_rd_big_0_T_9 @[bram.scala 135:52]
      node _io_rd_big_0_T_10 = bits(_io_rd_big_0_WIRE_1, 95, 80) @[bram.scala 135:52]
      node _io_rd_big_0_T_11 = asSInt(_io_rd_big_0_T_10) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[5] <= _io_rd_big_0_T_11 @[bram.scala 135:52]
      node _io_rd_big_0_T_12 = bits(_io_rd_big_0_WIRE_1, 111, 96) @[bram.scala 135:52]
      node _io_rd_big_0_T_13 = asSInt(_io_rd_big_0_T_12) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[6] <= _io_rd_big_0_T_13 @[bram.scala 135:52]
      node _io_rd_big_0_T_14 = bits(_io_rd_big_0_WIRE_1, 127, 112) @[bram.scala 135:52]
      node _io_rd_big_0_T_15 = asSInt(_io_rd_big_0_T_14) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[7] <= _io_rd_big_0_T_15 @[bram.scala 135:52]
      node _io_rd_big_0_T_16 = bits(_io_rd_big_0_WIRE_1, 143, 128) @[bram.scala 135:52]
      node _io_rd_big_0_T_17 = asSInt(_io_rd_big_0_T_16) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[8] <= _io_rd_big_0_T_17 @[bram.scala 135:52]
      node _io_rd_big_0_T_18 = bits(_io_rd_big_0_WIRE_1, 159, 144) @[bram.scala 135:52]
      node _io_rd_big_0_T_19 = asSInt(_io_rd_big_0_T_18) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[9] <= _io_rd_big_0_T_19 @[bram.scala 135:52]
      node _io_rd_big_0_T_20 = bits(_io_rd_big_0_WIRE_1, 175, 160) @[bram.scala 135:52]
      node _io_rd_big_0_T_21 = asSInt(_io_rd_big_0_T_20) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[10] <= _io_rd_big_0_T_21 @[bram.scala 135:52]
      node _io_rd_big_0_T_22 = bits(_io_rd_big_0_WIRE_1, 191, 176) @[bram.scala 135:52]
      node _io_rd_big_0_T_23 = asSInt(_io_rd_big_0_T_22) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[11] <= _io_rd_big_0_T_23 @[bram.scala 135:52]
      node _io_rd_big_0_T_24 = bits(_io_rd_big_0_WIRE_1, 207, 192) @[bram.scala 135:52]
      node _io_rd_big_0_T_25 = asSInt(_io_rd_big_0_T_24) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[12] <= _io_rd_big_0_T_25 @[bram.scala 135:52]
      node _io_rd_big_0_T_26 = bits(_io_rd_big_0_WIRE_1, 223, 208) @[bram.scala 135:52]
      node _io_rd_big_0_T_27 = asSInt(_io_rd_big_0_T_26) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[13] <= _io_rd_big_0_T_27 @[bram.scala 135:52]
      node _io_rd_big_0_T_28 = bits(_io_rd_big_0_WIRE_1, 239, 224) @[bram.scala 135:52]
      node _io_rd_big_0_T_29 = asSInt(_io_rd_big_0_T_28) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[14] <= _io_rd_big_0_T_29 @[bram.scala 135:52]
      node _io_rd_big_0_T_30 = bits(_io_rd_big_0_WIRE_1, 255, 240) @[bram.scala 135:52]
      node _io_rd_big_0_T_31 = asSInt(_io_rd_big_0_T_30) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[15] <= _io_rd_big_0_T_31 @[bram.scala 135:52]
      node _io_rd_big_0_T_32 = bits(_io_rd_big_0_WIRE_1, 271, 256) @[bram.scala 135:52]
      node _io_rd_big_0_T_33 = asSInt(_io_rd_big_0_T_32) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[16] <= _io_rd_big_0_T_33 @[bram.scala 135:52]
      node _io_rd_big_0_T_34 = bits(_io_rd_big_0_WIRE_1, 287, 272) @[bram.scala 135:52]
      node _io_rd_big_0_T_35 = asSInt(_io_rd_big_0_T_34) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[17] <= _io_rd_big_0_T_35 @[bram.scala 135:52]
      node _io_rd_big_0_T_36 = bits(_io_rd_big_0_WIRE_1, 303, 288) @[bram.scala 135:52]
      node _io_rd_big_0_T_37 = asSInt(_io_rd_big_0_T_36) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[18] <= _io_rd_big_0_T_37 @[bram.scala 135:52]
      node _io_rd_big_0_T_38 = bits(_io_rd_big_0_WIRE_1, 319, 304) @[bram.scala 135:52]
      node _io_rd_big_0_T_39 = asSInt(_io_rd_big_0_T_38) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[19] <= _io_rd_big_0_T_39 @[bram.scala 135:52]
      node _io_rd_big_0_T_40 = bits(_io_rd_big_0_WIRE_1, 335, 320) @[bram.scala 135:52]
      node _io_rd_big_0_T_41 = asSInt(_io_rd_big_0_T_40) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[20] <= _io_rd_big_0_T_41 @[bram.scala 135:52]
      node _io_rd_big_0_T_42 = bits(_io_rd_big_0_WIRE_1, 351, 336) @[bram.scala 135:52]
      node _io_rd_big_0_T_43 = asSInt(_io_rd_big_0_T_42) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[21] <= _io_rd_big_0_T_43 @[bram.scala 135:52]
      node _io_rd_big_0_T_44 = bits(_io_rd_big_0_WIRE_1, 367, 352) @[bram.scala 135:52]
      node _io_rd_big_0_T_45 = asSInt(_io_rd_big_0_T_44) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[22] <= _io_rd_big_0_T_45 @[bram.scala 135:52]
      node _io_rd_big_0_T_46 = bits(_io_rd_big_0_WIRE_1, 383, 368) @[bram.scala 135:52]
      node _io_rd_big_0_T_47 = asSInt(_io_rd_big_0_T_46) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[23] <= _io_rd_big_0_T_47 @[bram.scala 135:52]
      node _io_rd_big_0_T_48 = bits(_io_rd_big_0_WIRE_1, 399, 384) @[bram.scala 135:52]
      node _io_rd_big_0_T_49 = asSInt(_io_rd_big_0_T_48) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[24] <= _io_rd_big_0_T_49 @[bram.scala 135:52]
      node _io_rd_big_0_T_50 = bits(_io_rd_big_0_WIRE_1, 415, 400) @[bram.scala 135:52]
      node _io_rd_big_0_T_51 = asSInt(_io_rd_big_0_T_50) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[25] <= _io_rd_big_0_T_51 @[bram.scala 135:52]
      node _io_rd_big_0_T_52 = bits(_io_rd_big_0_WIRE_1, 431, 416) @[bram.scala 135:52]
      node _io_rd_big_0_T_53 = asSInt(_io_rd_big_0_T_52) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[26] <= _io_rd_big_0_T_53 @[bram.scala 135:52]
      node _io_rd_big_0_T_54 = bits(_io_rd_big_0_WIRE_1, 447, 432) @[bram.scala 135:52]
      node _io_rd_big_0_T_55 = asSInt(_io_rd_big_0_T_54) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[27] <= _io_rd_big_0_T_55 @[bram.scala 135:52]
      node _io_rd_big_0_T_56 = bits(_io_rd_big_0_WIRE_1, 463, 448) @[bram.scala 135:52]
      node _io_rd_big_0_T_57 = asSInt(_io_rd_big_0_T_56) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[28] <= _io_rd_big_0_T_57 @[bram.scala 135:52]
      node _io_rd_big_0_T_58 = bits(_io_rd_big_0_WIRE_1, 479, 464) @[bram.scala 135:52]
      node _io_rd_big_0_T_59 = asSInt(_io_rd_big_0_T_58) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[29] <= _io_rd_big_0_T_59 @[bram.scala 135:52]
      node _io_rd_big_0_T_60 = bits(_io_rd_big_0_WIRE_1, 495, 480) @[bram.scala 135:52]
      node _io_rd_big_0_T_61 = asSInt(_io_rd_big_0_T_60) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[30] <= _io_rd_big_0_T_61 @[bram.scala 135:52]
      node _io_rd_big_0_T_62 = bits(_io_rd_big_0_WIRE_1, 511, 496) @[bram.scala 135:52]
      node _io_rd_big_0_T_63 = asSInt(_io_rd_big_0_T_62) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[31] <= _io_rd_big_0_T_63 @[bram.scala 135:52]
      node _io_rd_big_0_T_64 = bits(_io_rd_big_0_WIRE_1, 527, 512) @[bram.scala 135:52]
      node _io_rd_big_0_T_65 = asSInt(_io_rd_big_0_T_64) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[32] <= _io_rd_big_0_T_65 @[bram.scala 135:52]
      node _io_rd_big_0_T_66 = bits(_io_rd_big_0_WIRE_1, 543, 528) @[bram.scala 135:52]
      node _io_rd_big_0_T_67 = asSInt(_io_rd_big_0_T_66) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[33] <= _io_rd_big_0_T_67 @[bram.scala 135:52]
      node _io_rd_big_0_T_68 = bits(_io_rd_big_0_WIRE_1, 559, 544) @[bram.scala 135:52]
      node _io_rd_big_0_T_69 = asSInt(_io_rd_big_0_T_68) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[34] <= _io_rd_big_0_T_69 @[bram.scala 135:52]
      node _io_rd_big_0_T_70 = bits(_io_rd_big_0_WIRE_1, 575, 560) @[bram.scala 135:52]
      node _io_rd_big_0_T_71 = asSInt(_io_rd_big_0_T_70) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[35] <= _io_rd_big_0_T_71 @[bram.scala 135:52]
      node _io_rd_big_0_T_72 = bits(_io_rd_big_0_WIRE_1, 591, 576) @[bram.scala 135:52]
      node _io_rd_big_0_T_73 = asSInt(_io_rd_big_0_T_72) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[36] <= _io_rd_big_0_T_73 @[bram.scala 135:52]
      node _io_rd_big_0_T_74 = bits(_io_rd_big_0_WIRE_1, 607, 592) @[bram.scala 135:52]
      node _io_rd_big_0_T_75 = asSInt(_io_rd_big_0_T_74) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[37] <= _io_rd_big_0_T_75 @[bram.scala 135:52]
      node _io_rd_big_0_T_76 = bits(_io_rd_big_0_WIRE_1, 623, 608) @[bram.scala 135:52]
      node _io_rd_big_0_T_77 = asSInt(_io_rd_big_0_T_76) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[38] <= _io_rd_big_0_T_77 @[bram.scala 135:52]
      node _io_rd_big_0_T_78 = bits(_io_rd_big_0_WIRE_1, 639, 624) @[bram.scala 135:52]
      node _io_rd_big_0_T_79 = asSInt(_io_rd_big_0_T_78) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[39] <= _io_rd_big_0_T_79 @[bram.scala 135:52]
      node _io_rd_big_0_T_80 = bits(_io_rd_big_0_WIRE_1, 655, 640) @[bram.scala 135:52]
      node _io_rd_big_0_T_81 = asSInt(_io_rd_big_0_T_80) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[40] <= _io_rd_big_0_T_81 @[bram.scala 135:52]
      node _io_rd_big_0_T_82 = bits(_io_rd_big_0_WIRE_1, 671, 656) @[bram.scala 135:52]
      node _io_rd_big_0_T_83 = asSInt(_io_rd_big_0_T_82) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[41] <= _io_rd_big_0_T_83 @[bram.scala 135:52]
      node _io_rd_big_0_T_84 = bits(_io_rd_big_0_WIRE_1, 687, 672) @[bram.scala 135:52]
      node _io_rd_big_0_T_85 = asSInt(_io_rd_big_0_T_84) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[42] <= _io_rd_big_0_T_85 @[bram.scala 135:52]
      node _io_rd_big_0_T_86 = bits(_io_rd_big_0_WIRE_1, 703, 688) @[bram.scala 135:52]
      node _io_rd_big_0_T_87 = asSInt(_io_rd_big_0_T_86) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[43] <= _io_rd_big_0_T_87 @[bram.scala 135:52]
      node _io_rd_big_0_T_88 = bits(_io_rd_big_0_WIRE_1, 719, 704) @[bram.scala 135:52]
      node _io_rd_big_0_T_89 = asSInt(_io_rd_big_0_T_88) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[44] <= _io_rd_big_0_T_89 @[bram.scala 135:52]
      node _io_rd_big_0_T_90 = bits(_io_rd_big_0_WIRE_1, 735, 720) @[bram.scala 135:52]
      node _io_rd_big_0_T_91 = asSInt(_io_rd_big_0_T_90) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[45] <= _io_rd_big_0_T_91 @[bram.scala 135:52]
      node _io_rd_big_0_T_92 = bits(_io_rd_big_0_WIRE_1, 751, 736) @[bram.scala 135:52]
      node _io_rd_big_0_T_93 = asSInt(_io_rd_big_0_T_92) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[46] <= _io_rd_big_0_T_93 @[bram.scala 135:52]
      node _io_rd_big_0_T_94 = bits(_io_rd_big_0_WIRE_1, 767, 752) @[bram.scala 135:52]
      node _io_rd_big_0_T_95 = asSInt(_io_rd_big_0_T_94) @[bram.scala 135:52]
      _io_rd_big_0_WIRE.data[47] <= _io_rd_big_0_T_95 @[bram.scala 135:52]
      io.rd_big[0].data[0] <= _io_rd_big_0_WIRE.data[0] @[bram.scala 135:22]
      io.rd_big[0].data[1] <= _io_rd_big_0_WIRE.data[1] @[bram.scala 135:22]
      io.rd_big[0].data[2] <= _io_rd_big_0_WIRE.data[2] @[bram.scala 135:22]
      io.rd_big[0].data[3] <= _io_rd_big_0_WIRE.data[3] @[bram.scala 135:22]
      io.rd_big[0].data[4] <= _io_rd_big_0_WIRE.data[4] @[bram.scala 135:22]
      io.rd_big[0].data[5] <= _io_rd_big_0_WIRE.data[5] @[bram.scala 135:22]
      io.rd_big[0].data[6] <= _io_rd_big_0_WIRE.data[6] @[bram.scala 135:22]
      io.rd_big[0].data[7] <= _io_rd_big_0_WIRE.data[7] @[bram.scala 135:22]
      io.rd_big[0].data[8] <= _io_rd_big_0_WIRE.data[8] @[bram.scala 135:22]
      io.rd_big[0].data[9] <= _io_rd_big_0_WIRE.data[9] @[bram.scala 135:22]
      io.rd_big[0].data[10] <= _io_rd_big_0_WIRE.data[10] @[bram.scala 135:22]
      io.rd_big[0].data[11] <= _io_rd_big_0_WIRE.data[11] @[bram.scala 135:22]
      io.rd_big[0].data[12] <= _io_rd_big_0_WIRE.data[12] @[bram.scala 135:22]
      io.rd_big[0].data[13] <= _io_rd_big_0_WIRE.data[13] @[bram.scala 135:22]
      io.rd_big[0].data[14] <= _io_rd_big_0_WIRE.data[14] @[bram.scala 135:22]
      io.rd_big[0].data[15] <= _io_rd_big_0_WIRE.data[15] @[bram.scala 135:22]
      io.rd_big[0].data[16] <= _io_rd_big_0_WIRE.data[16] @[bram.scala 135:22]
      io.rd_big[0].data[17] <= _io_rd_big_0_WIRE.data[17] @[bram.scala 135:22]
      io.rd_big[0].data[18] <= _io_rd_big_0_WIRE.data[18] @[bram.scala 135:22]
      io.rd_big[0].data[19] <= _io_rd_big_0_WIRE.data[19] @[bram.scala 135:22]
      io.rd_big[0].data[20] <= _io_rd_big_0_WIRE.data[20] @[bram.scala 135:22]
      io.rd_big[0].data[21] <= _io_rd_big_0_WIRE.data[21] @[bram.scala 135:22]
      io.rd_big[0].data[22] <= _io_rd_big_0_WIRE.data[22] @[bram.scala 135:22]
      io.rd_big[0].data[23] <= _io_rd_big_0_WIRE.data[23] @[bram.scala 135:22]
      io.rd_big[0].data[24] <= _io_rd_big_0_WIRE.data[24] @[bram.scala 135:22]
      io.rd_big[0].data[25] <= _io_rd_big_0_WIRE.data[25] @[bram.scala 135:22]
      io.rd_big[0].data[26] <= _io_rd_big_0_WIRE.data[26] @[bram.scala 135:22]
      io.rd_big[0].data[27] <= _io_rd_big_0_WIRE.data[27] @[bram.scala 135:22]
      io.rd_big[0].data[28] <= _io_rd_big_0_WIRE.data[28] @[bram.scala 135:22]
      io.rd_big[0].data[29] <= _io_rd_big_0_WIRE.data[29] @[bram.scala 135:22]
      io.rd_big[0].data[30] <= _io_rd_big_0_WIRE.data[30] @[bram.scala 135:22]
      io.rd_big[0].data[31] <= _io_rd_big_0_WIRE.data[31] @[bram.scala 135:22]
      io.rd_big[0].data[32] <= _io_rd_big_0_WIRE.data[32] @[bram.scala 135:22]
      io.rd_big[0].data[33] <= _io_rd_big_0_WIRE.data[33] @[bram.scala 135:22]
      io.rd_big[0].data[34] <= _io_rd_big_0_WIRE.data[34] @[bram.scala 135:22]
      io.rd_big[0].data[35] <= _io_rd_big_0_WIRE.data[35] @[bram.scala 135:22]
      io.rd_big[0].data[36] <= _io_rd_big_0_WIRE.data[36] @[bram.scala 135:22]
      io.rd_big[0].data[37] <= _io_rd_big_0_WIRE.data[37] @[bram.scala 135:22]
      io.rd_big[0].data[38] <= _io_rd_big_0_WIRE.data[38] @[bram.scala 135:22]
      io.rd_big[0].data[39] <= _io_rd_big_0_WIRE.data[39] @[bram.scala 135:22]
      io.rd_big[0].data[40] <= _io_rd_big_0_WIRE.data[40] @[bram.scala 135:22]
      io.rd_big[0].data[41] <= _io_rd_big_0_WIRE.data[41] @[bram.scala 135:22]
      io.rd_big[0].data[42] <= _io_rd_big_0_WIRE.data[42] @[bram.scala 135:22]
      io.rd_big[0].data[43] <= _io_rd_big_0_WIRE.data[43] @[bram.scala 135:22]
      io.rd_big[0].data[44] <= _io_rd_big_0_WIRE.data[44] @[bram.scala 135:22]
      io.rd_big[0].data[45] <= _io_rd_big_0_WIRE.data[45] @[bram.scala 135:22]
      io.rd_big[0].data[46] <= _io_rd_big_0_WIRE.data[46] @[bram.scala 135:22]
      io.rd_big[0].data[47] <= _io_rd_big_0_WIRE.data[47] @[bram.scala 135:22]
      wire _io_rd_big_1_WIRE : {data : SInt<16>[48]} @[bram.scala 136:52]
      wire _io_rd_big_1_WIRE_1 : UInt<768>
      _io_rd_big_1_WIRE_1 <= big_banks[1].douta
      node _io_rd_big_1_T = bits(_io_rd_big_1_WIRE_1, 15, 0) @[bram.scala 136:52]
      node _io_rd_big_1_T_1 = asSInt(_io_rd_big_1_T) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[0] <= _io_rd_big_1_T_1 @[bram.scala 136:52]
      node _io_rd_big_1_T_2 = bits(_io_rd_big_1_WIRE_1, 31, 16) @[bram.scala 136:52]
      node _io_rd_big_1_T_3 = asSInt(_io_rd_big_1_T_2) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[1] <= _io_rd_big_1_T_3 @[bram.scala 136:52]
      node _io_rd_big_1_T_4 = bits(_io_rd_big_1_WIRE_1, 47, 32) @[bram.scala 136:52]
      node _io_rd_big_1_T_5 = asSInt(_io_rd_big_1_T_4) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[2] <= _io_rd_big_1_T_5 @[bram.scala 136:52]
      node _io_rd_big_1_T_6 = bits(_io_rd_big_1_WIRE_1, 63, 48) @[bram.scala 136:52]
      node _io_rd_big_1_T_7 = asSInt(_io_rd_big_1_T_6) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[3] <= _io_rd_big_1_T_7 @[bram.scala 136:52]
      node _io_rd_big_1_T_8 = bits(_io_rd_big_1_WIRE_1, 79, 64) @[bram.scala 136:52]
      node _io_rd_big_1_T_9 = asSInt(_io_rd_big_1_T_8) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[4] <= _io_rd_big_1_T_9 @[bram.scala 136:52]
      node _io_rd_big_1_T_10 = bits(_io_rd_big_1_WIRE_1, 95, 80) @[bram.scala 136:52]
      node _io_rd_big_1_T_11 = asSInt(_io_rd_big_1_T_10) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[5] <= _io_rd_big_1_T_11 @[bram.scala 136:52]
      node _io_rd_big_1_T_12 = bits(_io_rd_big_1_WIRE_1, 111, 96) @[bram.scala 136:52]
      node _io_rd_big_1_T_13 = asSInt(_io_rd_big_1_T_12) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[6] <= _io_rd_big_1_T_13 @[bram.scala 136:52]
      node _io_rd_big_1_T_14 = bits(_io_rd_big_1_WIRE_1, 127, 112) @[bram.scala 136:52]
      node _io_rd_big_1_T_15 = asSInt(_io_rd_big_1_T_14) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[7] <= _io_rd_big_1_T_15 @[bram.scala 136:52]
      node _io_rd_big_1_T_16 = bits(_io_rd_big_1_WIRE_1, 143, 128) @[bram.scala 136:52]
      node _io_rd_big_1_T_17 = asSInt(_io_rd_big_1_T_16) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[8] <= _io_rd_big_1_T_17 @[bram.scala 136:52]
      node _io_rd_big_1_T_18 = bits(_io_rd_big_1_WIRE_1, 159, 144) @[bram.scala 136:52]
      node _io_rd_big_1_T_19 = asSInt(_io_rd_big_1_T_18) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[9] <= _io_rd_big_1_T_19 @[bram.scala 136:52]
      node _io_rd_big_1_T_20 = bits(_io_rd_big_1_WIRE_1, 175, 160) @[bram.scala 136:52]
      node _io_rd_big_1_T_21 = asSInt(_io_rd_big_1_T_20) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[10] <= _io_rd_big_1_T_21 @[bram.scala 136:52]
      node _io_rd_big_1_T_22 = bits(_io_rd_big_1_WIRE_1, 191, 176) @[bram.scala 136:52]
      node _io_rd_big_1_T_23 = asSInt(_io_rd_big_1_T_22) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[11] <= _io_rd_big_1_T_23 @[bram.scala 136:52]
      node _io_rd_big_1_T_24 = bits(_io_rd_big_1_WIRE_1, 207, 192) @[bram.scala 136:52]
      node _io_rd_big_1_T_25 = asSInt(_io_rd_big_1_T_24) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[12] <= _io_rd_big_1_T_25 @[bram.scala 136:52]
      node _io_rd_big_1_T_26 = bits(_io_rd_big_1_WIRE_1, 223, 208) @[bram.scala 136:52]
      node _io_rd_big_1_T_27 = asSInt(_io_rd_big_1_T_26) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[13] <= _io_rd_big_1_T_27 @[bram.scala 136:52]
      node _io_rd_big_1_T_28 = bits(_io_rd_big_1_WIRE_1, 239, 224) @[bram.scala 136:52]
      node _io_rd_big_1_T_29 = asSInt(_io_rd_big_1_T_28) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[14] <= _io_rd_big_1_T_29 @[bram.scala 136:52]
      node _io_rd_big_1_T_30 = bits(_io_rd_big_1_WIRE_1, 255, 240) @[bram.scala 136:52]
      node _io_rd_big_1_T_31 = asSInt(_io_rd_big_1_T_30) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[15] <= _io_rd_big_1_T_31 @[bram.scala 136:52]
      node _io_rd_big_1_T_32 = bits(_io_rd_big_1_WIRE_1, 271, 256) @[bram.scala 136:52]
      node _io_rd_big_1_T_33 = asSInt(_io_rd_big_1_T_32) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[16] <= _io_rd_big_1_T_33 @[bram.scala 136:52]
      node _io_rd_big_1_T_34 = bits(_io_rd_big_1_WIRE_1, 287, 272) @[bram.scala 136:52]
      node _io_rd_big_1_T_35 = asSInt(_io_rd_big_1_T_34) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[17] <= _io_rd_big_1_T_35 @[bram.scala 136:52]
      node _io_rd_big_1_T_36 = bits(_io_rd_big_1_WIRE_1, 303, 288) @[bram.scala 136:52]
      node _io_rd_big_1_T_37 = asSInt(_io_rd_big_1_T_36) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[18] <= _io_rd_big_1_T_37 @[bram.scala 136:52]
      node _io_rd_big_1_T_38 = bits(_io_rd_big_1_WIRE_1, 319, 304) @[bram.scala 136:52]
      node _io_rd_big_1_T_39 = asSInt(_io_rd_big_1_T_38) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[19] <= _io_rd_big_1_T_39 @[bram.scala 136:52]
      node _io_rd_big_1_T_40 = bits(_io_rd_big_1_WIRE_1, 335, 320) @[bram.scala 136:52]
      node _io_rd_big_1_T_41 = asSInt(_io_rd_big_1_T_40) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[20] <= _io_rd_big_1_T_41 @[bram.scala 136:52]
      node _io_rd_big_1_T_42 = bits(_io_rd_big_1_WIRE_1, 351, 336) @[bram.scala 136:52]
      node _io_rd_big_1_T_43 = asSInt(_io_rd_big_1_T_42) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[21] <= _io_rd_big_1_T_43 @[bram.scala 136:52]
      node _io_rd_big_1_T_44 = bits(_io_rd_big_1_WIRE_1, 367, 352) @[bram.scala 136:52]
      node _io_rd_big_1_T_45 = asSInt(_io_rd_big_1_T_44) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[22] <= _io_rd_big_1_T_45 @[bram.scala 136:52]
      node _io_rd_big_1_T_46 = bits(_io_rd_big_1_WIRE_1, 383, 368) @[bram.scala 136:52]
      node _io_rd_big_1_T_47 = asSInt(_io_rd_big_1_T_46) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[23] <= _io_rd_big_1_T_47 @[bram.scala 136:52]
      node _io_rd_big_1_T_48 = bits(_io_rd_big_1_WIRE_1, 399, 384) @[bram.scala 136:52]
      node _io_rd_big_1_T_49 = asSInt(_io_rd_big_1_T_48) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[24] <= _io_rd_big_1_T_49 @[bram.scala 136:52]
      node _io_rd_big_1_T_50 = bits(_io_rd_big_1_WIRE_1, 415, 400) @[bram.scala 136:52]
      node _io_rd_big_1_T_51 = asSInt(_io_rd_big_1_T_50) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[25] <= _io_rd_big_1_T_51 @[bram.scala 136:52]
      node _io_rd_big_1_T_52 = bits(_io_rd_big_1_WIRE_1, 431, 416) @[bram.scala 136:52]
      node _io_rd_big_1_T_53 = asSInt(_io_rd_big_1_T_52) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[26] <= _io_rd_big_1_T_53 @[bram.scala 136:52]
      node _io_rd_big_1_T_54 = bits(_io_rd_big_1_WIRE_1, 447, 432) @[bram.scala 136:52]
      node _io_rd_big_1_T_55 = asSInt(_io_rd_big_1_T_54) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[27] <= _io_rd_big_1_T_55 @[bram.scala 136:52]
      node _io_rd_big_1_T_56 = bits(_io_rd_big_1_WIRE_1, 463, 448) @[bram.scala 136:52]
      node _io_rd_big_1_T_57 = asSInt(_io_rd_big_1_T_56) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[28] <= _io_rd_big_1_T_57 @[bram.scala 136:52]
      node _io_rd_big_1_T_58 = bits(_io_rd_big_1_WIRE_1, 479, 464) @[bram.scala 136:52]
      node _io_rd_big_1_T_59 = asSInt(_io_rd_big_1_T_58) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[29] <= _io_rd_big_1_T_59 @[bram.scala 136:52]
      node _io_rd_big_1_T_60 = bits(_io_rd_big_1_WIRE_1, 495, 480) @[bram.scala 136:52]
      node _io_rd_big_1_T_61 = asSInt(_io_rd_big_1_T_60) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[30] <= _io_rd_big_1_T_61 @[bram.scala 136:52]
      node _io_rd_big_1_T_62 = bits(_io_rd_big_1_WIRE_1, 511, 496) @[bram.scala 136:52]
      node _io_rd_big_1_T_63 = asSInt(_io_rd_big_1_T_62) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[31] <= _io_rd_big_1_T_63 @[bram.scala 136:52]
      node _io_rd_big_1_T_64 = bits(_io_rd_big_1_WIRE_1, 527, 512) @[bram.scala 136:52]
      node _io_rd_big_1_T_65 = asSInt(_io_rd_big_1_T_64) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[32] <= _io_rd_big_1_T_65 @[bram.scala 136:52]
      node _io_rd_big_1_T_66 = bits(_io_rd_big_1_WIRE_1, 543, 528) @[bram.scala 136:52]
      node _io_rd_big_1_T_67 = asSInt(_io_rd_big_1_T_66) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[33] <= _io_rd_big_1_T_67 @[bram.scala 136:52]
      node _io_rd_big_1_T_68 = bits(_io_rd_big_1_WIRE_1, 559, 544) @[bram.scala 136:52]
      node _io_rd_big_1_T_69 = asSInt(_io_rd_big_1_T_68) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[34] <= _io_rd_big_1_T_69 @[bram.scala 136:52]
      node _io_rd_big_1_T_70 = bits(_io_rd_big_1_WIRE_1, 575, 560) @[bram.scala 136:52]
      node _io_rd_big_1_T_71 = asSInt(_io_rd_big_1_T_70) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[35] <= _io_rd_big_1_T_71 @[bram.scala 136:52]
      node _io_rd_big_1_T_72 = bits(_io_rd_big_1_WIRE_1, 591, 576) @[bram.scala 136:52]
      node _io_rd_big_1_T_73 = asSInt(_io_rd_big_1_T_72) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[36] <= _io_rd_big_1_T_73 @[bram.scala 136:52]
      node _io_rd_big_1_T_74 = bits(_io_rd_big_1_WIRE_1, 607, 592) @[bram.scala 136:52]
      node _io_rd_big_1_T_75 = asSInt(_io_rd_big_1_T_74) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[37] <= _io_rd_big_1_T_75 @[bram.scala 136:52]
      node _io_rd_big_1_T_76 = bits(_io_rd_big_1_WIRE_1, 623, 608) @[bram.scala 136:52]
      node _io_rd_big_1_T_77 = asSInt(_io_rd_big_1_T_76) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[38] <= _io_rd_big_1_T_77 @[bram.scala 136:52]
      node _io_rd_big_1_T_78 = bits(_io_rd_big_1_WIRE_1, 639, 624) @[bram.scala 136:52]
      node _io_rd_big_1_T_79 = asSInt(_io_rd_big_1_T_78) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[39] <= _io_rd_big_1_T_79 @[bram.scala 136:52]
      node _io_rd_big_1_T_80 = bits(_io_rd_big_1_WIRE_1, 655, 640) @[bram.scala 136:52]
      node _io_rd_big_1_T_81 = asSInt(_io_rd_big_1_T_80) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[40] <= _io_rd_big_1_T_81 @[bram.scala 136:52]
      node _io_rd_big_1_T_82 = bits(_io_rd_big_1_WIRE_1, 671, 656) @[bram.scala 136:52]
      node _io_rd_big_1_T_83 = asSInt(_io_rd_big_1_T_82) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[41] <= _io_rd_big_1_T_83 @[bram.scala 136:52]
      node _io_rd_big_1_T_84 = bits(_io_rd_big_1_WIRE_1, 687, 672) @[bram.scala 136:52]
      node _io_rd_big_1_T_85 = asSInt(_io_rd_big_1_T_84) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[42] <= _io_rd_big_1_T_85 @[bram.scala 136:52]
      node _io_rd_big_1_T_86 = bits(_io_rd_big_1_WIRE_1, 703, 688) @[bram.scala 136:52]
      node _io_rd_big_1_T_87 = asSInt(_io_rd_big_1_T_86) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[43] <= _io_rd_big_1_T_87 @[bram.scala 136:52]
      node _io_rd_big_1_T_88 = bits(_io_rd_big_1_WIRE_1, 719, 704) @[bram.scala 136:52]
      node _io_rd_big_1_T_89 = asSInt(_io_rd_big_1_T_88) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[44] <= _io_rd_big_1_T_89 @[bram.scala 136:52]
      node _io_rd_big_1_T_90 = bits(_io_rd_big_1_WIRE_1, 735, 720) @[bram.scala 136:52]
      node _io_rd_big_1_T_91 = asSInt(_io_rd_big_1_T_90) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[45] <= _io_rd_big_1_T_91 @[bram.scala 136:52]
      node _io_rd_big_1_T_92 = bits(_io_rd_big_1_WIRE_1, 751, 736) @[bram.scala 136:52]
      node _io_rd_big_1_T_93 = asSInt(_io_rd_big_1_T_92) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[46] <= _io_rd_big_1_T_93 @[bram.scala 136:52]
      node _io_rd_big_1_T_94 = bits(_io_rd_big_1_WIRE_1, 767, 752) @[bram.scala 136:52]
      node _io_rd_big_1_T_95 = asSInt(_io_rd_big_1_T_94) @[bram.scala 136:52]
      _io_rd_big_1_WIRE.data[47] <= _io_rd_big_1_T_95 @[bram.scala 136:52]
      io.rd_big[1].data[0] <= _io_rd_big_1_WIRE.data[0] @[bram.scala 136:22]
      io.rd_big[1].data[1] <= _io_rd_big_1_WIRE.data[1] @[bram.scala 136:22]
      io.rd_big[1].data[2] <= _io_rd_big_1_WIRE.data[2] @[bram.scala 136:22]
      io.rd_big[1].data[3] <= _io_rd_big_1_WIRE.data[3] @[bram.scala 136:22]
      io.rd_big[1].data[4] <= _io_rd_big_1_WIRE.data[4] @[bram.scala 136:22]
      io.rd_big[1].data[5] <= _io_rd_big_1_WIRE.data[5] @[bram.scala 136:22]
      io.rd_big[1].data[6] <= _io_rd_big_1_WIRE.data[6] @[bram.scala 136:22]
      io.rd_big[1].data[7] <= _io_rd_big_1_WIRE.data[7] @[bram.scala 136:22]
      io.rd_big[1].data[8] <= _io_rd_big_1_WIRE.data[8] @[bram.scala 136:22]
      io.rd_big[1].data[9] <= _io_rd_big_1_WIRE.data[9] @[bram.scala 136:22]
      io.rd_big[1].data[10] <= _io_rd_big_1_WIRE.data[10] @[bram.scala 136:22]
      io.rd_big[1].data[11] <= _io_rd_big_1_WIRE.data[11] @[bram.scala 136:22]
      io.rd_big[1].data[12] <= _io_rd_big_1_WIRE.data[12] @[bram.scala 136:22]
      io.rd_big[1].data[13] <= _io_rd_big_1_WIRE.data[13] @[bram.scala 136:22]
      io.rd_big[1].data[14] <= _io_rd_big_1_WIRE.data[14] @[bram.scala 136:22]
      io.rd_big[1].data[15] <= _io_rd_big_1_WIRE.data[15] @[bram.scala 136:22]
      io.rd_big[1].data[16] <= _io_rd_big_1_WIRE.data[16] @[bram.scala 136:22]
      io.rd_big[1].data[17] <= _io_rd_big_1_WIRE.data[17] @[bram.scala 136:22]
      io.rd_big[1].data[18] <= _io_rd_big_1_WIRE.data[18] @[bram.scala 136:22]
      io.rd_big[1].data[19] <= _io_rd_big_1_WIRE.data[19] @[bram.scala 136:22]
      io.rd_big[1].data[20] <= _io_rd_big_1_WIRE.data[20] @[bram.scala 136:22]
      io.rd_big[1].data[21] <= _io_rd_big_1_WIRE.data[21] @[bram.scala 136:22]
      io.rd_big[1].data[22] <= _io_rd_big_1_WIRE.data[22] @[bram.scala 136:22]
      io.rd_big[1].data[23] <= _io_rd_big_1_WIRE.data[23] @[bram.scala 136:22]
      io.rd_big[1].data[24] <= _io_rd_big_1_WIRE.data[24] @[bram.scala 136:22]
      io.rd_big[1].data[25] <= _io_rd_big_1_WIRE.data[25] @[bram.scala 136:22]
      io.rd_big[1].data[26] <= _io_rd_big_1_WIRE.data[26] @[bram.scala 136:22]
      io.rd_big[1].data[27] <= _io_rd_big_1_WIRE.data[27] @[bram.scala 136:22]
      io.rd_big[1].data[28] <= _io_rd_big_1_WIRE.data[28] @[bram.scala 136:22]
      io.rd_big[1].data[29] <= _io_rd_big_1_WIRE.data[29] @[bram.scala 136:22]
      io.rd_big[1].data[30] <= _io_rd_big_1_WIRE.data[30] @[bram.scala 136:22]
      io.rd_big[1].data[31] <= _io_rd_big_1_WIRE.data[31] @[bram.scala 136:22]
      io.rd_big[1].data[32] <= _io_rd_big_1_WIRE.data[32] @[bram.scala 136:22]
      io.rd_big[1].data[33] <= _io_rd_big_1_WIRE.data[33] @[bram.scala 136:22]
      io.rd_big[1].data[34] <= _io_rd_big_1_WIRE.data[34] @[bram.scala 136:22]
      io.rd_big[1].data[35] <= _io_rd_big_1_WIRE.data[35] @[bram.scala 136:22]
      io.rd_big[1].data[36] <= _io_rd_big_1_WIRE.data[36] @[bram.scala 136:22]
      io.rd_big[1].data[37] <= _io_rd_big_1_WIRE.data[37] @[bram.scala 136:22]
      io.rd_big[1].data[38] <= _io_rd_big_1_WIRE.data[38] @[bram.scala 136:22]
      io.rd_big[1].data[39] <= _io_rd_big_1_WIRE.data[39] @[bram.scala 136:22]
      io.rd_big[1].data[40] <= _io_rd_big_1_WIRE.data[40] @[bram.scala 136:22]
      io.rd_big[1].data[41] <= _io_rd_big_1_WIRE.data[41] @[bram.scala 136:22]
      io.rd_big[1].data[42] <= _io_rd_big_1_WIRE.data[42] @[bram.scala 136:22]
      io.rd_big[1].data[43] <= _io_rd_big_1_WIRE.data[43] @[bram.scala 136:22]
      io.rd_big[1].data[44] <= _io_rd_big_1_WIRE.data[44] @[bram.scala 136:22]
      io.rd_big[1].data[45] <= _io_rd_big_1_WIRE.data[45] @[bram.scala 136:22]
      io.rd_big[1].data[46] <= _io_rd_big_1_WIRE.data[46] @[bram.scala 136:22]
      io.rd_big[1].data[47] <= _io_rd_big_1_WIRE.data[47] @[bram.scala 136:22]
      skip @[bram.scala 134:24]
    else : @[bram.scala 137:16]
      wire _io_rd_big_1_WIRE_2 : {data : SInt<16>[48]} @[bram.scala 138:52]
      wire _io_rd_big_1_WIRE_3 : UInt<768>
      _io_rd_big_1_WIRE_3 <= big_banks[0].douta
      node _io_rd_big_1_T_96 = bits(_io_rd_big_1_WIRE_3, 15, 0) @[bram.scala 138:52]
      node _io_rd_big_1_T_97 = asSInt(_io_rd_big_1_T_96) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[0] <= _io_rd_big_1_T_97 @[bram.scala 138:52]
      node _io_rd_big_1_T_98 = bits(_io_rd_big_1_WIRE_3, 31, 16) @[bram.scala 138:52]
      node _io_rd_big_1_T_99 = asSInt(_io_rd_big_1_T_98) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[1] <= _io_rd_big_1_T_99 @[bram.scala 138:52]
      node _io_rd_big_1_T_100 = bits(_io_rd_big_1_WIRE_3, 47, 32) @[bram.scala 138:52]
      node _io_rd_big_1_T_101 = asSInt(_io_rd_big_1_T_100) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[2] <= _io_rd_big_1_T_101 @[bram.scala 138:52]
      node _io_rd_big_1_T_102 = bits(_io_rd_big_1_WIRE_3, 63, 48) @[bram.scala 138:52]
      node _io_rd_big_1_T_103 = asSInt(_io_rd_big_1_T_102) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[3] <= _io_rd_big_1_T_103 @[bram.scala 138:52]
      node _io_rd_big_1_T_104 = bits(_io_rd_big_1_WIRE_3, 79, 64) @[bram.scala 138:52]
      node _io_rd_big_1_T_105 = asSInt(_io_rd_big_1_T_104) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[4] <= _io_rd_big_1_T_105 @[bram.scala 138:52]
      node _io_rd_big_1_T_106 = bits(_io_rd_big_1_WIRE_3, 95, 80) @[bram.scala 138:52]
      node _io_rd_big_1_T_107 = asSInt(_io_rd_big_1_T_106) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[5] <= _io_rd_big_1_T_107 @[bram.scala 138:52]
      node _io_rd_big_1_T_108 = bits(_io_rd_big_1_WIRE_3, 111, 96) @[bram.scala 138:52]
      node _io_rd_big_1_T_109 = asSInt(_io_rd_big_1_T_108) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[6] <= _io_rd_big_1_T_109 @[bram.scala 138:52]
      node _io_rd_big_1_T_110 = bits(_io_rd_big_1_WIRE_3, 127, 112) @[bram.scala 138:52]
      node _io_rd_big_1_T_111 = asSInt(_io_rd_big_1_T_110) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[7] <= _io_rd_big_1_T_111 @[bram.scala 138:52]
      node _io_rd_big_1_T_112 = bits(_io_rd_big_1_WIRE_3, 143, 128) @[bram.scala 138:52]
      node _io_rd_big_1_T_113 = asSInt(_io_rd_big_1_T_112) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[8] <= _io_rd_big_1_T_113 @[bram.scala 138:52]
      node _io_rd_big_1_T_114 = bits(_io_rd_big_1_WIRE_3, 159, 144) @[bram.scala 138:52]
      node _io_rd_big_1_T_115 = asSInt(_io_rd_big_1_T_114) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[9] <= _io_rd_big_1_T_115 @[bram.scala 138:52]
      node _io_rd_big_1_T_116 = bits(_io_rd_big_1_WIRE_3, 175, 160) @[bram.scala 138:52]
      node _io_rd_big_1_T_117 = asSInt(_io_rd_big_1_T_116) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[10] <= _io_rd_big_1_T_117 @[bram.scala 138:52]
      node _io_rd_big_1_T_118 = bits(_io_rd_big_1_WIRE_3, 191, 176) @[bram.scala 138:52]
      node _io_rd_big_1_T_119 = asSInt(_io_rd_big_1_T_118) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[11] <= _io_rd_big_1_T_119 @[bram.scala 138:52]
      node _io_rd_big_1_T_120 = bits(_io_rd_big_1_WIRE_3, 207, 192) @[bram.scala 138:52]
      node _io_rd_big_1_T_121 = asSInt(_io_rd_big_1_T_120) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[12] <= _io_rd_big_1_T_121 @[bram.scala 138:52]
      node _io_rd_big_1_T_122 = bits(_io_rd_big_1_WIRE_3, 223, 208) @[bram.scala 138:52]
      node _io_rd_big_1_T_123 = asSInt(_io_rd_big_1_T_122) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[13] <= _io_rd_big_1_T_123 @[bram.scala 138:52]
      node _io_rd_big_1_T_124 = bits(_io_rd_big_1_WIRE_3, 239, 224) @[bram.scala 138:52]
      node _io_rd_big_1_T_125 = asSInt(_io_rd_big_1_T_124) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[14] <= _io_rd_big_1_T_125 @[bram.scala 138:52]
      node _io_rd_big_1_T_126 = bits(_io_rd_big_1_WIRE_3, 255, 240) @[bram.scala 138:52]
      node _io_rd_big_1_T_127 = asSInt(_io_rd_big_1_T_126) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[15] <= _io_rd_big_1_T_127 @[bram.scala 138:52]
      node _io_rd_big_1_T_128 = bits(_io_rd_big_1_WIRE_3, 271, 256) @[bram.scala 138:52]
      node _io_rd_big_1_T_129 = asSInt(_io_rd_big_1_T_128) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[16] <= _io_rd_big_1_T_129 @[bram.scala 138:52]
      node _io_rd_big_1_T_130 = bits(_io_rd_big_1_WIRE_3, 287, 272) @[bram.scala 138:52]
      node _io_rd_big_1_T_131 = asSInt(_io_rd_big_1_T_130) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[17] <= _io_rd_big_1_T_131 @[bram.scala 138:52]
      node _io_rd_big_1_T_132 = bits(_io_rd_big_1_WIRE_3, 303, 288) @[bram.scala 138:52]
      node _io_rd_big_1_T_133 = asSInt(_io_rd_big_1_T_132) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[18] <= _io_rd_big_1_T_133 @[bram.scala 138:52]
      node _io_rd_big_1_T_134 = bits(_io_rd_big_1_WIRE_3, 319, 304) @[bram.scala 138:52]
      node _io_rd_big_1_T_135 = asSInt(_io_rd_big_1_T_134) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[19] <= _io_rd_big_1_T_135 @[bram.scala 138:52]
      node _io_rd_big_1_T_136 = bits(_io_rd_big_1_WIRE_3, 335, 320) @[bram.scala 138:52]
      node _io_rd_big_1_T_137 = asSInt(_io_rd_big_1_T_136) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[20] <= _io_rd_big_1_T_137 @[bram.scala 138:52]
      node _io_rd_big_1_T_138 = bits(_io_rd_big_1_WIRE_3, 351, 336) @[bram.scala 138:52]
      node _io_rd_big_1_T_139 = asSInt(_io_rd_big_1_T_138) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[21] <= _io_rd_big_1_T_139 @[bram.scala 138:52]
      node _io_rd_big_1_T_140 = bits(_io_rd_big_1_WIRE_3, 367, 352) @[bram.scala 138:52]
      node _io_rd_big_1_T_141 = asSInt(_io_rd_big_1_T_140) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[22] <= _io_rd_big_1_T_141 @[bram.scala 138:52]
      node _io_rd_big_1_T_142 = bits(_io_rd_big_1_WIRE_3, 383, 368) @[bram.scala 138:52]
      node _io_rd_big_1_T_143 = asSInt(_io_rd_big_1_T_142) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[23] <= _io_rd_big_1_T_143 @[bram.scala 138:52]
      node _io_rd_big_1_T_144 = bits(_io_rd_big_1_WIRE_3, 399, 384) @[bram.scala 138:52]
      node _io_rd_big_1_T_145 = asSInt(_io_rd_big_1_T_144) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[24] <= _io_rd_big_1_T_145 @[bram.scala 138:52]
      node _io_rd_big_1_T_146 = bits(_io_rd_big_1_WIRE_3, 415, 400) @[bram.scala 138:52]
      node _io_rd_big_1_T_147 = asSInt(_io_rd_big_1_T_146) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[25] <= _io_rd_big_1_T_147 @[bram.scala 138:52]
      node _io_rd_big_1_T_148 = bits(_io_rd_big_1_WIRE_3, 431, 416) @[bram.scala 138:52]
      node _io_rd_big_1_T_149 = asSInt(_io_rd_big_1_T_148) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[26] <= _io_rd_big_1_T_149 @[bram.scala 138:52]
      node _io_rd_big_1_T_150 = bits(_io_rd_big_1_WIRE_3, 447, 432) @[bram.scala 138:52]
      node _io_rd_big_1_T_151 = asSInt(_io_rd_big_1_T_150) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[27] <= _io_rd_big_1_T_151 @[bram.scala 138:52]
      node _io_rd_big_1_T_152 = bits(_io_rd_big_1_WIRE_3, 463, 448) @[bram.scala 138:52]
      node _io_rd_big_1_T_153 = asSInt(_io_rd_big_1_T_152) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[28] <= _io_rd_big_1_T_153 @[bram.scala 138:52]
      node _io_rd_big_1_T_154 = bits(_io_rd_big_1_WIRE_3, 479, 464) @[bram.scala 138:52]
      node _io_rd_big_1_T_155 = asSInt(_io_rd_big_1_T_154) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[29] <= _io_rd_big_1_T_155 @[bram.scala 138:52]
      node _io_rd_big_1_T_156 = bits(_io_rd_big_1_WIRE_3, 495, 480) @[bram.scala 138:52]
      node _io_rd_big_1_T_157 = asSInt(_io_rd_big_1_T_156) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[30] <= _io_rd_big_1_T_157 @[bram.scala 138:52]
      node _io_rd_big_1_T_158 = bits(_io_rd_big_1_WIRE_3, 511, 496) @[bram.scala 138:52]
      node _io_rd_big_1_T_159 = asSInt(_io_rd_big_1_T_158) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[31] <= _io_rd_big_1_T_159 @[bram.scala 138:52]
      node _io_rd_big_1_T_160 = bits(_io_rd_big_1_WIRE_3, 527, 512) @[bram.scala 138:52]
      node _io_rd_big_1_T_161 = asSInt(_io_rd_big_1_T_160) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[32] <= _io_rd_big_1_T_161 @[bram.scala 138:52]
      node _io_rd_big_1_T_162 = bits(_io_rd_big_1_WIRE_3, 543, 528) @[bram.scala 138:52]
      node _io_rd_big_1_T_163 = asSInt(_io_rd_big_1_T_162) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[33] <= _io_rd_big_1_T_163 @[bram.scala 138:52]
      node _io_rd_big_1_T_164 = bits(_io_rd_big_1_WIRE_3, 559, 544) @[bram.scala 138:52]
      node _io_rd_big_1_T_165 = asSInt(_io_rd_big_1_T_164) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[34] <= _io_rd_big_1_T_165 @[bram.scala 138:52]
      node _io_rd_big_1_T_166 = bits(_io_rd_big_1_WIRE_3, 575, 560) @[bram.scala 138:52]
      node _io_rd_big_1_T_167 = asSInt(_io_rd_big_1_T_166) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[35] <= _io_rd_big_1_T_167 @[bram.scala 138:52]
      node _io_rd_big_1_T_168 = bits(_io_rd_big_1_WIRE_3, 591, 576) @[bram.scala 138:52]
      node _io_rd_big_1_T_169 = asSInt(_io_rd_big_1_T_168) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[36] <= _io_rd_big_1_T_169 @[bram.scala 138:52]
      node _io_rd_big_1_T_170 = bits(_io_rd_big_1_WIRE_3, 607, 592) @[bram.scala 138:52]
      node _io_rd_big_1_T_171 = asSInt(_io_rd_big_1_T_170) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[37] <= _io_rd_big_1_T_171 @[bram.scala 138:52]
      node _io_rd_big_1_T_172 = bits(_io_rd_big_1_WIRE_3, 623, 608) @[bram.scala 138:52]
      node _io_rd_big_1_T_173 = asSInt(_io_rd_big_1_T_172) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[38] <= _io_rd_big_1_T_173 @[bram.scala 138:52]
      node _io_rd_big_1_T_174 = bits(_io_rd_big_1_WIRE_3, 639, 624) @[bram.scala 138:52]
      node _io_rd_big_1_T_175 = asSInt(_io_rd_big_1_T_174) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[39] <= _io_rd_big_1_T_175 @[bram.scala 138:52]
      node _io_rd_big_1_T_176 = bits(_io_rd_big_1_WIRE_3, 655, 640) @[bram.scala 138:52]
      node _io_rd_big_1_T_177 = asSInt(_io_rd_big_1_T_176) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[40] <= _io_rd_big_1_T_177 @[bram.scala 138:52]
      node _io_rd_big_1_T_178 = bits(_io_rd_big_1_WIRE_3, 671, 656) @[bram.scala 138:52]
      node _io_rd_big_1_T_179 = asSInt(_io_rd_big_1_T_178) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[41] <= _io_rd_big_1_T_179 @[bram.scala 138:52]
      node _io_rd_big_1_T_180 = bits(_io_rd_big_1_WIRE_3, 687, 672) @[bram.scala 138:52]
      node _io_rd_big_1_T_181 = asSInt(_io_rd_big_1_T_180) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[42] <= _io_rd_big_1_T_181 @[bram.scala 138:52]
      node _io_rd_big_1_T_182 = bits(_io_rd_big_1_WIRE_3, 703, 688) @[bram.scala 138:52]
      node _io_rd_big_1_T_183 = asSInt(_io_rd_big_1_T_182) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[43] <= _io_rd_big_1_T_183 @[bram.scala 138:52]
      node _io_rd_big_1_T_184 = bits(_io_rd_big_1_WIRE_3, 719, 704) @[bram.scala 138:52]
      node _io_rd_big_1_T_185 = asSInt(_io_rd_big_1_T_184) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[44] <= _io_rd_big_1_T_185 @[bram.scala 138:52]
      node _io_rd_big_1_T_186 = bits(_io_rd_big_1_WIRE_3, 735, 720) @[bram.scala 138:52]
      node _io_rd_big_1_T_187 = asSInt(_io_rd_big_1_T_186) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[45] <= _io_rd_big_1_T_187 @[bram.scala 138:52]
      node _io_rd_big_1_T_188 = bits(_io_rd_big_1_WIRE_3, 751, 736) @[bram.scala 138:52]
      node _io_rd_big_1_T_189 = asSInt(_io_rd_big_1_T_188) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[46] <= _io_rd_big_1_T_189 @[bram.scala 138:52]
      node _io_rd_big_1_T_190 = bits(_io_rd_big_1_WIRE_3, 767, 752) @[bram.scala 138:52]
      node _io_rd_big_1_T_191 = asSInt(_io_rd_big_1_T_190) @[bram.scala 138:52]
      _io_rd_big_1_WIRE_2.data[47] <= _io_rd_big_1_T_191 @[bram.scala 138:52]
      io.rd_big[1].data[0] <= _io_rd_big_1_WIRE_2.data[0] @[bram.scala 138:22]
      io.rd_big[1].data[1] <= _io_rd_big_1_WIRE_2.data[1] @[bram.scala 138:22]
      io.rd_big[1].data[2] <= _io_rd_big_1_WIRE_2.data[2] @[bram.scala 138:22]
      io.rd_big[1].data[3] <= _io_rd_big_1_WIRE_2.data[3] @[bram.scala 138:22]
      io.rd_big[1].data[4] <= _io_rd_big_1_WIRE_2.data[4] @[bram.scala 138:22]
      io.rd_big[1].data[5] <= _io_rd_big_1_WIRE_2.data[5] @[bram.scala 138:22]
      io.rd_big[1].data[6] <= _io_rd_big_1_WIRE_2.data[6] @[bram.scala 138:22]
      io.rd_big[1].data[7] <= _io_rd_big_1_WIRE_2.data[7] @[bram.scala 138:22]
      io.rd_big[1].data[8] <= _io_rd_big_1_WIRE_2.data[8] @[bram.scala 138:22]
      io.rd_big[1].data[9] <= _io_rd_big_1_WIRE_2.data[9] @[bram.scala 138:22]
      io.rd_big[1].data[10] <= _io_rd_big_1_WIRE_2.data[10] @[bram.scala 138:22]
      io.rd_big[1].data[11] <= _io_rd_big_1_WIRE_2.data[11] @[bram.scala 138:22]
      io.rd_big[1].data[12] <= _io_rd_big_1_WIRE_2.data[12] @[bram.scala 138:22]
      io.rd_big[1].data[13] <= _io_rd_big_1_WIRE_2.data[13] @[bram.scala 138:22]
      io.rd_big[1].data[14] <= _io_rd_big_1_WIRE_2.data[14] @[bram.scala 138:22]
      io.rd_big[1].data[15] <= _io_rd_big_1_WIRE_2.data[15] @[bram.scala 138:22]
      io.rd_big[1].data[16] <= _io_rd_big_1_WIRE_2.data[16] @[bram.scala 138:22]
      io.rd_big[1].data[17] <= _io_rd_big_1_WIRE_2.data[17] @[bram.scala 138:22]
      io.rd_big[1].data[18] <= _io_rd_big_1_WIRE_2.data[18] @[bram.scala 138:22]
      io.rd_big[1].data[19] <= _io_rd_big_1_WIRE_2.data[19] @[bram.scala 138:22]
      io.rd_big[1].data[20] <= _io_rd_big_1_WIRE_2.data[20] @[bram.scala 138:22]
      io.rd_big[1].data[21] <= _io_rd_big_1_WIRE_2.data[21] @[bram.scala 138:22]
      io.rd_big[1].data[22] <= _io_rd_big_1_WIRE_2.data[22] @[bram.scala 138:22]
      io.rd_big[1].data[23] <= _io_rd_big_1_WIRE_2.data[23] @[bram.scala 138:22]
      io.rd_big[1].data[24] <= _io_rd_big_1_WIRE_2.data[24] @[bram.scala 138:22]
      io.rd_big[1].data[25] <= _io_rd_big_1_WIRE_2.data[25] @[bram.scala 138:22]
      io.rd_big[1].data[26] <= _io_rd_big_1_WIRE_2.data[26] @[bram.scala 138:22]
      io.rd_big[1].data[27] <= _io_rd_big_1_WIRE_2.data[27] @[bram.scala 138:22]
      io.rd_big[1].data[28] <= _io_rd_big_1_WIRE_2.data[28] @[bram.scala 138:22]
      io.rd_big[1].data[29] <= _io_rd_big_1_WIRE_2.data[29] @[bram.scala 138:22]
      io.rd_big[1].data[30] <= _io_rd_big_1_WIRE_2.data[30] @[bram.scala 138:22]
      io.rd_big[1].data[31] <= _io_rd_big_1_WIRE_2.data[31] @[bram.scala 138:22]
      io.rd_big[1].data[32] <= _io_rd_big_1_WIRE_2.data[32] @[bram.scala 138:22]
      io.rd_big[1].data[33] <= _io_rd_big_1_WIRE_2.data[33] @[bram.scala 138:22]
      io.rd_big[1].data[34] <= _io_rd_big_1_WIRE_2.data[34] @[bram.scala 138:22]
      io.rd_big[1].data[35] <= _io_rd_big_1_WIRE_2.data[35] @[bram.scala 138:22]
      io.rd_big[1].data[36] <= _io_rd_big_1_WIRE_2.data[36] @[bram.scala 138:22]
      io.rd_big[1].data[37] <= _io_rd_big_1_WIRE_2.data[37] @[bram.scala 138:22]
      io.rd_big[1].data[38] <= _io_rd_big_1_WIRE_2.data[38] @[bram.scala 138:22]
      io.rd_big[1].data[39] <= _io_rd_big_1_WIRE_2.data[39] @[bram.scala 138:22]
      io.rd_big[1].data[40] <= _io_rd_big_1_WIRE_2.data[40] @[bram.scala 138:22]
      io.rd_big[1].data[41] <= _io_rd_big_1_WIRE_2.data[41] @[bram.scala 138:22]
      io.rd_big[1].data[42] <= _io_rd_big_1_WIRE_2.data[42] @[bram.scala 138:22]
      io.rd_big[1].data[43] <= _io_rd_big_1_WIRE_2.data[43] @[bram.scala 138:22]
      io.rd_big[1].data[44] <= _io_rd_big_1_WIRE_2.data[44] @[bram.scala 138:22]
      io.rd_big[1].data[45] <= _io_rd_big_1_WIRE_2.data[45] @[bram.scala 138:22]
      io.rd_big[1].data[46] <= _io_rd_big_1_WIRE_2.data[46] @[bram.scala 138:22]
      io.rd_big[1].data[47] <= _io_rd_big_1_WIRE_2.data[47] @[bram.scala 138:22]
      wire _io_rd_big_0_WIRE_2 : {data : SInt<16>[48]} @[bram.scala 139:52]
      wire _io_rd_big_0_WIRE_3 : UInt<768>
      _io_rd_big_0_WIRE_3 <= big_banks[1].douta
      node _io_rd_big_0_T_96 = bits(_io_rd_big_0_WIRE_3, 15, 0) @[bram.scala 139:52]
      node _io_rd_big_0_T_97 = asSInt(_io_rd_big_0_T_96) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[0] <= _io_rd_big_0_T_97 @[bram.scala 139:52]
      node _io_rd_big_0_T_98 = bits(_io_rd_big_0_WIRE_3, 31, 16) @[bram.scala 139:52]
      node _io_rd_big_0_T_99 = asSInt(_io_rd_big_0_T_98) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[1] <= _io_rd_big_0_T_99 @[bram.scala 139:52]
      node _io_rd_big_0_T_100 = bits(_io_rd_big_0_WIRE_3, 47, 32) @[bram.scala 139:52]
      node _io_rd_big_0_T_101 = asSInt(_io_rd_big_0_T_100) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[2] <= _io_rd_big_0_T_101 @[bram.scala 139:52]
      node _io_rd_big_0_T_102 = bits(_io_rd_big_0_WIRE_3, 63, 48) @[bram.scala 139:52]
      node _io_rd_big_0_T_103 = asSInt(_io_rd_big_0_T_102) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[3] <= _io_rd_big_0_T_103 @[bram.scala 139:52]
      node _io_rd_big_0_T_104 = bits(_io_rd_big_0_WIRE_3, 79, 64) @[bram.scala 139:52]
      node _io_rd_big_0_T_105 = asSInt(_io_rd_big_0_T_104) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[4] <= _io_rd_big_0_T_105 @[bram.scala 139:52]
      node _io_rd_big_0_T_106 = bits(_io_rd_big_0_WIRE_3, 95, 80) @[bram.scala 139:52]
      node _io_rd_big_0_T_107 = asSInt(_io_rd_big_0_T_106) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[5] <= _io_rd_big_0_T_107 @[bram.scala 139:52]
      node _io_rd_big_0_T_108 = bits(_io_rd_big_0_WIRE_3, 111, 96) @[bram.scala 139:52]
      node _io_rd_big_0_T_109 = asSInt(_io_rd_big_0_T_108) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[6] <= _io_rd_big_0_T_109 @[bram.scala 139:52]
      node _io_rd_big_0_T_110 = bits(_io_rd_big_0_WIRE_3, 127, 112) @[bram.scala 139:52]
      node _io_rd_big_0_T_111 = asSInt(_io_rd_big_0_T_110) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[7] <= _io_rd_big_0_T_111 @[bram.scala 139:52]
      node _io_rd_big_0_T_112 = bits(_io_rd_big_0_WIRE_3, 143, 128) @[bram.scala 139:52]
      node _io_rd_big_0_T_113 = asSInt(_io_rd_big_0_T_112) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[8] <= _io_rd_big_0_T_113 @[bram.scala 139:52]
      node _io_rd_big_0_T_114 = bits(_io_rd_big_0_WIRE_3, 159, 144) @[bram.scala 139:52]
      node _io_rd_big_0_T_115 = asSInt(_io_rd_big_0_T_114) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[9] <= _io_rd_big_0_T_115 @[bram.scala 139:52]
      node _io_rd_big_0_T_116 = bits(_io_rd_big_0_WIRE_3, 175, 160) @[bram.scala 139:52]
      node _io_rd_big_0_T_117 = asSInt(_io_rd_big_0_T_116) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[10] <= _io_rd_big_0_T_117 @[bram.scala 139:52]
      node _io_rd_big_0_T_118 = bits(_io_rd_big_0_WIRE_3, 191, 176) @[bram.scala 139:52]
      node _io_rd_big_0_T_119 = asSInt(_io_rd_big_0_T_118) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[11] <= _io_rd_big_0_T_119 @[bram.scala 139:52]
      node _io_rd_big_0_T_120 = bits(_io_rd_big_0_WIRE_3, 207, 192) @[bram.scala 139:52]
      node _io_rd_big_0_T_121 = asSInt(_io_rd_big_0_T_120) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[12] <= _io_rd_big_0_T_121 @[bram.scala 139:52]
      node _io_rd_big_0_T_122 = bits(_io_rd_big_0_WIRE_3, 223, 208) @[bram.scala 139:52]
      node _io_rd_big_0_T_123 = asSInt(_io_rd_big_0_T_122) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[13] <= _io_rd_big_0_T_123 @[bram.scala 139:52]
      node _io_rd_big_0_T_124 = bits(_io_rd_big_0_WIRE_3, 239, 224) @[bram.scala 139:52]
      node _io_rd_big_0_T_125 = asSInt(_io_rd_big_0_T_124) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[14] <= _io_rd_big_0_T_125 @[bram.scala 139:52]
      node _io_rd_big_0_T_126 = bits(_io_rd_big_0_WIRE_3, 255, 240) @[bram.scala 139:52]
      node _io_rd_big_0_T_127 = asSInt(_io_rd_big_0_T_126) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[15] <= _io_rd_big_0_T_127 @[bram.scala 139:52]
      node _io_rd_big_0_T_128 = bits(_io_rd_big_0_WIRE_3, 271, 256) @[bram.scala 139:52]
      node _io_rd_big_0_T_129 = asSInt(_io_rd_big_0_T_128) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[16] <= _io_rd_big_0_T_129 @[bram.scala 139:52]
      node _io_rd_big_0_T_130 = bits(_io_rd_big_0_WIRE_3, 287, 272) @[bram.scala 139:52]
      node _io_rd_big_0_T_131 = asSInt(_io_rd_big_0_T_130) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[17] <= _io_rd_big_0_T_131 @[bram.scala 139:52]
      node _io_rd_big_0_T_132 = bits(_io_rd_big_0_WIRE_3, 303, 288) @[bram.scala 139:52]
      node _io_rd_big_0_T_133 = asSInt(_io_rd_big_0_T_132) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[18] <= _io_rd_big_0_T_133 @[bram.scala 139:52]
      node _io_rd_big_0_T_134 = bits(_io_rd_big_0_WIRE_3, 319, 304) @[bram.scala 139:52]
      node _io_rd_big_0_T_135 = asSInt(_io_rd_big_0_T_134) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[19] <= _io_rd_big_0_T_135 @[bram.scala 139:52]
      node _io_rd_big_0_T_136 = bits(_io_rd_big_0_WIRE_3, 335, 320) @[bram.scala 139:52]
      node _io_rd_big_0_T_137 = asSInt(_io_rd_big_0_T_136) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[20] <= _io_rd_big_0_T_137 @[bram.scala 139:52]
      node _io_rd_big_0_T_138 = bits(_io_rd_big_0_WIRE_3, 351, 336) @[bram.scala 139:52]
      node _io_rd_big_0_T_139 = asSInt(_io_rd_big_0_T_138) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[21] <= _io_rd_big_0_T_139 @[bram.scala 139:52]
      node _io_rd_big_0_T_140 = bits(_io_rd_big_0_WIRE_3, 367, 352) @[bram.scala 139:52]
      node _io_rd_big_0_T_141 = asSInt(_io_rd_big_0_T_140) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[22] <= _io_rd_big_0_T_141 @[bram.scala 139:52]
      node _io_rd_big_0_T_142 = bits(_io_rd_big_0_WIRE_3, 383, 368) @[bram.scala 139:52]
      node _io_rd_big_0_T_143 = asSInt(_io_rd_big_0_T_142) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[23] <= _io_rd_big_0_T_143 @[bram.scala 139:52]
      node _io_rd_big_0_T_144 = bits(_io_rd_big_0_WIRE_3, 399, 384) @[bram.scala 139:52]
      node _io_rd_big_0_T_145 = asSInt(_io_rd_big_0_T_144) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[24] <= _io_rd_big_0_T_145 @[bram.scala 139:52]
      node _io_rd_big_0_T_146 = bits(_io_rd_big_0_WIRE_3, 415, 400) @[bram.scala 139:52]
      node _io_rd_big_0_T_147 = asSInt(_io_rd_big_0_T_146) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[25] <= _io_rd_big_0_T_147 @[bram.scala 139:52]
      node _io_rd_big_0_T_148 = bits(_io_rd_big_0_WIRE_3, 431, 416) @[bram.scala 139:52]
      node _io_rd_big_0_T_149 = asSInt(_io_rd_big_0_T_148) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[26] <= _io_rd_big_0_T_149 @[bram.scala 139:52]
      node _io_rd_big_0_T_150 = bits(_io_rd_big_0_WIRE_3, 447, 432) @[bram.scala 139:52]
      node _io_rd_big_0_T_151 = asSInt(_io_rd_big_0_T_150) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[27] <= _io_rd_big_0_T_151 @[bram.scala 139:52]
      node _io_rd_big_0_T_152 = bits(_io_rd_big_0_WIRE_3, 463, 448) @[bram.scala 139:52]
      node _io_rd_big_0_T_153 = asSInt(_io_rd_big_0_T_152) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[28] <= _io_rd_big_0_T_153 @[bram.scala 139:52]
      node _io_rd_big_0_T_154 = bits(_io_rd_big_0_WIRE_3, 479, 464) @[bram.scala 139:52]
      node _io_rd_big_0_T_155 = asSInt(_io_rd_big_0_T_154) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[29] <= _io_rd_big_0_T_155 @[bram.scala 139:52]
      node _io_rd_big_0_T_156 = bits(_io_rd_big_0_WIRE_3, 495, 480) @[bram.scala 139:52]
      node _io_rd_big_0_T_157 = asSInt(_io_rd_big_0_T_156) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[30] <= _io_rd_big_0_T_157 @[bram.scala 139:52]
      node _io_rd_big_0_T_158 = bits(_io_rd_big_0_WIRE_3, 511, 496) @[bram.scala 139:52]
      node _io_rd_big_0_T_159 = asSInt(_io_rd_big_0_T_158) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[31] <= _io_rd_big_0_T_159 @[bram.scala 139:52]
      node _io_rd_big_0_T_160 = bits(_io_rd_big_0_WIRE_3, 527, 512) @[bram.scala 139:52]
      node _io_rd_big_0_T_161 = asSInt(_io_rd_big_0_T_160) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[32] <= _io_rd_big_0_T_161 @[bram.scala 139:52]
      node _io_rd_big_0_T_162 = bits(_io_rd_big_0_WIRE_3, 543, 528) @[bram.scala 139:52]
      node _io_rd_big_0_T_163 = asSInt(_io_rd_big_0_T_162) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[33] <= _io_rd_big_0_T_163 @[bram.scala 139:52]
      node _io_rd_big_0_T_164 = bits(_io_rd_big_0_WIRE_3, 559, 544) @[bram.scala 139:52]
      node _io_rd_big_0_T_165 = asSInt(_io_rd_big_0_T_164) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[34] <= _io_rd_big_0_T_165 @[bram.scala 139:52]
      node _io_rd_big_0_T_166 = bits(_io_rd_big_0_WIRE_3, 575, 560) @[bram.scala 139:52]
      node _io_rd_big_0_T_167 = asSInt(_io_rd_big_0_T_166) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[35] <= _io_rd_big_0_T_167 @[bram.scala 139:52]
      node _io_rd_big_0_T_168 = bits(_io_rd_big_0_WIRE_3, 591, 576) @[bram.scala 139:52]
      node _io_rd_big_0_T_169 = asSInt(_io_rd_big_0_T_168) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[36] <= _io_rd_big_0_T_169 @[bram.scala 139:52]
      node _io_rd_big_0_T_170 = bits(_io_rd_big_0_WIRE_3, 607, 592) @[bram.scala 139:52]
      node _io_rd_big_0_T_171 = asSInt(_io_rd_big_0_T_170) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[37] <= _io_rd_big_0_T_171 @[bram.scala 139:52]
      node _io_rd_big_0_T_172 = bits(_io_rd_big_0_WIRE_3, 623, 608) @[bram.scala 139:52]
      node _io_rd_big_0_T_173 = asSInt(_io_rd_big_0_T_172) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[38] <= _io_rd_big_0_T_173 @[bram.scala 139:52]
      node _io_rd_big_0_T_174 = bits(_io_rd_big_0_WIRE_3, 639, 624) @[bram.scala 139:52]
      node _io_rd_big_0_T_175 = asSInt(_io_rd_big_0_T_174) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[39] <= _io_rd_big_0_T_175 @[bram.scala 139:52]
      node _io_rd_big_0_T_176 = bits(_io_rd_big_0_WIRE_3, 655, 640) @[bram.scala 139:52]
      node _io_rd_big_0_T_177 = asSInt(_io_rd_big_0_T_176) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[40] <= _io_rd_big_0_T_177 @[bram.scala 139:52]
      node _io_rd_big_0_T_178 = bits(_io_rd_big_0_WIRE_3, 671, 656) @[bram.scala 139:52]
      node _io_rd_big_0_T_179 = asSInt(_io_rd_big_0_T_178) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[41] <= _io_rd_big_0_T_179 @[bram.scala 139:52]
      node _io_rd_big_0_T_180 = bits(_io_rd_big_0_WIRE_3, 687, 672) @[bram.scala 139:52]
      node _io_rd_big_0_T_181 = asSInt(_io_rd_big_0_T_180) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[42] <= _io_rd_big_0_T_181 @[bram.scala 139:52]
      node _io_rd_big_0_T_182 = bits(_io_rd_big_0_WIRE_3, 703, 688) @[bram.scala 139:52]
      node _io_rd_big_0_T_183 = asSInt(_io_rd_big_0_T_182) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[43] <= _io_rd_big_0_T_183 @[bram.scala 139:52]
      node _io_rd_big_0_T_184 = bits(_io_rd_big_0_WIRE_3, 719, 704) @[bram.scala 139:52]
      node _io_rd_big_0_T_185 = asSInt(_io_rd_big_0_T_184) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[44] <= _io_rd_big_0_T_185 @[bram.scala 139:52]
      node _io_rd_big_0_T_186 = bits(_io_rd_big_0_WIRE_3, 735, 720) @[bram.scala 139:52]
      node _io_rd_big_0_T_187 = asSInt(_io_rd_big_0_T_186) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[45] <= _io_rd_big_0_T_187 @[bram.scala 139:52]
      node _io_rd_big_0_T_188 = bits(_io_rd_big_0_WIRE_3, 751, 736) @[bram.scala 139:52]
      node _io_rd_big_0_T_189 = asSInt(_io_rd_big_0_T_188) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[46] <= _io_rd_big_0_T_189 @[bram.scala 139:52]
      node _io_rd_big_0_T_190 = bits(_io_rd_big_0_WIRE_3, 767, 752) @[bram.scala 139:52]
      node _io_rd_big_0_T_191 = asSInt(_io_rd_big_0_T_190) @[bram.scala 139:52]
      _io_rd_big_0_WIRE_2.data[47] <= _io_rd_big_0_T_191 @[bram.scala 139:52]
      io.rd_big[0].data[0] <= _io_rd_big_0_WIRE_2.data[0] @[bram.scala 139:22]
      io.rd_big[0].data[1] <= _io_rd_big_0_WIRE_2.data[1] @[bram.scala 139:22]
      io.rd_big[0].data[2] <= _io_rd_big_0_WIRE_2.data[2] @[bram.scala 139:22]
      io.rd_big[0].data[3] <= _io_rd_big_0_WIRE_2.data[3] @[bram.scala 139:22]
      io.rd_big[0].data[4] <= _io_rd_big_0_WIRE_2.data[4] @[bram.scala 139:22]
      io.rd_big[0].data[5] <= _io_rd_big_0_WIRE_2.data[5] @[bram.scala 139:22]
      io.rd_big[0].data[6] <= _io_rd_big_0_WIRE_2.data[6] @[bram.scala 139:22]
      io.rd_big[0].data[7] <= _io_rd_big_0_WIRE_2.data[7] @[bram.scala 139:22]
      io.rd_big[0].data[8] <= _io_rd_big_0_WIRE_2.data[8] @[bram.scala 139:22]
      io.rd_big[0].data[9] <= _io_rd_big_0_WIRE_2.data[9] @[bram.scala 139:22]
      io.rd_big[0].data[10] <= _io_rd_big_0_WIRE_2.data[10] @[bram.scala 139:22]
      io.rd_big[0].data[11] <= _io_rd_big_0_WIRE_2.data[11] @[bram.scala 139:22]
      io.rd_big[0].data[12] <= _io_rd_big_0_WIRE_2.data[12] @[bram.scala 139:22]
      io.rd_big[0].data[13] <= _io_rd_big_0_WIRE_2.data[13] @[bram.scala 139:22]
      io.rd_big[0].data[14] <= _io_rd_big_0_WIRE_2.data[14] @[bram.scala 139:22]
      io.rd_big[0].data[15] <= _io_rd_big_0_WIRE_2.data[15] @[bram.scala 139:22]
      io.rd_big[0].data[16] <= _io_rd_big_0_WIRE_2.data[16] @[bram.scala 139:22]
      io.rd_big[0].data[17] <= _io_rd_big_0_WIRE_2.data[17] @[bram.scala 139:22]
      io.rd_big[0].data[18] <= _io_rd_big_0_WIRE_2.data[18] @[bram.scala 139:22]
      io.rd_big[0].data[19] <= _io_rd_big_0_WIRE_2.data[19] @[bram.scala 139:22]
      io.rd_big[0].data[20] <= _io_rd_big_0_WIRE_2.data[20] @[bram.scala 139:22]
      io.rd_big[0].data[21] <= _io_rd_big_0_WIRE_2.data[21] @[bram.scala 139:22]
      io.rd_big[0].data[22] <= _io_rd_big_0_WIRE_2.data[22] @[bram.scala 139:22]
      io.rd_big[0].data[23] <= _io_rd_big_0_WIRE_2.data[23] @[bram.scala 139:22]
      io.rd_big[0].data[24] <= _io_rd_big_0_WIRE_2.data[24] @[bram.scala 139:22]
      io.rd_big[0].data[25] <= _io_rd_big_0_WIRE_2.data[25] @[bram.scala 139:22]
      io.rd_big[0].data[26] <= _io_rd_big_0_WIRE_2.data[26] @[bram.scala 139:22]
      io.rd_big[0].data[27] <= _io_rd_big_0_WIRE_2.data[27] @[bram.scala 139:22]
      io.rd_big[0].data[28] <= _io_rd_big_0_WIRE_2.data[28] @[bram.scala 139:22]
      io.rd_big[0].data[29] <= _io_rd_big_0_WIRE_2.data[29] @[bram.scala 139:22]
      io.rd_big[0].data[30] <= _io_rd_big_0_WIRE_2.data[30] @[bram.scala 139:22]
      io.rd_big[0].data[31] <= _io_rd_big_0_WIRE_2.data[31] @[bram.scala 139:22]
      io.rd_big[0].data[32] <= _io_rd_big_0_WIRE_2.data[32] @[bram.scala 139:22]
      io.rd_big[0].data[33] <= _io_rd_big_0_WIRE_2.data[33] @[bram.scala 139:22]
      io.rd_big[0].data[34] <= _io_rd_big_0_WIRE_2.data[34] @[bram.scala 139:22]
      io.rd_big[0].data[35] <= _io_rd_big_0_WIRE_2.data[35] @[bram.scala 139:22]
      io.rd_big[0].data[36] <= _io_rd_big_0_WIRE_2.data[36] @[bram.scala 139:22]
      io.rd_big[0].data[37] <= _io_rd_big_0_WIRE_2.data[37] @[bram.scala 139:22]
      io.rd_big[0].data[38] <= _io_rd_big_0_WIRE_2.data[38] @[bram.scala 139:22]
      io.rd_big[0].data[39] <= _io_rd_big_0_WIRE_2.data[39] @[bram.scala 139:22]
      io.rd_big[0].data[40] <= _io_rd_big_0_WIRE_2.data[40] @[bram.scala 139:22]
      io.rd_big[0].data[41] <= _io_rd_big_0_WIRE_2.data[41] @[bram.scala 139:22]
      io.rd_big[0].data[42] <= _io_rd_big_0_WIRE_2.data[42] @[bram.scala 139:22]
      io.rd_big[0].data[43] <= _io_rd_big_0_WIRE_2.data[43] @[bram.scala 139:22]
      io.rd_big[0].data[44] <= _io_rd_big_0_WIRE_2.data[44] @[bram.scala 139:22]
      io.rd_big[0].data[45] <= _io_rd_big_0_WIRE_2.data[45] @[bram.scala 139:22]
      io.rd_big[0].data[46] <= _io_rd_big_0_WIRE_2.data[46] @[bram.scala 139:22]
      io.rd_big[0].data[47] <= _io_rd_big_0_WIRE_2.data[47] @[bram.scala 139:22]
      skip @[bram.scala 137:16]
    wire _typ_WIRE : UInt<2>[2] @[bram.scala 143:30]
    _typ_WIRE[0] <= UInt<2>("h00") @[bram.scala 143:30]
    _typ_WIRE[1] <= UInt<2>("h00") @[bram.scala 143:30]
    reg typ : UInt<2>[2], clock with : (reset => (reset, _typ_WIRE)) @[bram.scala 143:22]
    typ[0] <= io.rd_addr1.addrs[1].addr @[bram.scala 144:12]
    typ[1] <= io.rd_addr2.addrs[1].addr @[bram.scala 145:12]
    wire _small_banks_0_addra_WIRE : UInt<9> @[bram.scala 164:53]
    _small_banks_0_addra_WIRE <= UInt<1>("h00") @[bram.scala 164:53]
    node _small_banks_0_addra_T = eq(io.rd_addr1.addrs[1].bank_id, UInt<1>("h00")) @[bram.scala 165:48]
    node _small_banks_0_addra_T_1 = eq(io.rd_addr1.addrs[1].bank_id, UInt<1>("h01")) @[bram.scala 165:48]
    node _small_banks_0_addra_T_2 = eq(io.rd_addr1.addrs[1].bank_id, UInt<2>("h02")) @[bram.scala 165:48]
    node _small_banks_0_addra_T_3 = eq(io.rd_addr1.addrs[1].bank_id, UInt<2>("h03")) @[bram.scala 165:48]
    node _small_banks_0_addra_T_4 = mux(_small_banks_0_addra_T_3, io.rd_addr1.addrs[2].addr, _small_banks_0_addra_WIRE) @[Mux.scala 98:16]
    node _small_banks_0_addra_T_5 = mux(_small_banks_0_addra_T_2, io.rd_addr1.addrs[3].addr, _small_banks_0_addra_T_4) @[Mux.scala 98:16]
    node _small_banks_0_addra_T_6 = mux(_small_banks_0_addra_T_1, io.rd_addr1.addrs[4].addr, _small_banks_0_addra_T_5) @[Mux.scala 98:16]
    node _small_banks_0_addra_T_7 = mux(_small_banks_0_addra_T, io.rd_addr1.addrs[1].addr, _small_banks_0_addra_T_6) @[Mux.scala 98:16]
    small_banks[0].addra <= _small_banks_0_addra_T_7 @[bram.scala 164:30]
    wire _small_banks_4_addra_WIRE : UInt<9> @[bram.scala 167:55]
    _small_banks_4_addra_WIRE <= UInt<1>("h00") @[bram.scala 167:55]
    node _small_banks_4_addra_T = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h04")) @[bram.scala 168:48]
    node _small_banks_4_addra_T_1 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h05")) @[bram.scala 168:48]
    node _small_banks_4_addra_T_2 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h06")) @[bram.scala 168:48]
    node _small_banks_4_addra_T_3 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h07")) @[bram.scala 168:48]
    node _small_banks_4_addra_T_4 = mux(_small_banks_4_addra_T_3, io.rd_addr2.addrs[2].addr, _small_banks_4_addra_WIRE) @[Mux.scala 98:16]
    node _small_banks_4_addra_T_5 = mux(_small_banks_4_addra_T_2, io.rd_addr2.addrs[3].addr, _small_banks_4_addra_T_4) @[Mux.scala 98:16]
    node _small_banks_4_addra_T_6 = mux(_small_banks_4_addra_T_1, io.rd_addr2.addrs[4].addr, _small_banks_4_addra_T_5) @[Mux.scala 98:16]
    node _small_banks_4_addra_T_7 = mux(_small_banks_4_addra_T, io.rd_addr2.addrs[1].addr, _small_banks_4_addra_T_6) @[Mux.scala 98:16]
    small_banks[4].addra <= _small_banks_4_addra_T_7 @[bram.scala 167:32]
    wire _io_rd_small_0_0_WIRE : {data : SInt<16>[8]} @[bram.scala 170:50]
    node _io_rd_small_0_0_T = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_0_WIRE.data[0] <= _io_rd_small_0_0_T @[bram.scala 170:50]
    node _io_rd_small_0_0_T_1 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_0_WIRE.data[1] <= _io_rd_small_0_0_T_1 @[bram.scala 170:50]
    node _io_rd_small_0_0_T_2 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_0_WIRE.data[2] <= _io_rd_small_0_0_T_2 @[bram.scala 170:50]
    node _io_rd_small_0_0_T_3 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_0_WIRE.data[3] <= _io_rd_small_0_0_T_3 @[bram.scala 170:50]
    node _io_rd_small_0_0_T_4 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_0_WIRE.data[4] <= _io_rd_small_0_0_T_4 @[bram.scala 170:50]
    node _io_rd_small_0_0_T_5 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_0_WIRE.data[5] <= _io_rd_small_0_0_T_5 @[bram.scala 170:50]
    node _io_rd_small_0_0_T_6 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_0_WIRE.data[6] <= _io_rd_small_0_0_T_6 @[bram.scala 170:50]
    node _io_rd_small_0_0_T_7 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_0_WIRE.data[7] <= _io_rd_small_0_0_T_7 @[bram.scala 170:50]
    node _io_rd_small_0_0_T_8 = eq(typ[0], UInt<1>("h00")) @[bram.scala 171:26]
    wire _io_rd_small_0_0_WIRE_1 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_0_WIRE_2 : UInt<128>
    _io_rd_small_0_0_WIRE_2 <= small_banks[0].douta
    node _io_rd_small_0_0_T_9 = bits(_io_rd_small_0_0_WIRE_2, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_10 = asSInt(_io_rd_small_0_0_T_9) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_1.data[0] <= _io_rd_small_0_0_T_10 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_11 = bits(_io_rd_small_0_0_WIRE_2, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_12 = asSInt(_io_rd_small_0_0_T_11) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_1.data[1] <= _io_rd_small_0_0_T_12 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_13 = bits(_io_rd_small_0_0_WIRE_2, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_14 = asSInt(_io_rd_small_0_0_T_13) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_1.data[2] <= _io_rd_small_0_0_T_14 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_15 = bits(_io_rd_small_0_0_WIRE_2, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_16 = asSInt(_io_rd_small_0_0_T_15) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_1.data[3] <= _io_rd_small_0_0_T_16 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_17 = bits(_io_rd_small_0_0_WIRE_2, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_18 = asSInt(_io_rd_small_0_0_T_17) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_1.data[4] <= _io_rd_small_0_0_T_18 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_19 = bits(_io_rd_small_0_0_WIRE_2, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_20 = asSInt(_io_rd_small_0_0_T_19) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_1.data[5] <= _io_rd_small_0_0_T_20 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_21 = bits(_io_rd_small_0_0_WIRE_2, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_22 = asSInt(_io_rd_small_0_0_T_21) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_1.data[6] <= _io_rd_small_0_0_T_22 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_23 = bits(_io_rd_small_0_0_WIRE_2, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_24 = asSInt(_io_rd_small_0_0_T_23) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_1.data[7] <= _io_rd_small_0_0_T_24 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_25 = eq(typ[0], UInt<1>("h01")) @[bram.scala 171:26]
    wire _io_rd_small_0_0_WIRE_3 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_0_WIRE_4 : UInt<128>
    _io_rd_small_0_0_WIRE_4 <= small_banks[1].douta
    node _io_rd_small_0_0_T_26 = bits(_io_rd_small_0_0_WIRE_4, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_27 = asSInt(_io_rd_small_0_0_T_26) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_3.data[0] <= _io_rd_small_0_0_T_27 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_28 = bits(_io_rd_small_0_0_WIRE_4, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_29 = asSInt(_io_rd_small_0_0_T_28) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_3.data[1] <= _io_rd_small_0_0_T_29 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_30 = bits(_io_rd_small_0_0_WIRE_4, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_31 = asSInt(_io_rd_small_0_0_T_30) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_3.data[2] <= _io_rd_small_0_0_T_31 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_32 = bits(_io_rd_small_0_0_WIRE_4, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_33 = asSInt(_io_rd_small_0_0_T_32) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_3.data[3] <= _io_rd_small_0_0_T_33 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_34 = bits(_io_rd_small_0_0_WIRE_4, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_35 = asSInt(_io_rd_small_0_0_T_34) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_3.data[4] <= _io_rd_small_0_0_T_35 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_36 = bits(_io_rd_small_0_0_WIRE_4, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_37 = asSInt(_io_rd_small_0_0_T_36) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_3.data[5] <= _io_rd_small_0_0_T_37 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_38 = bits(_io_rd_small_0_0_WIRE_4, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_39 = asSInt(_io_rd_small_0_0_T_38) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_3.data[6] <= _io_rd_small_0_0_T_39 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_40 = bits(_io_rd_small_0_0_WIRE_4, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_41 = asSInt(_io_rd_small_0_0_T_40) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_3.data[7] <= _io_rd_small_0_0_T_41 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_42 = eq(typ[0], UInt<2>("h02")) @[bram.scala 171:26]
    wire _io_rd_small_0_0_WIRE_5 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_0_WIRE_6 : UInt<128>
    _io_rd_small_0_0_WIRE_6 <= small_banks[2].douta
    node _io_rd_small_0_0_T_43 = bits(_io_rd_small_0_0_WIRE_6, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_44 = asSInt(_io_rd_small_0_0_T_43) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_5.data[0] <= _io_rd_small_0_0_T_44 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_45 = bits(_io_rd_small_0_0_WIRE_6, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_46 = asSInt(_io_rd_small_0_0_T_45) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_5.data[1] <= _io_rd_small_0_0_T_46 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_47 = bits(_io_rd_small_0_0_WIRE_6, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_48 = asSInt(_io_rd_small_0_0_T_47) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_5.data[2] <= _io_rd_small_0_0_T_48 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_49 = bits(_io_rd_small_0_0_WIRE_6, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_50 = asSInt(_io_rd_small_0_0_T_49) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_5.data[3] <= _io_rd_small_0_0_T_50 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_51 = bits(_io_rd_small_0_0_WIRE_6, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_52 = asSInt(_io_rd_small_0_0_T_51) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_5.data[4] <= _io_rd_small_0_0_T_52 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_53 = bits(_io_rd_small_0_0_WIRE_6, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_54 = asSInt(_io_rd_small_0_0_T_53) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_5.data[5] <= _io_rd_small_0_0_T_54 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_55 = bits(_io_rd_small_0_0_WIRE_6, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_56 = asSInt(_io_rd_small_0_0_T_55) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_5.data[6] <= _io_rd_small_0_0_T_56 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_57 = bits(_io_rd_small_0_0_WIRE_6, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_58 = asSInt(_io_rd_small_0_0_T_57) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_5.data[7] <= _io_rd_small_0_0_T_58 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_59 = eq(typ[0], UInt<2>("h03")) @[bram.scala 171:26]
    wire _io_rd_small_0_0_WIRE_7 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_0_WIRE_8 : UInt<128>
    _io_rd_small_0_0_WIRE_8 <= small_banks[3].douta
    node _io_rd_small_0_0_T_60 = bits(_io_rd_small_0_0_WIRE_8, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_61 = asSInt(_io_rd_small_0_0_T_60) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_7.data[0] <= _io_rd_small_0_0_T_61 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_62 = bits(_io_rd_small_0_0_WIRE_8, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_63 = asSInt(_io_rd_small_0_0_T_62) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_7.data[1] <= _io_rd_small_0_0_T_63 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_64 = bits(_io_rd_small_0_0_WIRE_8, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_65 = asSInt(_io_rd_small_0_0_T_64) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_7.data[2] <= _io_rd_small_0_0_T_65 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_66 = bits(_io_rd_small_0_0_WIRE_8, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_67 = asSInt(_io_rd_small_0_0_T_66) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_7.data[3] <= _io_rd_small_0_0_T_67 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_68 = bits(_io_rd_small_0_0_WIRE_8, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_69 = asSInt(_io_rd_small_0_0_T_68) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_7.data[4] <= _io_rd_small_0_0_T_69 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_70 = bits(_io_rd_small_0_0_WIRE_8, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_71 = asSInt(_io_rd_small_0_0_T_70) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_7.data[5] <= _io_rd_small_0_0_T_71 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_72 = bits(_io_rd_small_0_0_WIRE_8, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_73 = asSInt(_io_rd_small_0_0_T_72) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_7.data[6] <= _io_rd_small_0_0_T_73 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_74 = bits(_io_rd_small_0_0_WIRE_8, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_0_T_75 = asSInt(_io_rd_small_0_0_T_74) @[bram.scala 171:84]
    _io_rd_small_0_0_WIRE_7.data[7] <= _io_rd_small_0_0_T_75 @[bram.scala 171:84]
    node _io_rd_small_0_0_T_76 = mux(_io_rd_small_0_0_T_59, _io_rd_small_0_0_WIRE_7, _io_rd_small_0_0_WIRE) @[Mux.scala 98:16]
    node _io_rd_small_0_0_T_77 = mux(_io_rd_small_0_0_T_42, _io_rd_small_0_0_WIRE_5, _io_rd_small_0_0_T_76) @[Mux.scala 98:16]
    node _io_rd_small_0_0_T_78 = mux(_io_rd_small_0_0_T_25, _io_rd_small_0_0_WIRE_3, _io_rd_small_0_0_T_77) @[Mux.scala 98:16]
    node _io_rd_small_0_0_T_79 = mux(_io_rd_small_0_0_T_8, _io_rd_small_0_0_WIRE_1, _io_rd_small_0_0_T_78) @[Mux.scala 98:16]
    io.rd_small[0][0].data[0] <= _io_rd_small_0_0_T_79.data[0] @[bram.scala 170:27]
    io.rd_small[0][0].data[1] <= _io_rd_small_0_0_T_79.data[1] @[bram.scala 170:27]
    io.rd_small[0][0].data[2] <= _io_rd_small_0_0_T_79.data[2] @[bram.scala 170:27]
    io.rd_small[0][0].data[3] <= _io_rd_small_0_0_T_79.data[3] @[bram.scala 170:27]
    io.rd_small[0][0].data[4] <= _io_rd_small_0_0_T_79.data[4] @[bram.scala 170:27]
    io.rd_small[0][0].data[5] <= _io_rd_small_0_0_T_79.data[5] @[bram.scala 170:27]
    io.rd_small[0][0].data[6] <= _io_rd_small_0_0_T_79.data[6] @[bram.scala 170:27]
    io.rd_small[0][0].data[7] <= _io_rd_small_0_0_T_79.data[7] @[bram.scala 170:27]
    wire _io_rd_small_1_0_WIRE : {data : SInt<16>[8]} @[bram.scala 173:50]
    node _io_rd_small_1_0_T = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_0_WIRE.data[0] <= _io_rd_small_1_0_T @[bram.scala 173:50]
    node _io_rd_small_1_0_T_1 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_0_WIRE.data[1] <= _io_rd_small_1_0_T_1 @[bram.scala 173:50]
    node _io_rd_small_1_0_T_2 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_0_WIRE.data[2] <= _io_rd_small_1_0_T_2 @[bram.scala 173:50]
    node _io_rd_small_1_0_T_3 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_0_WIRE.data[3] <= _io_rd_small_1_0_T_3 @[bram.scala 173:50]
    node _io_rd_small_1_0_T_4 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_0_WIRE.data[4] <= _io_rd_small_1_0_T_4 @[bram.scala 173:50]
    node _io_rd_small_1_0_T_5 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_0_WIRE.data[5] <= _io_rd_small_1_0_T_5 @[bram.scala 173:50]
    node _io_rd_small_1_0_T_6 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_0_WIRE.data[6] <= _io_rd_small_1_0_T_6 @[bram.scala 173:50]
    node _io_rd_small_1_0_T_7 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_0_WIRE.data[7] <= _io_rd_small_1_0_T_7 @[bram.scala 173:50]
    node _io_rd_small_1_0_T_8 = eq(typ[1], UInt<3>("h04")) @[bram.scala 174:26]
    wire _io_rd_small_1_0_WIRE_1 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_0_WIRE_2 : UInt<128>
    _io_rd_small_1_0_WIRE_2 <= small_banks[4].douta
    node _io_rd_small_1_0_T_9 = bits(_io_rd_small_1_0_WIRE_2, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_10 = asSInt(_io_rd_small_1_0_T_9) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_1.data[0] <= _io_rd_small_1_0_T_10 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_11 = bits(_io_rd_small_1_0_WIRE_2, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_12 = asSInt(_io_rd_small_1_0_T_11) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_1.data[1] <= _io_rd_small_1_0_T_12 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_13 = bits(_io_rd_small_1_0_WIRE_2, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_14 = asSInt(_io_rd_small_1_0_T_13) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_1.data[2] <= _io_rd_small_1_0_T_14 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_15 = bits(_io_rd_small_1_0_WIRE_2, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_16 = asSInt(_io_rd_small_1_0_T_15) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_1.data[3] <= _io_rd_small_1_0_T_16 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_17 = bits(_io_rd_small_1_0_WIRE_2, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_18 = asSInt(_io_rd_small_1_0_T_17) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_1.data[4] <= _io_rd_small_1_0_T_18 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_19 = bits(_io_rd_small_1_0_WIRE_2, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_20 = asSInt(_io_rd_small_1_0_T_19) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_1.data[5] <= _io_rd_small_1_0_T_20 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_21 = bits(_io_rd_small_1_0_WIRE_2, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_22 = asSInt(_io_rd_small_1_0_T_21) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_1.data[6] <= _io_rd_small_1_0_T_22 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_23 = bits(_io_rd_small_1_0_WIRE_2, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_24 = asSInt(_io_rd_small_1_0_T_23) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_1.data[7] <= _io_rd_small_1_0_T_24 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_25 = eq(typ[1], UInt<3>("h05")) @[bram.scala 174:26]
    wire _io_rd_small_1_0_WIRE_3 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_0_WIRE_4 : UInt<128>
    _io_rd_small_1_0_WIRE_4 <= small_banks[5].douta
    node _io_rd_small_1_0_T_26 = bits(_io_rd_small_1_0_WIRE_4, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_27 = asSInt(_io_rd_small_1_0_T_26) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_3.data[0] <= _io_rd_small_1_0_T_27 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_28 = bits(_io_rd_small_1_0_WIRE_4, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_29 = asSInt(_io_rd_small_1_0_T_28) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_3.data[1] <= _io_rd_small_1_0_T_29 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_30 = bits(_io_rd_small_1_0_WIRE_4, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_31 = asSInt(_io_rd_small_1_0_T_30) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_3.data[2] <= _io_rd_small_1_0_T_31 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_32 = bits(_io_rd_small_1_0_WIRE_4, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_33 = asSInt(_io_rd_small_1_0_T_32) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_3.data[3] <= _io_rd_small_1_0_T_33 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_34 = bits(_io_rd_small_1_0_WIRE_4, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_35 = asSInt(_io_rd_small_1_0_T_34) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_3.data[4] <= _io_rd_small_1_0_T_35 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_36 = bits(_io_rd_small_1_0_WIRE_4, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_37 = asSInt(_io_rd_small_1_0_T_36) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_3.data[5] <= _io_rd_small_1_0_T_37 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_38 = bits(_io_rd_small_1_0_WIRE_4, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_39 = asSInt(_io_rd_small_1_0_T_38) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_3.data[6] <= _io_rd_small_1_0_T_39 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_40 = bits(_io_rd_small_1_0_WIRE_4, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_41 = asSInt(_io_rd_small_1_0_T_40) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_3.data[7] <= _io_rd_small_1_0_T_41 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_42 = eq(typ[1], UInt<3>("h06")) @[bram.scala 174:26]
    wire _io_rd_small_1_0_WIRE_5 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_0_WIRE_6 : UInt<128>
    _io_rd_small_1_0_WIRE_6 <= small_banks[6].douta
    node _io_rd_small_1_0_T_43 = bits(_io_rd_small_1_0_WIRE_6, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_44 = asSInt(_io_rd_small_1_0_T_43) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_5.data[0] <= _io_rd_small_1_0_T_44 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_45 = bits(_io_rd_small_1_0_WIRE_6, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_46 = asSInt(_io_rd_small_1_0_T_45) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_5.data[1] <= _io_rd_small_1_0_T_46 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_47 = bits(_io_rd_small_1_0_WIRE_6, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_48 = asSInt(_io_rd_small_1_0_T_47) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_5.data[2] <= _io_rd_small_1_0_T_48 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_49 = bits(_io_rd_small_1_0_WIRE_6, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_50 = asSInt(_io_rd_small_1_0_T_49) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_5.data[3] <= _io_rd_small_1_0_T_50 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_51 = bits(_io_rd_small_1_0_WIRE_6, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_52 = asSInt(_io_rd_small_1_0_T_51) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_5.data[4] <= _io_rd_small_1_0_T_52 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_53 = bits(_io_rd_small_1_0_WIRE_6, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_54 = asSInt(_io_rd_small_1_0_T_53) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_5.data[5] <= _io_rd_small_1_0_T_54 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_55 = bits(_io_rd_small_1_0_WIRE_6, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_56 = asSInt(_io_rd_small_1_0_T_55) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_5.data[6] <= _io_rd_small_1_0_T_56 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_57 = bits(_io_rd_small_1_0_WIRE_6, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_58 = asSInt(_io_rd_small_1_0_T_57) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_5.data[7] <= _io_rd_small_1_0_T_58 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_59 = eq(typ[1], UInt<3>("h07")) @[bram.scala 174:26]
    wire _io_rd_small_1_0_WIRE_7 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_0_WIRE_8 : UInt<128>
    _io_rd_small_1_0_WIRE_8 <= small_banks[7].douta
    node _io_rd_small_1_0_T_60 = bits(_io_rd_small_1_0_WIRE_8, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_61 = asSInt(_io_rd_small_1_0_T_60) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_7.data[0] <= _io_rd_small_1_0_T_61 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_62 = bits(_io_rd_small_1_0_WIRE_8, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_63 = asSInt(_io_rd_small_1_0_T_62) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_7.data[1] <= _io_rd_small_1_0_T_63 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_64 = bits(_io_rd_small_1_0_WIRE_8, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_65 = asSInt(_io_rd_small_1_0_T_64) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_7.data[2] <= _io_rd_small_1_0_T_65 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_66 = bits(_io_rd_small_1_0_WIRE_8, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_67 = asSInt(_io_rd_small_1_0_T_66) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_7.data[3] <= _io_rd_small_1_0_T_67 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_68 = bits(_io_rd_small_1_0_WIRE_8, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_69 = asSInt(_io_rd_small_1_0_T_68) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_7.data[4] <= _io_rd_small_1_0_T_69 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_70 = bits(_io_rd_small_1_0_WIRE_8, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_71 = asSInt(_io_rd_small_1_0_T_70) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_7.data[5] <= _io_rd_small_1_0_T_71 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_72 = bits(_io_rd_small_1_0_WIRE_8, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_73 = asSInt(_io_rd_small_1_0_T_72) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_7.data[6] <= _io_rd_small_1_0_T_73 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_74 = bits(_io_rd_small_1_0_WIRE_8, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_0_T_75 = asSInt(_io_rd_small_1_0_T_74) @[bram.scala 174:90]
    _io_rd_small_1_0_WIRE_7.data[7] <= _io_rd_small_1_0_T_75 @[bram.scala 174:90]
    node _io_rd_small_1_0_T_76 = mux(_io_rd_small_1_0_T_59, _io_rd_small_1_0_WIRE_7, _io_rd_small_1_0_WIRE) @[Mux.scala 98:16]
    node _io_rd_small_1_0_T_77 = mux(_io_rd_small_1_0_T_42, _io_rd_small_1_0_WIRE_5, _io_rd_small_1_0_T_76) @[Mux.scala 98:16]
    node _io_rd_small_1_0_T_78 = mux(_io_rd_small_1_0_T_25, _io_rd_small_1_0_WIRE_3, _io_rd_small_1_0_T_77) @[Mux.scala 98:16]
    node _io_rd_small_1_0_T_79 = mux(_io_rd_small_1_0_T_8, _io_rd_small_1_0_WIRE_1, _io_rd_small_1_0_T_78) @[Mux.scala 98:16]
    io.rd_small[1][0].data[0] <= _io_rd_small_1_0_T_79.data[0] @[bram.scala 173:27]
    io.rd_small[1][0].data[1] <= _io_rd_small_1_0_T_79.data[1] @[bram.scala 173:27]
    io.rd_small[1][0].data[2] <= _io_rd_small_1_0_T_79.data[2] @[bram.scala 173:27]
    io.rd_small[1][0].data[3] <= _io_rd_small_1_0_T_79.data[3] @[bram.scala 173:27]
    io.rd_small[1][0].data[4] <= _io_rd_small_1_0_T_79.data[4] @[bram.scala 173:27]
    io.rd_small[1][0].data[5] <= _io_rd_small_1_0_T_79.data[5] @[bram.scala 173:27]
    io.rd_small[1][0].data[6] <= _io_rd_small_1_0_T_79.data[6] @[bram.scala 173:27]
    io.rd_small[1][0].data[7] <= _io_rd_small_1_0_T_79.data[7] @[bram.scala 173:27]
    wire _small_banks_1_addra_WIRE : UInt<9> @[bram.scala 164:53]
    _small_banks_1_addra_WIRE <= UInt<1>("h00") @[bram.scala 164:53]
    node _small_banks_1_addra_T = eq(io.rd_addr1.addrs[1].bank_id, UInt<1>("h00")) @[bram.scala 165:48]
    node _small_banks_1_addra_T_1 = eq(io.rd_addr1.addrs[1].bank_id, UInt<1>("h01")) @[bram.scala 165:48]
    node _small_banks_1_addra_T_2 = eq(io.rd_addr1.addrs[1].bank_id, UInt<2>("h02")) @[bram.scala 165:48]
    node _small_banks_1_addra_T_3 = eq(io.rd_addr1.addrs[1].bank_id, UInt<2>("h03")) @[bram.scala 165:48]
    node _small_banks_1_addra_T_4 = mux(_small_banks_1_addra_T_3, io.rd_addr1.addrs[3].addr, _small_banks_1_addra_WIRE) @[Mux.scala 98:16]
    node _small_banks_1_addra_T_5 = mux(_small_banks_1_addra_T_2, io.rd_addr1.addrs[4].addr, _small_banks_1_addra_T_4) @[Mux.scala 98:16]
    node _small_banks_1_addra_T_6 = mux(_small_banks_1_addra_T_1, io.rd_addr1.addrs[1].addr, _small_banks_1_addra_T_5) @[Mux.scala 98:16]
    node _small_banks_1_addra_T_7 = mux(_small_banks_1_addra_T, io.rd_addr1.addrs[2].addr, _small_banks_1_addra_T_6) @[Mux.scala 98:16]
    small_banks[1].addra <= _small_banks_1_addra_T_7 @[bram.scala 164:30]
    wire _small_banks_5_addra_WIRE : UInt<9> @[bram.scala 167:55]
    _small_banks_5_addra_WIRE <= UInt<1>("h00") @[bram.scala 167:55]
    node _small_banks_5_addra_T = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h04")) @[bram.scala 168:48]
    node _small_banks_5_addra_T_1 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h05")) @[bram.scala 168:48]
    node _small_banks_5_addra_T_2 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h06")) @[bram.scala 168:48]
    node _small_banks_5_addra_T_3 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h07")) @[bram.scala 168:48]
    node _small_banks_5_addra_T_4 = mux(_small_banks_5_addra_T_3, io.rd_addr2.addrs[3].addr, _small_banks_5_addra_WIRE) @[Mux.scala 98:16]
    node _small_banks_5_addra_T_5 = mux(_small_banks_5_addra_T_2, io.rd_addr2.addrs[4].addr, _small_banks_5_addra_T_4) @[Mux.scala 98:16]
    node _small_banks_5_addra_T_6 = mux(_small_banks_5_addra_T_1, io.rd_addr2.addrs[1].addr, _small_banks_5_addra_T_5) @[Mux.scala 98:16]
    node _small_banks_5_addra_T_7 = mux(_small_banks_5_addra_T, io.rd_addr2.addrs[2].addr, _small_banks_5_addra_T_6) @[Mux.scala 98:16]
    small_banks[5].addra <= _small_banks_5_addra_T_7 @[bram.scala 167:32]
    wire _io_rd_small_0_1_WIRE : {data : SInt<16>[8]} @[bram.scala 170:50]
    node _io_rd_small_0_1_T = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_1_WIRE.data[0] <= _io_rd_small_0_1_T @[bram.scala 170:50]
    node _io_rd_small_0_1_T_1 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_1_WIRE.data[1] <= _io_rd_small_0_1_T_1 @[bram.scala 170:50]
    node _io_rd_small_0_1_T_2 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_1_WIRE.data[2] <= _io_rd_small_0_1_T_2 @[bram.scala 170:50]
    node _io_rd_small_0_1_T_3 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_1_WIRE.data[3] <= _io_rd_small_0_1_T_3 @[bram.scala 170:50]
    node _io_rd_small_0_1_T_4 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_1_WIRE.data[4] <= _io_rd_small_0_1_T_4 @[bram.scala 170:50]
    node _io_rd_small_0_1_T_5 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_1_WIRE.data[5] <= _io_rd_small_0_1_T_5 @[bram.scala 170:50]
    node _io_rd_small_0_1_T_6 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_1_WIRE.data[6] <= _io_rd_small_0_1_T_6 @[bram.scala 170:50]
    node _io_rd_small_0_1_T_7 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_1_WIRE.data[7] <= _io_rd_small_0_1_T_7 @[bram.scala 170:50]
    node _io_rd_small_0_1_T_8 = eq(typ[0], UInt<1>("h00")) @[bram.scala 171:26]
    wire _io_rd_small_0_1_WIRE_1 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_1_WIRE_2 : UInt<128>
    _io_rd_small_0_1_WIRE_2 <= small_banks[1].douta
    node _io_rd_small_0_1_T_9 = bits(_io_rd_small_0_1_WIRE_2, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_10 = asSInt(_io_rd_small_0_1_T_9) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_1.data[0] <= _io_rd_small_0_1_T_10 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_11 = bits(_io_rd_small_0_1_WIRE_2, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_12 = asSInt(_io_rd_small_0_1_T_11) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_1.data[1] <= _io_rd_small_0_1_T_12 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_13 = bits(_io_rd_small_0_1_WIRE_2, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_14 = asSInt(_io_rd_small_0_1_T_13) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_1.data[2] <= _io_rd_small_0_1_T_14 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_15 = bits(_io_rd_small_0_1_WIRE_2, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_16 = asSInt(_io_rd_small_0_1_T_15) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_1.data[3] <= _io_rd_small_0_1_T_16 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_17 = bits(_io_rd_small_0_1_WIRE_2, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_18 = asSInt(_io_rd_small_0_1_T_17) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_1.data[4] <= _io_rd_small_0_1_T_18 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_19 = bits(_io_rd_small_0_1_WIRE_2, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_20 = asSInt(_io_rd_small_0_1_T_19) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_1.data[5] <= _io_rd_small_0_1_T_20 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_21 = bits(_io_rd_small_0_1_WIRE_2, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_22 = asSInt(_io_rd_small_0_1_T_21) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_1.data[6] <= _io_rd_small_0_1_T_22 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_23 = bits(_io_rd_small_0_1_WIRE_2, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_24 = asSInt(_io_rd_small_0_1_T_23) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_1.data[7] <= _io_rd_small_0_1_T_24 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_25 = eq(typ[0], UInt<1>("h01")) @[bram.scala 171:26]
    wire _io_rd_small_0_1_WIRE_3 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_1_WIRE_4 : UInt<128>
    _io_rd_small_0_1_WIRE_4 <= small_banks[2].douta
    node _io_rd_small_0_1_T_26 = bits(_io_rd_small_0_1_WIRE_4, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_27 = asSInt(_io_rd_small_0_1_T_26) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_3.data[0] <= _io_rd_small_0_1_T_27 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_28 = bits(_io_rd_small_0_1_WIRE_4, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_29 = asSInt(_io_rd_small_0_1_T_28) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_3.data[1] <= _io_rd_small_0_1_T_29 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_30 = bits(_io_rd_small_0_1_WIRE_4, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_31 = asSInt(_io_rd_small_0_1_T_30) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_3.data[2] <= _io_rd_small_0_1_T_31 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_32 = bits(_io_rd_small_0_1_WIRE_4, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_33 = asSInt(_io_rd_small_0_1_T_32) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_3.data[3] <= _io_rd_small_0_1_T_33 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_34 = bits(_io_rd_small_0_1_WIRE_4, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_35 = asSInt(_io_rd_small_0_1_T_34) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_3.data[4] <= _io_rd_small_0_1_T_35 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_36 = bits(_io_rd_small_0_1_WIRE_4, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_37 = asSInt(_io_rd_small_0_1_T_36) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_3.data[5] <= _io_rd_small_0_1_T_37 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_38 = bits(_io_rd_small_0_1_WIRE_4, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_39 = asSInt(_io_rd_small_0_1_T_38) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_3.data[6] <= _io_rd_small_0_1_T_39 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_40 = bits(_io_rd_small_0_1_WIRE_4, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_41 = asSInt(_io_rd_small_0_1_T_40) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_3.data[7] <= _io_rd_small_0_1_T_41 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_42 = eq(typ[0], UInt<2>("h02")) @[bram.scala 171:26]
    wire _io_rd_small_0_1_WIRE_5 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_1_WIRE_6 : UInt<128>
    _io_rd_small_0_1_WIRE_6 <= small_banks[3].douta
    node _io_rd_small_0_1_T_43 = bits(_io_rd_small_0_1_WIRE_6, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_44 = asSInt(_io_rd_small_0_1_T_43) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_5.data[0] <= _io_rd_small_0_1_T_44 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_45 = bits(_io_rd_small_0_1_WIRE_6, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_46 = asSInt(_io_rd_small_0_1_T_45) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_5.data[1] <= _io_rd_small_0_1_T_46 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_47 = bits(_io_rd_small_0_1_WIRE_6, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_48 = asSInt(_io_rd_small_0_1_T_47) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_5.data[2] <= _io_rd_small_0_1_T_48 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_49 = bits(_io_rd_small_0_1_WIRE_6, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_50 = asSInt(_io_rd_small_0_1_T_49) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_5.data[3] <= _io_rd_small_0_1_T_50 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_51 = bits(_io_rd_small_0_1_WIRE_6, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_52 = asSInt(_io_rd_small_0_1_T_51) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_5.data[4] <= _io_rd_small_0_1_T_52 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_53 = bits(_io_rd_small_0_1_WIRE_6, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_54 = asSInt(_io_rd_small_0_1_T_53) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_5.data[5] <= _io_rd_small_0_1_T_54 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_55 = bits(_io_rd_small_0_1_WIRE_6, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_56 = asSInt(_io_rd_small_0_1_T_55) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_5.data[6] <= _io_rd_small_0_1_T_56 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_57 = bits(_io_rd_small_0_1_WIRE_6, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_58 = asSInt(_io_rd_small_0_1_T_57) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_5.data[7] <= _io_rd_small_0_1_T_58 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_59 = eq(typ[0], UInt<2>("h03")) @[bram.scala 171:26]
    wire _io_rd_small_0_1_WIRE_7 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_1_WIRE_8 : UInt<128>
    _io_rd_small_0_1_WIRE_8 <= small_banks[0].douta
    node _io_rd_small_0_1_T_60 = bits(_io_rd_small_0_1_WIRE_8, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_61 = asSInt(_io_rd_small_0_1_T_60) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_7.data[0] <= _io_rd_small_0_1_T_61 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_62 = bits(_io_rd_small_0_1_WIRE_8, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_63 = asSInt(_io_rd_small_0_1_T_62) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_7.data[1] <= _io_rd_small_0_1_T_63 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_64 = bits(_io_rd_small_0_1_WIRE_8, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_65 = asSInt(_io_rd_small_0_1_T_64) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_7.data[2] <= _io_rd_small_0_1_T_65 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_66 = bits(_io_rd_small_0_1_WIRE_8, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_67 = asSInt(_io_rd_small_0_1_T_66) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_7.data[3] <= _io_rd_small_0_1_T_67 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_68 = bits(_io_rd_small_0_1_WIRE_8, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_69 = asSInt(_io_rd_small_0_1_T_68) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_7.data[4] <= _io_rd_small_0_1_T_69 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_70 = bits(_io_rd_small_0_1_WIRE_8, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_71 = asSInt(_io_rd_small_0_1_T_70) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_7.data[5] <= _io_rd_small_0_1_T_71 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_72 = bits(_io_rd_small_0_1_WIRE_8, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_73 = asSInt(_io_rd_small_0_1_T_72) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_7.data[6] <= _io_rd_small_0_1_T_73 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_74 = bits(_io_rd_small_0_1_WIRE_8, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_1_T_75 = asSInt(_io_rd_small_0_1_T_74) @[bram.scala 171:84]
    _io_rd_small_0_1_WIRE_7.data[7] <= _io_rd_small_0_1_T_75 @[bram.scala 171:84]
    node _io_rd_small_0_1_T_76 = mux(_io_rd_small_0_1_T_59, _io_rd_small_0_1_WIRE_7, _io_rd_small_0_1_WIRE) @[Mux.scala 98:16]
    node _io_rd_small_0_1_T_77 = mux(_io_rd_small_0_1_T_42, _io_rd_small_0_1_WIRE_5, _io_rd_small_0_1_T_76) @[Mux.scala 98:16]
    node _io_rd_small_0_1_T_78 = mux(_io_rd_small_0_1_T_25, _io_rd_small_0_1_WIRE_3, _io_rd_small_0_1_T_77) @[Mux.scala 98:16]
    node _io_rd_small_0_1_T_79 = mux(_io_rd_small_0_1_T_8, _io_rd_small_0_1_WIRE_1, _io_rd_small_0_1_T_78) @[Mux.scala 98:16]
    io.rd_small[0][1].data[0] <= _io_rd_small_0_1_T_79.data[0] @[bram.scala 170:27]
    io.rd_small[0][1].data[1] <= _io_rd_small_0_1_T_79.data[1] @[bram.scala 170:27]
    io.rd_small[0][1].data[2] <= _io_rd_small_0_1_T_79.data[2] @[bram.scala 170:27]
    io.rd_small[0][1].data[3] <= _io_rd_small_0_1_T_79.data[3] @[bram.scala 170:27]
    io.rd_small[0][1].data[4] <= _io_rd_small_0_1_T_79.data[4] @[bram.scala 170:27]
    io.rd_small[0][1].data[5] <= _io_rd_small_0_1_T_79.data[5] @[bram.scala 170:27]
    io.rd_small[0][1].data[6] <= _io_rd_small_0_1_T_79.data[6] @[bram.scala 170:27]
    io.rd_small[0][1].data[7] <= _io_rd_small_0_1_T_79.data[7] @[bram.scala 170:27]
    wire _io_rd_small_1_1_WIRE : {data : SInt<16>[8]} @[bram.scala 173:50]
    node _io_rd_small_1_1_T = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_1_WIRE.data[0] <= _io_rd_small_1_1_T @[bram.scala 173:50]
    node _io_rd_small_1_1_T_1 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_1_WIRE.data[1] <= _io_rd_small_1_1_T_1 @[bram.scala 173:50]
    node _io_rd_small_1_1_T_2 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_1_WIRE.data[2] <= _io_rd_small_1_1_T_2 @[bram.scala 173:50]
    node _io_rd_small_1_1_T_3 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_1_WIRE.data[3] <= _io_rd_small_1_1_T_3 @[bram.scala 173:50]
    node _io_rd_small_1_1_T_4 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_1_WIRE.data[4] <= _io_rd_small_1_1_T_4 @[bram.scala 173:50]
    node _io_rd_small_1_1_T_5 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_1_WIRE.data[5] <= _io_rd_small_1_1_T_5 @[bram.scala 173:50]
    node _io_rd_small_1_1_T_6 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_1_WIRE.data[6] <= _io_rd_small_1_1_T_6 @[bram.scala 173:50]
    node _io_rd_small_1_1_T_7 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_1_WIRE.data[7] <= _io_rd_small_1_1_T_7 @[bram.scala 173:50]
    node _io_rd_small_1_1_T_8 = eq(typ[1], UInt<3>("h04")) @[bram.scala 174:26]
    wire _io_rd_small_1_1_WIRE_1 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_1_WIRE_2 : UInt<128>
    _io_rd_small_1_1_WIRE_2 <= small_banks[5].douta
    node _io_rd_small_1_1_T_9 = bits(_io_rd_small_1_1_WIRE_2, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_10 = asSInt(_io_rd_small_1_1_T_9) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_1.data[0] <= _io_rd_small_1_1_T_10 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_11 = bits(_io_rd_small_1_1_WIRE_2, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_12 = asSInt(_io_rd_small_1_1_T_11) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_1.data[1] <= _io_rd_small_1_1_T_12 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_13 = bits(_io_rd_small_1_1_WIRE_2, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_14 = asSInt(_io_rd_small_1_1_T_13) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_1.data[2] <= _io_rd_small_1_1_T_14 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_15 = bits(_io_rd_small_1_1_WIRE_2, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_16 = asSInt(_io_rd_small_1_1_T_15) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_1.data[3] <= _io_rd_small_1_1_T_16 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_17 = bits(_io_rd_small_1_1_WIRE_2, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_18 = asSInt(_io_rd_small_1_1_T_17) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_1.data[4] <= _io_rd_small_1_1_T_18 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_19 = bits(_io_rd_small_1_1_WIRE_2, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_20 = asSInt(_io_rd_small_1_1_T_19) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_1.data[5] <= _io_rd_small_1_1_T_20 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_21 = bits(_io_rd_small_1_1_WIRE_2, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_22 = asSInt(_io_rd_small_1_1_T_21) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_1.data[6] <= _io_rd_small_1_1_T_22 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_23 = bits(_io_rd_small_1_1_WIRE_2, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_24 = asSInt(_io_rd_small_1_1_T_23) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_1.data[7] <= _io_rd_small_1_1_T_24 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_25 = eq(typ[1], UInt<3>("h05")) @[bram.scala 174:26]
    wire _io_rd_small_1_1_WIRE_3 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_1_WIRE_4 : UInt<128>
    _io_rd_small_1_1_WIRE_4 <= small_banks[6].douta
    node _io_rd_small_1_1_T_26 = bits(_io_rd_small_1_1_WIRE_4, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_27 = asSInt(_io_rd_small_1_1_T_26) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_3.data[0] <= _io_rd_small_1_1_T_27 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_28 = bits(_io_rd_small_1_1_WIRE_4, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_29 = asSInt(_io_rd_small_1_1_T_28) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_3.data[1] <= _io_rd_small_1_1_T_29 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_30 = bits(_io_rd_small_1_1_WIRE_4, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_31 = asSInt(_io_rd_small_1_1_T_30) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_3.data[2] <= _io_rd_small_1_1_T_31 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_32 = bits(_io_rd_small_1_1_WIRE_4, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_33 = asSInt(_io_rd_small_1_1_T_32) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_3.data[3] <= _io_rd_small_1_1_T_33 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_34 = bits(_io_rd_small_1_1_WIRE_4, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_35 = asSInt(_io_rd_small_1_1_T_34) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_3.data[4] <= _io_rd_small_1_1_T_35 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_36 = bits(_io_rd_small_1_1_WIRE_4, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_37 = asSInt(_io_rd_small_1_1_T_36) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_3.data[5] <= _io_rd_small_1_1_T_37 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_38 = bits(_io_rd_small_1_1_WIRE_4, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_39 = asSInt(_io_rd_small_1_1_T_38) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_3.data[6] <= _io_rd_small_1_1_T_39 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_40 = bits(_io_rd_small_1_1_WIRE_4, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_41 = asSInt(_io_rd_small_1_1_T_40) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_3.data[7] <= _io_rd_small_1_1_T_41 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_42 = eq(typ[1], UInt<3>("h06")) @[bram.scala 174:26]
    wire _io_rd_small_1_1_WIRE_5 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_1_WIRE_6 : UInt<128>
    _io_rd_small_1_1_WIRE_6 <= small_banks[7].douta
    node _io_rd_small_1_1_T_43 = bits(_io_rd_small_1_1_WIRE_6, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_44 = asSInt(_io_rd_small_1_1_T_43) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_5.data[0] <= _io_rd_small_1_1_T_44 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_45 = bits(_io_rd_small_1_1_WIRE_6, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_46 = asSInt(_io_rd_small_1_1_T_45) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_5.data[1] <= _io_rd_small_1_1_T_46 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_47 = bits(_io_rd_small_1_1_WIRE_6, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_48 = asSInt(_io_rd_small_1_1_T_47) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_5.data[2] <= _io_rd_small_1_1_T_48 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_49 = bits(_io_rd_small_1_1_WIRE_6, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_50 = asSInt(_io_rd_small_1_1_T_49) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_5.data[3] <= _io_rd_small_1_1_T_50 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_51 = bits(_io_rd_small_1_1_WIRE_6, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_52 = asSInt(_io_rd_small_1_1_T_51) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_5.data[4] <= _io_rd_small_1_1_T_52 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_53 = bits(_io_rd_small_1_1_WIRE_6, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_54 = asSInt(_io_rd_small_1_1_T_53) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_5.data[5] <= _io_rd_small_1_1_T_54 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_55 = bits(_io_rd_small_1_1_WIRE_6, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_56 = asSInt(_io_rd_small_1_1_T_55) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_5.data[6] <= _io_rd_small_1_1_T_56 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_57 = bits(_io_rd_small_1_1_WIRE_6, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_58 = asSInt(_io_rd_small_1_1_T_57) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_5.data[7] <= _io_rd_small_1_1_T_58 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_59 = eq(typ[1], UInt<3>("h07")) @[bram.scala 174:26]
    wire _io_rd_small_1_1_WIRE_7 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_1_WIRE_8 : UInt<128>
    _io_rd_small_1_1_WIRE_8 <= small_banks[4].douta
    node _io_rd_small_1_1_T_60 = bits(_io_rd_small_1_1_WIRE_8, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_61 = asSInt(_io_rd_small_1_1_T_60) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_7.data[0] <= _io_rd_small_1_1_T_61 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_62 = bits(_io_rd_small_1_1_WIRE_8, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_63 = asSInt(_io_rd_small_1_1_T_62) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_7.data[1] <= _io_rd_small_1_1_T_63 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_64 = bits(_io_rd_small_1_1_WIRE_8, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_65 = asSInt(_io_rd_small_1_1_T_64) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_7.data[2] <= _io_rd_small_1_1_T_65 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_66 = bits(_io_rd_small_1_1_WIRE_8, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_67 = asSInt(_io_rd_small_1_1_T_66) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_7.data[3] <= _io_rd_small_1_1_T_67 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_68 = bits(_io_rd_small_1_1_WIRE_8, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_69 = asSInt(_io_rd_small_1_1_T_68) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_7.data[4] <= _io_rd_small_1_1_T_69 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_70 = bits(_io_rd_small_1_1_WIRE_8, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_71 = asSInt(_io_rd_small_1_1_T_70) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_7.data[5] <= _io_rd_small_1_1_T_71 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_72 = bits(_io_rd_small_1_1_WIRE_8, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_73 = asSInt(_io_rd_small_1_1_T_72) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_7.data[6] <= _io_rd_small_1_1_T_73 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_74 = bits(_io_rd_small_1_1_WIRE_8, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_1_T_75 = asSInt(_io_rd_small_1_1_T_74) @[bram.scala 174:90]
    _io_rd_small_1_1_WIRE_7.data[7] <= _io_rd_small_1_1_T_75 @[bram.scala 174:90]
    node _io_rd_small_1_1_T_76 = mux(_io_rd_small_1_1_T_59, _io_rd_small_1_1_WIRE_7, _io_rd_small_1_1_WIRE) @[Mux.scala 98:16]
    node _io_rd_small_1_1_T_77 = mux(_io_rd_small_1_1_T_42, _io_rd_small_1_1_WIRE_5, _io_rd_small_1_1_T_76) @[Mux.scala 98:16]
    node _io_rd_small_1_1_T_78 = mux(_io_rd_small_1_1_T_25, _io_rd_small_1_1_WIRE_3, _io_rd_small_1_1_T_77) @[Mux.scala 98:16]
    node _io_rd_small_1_1_T_79 = mux(_io_rd_small_1_1_T_8, _io_rd_small_1_1_WIRE_1, _io_rd_small_1_1_T_78) @[Mux.scala 98:16]
    io.rd_small[1][1].data[0] <= _io_rd_small_1_1_T_79.data[0] @[bram.scala 173:27]
    io.rd_small[1][1].data[1] <= _io_rd_small_1_1_T_79.data[1] @[bram.scala 173:27]
    io.rd_small[1][1].data[2] <= _io_rd_small_1_1_T_79.data[2] @[bram.scala 173:27]
    io.rd_small[1][1].data[3] <= _io_rd_small_1_1_T_79.data[3] @[bram.scala 173:27]
    io.rd_small[1][1].data[4] <= _io_rd_small_1_1_T_79.data[4] @[bram.scala 173:27]
    io.rd_small[1][1].data[5] <= _io_rd_small_1_1_T_79.data[5] @[bram.scala 173:27]
    io.rd_small[1][1].data[6] <= _io_rd_small_1_1_T_79.data[6] @[bram.scala 173:27]
    io.rd_small[1][1].data[7] <= _io_rd_small_1_1_T_79.data[7] @[bram.scala 173:27]
    wire _small_banks_2_addra_WIRE : UInt<9> @[bram.scala 164:53]
    _small_banks_2_addra_WIRE <= UInt<1>("h00") @[bram.scala 164:53]
    node _small_banks_2_addra_T = eq(io.rd_addr1.addrs[1].bank_id, UInt<1>("h00")) @[bram.scala 165:48]
    node _small_banks_2_addra_T_1 = eq(io.rd_addr1.addrs[1].bank_id, UInt<1>("h01")) @[bram.scala 165:48]
    node _small_banks_2_addra_T_2 = eq(io.rd_addr1.addrs[1].bank_id, UInt<2>("h02")) @[bram.scala 165:48]
    node _small_banks_2_addra_T_3 = eq(io.rd_addr1.addrs[1].bank_id, UInt<2>("h03")) @[bram.scala 165:48]
    node _small_banks_2_addra_T_4 = mux(_small_banks_2_addra_T_3, io.rd_addr1.addrs[4].addr, _small_banks_2_addra_WIRE) @[Mux.scala 98:16]
    node _small_banks_2_addra_T_5 = mux(_small_banks_2_addra_T_2, io.rd_addr1.addrs[1].addr, _small_banks_2_addra_T_4) @[Mux.scala 98:16]
    node _small_banks_2_addra_T_6 = mux(_small_banks_2_addra_T_1, io.rd_addr1.addrs[2].addr, _small_banks_2_addra_T_5) @[Mux.scala 98:16]
    node _small_banks_2_addra_T_7 = mux(_small_banks_2_addra_T, io.rd_addr1.addrs[3].addr, _small_banks_2_addra_T_6) @[Mux.scala 98:16]
    small_banks[2].addra <= _small_banks_2_addra_T_7 @[bram.scala 164:30]
    wire _small_banks_6_addra_WIRE : UInt<9> @[bram.scala 167:55]
    _small_banks_6_addra_WIRE <= UInt<1>("h00") @[bram.scala 167:55]
    node _small_banks_6_addra_T = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h04")) @[bram.scala 168:48]
    node _small_banks_6_addra_T_1 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h05")) @[bram.scala 168:48]
    node _small_banks_6_addra_T_2 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h06")) @[bram.scala 168:48]
    node _small_banks_6_addra_T_3 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h07")) @[bram.scala 168:48]
    node _small_banks_6_addra_T_4 = mux(_small_banks_6_addra_T_3, io.rd_addr2.addrs[4].addr, _small_banks_6_addra_WIRE) @[Mux.scala 98:16]
    node _small_banks_6_addra_T_5 = mux(_small_banks_6_addra_T_2, io.rd_addr2.addrs[1].addr, _small_banks_6_addra_T_4) @[Mux.scala 98:16]
    node _small_banks_6_addra_T_6 = mux(_small_banks_6_addra_T_1, io.rd_addr2.addrs[2].addr, _small_banks_6_addra_T_5) @[Mux.scala 98:16]
    node _small_banks_6_addra_T_7 = mux(_small_banks_6_addra_T, io.rd_addr2.addrs[3].addr, _small_banks_6_addra_T_6) @[Mux.scala 98:16]
    small_banks[6].addra <= _small_banks_6_addra_T_7 @[bram.scala 167:32]
    wire _io_rd_small_0_2_WIRE : {data : SInt<16>[8]} @[bram.scala 170:50]
    node _io_rd_small_0_2_T = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_2_WIRE.data[0] <= _io_rd_small_0_2_T @[bram.scala 170:50]
    node _io_rd_small_0_2_T_1 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_2_WIRE.data[1] <= _io_rd_small_0_2_T_1 @[bram.scala 170:50]
    node _io_rd_small_0_2_T_2 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_2_WIRE.data[2] <= _io_rd_small_0_2_T_2 @[bram.scala 170:50]
    node _io_rd_small_0_2_T_3 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_2_WIRE.data[3] <= _io_rd_small_0_2_T_3 @[bram.scala 170:50]
    node _io_rd_small_0_2_T_4 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_2_WIRE.data[4] <= _io_rd_small_0_2_T_4 @[bram.scala 170:50]
    node _io_rd_small_0_2_T_5 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_2_WIRE.data[5] <= _io_rd_small_0_2_T_5 @[bram.scala 170:50]
    node _io_rd_small_0_2_T_6 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_2_WIRE.data[6] <= _io_rd_small_0_2_T_6 @[bram.scala 170:50]
    node _io_rd_small_0_2_T_7 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_2_WIRE.data[7] <= _io_rd_small_0_2_T_7 @[bram.scala 170:50]
    node _io_rd_small_0_2_T_8 = eq(typ[0], UInt<1>("h00")) @[bram.scala 171:26]
    wire _io_rd_small_0_2_WIRE_1 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_2_WIRE_2 : UInt<128>
    _io_rd_small_0_2_WIRE_2 <= small_banks[2].douta
    node _io_rd_small_0_2_T_9 = bits(_io_rd_small_0_2_WIRE_2, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_10 = asSInt(_io_rd_small_0_2_T_9) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_1.data[0] <= _io_rd_small_0_2_T_10 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_11 = bits(_io_rd_small_0_2_WIRE_2, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_12 = asSInt(_io_rd_small_0_2_T_11) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_1.data[1] <= _io_rd_small_0_2_T_12 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_13 = bits(_io_rd_small_0_2_WIRE_2, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_14 = asSInt(_io_rd_small_0_2_T_13) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_1.data[2] <= _io_rd_small_0_2_T_14 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_15 = bits(_io_rd_small_0_2_WIRE_2, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_16 = asSInt(_io_rd_small_0_2_T_15) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_1.data[3] <= _io_rd_small_0_2_T_16 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_17 = bits(_io_rd_small_0_2_WIRE_2, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_18 = asSInt(_io_rd_small_0_2_T_17) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_1.data[4] <= _io_rd_small_0_2_T_18 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_19 = bits(_io_rd_small_0_2_WIRE_2, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_20 = asSInt(_io_rd_small_0_2_T_19) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_1.data[5] <= _io_rd_small_0_2_T_20 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_21 = bits(_io_rd_small_0_2_WIRE_2, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_22 = asSInt(_io_rd_small_0_2_T_21) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_1.data[6] <= _io_rd_small_0_2_T_22 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_23 = bits(_io_rd_small_0_2_WIRE_2, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_24 = asSInt(_io_rd_small_0_2_T_23) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_1.data[7] <= _io_rd_small_0_2_T_24 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_25 = eq(typ[0], UInt<1>("h01")) @[bram.scala 171:26]
    wire _io_rd_small_0_2_WIRE_3 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_2_WIRE_4 : UInt<128>
    _io_rd_small_0_2_WIRE_4 <= small_banks[3].douta
    node _io_rd_small_0_2_T_26 = bits(_io_rd_small_0_2_WIRE_4, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_27 = asSInt(_io_rd_small_0_2_T_26) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_3.data[0] <= _io_rd_small_0_2_T_27 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_28 = bits(_io_rd_small_0_2_WIRE_4, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_29 = asSInt(_io_rd_small_0_2_T_28) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_3.data[1] <= _io_rd_small_0_2_T_29 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_30 = bits(_io_rd_small_0_2_WIRE_4, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_31 = asSInt(_io_rd_small_0_2_T_30) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_3.data[2] <= _io_rd_small_0_2_T_31 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_32 = bits(_io_rd_small_0_2_WIRE_4, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_33 = asSInt(_io_rd_small_0_2_T_32) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_3.data[3] <= _io_rd_small_0_2_T_33 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_34 = bits(_io_rd_small_0_2_WIRE_4, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_35 = asSInt(_io_rd_small_0_2_T_34) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_3.data[4] <= _io_rd_small_0_2_T_35 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_36 = bits(_io_rd_small_0_2_WIRE_4, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_37 = asSInt(_io_rd_small_0_2_T_36) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_3.data[5] <= _io_rd_small_0_2_T_37 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_38 = bits(_io_rd_small_0_2_WIRE_4, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_39 = asSInt(_io_rd_small_0_2_T_38) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_3.data[6] <= _io_rd_small_0_2_T_39 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_40 = bits(_io_rd_small_0_2_WIRE_4, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_41 = asSInt(_io_rd_small_0_2_T_40) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_3.data[7] <= _io_rd_small_0_2_T_41 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_42 = eq(typ[0], UInt<2>("h02")) @[bram.scala 171:26]
    wire _io_rd_small_0_2_WIRE_5 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_2_WIRE_6 : UInt<128>
    _io_rd_small_0_2_WIRE_6 <= small_banks[0].douta
    node _io_rd_small_0_2_T_43 = bits(_io_rd_small_0_2_WIRE_6, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_44 = asSInt(_io_rd_small_0_2_T_43) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_5.data[0] <= _io_rd_small_0_2_T_44 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_45 = bits(_io_rd_small_0_2_WIRE_6, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_46 = asSInt(_io_rd_small_0_2_T_45) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_5.data[1] <= _io_rd_small_0_2_T_46 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_47 = bits(_io_rd_small_0_2_WIRE_6, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_48 = asSInt(_io_rd_small_0_2_T_47) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_5.data[2] <= _io_rd_small_0_2_T_48 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_49 = bits(_io_rd_small_0_2_WIRE_6, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_50 = asSInt(_io_rd_small_0_2_T_49) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_5.data[3] <= _io_rd_small_0_2_T_50 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_51 = bits(_io_rd_small_0_2_WIRE_6, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_52 = asSInt(_io_rd_small_0_2_T_51) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_5.data[4] <= _io_rd_small_0_2_T_52 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_53 = bits(_io_rd_small_0_2_WIRE_6, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_54 = asSInt(_io_rd_small_0_2_T_53) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_5.data[5] <= _io_rd_small_0_2_T_54 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_55 = bits(_io_rd_small_0_2_WIRE_6, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_56 = asSInt(_io_rd_small_0_2_T_55) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_5.data[6] <= _io_rd_small_0_2_T_56 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_57 = bits(_io_rd_small_0_2_WIRE_6, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_58 = asSInt(_io_rd_small_0_2_T_57) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_5.data[7] <= _io_rd_small_0_2_T_58 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_59 = eq(typ[0], UInt<2>("h03")) @[bram.scala 171:26]
    wire _io_rd_small_0_2_WIRE_7 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_2_WIRE_8 : UInt<128>
    _io_rd_small_0_2_WIRE_8 <= small_banks[1].douta
    node _io_rd_small_0_2_T_60 = bits(_io_rd_small_0_2_WIRE_8, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_61 = asSInt(_io_rd_small_0_2_T_60) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_7.data[0] <= _io_rd_small_0_2_T_61 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_62 = bits(_io_rd_small_0_2_WIRE_8, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_63 = asSInt(_io_rd_small_0_2_T_62) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_7.data[1] <= _io_rd_small_0_2_T_63 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_64 = bits(_io_rd_small_0_2_WIRE_8, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_65 = asSInt(_io_rd_small_0_2_T_64) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_7.data[2] <= _io_rd_small_0_2_T_65 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_66 = bits(_io_rd_small_0_2_WIRE_8, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_67 = asSInt(_io_rd_small_0_2_T_66) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_7.data[3] <= _io_rd_small_0_2_T_67 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_68 = bits(_io_rd_small_0_2_WIRE_8, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_69 = asSInt(_io_rd_small_0_2_T_68) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_7.data[4] <= _io_rd_small_0_2_T_69 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_70 = bits(_io_rd_small_0_2_WIRE_8, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_71 = asSInt(_io_rd_small_0_2_T_70) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_7.data[5] <= _io_rd_small_0_2_T_71 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_72 = bits(_io_rd_small_0_2_WIRE_8, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_73 = asSInt(_io_rd_small_0_2_T_72) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_7.data[6] <= _io_rd_small_0_2_T_73 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_74 = bits(_io_rd_small_0_2_WIRE_8, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_2_T_75 = asSInt(_io_rd_small_0_2_T_74) @[bram.scala 171:84]
    _io_rd_small_0_2_WIRE_7.data[7] <= _io_rd_small_0_2_T_75 @[bram.scala 171:84]
    node _io_rd_small_0_2_T_76 = mux(_io_rd_small_0_2_T_59, _io_rd_small_0_2_WIRE_7, _io_rd_small_0_2_WIRE) @[Mux.scala 98:16]
    node _io_rd_small_0_2_T_77 = mux(_io_rd_small_0_2_T_42, _io_rd_small_0_2_WIRE_5, _io_rd_small_0_2_T_76) @[Mux.scala 98:16]
    node _io_rd_small_0_2_T_78 = mux(_io_rd_small_0_2_T_25, _io_rd_small_0_2_WIRE_3, _io_rd_small_0_2_T_77) @[Mux.scala 98:16]
    node _io_rd_small_0_2_T_79 = mux(_io_rd_small_0_2_T_8, _io_rd_small_0_2_WIRE_1, _io_rd_small_0_2_T_78) @[Mux.scala 98:16]
    io.rd_small[0][2].data[0] <= _io_rd_small_0_2_T_79.data[0] @[bram.scala 170:27]
    io.rd_small[0][2].data[1] <= _io_rd_small_0_2_T_79.data[1] @[bram.scala 170:27]
    io.rd_small[0][2].data[2] <= _io_rd_small_0_2_T_79.data[2] @[bram.scala 170:27]
    io.rd_small[0][2].data[3] <= _io_rd_small_0_2_T_79.data[3] @[bram.scala 170:27]
    io.rd_small[0][2].data[4] <= _io_rd_small_0_2_T_79.data[4] @[bram.scala 170:27]
    io.rd_small[0][2].data[5] <= _io_rd_small_0_2_T_79.data[5] @[bram.scala 170:27]
    io.rd_small[0][2].data[6] <= _io_rd_small_0_2_T_79.data[6] @[bram.scala 170:27]
    io.rd_small[0][2].data[7] <= _io_rd_small_0_2_T_79.data[7] @[bram.scala 170:27]
    wire _io_rd_small_1_2_WIRE : {data : SInt<16>[8]} @[bram.scala 173:50]
    node _io_rd_small_1_2_T = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_2_WIRE.data[0] <= _io_rd_small_1_2_T @[bram.scala 173:50]
    node _io_rd_small_1_2_T_1 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_2_WIRE.data[1] <= _io_rd_small_1_2_T_1 @[bram.scala 173:50]
    node _io_rd_small_1_2_T_2 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_2_WIRE.data[2] <= _io_rd_small_1_2_T_2 @[bram.scala 173:50]
    node _io_rd_small_1_2_T_3 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_2_WIRE.data[3] <= _io_rd_small_1_2_T_3 @[bram.scala 173:50]
    node _io_rd_small_1_2_T_4 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_2_WIRE.data[4] <= _io_rd_small_1_2_T_4 @[bram.scala 173:50]
    node _io_rd_small_1_2_T_5 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_2_WIRE.data[5] <= _io_rd_small_1_2_T_5 @[bram.scala 173:50]
    node _io_rd_small_1_2_T_6 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_2_WIRE.data[6] <= _io_rd_small_1_2_T_6 @[bram.scala 173:50]
    node _io_rd_small_1_2_T_7 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_2_WIRE.data[7] <= _io_rd_small_1_2_T_7 @[bram.scala 173:50]
    node _io_rd_small_1_2_T_8 = eq(typ[1], UInt<3>("h04")) @[bram.scala 174:26]
    wire _io_rd_small_1_2_WIRE_1 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_2_WIRE_2 : UInt<128>
    _io_rd_small_1_2_WIRE_2 <= small_banks[6].douta
    node _io_rd_small_1_2_T_9 = bits(_io_rd_small_1_2_WIRE_2, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_10 = asSInt(_io_rd_small_1_2_T_9) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_1.data[0] <= _io_rd_small_1_2_T_10 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_11 = bits(_io_rd_small_1_2_WIRE_2, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_12 = asSInt(_io_rd_small_1_2_T_11) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_1.data[1] <= _io_rd_small_1_2_T_12 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_13 = bits(_io_rd_small_1_2_WIRE_2, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_14 = asSInt(_io_rd_small_1_2_T_13) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_1.data[2] <= _io_rd_small_1_2_T_14 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_15 = bits(_io_rd_small_1_2_WIRE_2, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_16 = asSInt(_io_rd_small_1_2_T_15) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_1.data[3] <= _io_rd_small_1_2_T_16 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_17 = bits(_io_rd_small_1_2_WIRE_2, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_18 = asSInt(_io_rd_small_1_2_T_17) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_1.data[4] <= _io_rd_small_1_2_T_18 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_19 = bits(_io_rd_small_1_2_WIRE_2, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_20 = asSInt(_io_rd_small_1_2_T_19) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_1.data[5] <= _io_rd_small_1_2_T_20 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_21 = bits(_io_rd_small_1_2_WIRE_2, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_22 = asSInt(_io_rd_small_1_2_T_21) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_1.data[6] <= _io_rd_small_1_2_T_22 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_23 = bits(_io_rd_small_1_2_WIRE_2, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_24 = asSInt(_io_rd_small_1_2_T_23) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_1.data[7] <= _io_rd_small_1_2_T_24 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_25 = eq(typ[1], UInt<3>("h05")) @[bram.scala 174:26]
    wire _io_rd_small_1_2_WIRE_3 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_2_WIRE_4 : UInt<128>
    _io_rd_small_1_2_WIRE_4 <= small_banks[7].douta
    node _io_rd_small_1_2_T_26 = bits(_io_rd_small_1_2_WIRE_4, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_27 = asSInt(_io_rd_small_1_2_T_26) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_3.data[0] <= _io_rd_small_1_2_T_27 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_28 = bits(_io_rd_small_1_2_WIRE_4, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_29 = asSInt(_io_rd_small_1_2_T_28) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_3.data[1] <= _io_rd_small_1_2_T_29 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_30 = bits(_io_rd_small_1_2_WIRE_4, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_31 = asSInt(_io_rd_small_1_2_T_30) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_3.data[2] <= _io_rd_small_1_2_T_31 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_32 = bits(_io_rd_small_1_2_WIRE_4, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_33 = asSInt(_io_rd_small_1_2_T_32) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_3.data[3] <= _io_rd_small_1_2_T_33 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_34 = bits(_io_rd_small_1_2_WIRE_4, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_35 = asSInt(_io_rd_small_1_2_T_34) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_3.data[4] <= _io_rd_small_1_2_T_35 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_36 = bits(_io_rd_small_1_2_WIRE_4, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_37 = asSInt(_io_rd_small_1_2_T_36) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_3.data[5] <= _io_rd_small_1_2_T_37 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_38 = bits(_io_rd_small_1_2_WIRE_4, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_39 = asSInt(_io_rd_small_1_2_T_38) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_3.data[6] <= _io_rd_small_1_2_T_39 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_40 = bits(_io_rd_small_1_2_WIRE_4, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_41 = asSInt(_io_rd_small_1_2_T_40) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_3.data[7] <= _io_rd_small_1_2_T_41 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_42 = eq(typ[1], UInt<3>("h06")) @[bram.scala 174:26]
    wire _io_rd_small_1_2_WIRE_5 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_2_WIRE_6 : UInt<128>
    _io_rd_small_1_2_WIRE_6 <= small_banks[4].douta
    node _io_rd_small_1_2_T_43 = bits(_io_rd_small_1_2_WIRE_6, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_44 = asSInt(_io_rd_small_1_2_T_43) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_5.data[0] <= _io_rd_small_1_2_T_44 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_45 = bits(_io_rd_small_1_2_WIRE_6, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_46 = asSInt(_io_rd_small_1_2_T_45) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_5.data[1] <= _io_rd_small_1_2_T_46 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_47 = bits(_io_rd_small_1_2_WIRE_6, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_48 = asSInt(_io_rd_small_1_2_T_47) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_5.data[2] <= _io_rd_small_1_2_T_48 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_49 = bits(_io_rd_small_1_2_WIRE_6, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_50 = asSInt(_io_rd_small_1_2_T_49) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_5.data[3] <= _io_rd_small_1_2_T_50 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_51 = bits(_io_rd_small_1_2_WIRE_6, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_52 = asSInt(_io_rd_small_1_2_T_51) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_5.data[4] <= _io_rd_small_1_2_T_52 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_53 = bits(_io_rd_small_1_2_WIRE_6, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_54 = asSInt(_io_rd_small_1_2_T_53) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_5.data[5] <= _io_rd_small_1_2_T_54 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_55 = bits(_io_rd_small_1_2_WIRE_6, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_56 = asSInt(_io_rd_small_1_2_T_55) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_5.data[6] <= _io_rd_small_1_2_T_56 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_57 = bits(_io_rd_small_1_2_WIRE_6, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_58 = asSInt(_io_rd_small_1_2_T_57) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_5.data[7] <= _io_rd_small_1_2_T_58 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_59 = eq(typ[1], UInt<3>("h07")) @[bram.scala 174:26]
    wire _io_rd_small_1_2_WIRE_7 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_2_WIRE_8 : UInt<128>
    _io_rd_small_1_2_WIRE_8 <= small_banks[5].douta
    node _io_rd_small_1_2_T_60 = bits(_io_rd_small_1_2_WIRE_8, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_61 = asSInt(_io_rd_small_1_2_T_60) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_7.data[0] <= _io_rd_small_1_2_T_61 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_62 = bits(_io_rd_small_1_2_WIRE_8, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_63 = asSInt(_io_rd_small_1_2_T_62) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_7.data[1] <= _io_rd_small_1_2_T_63 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_64 = bits(_io_rd_small_1_2_WIRE_8, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_65 = asSInt(_io_rd_small_1_2_T_64) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_7.data[2] <= _io_rd_small_1_2_T_65 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_66 = bits(_io_rd_small_1_2_WIRE_8, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_67 = asSInt(_io_rd_small_1_2_T_66) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_7.data[3] <= _io_rd_small_1_2_T_67 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_68 = bits(_io_rd_small_1_2_WIRE_8, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_69 = asSInt(_io_rd_small_1_2_T_68) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_7.data[4] <= _io_rd_small_1_2_T_69 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_70 = bits(_io_rd_small_1_2_WIRE_8, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_71 = asSInt(_io_rd_small_1_2_T_70) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_7.data[5] <= _io_rd_small_1_2_T_71 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_72 = bits(_io_rd_small_1_2_WIRE_8, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_73 = asSInt(_io_rd_small_1_2_T_72) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_7.data[6] <= _io_rd_small_1_2_T_73 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_74 = bits(_io_rd_small_1_2_WIRE_8, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_2_T_75 = asSInt(_io_rd_small_1_2_T_74) @[bram.scala 174:90]
    _io_rd_small_1_2_WIRE_7.data[7] <= _io_rd_small_1_2_T_75 @[bram.scala 174:90]
    node _io_rd_small_1_2_T_76 = mux(_io_rd_small_1_2_T_59, _io_rd_small_1_2_WIRE_7, _io_rd_small_1_2_WIRE) @[Mux.scala 98:16]
    node _io_rd_small_1_2_T_77 = mux(_io_rd_small_1_2_T_42, _io_rd_small_1_2_WIRE_5, _io_rd_small_1_2_T_76) @[Mux.scala 98:16]
    node _io_rd_small_1_2_T_78 = mux(_io_rd_small_1_2_T_25, _io_rd_small_1_2_WIRE_3, _io_rd_small_1_2_T_77) @[Mux.scala 98:16]
    node _io_rd_small_1_2_T_79 = mux(_io_rd_small_1_2_T_8, _io_rd_small_1_2_WIRE_1, _io_rd_small_1_2_T_78) @[Mux.scala 98:16]
    io.rd_small[1][2].data[0] <= _io_rd_small_1_2_T_79.data[0] @[bram.scala 173:27]
    io.rd_small[1][2].data[1] <= _io_rd_small_1_2_T_79.data[1] @[bram.scala 173:27]
    io.rd_small[1][2].data[2] <= _io_rd_small_1_2_T_79.data[2] @[bram.scala 173:27]
    io.rd_small[1][2].data[3] <= _io_rd_small_1_2_T_79.data[3] @[bram.scala 173:27]
    io.rd_small[1][2].data[4] <= _io_rd_small_1_2_T_79.data[4] @[bram.scala 173:27]
    io.rd_small[1][2].data[5] <= _io_rd_small_1_2_T_79.data[5] @[bram.scala 173:27]
    io.rd_small[1][2].data[6] <= _io_rd_small_1_2_T_79.data[6] @[bram.scala 173:27]
    io.rd_small[1][2].data[7] <= _io_rd_small_1_2_T_79.data[7] @[bram.scala 173:27]
    wire _small_banks_3_addra_WIRE : UInt<9> @[bram.scala 164:53]
    _small_banks_3_addra_WIRE <= UInt<1>("h00") @[bram.scala 164:53]
    node _small_banks_3_addra_T = eq(io.rd_addr1.addrs[1].bank_id, UInt<1>("h00")) @[bram.scala 165:48]
    node _small_banks_3_addra_T_1 = eq(io.rd_addr1.addrs[1].bank_id, UInt<1>("h01")) @[bram.scala 165:48]
    node _small_banks_3_addra_T_2 = eq(io.rd_addr1.addrs[1].bank_id, UInt<2>("h02")) @[bram.scala 165:48]
    node _small_banks_3_addra_T_3 = eq(io.rd_addr1.addrs[1].bank_id, UInt<2>("h03")) @[bram.scala 165:48]
    node _small_banks_3_addra_T_4 = mux(_small_banks_3_addra_T_3, io.rd_addr1.addrs[1].addr, _small_banks_3_addra_WIRE) @[Mux.scala 98:16]
    node _small_banks_3_addra_T_5 = mux(_small_banks_3_addra_T_2, io.rd_addr1.addrs[2].addr, _small_banks_3_addra_T_4) @[Mux.scala 98:16]
    node _small_banks_3_addra_T_6 = mux(_small_banks_3_addra_T_1, io.rd_addr1.addrs[3].addr, _small_banks_3_addra_T_5) @[Mux.scala 98:16]
    node _small_banks_3_addra_T_7 = mux(_small_banks_3_addra_T, io.rd_addr1.addrs[4].addr, _small_banks_3_addra_T_6) @[Mux.scala 98:16]
    small_banks[3].addra <= _small_banks_3_addra_T_7 @[bram.scala 164:30]
    wire _small_banks_7_addra_WIRE : UInt<9> @[bram.scala 167:55]
    _small_banks_7_addra_WIRE <= UInt<1>("h00") @[bram.scala 167:55]
    node _small_banks_7_addra_T = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h04")) @[bram.scala 168:48]
    node _small_banks_7_addra_T_1 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h05")) @[bram.scala 168:48]
    node _small_banks_7_addra_T_2 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h06")) @[bram.scala 168:48]
    node _small_banks_7_addra_T_3 = eq(io.rd_addr1.addrs[1].bank_id, UInt<3>("h07")) @[bram.scala 168:48]
    node _small_banks_7_addra_T_4 = mux(_small_banks_7_addra_T_3, io.rd_addr2.addrs[1].addr, _small_banks_7_addra_WIRE) @[Mux.scala 98:16]
    node _small_banks_7_addra_T_5 = mux(_small_banks_7_addra_T_2, io.rd_addr2.addrs[2].addr, _small_banks_7_addra_T_4) @[Mux.scala 98:16]
    node _small_banks_7_addra_T_6 = mux(_small_banks_7_addra_T_1, io.rd_addr2.addrs[3].addr, _small_banks_7_addra_T_5) @[Mux.scala 98:16]
    node _small_banks_7_addra_T_7 = mux(_small_banks_7_addra_T, io.rd_addr2.addrs[4].addr, _small_banks_7_addra_T_6) @[Mux.scala 98:16]
    small_banks[7].addra <= _small_banks_7_addra_T_7 @[bram.scala 167:32]
    wire _io_rd_small_0_3_WIRE : {data : SInt<16>[8]} @[bram.scala 170:50]
    node _io_rd_small_0_3_T = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_3_WIRE.data[0] <= _io_rd_small_0_3_T @[bram.scala 170:50]
    node _io_rd_small_0_3_T_1 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_3_WIRE.data[1] <= _io_rd_small_0_3_T_1 @[bram.scala 170:50]
    node _io_rd_small_0_3_T_2 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_3_WIRE.data[2] <= _io_rd_small_0_3_T_2 @[bram.scala 170:50]
    node _io_rd_small_0_3_T_3 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_3_WIRE.data[3] <= _io_rd_small_0_3_T_3 @[bram.scala 170:50]
    node _io_rd_small_0_3_T_4 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_3_WIRE.data[4] <= _io_rd_small_0_3_T_4 @[bram.scala 170:50]
    node _io_rd_small_0_3_T_5 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_3_WIRE.data[5] <= _io_rd_small_0_3_T_5 @[bram.scala 170:50]
    node _io_rd_small_0_3_T_6 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_3_WIRE.data[6] <= _io_rd_small_0_3_T_6 @[bram.scala 170:50]
    node _io_rd_small_0_3_T_7 = asSInt(UInt<16>("h00")) @[bram.scala 170:50]
    _io_rd_small_0_3_WIRE.data[7] <= _io_rd_small_0_3_T_7 @[bram.scala 170:50]
    node _io_rd_small_0_3_T_8 = eq(typ[0], UInt<1>("h00")) @[bram.scala 171:26]
    wire _io_rd_small_0_3_WIRE_1 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_3_WIRE_2 : UInt<128>
    _io_rd_small_0_3_WIRE_2 <= small_banks[3].douta
    node _io_rd_small_0_3_T_9 = bits(_io_rd_small_0_3_WIRE_2, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_10 = asSInt(_io_rd_small_0_3_T_9) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_1.data[0] <= _io_rd_small_0_3_T_10 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_11 = bits(_io_rd_small_0_3_WIRE_2, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_12 = asSInt(_io_rd_small_0_3_T_11) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_1.data[1] <= _io_rd_small_0_3_T_12 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_13 = bits(_io_rd_small_0_3_WIRE_2, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_14 = asSInt(_io_rd_small_0_3_T_13) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_1.data[2] <= _io_rd_small_0_3_T_14 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_15 = bits(_io_rd_small_0_3_WIRE_2, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_16 = asSInt(_io_rd_small_0_3_T_15) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_1.data[3] <= _io_rd_small_0_3_T_16 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_17 = bits(_io_rd_small_0_3_WIRE_2, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_18 = asSInt(_io_rd_small_0_3_T_17) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_1.data[4] <= _io_rd_small_0_3_T_18 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_19 = bits(_io_rd_small_0_3_WIRE_2, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_20 = asSInt(_io_rd_small_0_3_T_19) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_1.data[5] <= _io_rd_small_0_3_T_20 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_21 = bits(_io_rd_small_0_3_WIRE_2, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_22 = asSInt(_io_rd_small_0_3_T_21) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_1.data[6] <= _io_rd_small_0_3_T_22 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_23 = bits(_io_rd_small_0_3_WIRE_2, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_24 = asSInt(_io_rd_small_0_3_T_23) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_1.data[7] <= _io_rd_small_0_3_T_24 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_25 = eq(typ[0], UInt<1>("h01")) @[bram.scala 171:26]
    wire _io_rd_small_0_3_WIRE_3 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_3_WIRE_4 : UInt<128>
    _io_rd_small_0_3_WIRE_4 <= small_banks[0].douta
    node _io_rd_small_0_3_T_26 = bits(_io_rd_small_0_3_WIRE_4, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_27 = asSInt(_io_rd_small_0_3_T_26) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_3.data[0] <= _io_rd_small_0_3_T_27 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_28 = bits(_io_rd_small_0_3_WIRE_4, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_29 = asSInt(_io_rd_small_0_3_T_28) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_3.data[1] <= _io_rd_small_0_3_T_29 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_30 = bits(_io_rd_small_0_3_WIRE_4, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_31 = asSInt(_io_rd_small_0_3_T_30) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_3.data[2] <= _io_rd_small_0_3_T_31 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_32 = bits(_io_rd_small_0_3_WIRE_4, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_33 = asSInt(_io_rd_small_0_3_T_32) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_3.data[3] <= _io_rd_small_0_3_T_33 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_34 = bits(_io_rd_small_0_3_WIRE_4, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_35 = asSInt(_io_rd_small_0_3_T_34) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_3.data[4] <= _io_rd_small_0_3_T_35 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_36 = bits(_io_rd_small_0_3_WIRE_4, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_37 = asSInt(_io_rd_small_0_3_T_36) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_3.data[5] <= _io_rd_small_0_3_T_37 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_38 = bits(_io_rd_small_0_3_WIRE_4, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_39 = asSInt(_io_rd_small_0_3_T_38) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_3.data[6] <= _io_rd_small_0_3_T_39 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_40 = bits(_io_rd_small_0_3_WIRE_4, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_41 = asSInt(_io_rd_small_0_3_T_40) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_3.data[7] <= _io_rd_small_0_3_T_41 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_42 = eq(typ[0], UInt<2>("h02")) @[bram.scala 171:26]
    wire _io_rd_small_0_3_WIRE_5 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_3_WIRE_6 : UInt<128>
    _io_rd_small_0_3_WIRE_6 <= small_banks[1].douta
    node _io_rd_small_0_3_T_43 = bits(_io_rd_small_0_3_WIRE_6, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_44 = asSInt(_io_rd_small_0_3_T_43) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_5.data[0] <= _io_rd_small_0_3_T_44 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_45 = bits(_io_rd_small_0_3_WIRE_6, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_46 = asSInt(_io_rd_small_0_3_T_45) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_5.data[1] <= _io_rd_small_0_3_T_46 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_47 = bits(_io_rd_small_0_3_WIRE_6, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_48 = asSInt(_io_rd_small_0_3_T_47) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_5.data[2] <= _io_rd_small_0_3_T_48 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_49 = bits(_io_rd_small_0_3_WIRE_6, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_50 = asSInt(_io_rd_small_0_3_T_49) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_5.data[3] <= _io_rd_small_0_3_T_50 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_51 = bits(_io_rd_small_0_3_WIRE_6, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_52 = asSInt(_io_rd_small_0_3_T_51) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_5.data[4] <= _io_rd_small_0_3_T_52 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_53 = bits(_io_rd_small_0_3_WIRE_6, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_54 = asSInt(_io_rd_small_0_3_T_53) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_5.data[5] <= _io_rd_small_0_3_T_54 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_55 = bits(_io_rd_small_0_3_WIRE_6, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_56 = asSInt(_io_rd_small_0_3_T_55) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_5.data[6] <= _io_rd_small_0_3_T_56 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_57 = bits(_io_rd_small_0_3_WIRE_6, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_58 = asSInt(_io_rd_small_0_3_T_57) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_5.data[7] <= _io_rd_small_0_3_T_58 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_59 = eq(typ[0], UInt<2>("h03")) @[bram.scala 171:26]
    wire _io_rd_small_0_3_WIRE_7 : {data : SInt<16>[8]} @[bram.scala 171:84]
    wire _io_rd_small_0_3_WIRE_8 : UInt<128>
    _io_rd_small_0_3_WIRE_8 <= small_banks[2].douta
    node _io_rd_small_0_3_T_60 = bits(_io_rd_small_0_3_WIRE_8, 15, 0) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_61 = asSInt(_io_rd_small_0_3_T_60) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_7.data[0] <= _io_rd_small_0_3_T_61 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_62 = bits(_io_rd_small_0_3_WIRE_8, 31, 16) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_63 = asSInt(_io_rd_small_0_3_T_62) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_7.data[1] <= _io_rd_small_0_3_T_63 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_64 = bits(_io_rd_small_0_3_WIRE_8, 47, 32) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_65 = asSInt(_io_rd_small_0_3_T_64) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_7.data[2] <= _io_rd_small_0_3_T_65 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_66 = bits(_io_rd_small_0_3_WIRE_8, 63, 48) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_67 = asSInt(_io_rd_small_0_3_T_66) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_7.data[3] <= _io_rd_small_0_3_T_67 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_68 = bits(_io_rd_small_0_3_WIRE_8, 79, 64) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_69 = asSInt(_io_rd_small_0_3_T_68) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_7.data[4] <= _io_rd_small_0_3_T_69 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_70 = bits(_io_rd_small_0_3_WIRE_8, 95, 80) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_71 = asSInt(_io_rd_small_0_3_T_70) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_7.data[5] <= _io_rd_small_0_3_T_71 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_72 = bits(_io_rd_small_0_3_WIRE_8, 111, 96) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_73 = asSInt(_io_rd_small_0_3_T_72) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_7.data[6] <= _io_rd_small_0_3_T_73 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_74 = bits(_io_rd_small_0_3_WIRE_8, 127, 112) @[bram.scala 171:84]
    node _io_rd_small_0_3_T_75 = asSInt(_io_rd_small_0_3_T_74) @[bram.scala 171:84]
    _io_rd_small_0_3_WIRE_7.data[7] <= _io_rd_small_0_3_T_75 @[bram.scala 171:84]
    node _io_rd_small_0_3_T_76 = mux(_io_rd_small_0_3_T_59, _io_rd_small_0_3_WIRE_7, _io_rd_small_0_3_WIRE) @[Mux.scala 98:16]
    node _io_rd_small_0_3_T_77 = mux(_io_rd_small_0_3_T_42, _io_rd_small_0_3_WIRE_5, _io_rd_small_0_3_T_76) @[Mux.scala 98:16]
    node _io_rd_small_0_3_T_78 = mux(_io_rd_small_0_3_T_25, _io_rd_small_0_3_WIRE_3, _io_rd_small_0_3_T_77) @[Mux.scala 98:16]
    node _io_rd_small_0_3_T_79 = mux(_io_rd_small_0_3_T_8, _io_rd_small_0_3_WIRE_1, _io_rd_small_0_3_T_78) @[Mux.scala 98:16]
    io.rd_small[0][3].data[0] <= _io_rd_small_0_3_T_79.data[0] @[bram.scala 170:27]
    io.rd_small[0][3].data[1] <= _io_rd_small_0_3_T_79.data[1] @[bram.scala 170:27]
    io.rd_small[0][3].data[2] <= _io_rd_small_0_3_T_79.data[2] @[bram.scala 170:27]
    io.rd_small[0][3].data[3] <= _io_rd_small_0_3_T_79.data[3] @[bram.scala 170:27]
    io.rd_small[0][3].data[4] <= _io_rd_small_0_3_T_79.data[4] @[bram.scala 170:27]
    io.rd_small[0][3].data[5] <= _io_rd_small_0_3_T_79.data[5] @[bram.scala 170:27]
    io.rd_small[0][3].data[6] <= _io_rd_small_0_3_T_79.data[6] @[bram.scala 170:27]
    io.rd_small[0][3].data[7] <= _io_rd_small_0_3_T_79.data[7] @[bram.scala 170:27]
    wire _io_rd_small_1_3_WIRE : {data : SInt<16>[8]} @[bram.scala 173:50]
    node _io_rd_small_1_3_T = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_3_WIRE.data[0] <= _io_rd_small_1_3_T @[bram.scala 173:50]
    node _io_rd_small_1_3_T_1 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_3_WIRE.data[1] <= _io_rd_small_1_3_T_1 @[bram.scala 173:50]
    node _io_rd_small_1_3_T_2 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_3_WIRE.data[2] <= _io_rd_small_1_3_T_2 @[bram.scala 173:50]
    node _io_rd_small_1_3_T_3 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_3_WIRE.data[3] <= _io_rd_small_1_3_T_3 @[bram.scala 173:50]
    node _io_rd_small_1_3_T_4 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_3_WIRE.data[4] <= _io_rd_small_1_3_T_4 @[bram.scala 173:50]
    node _io_rd_small_1_3_T_5 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_3_WIRE.data[5] <= _io_rd_small_1_3_T_5 @[bram.scala 173:50]
    node _io_rd_small_1_3_T_6 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_3_WIRE.data[6] <= _io_rd_small_1_3_T_6 @[bram.scala 173:50]
    node _io_rd_small_1_3_T_7 = asSInt(UInt<16>("h00")) @[bram.scala 173:50]
    _io_rd_small_1_3_WIRE.data[7] <= _io_rd_small_1_3_T_7 @[bram.scala 173:50]
    node _io_rd_small_1_3_T_8 = eq(typ[1], UInt<3>("h04")) @[bram.scala 174:26]
    wire _io_rd_small_1_3_WIRE_1 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_3_WIRE_2 : UInt<128>
    _io_rd_small_1_3_WIRE_2 <= small_banks[7].douta
    node _io_rd_small_1_3_T_9 = bits(_io_rd_small_1_3_WIRE_2, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_10 = asSInt(_io_rd_small_1_3_T_9) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_1.data[0] <= _io_rd_small_1_3_T_10 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_11 = bits(_io_rd_small_1_3_WIRE_2, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_12 = asSInt(_io_rd_small_1_3_T_11) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_1.data[1] <= _io_rd_small_1_3_T_12 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_13 = bits(_io_rd_small_1_3_WIRE_2, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_14 = asSInt(_io_rd_small_1_3_T_13) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_1.data[2] <= _io_rd_small_1_3_T_14 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_15 = bits(_io_rd_small_1_3_WIRE_2, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_16 = asSInt(_io_rd_small_1_3_T_15) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_1.data[3] <= _io_rd_small_1_3_T_16 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_17 = bits(_io_rd_small_1_3_WIRE_2, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_18 = asSInt(_io_rd_small_1_3_T_17) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_1.data[4] <= _io_rd_small_1_3_T_18 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_19 = bits(_io_rd_small_1_3_WIRE_2, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_20 = asSInt(_io_rd_small_1_3_T_19) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_1.data[5] <= _io_rd_small_1_3_T_20 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_21 = bits(_io_rd_small_1_3_WIRE_2, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_22 = asSInt(_io_rd_small_1_3_T_21) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_1.data[6] <= _io_rd_small_1_3_T_22 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_23 = bits(_io_rd_small_1_3_WIRE_2, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_24 = asSInt(_io_rd_small_1_3_T_23) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_1.data[7] <= _io_rd_small_1_3_T_24 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_25 = eq(typ[1], UInt<3>("h05")) @[bram.scala 174:26]
    wire _io_rd_small_1_3_WIRE_3 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_3_WIRE_4 : UInt<128>
    _io_rd_small_1_3_WIRE_4 <= small_banks[4].douta
    node _io_rd_small_1_3_T_26 = bits(_io_rd_small_1_3_WIRE_4, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_27 = asSInt(_io_rd_small_1_3_T_26) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_3.data[0] <= _io_rd_small_1_3_T_27 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_28 = bits(_io_rd_small_1_3_WIRE_4, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_29 = asSInt(_io_rd_small_1_3_T_28) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_3.data[1] <= _io_rd_small_1_3_T_29 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_30 = bits(_io_rd_small_1_3_WIRE_4, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_31 = asSInt(_io_rd_small_1_3_T_30) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_3.data[2] <= _io_rd_small_1_3_T_31 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_32 = bits(_io_rd_small_1_3_WIRE_4, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_33 = asSInt(_io_rd_small_1_3_T_32) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_3.data[3] <= _io_rd_small_1_3_T_33 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_34 = bits(_io_rd_small_1_3_WIRE_4, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_35 = asSInt(_io_rd_small_1_3_T_34) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_3.data[4] <= _io_rd_small_1_3_T_35 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_36 = bits(_io_rd_small_1_3_WIRE_4, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_37 = asSInt(_io_rd_small_1_3_T_36) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_3.data[5] <= _io_rd_small_1_3_T_37 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_38 = bits(_io_rd_small_1_3_WIRE_4, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_39 = asSInt(_io_rd_small_1_3_T_38) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_3.data[6] <= _io_rd_small_1_3_T_39 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_40 = bits(_io_rd_small_1_3_WIRE_4, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_41 = asSInt(_io_rd_small_1_3_T_40) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_3.data[7] <= _io_rd_small_1_3_T_41 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_42 = eq(typ[1], UInt<3>("h06")) @[bram.scala 174:26]
    wire _io_rd_small_1_3_WIRE_5 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_3_WIRE_6 : UInt<128>
    _io_rd_small_1_3_WIRE_6 <= small_banks[5].douta
    node _io_rd_small_1_3_T_43 = bits(_io_rd_small_1_3_WIRE_6, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_44 = asSInt(_io_rd_small_1_3_T_43) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_5.data[0] <= _io_rd_small_1_3_T_44 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_45 = bits(_io_rd_small_1_3_WIRE_6, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_46 = asSInt(_io_rd_small_1_3_T_45) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_5.data[1] <= _io_rd_small_1_3_T_46 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_47 = bits(_io_rd_small_1_3_WIRE_6, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_48 = asSInt(_io_rd_small_1_3_T_47) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_5.data[2] <= _io_rd_small_1_3_T_48 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_49 = bits(_io_rd_small_1_3_WIRE_6, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_50 = asSInt(_io_rd_small_1_3_T_49) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_5.data[3] <= _io_rd_small_1_3_T_50 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_51 = bits(_io_rd_small_1_3_WIRE_6, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_52 = asSInt(_io_rd_small_1_3_T_51) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_5.data[4] <= _io_rd_small_1_3_T_52 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_53 = bits(_io_rd_small_1_3_WIRE_6, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_54 = asSInt(_io_rd_small_1_3_T_53) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_5.data[5] <= _io_rd_small_1_3_T_54 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_55 = bits(_io_rd_small_1_3_WIRE_6, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_56 = asSInt(_io_rd_small_1_3_T_55) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_5.data[6] <= _io_rd_small_1_3_T_56 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_57 = bits(_io_rd_small_1_3_WIRE_6, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_58 = asSInt(_io_rd_small_1_3_T_57) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_5.data[7] <= _io_rd_small_1_3_T_58 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_59 = eq(typ[1], UInt<3>("h07")) @[bram.scala 174:26]
    wire _io_rd_small_1_3_WIRE_7 : {data : SInt<16>[8]} @[bram.scala 174:90]
    wire _io_rd_small_1_3_WIRE_8 : UInt<128>
    _io_rd_small_1_3_WIRE_8 <= small_banks[6].douta
    node _io_rd_small_1_3_T_60 = bits(_io_rd_small_1_3_WIRE_8, 15, 0) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_61 = asSInt(_io_rd_small_1_3_T_60) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_7.data[0] <= _io_rd_small_1_3_T_61 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_62 = bits(_io_rd_small_1_3_WIRE_8, 31, 16) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_63 = asSInt(_io_rd_small_1_3_T_62) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_7.data[1] <= _io_rd_small_1_3_T_63 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_64 = bits(_io_rd_small_1_3_WIRE_8, 47, 32) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_65 = asSInt(_io_rd_small_1_3_T_64) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_7.data[2] <= _io_rd_small_1_3_T_65 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_66 = bits(_io_rd_small_1_3_WIRE_8, 63, 48) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_67 = asSInt(_io_rd_small_1_3_T_66) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_7.data[3] <= _io_rd_small_1_3_T_67 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_68 = bits(_io_rd_small_1_3_WIRE_8, 79, 64) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_69 = asSInt(_io_rd_small_1_3_T_68) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_7.data[4] <= _io_rd_small_1_3_T_69 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_70 = bits(_io_rd_small_1_3_WIRE_8, 95, 80) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_71 = asSInt(_io_rd_small_1_3_T_70) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_7.data[5] <= _io_rd_small_1_3_T_71 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_72 = bits(_io_rd_small_1_3_WIRE_8, 111, 96) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_73 = asSInt(_io_rd_small_1_3_T_72) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_7.data[6] <= _io_rd_small_1_3_T_73 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_74 = bits(_io_rd_small_1_3_WIRE_8, 127, 112) @[bram.scala 174:90]
    node _io_rd_small_1_3_T_75 = asSInt(_io_rd_small_1_3_T_74) @[bram.scala 174:90]
    _io_rd_small_1_3_WIRE_7.data[7] <= _io_rd_small_1_3_T_75 @[bram.scala 174:90]
    node _io_rd_small_1_3_T_76 = mux(_io_rd_small_1_3_T_59, _io_rd_small_1_3_WIRE_7, _io_rd_small_1_3_WIRE) @[Mux.scala 98:16]
    node _io_rd_small_1_3_T_77 = mux(_io_rd_small_1_3_T_42, _io_rd_small_1_3_WIRE_5, _io_rd_small_1_3_T_76) @[Mux.scala 98:16]
    node _io_rd_small_1_3_T_78 = mux(_io_rd_small_1_3_T_25, _io_rd_small_1_3_WIRE_3, _io_rd_small_1_3_T_77) @[Mux.scala 98:16]
    node _io_rd_small_1_3_T_79 = mux(_io_rd_small_1_3_T_8, _io_rd_small_1_3_WIRE_1, _io_rd_small_1_3_T_78) @[Mux.scala 98:16]
    io.rd_small[1][3].data[0] <= _io_rd_small_1_3_T_79.data[0] @[bram.scala 173:27]
    io.rd_small[1][3].data[1] <= _io_rd_small_1_3_T_79.data[1] @[bram.scala 173:27]
    io.rd_small[1][3].data[2] <= _io_rd_small_1_3_T_79.data[2] @[bram.scala 173:27]
    io.rd_small[1][3].data[3] <= _io_rd_small_1_3_T_79.data[3] @[bram.scala 173:27]
    io.rd_small[1][3].data[4] <= _io_rd_small_1_3_T_79.data[4] @[bram.scala 173:27]
    io.rd_small[1][3].data[5] <= _io_rd_small_1_3_T_79.data[5] @[bram.scala 173:27]
    io.rd_small[1][3].data[6] <= _io_rd_small_1_3_T_79.data[6] @[bram.scala 173:27]
    io.rd_small[1][3].data[7] <= _io_rd_small_1_3_T_79.data[7] @[bram.scala 173:27]
    node _T_162 = eq(io.wr_addr.addrs[0].bank_id, UInt<1>("h00")) @[bram.scala 180:37]
    when _T_162 : @[bram.scala 180:44]
      big_banks[0].addrb <= io.wr_addr.addrs[0].addr @[bram.scala 181:28]
      node big_banks_0_dina_lo_lo_lo_lo_lo = asUInt(io.to_bigbank.data[0]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_lo_lo_hi_lo = asUInt(io.to_bigbank.data[1]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_lo_lo_hi_hi = asUInt(io.to_bigbank.data[2]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_lo_hi_lo = asUInt(io.to_bigbank.data[3]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_lo_hi_hi_lo = asUInt(io.to_bigbank.data[4]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_lo_hi_hi_hi = asUInt(io.to_bigbank.data[5]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_hi_lo_lo = asUInt(io.to_bigbank.data[6]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_hi_lo_hi_lo = asUInt(io.to_bigbank.data[7]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_hi_lo_hi_hi = asUInt(io.to_bigbank.data[8]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_hi_hi_lo = asUInt(io.to_bigbank.data[9]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_hi_hi_hi_lo = asUInt(io.to_bigbank.data[10]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_hi_hi_hi_hi = asUInt(io.to_bigbank.data[11]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_lo_lo_lo = asUInt(io.to_bigbank.data[12]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_lo_lo_hi_lo = asUInt(io.to_bigbank.data[13]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_lo_lo_hi_hi = asUInt(io.to_bigbank.data[14]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_lo_hi_lo = asUInt(io.to_bigbank.data[15]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_lo_hi_hi_lo = asUInt(io.to_bigbank.data[16]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_lo_hi_hi_hi = asUInt(io.to_bigbank.data[17]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_hi_lo_lo = asUInt(io.to_bigbank.data[18]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_hi_lo_hi_lo = asUInt(io.to_bigbank.data[19]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_hi_lo_hi_hi = asUInt(io.to_bigbank.data[20]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_hi_hi_lo = asUInt(io.to_bigbank.data[21]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_hi_hi_hi_lo = asUInt(io.to_bigbank.data[22]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_hi_hi_hi_hi = asUInt(io.to_bigbank.data[23]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_lo_lo_lo = asUInt(io.to_bigbank.data[24]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_lo_lo_hi_lo = asUInt(io.to_bigbank.data[25]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_lo_lo_hi_hi = asUInt(io.to_bigbank.data[26]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_lo_hi_lo = asUInt(io.to_bigbank.data[27]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_lo_hi_hi_lo = asUInt(io.to_bigbank.data[28]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_lo_hi_hi_hi = asUInt(io.to_bigbank.data[29]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_hi_lo_lo = asUInt(io.to_bigbank.data[30]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_hi_lo_hi_lo = asUInt(io.to_bigbank.data[31]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_hi_lo_hi_hi = asUInt(io.to_bigbank.data[32]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_hi_hi_lo = asUInt(io.to_bigbank.data[33]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_hi_hi_hi_lo = asUInt(io.to_bigbank.data[34]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_hi_hi_hi_hi = asUInt(io.to_bigbank.data[35]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_lo_lo_lo = asUInt(io.to_bigbank.data[36]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_lo_lo_hi_lo = asUInt(io.to_bigbank.data[37]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_lo_lo_hi_hi = asUInt(io.to_bigbank.data[38]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_lo_hi_lo = asUInt(io.to_bigbank.data[39]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_lo_hi_hi_lo = asUInt(io.to_bigbank.data[40]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_lo_hi_hi_hi = asUInt(io.to_bigbank.data[41]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_hi_lo_lo = asUInt(io.to_bigbank.data[42]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_hi_lo_hi_lo = asUInt(io.to_bigbank.data[43]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_hi_lo_hi_hi = asUInt(io.to_bigbank.data[44]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_hi_hi_lo = asUInt(io.to_bigbank.data[45]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_hi_hi_hi_lo = asUInt(io.to_bigbank.data[46]) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_hi_hi_hi_hi = asUInt(io.to_bigbank.data[47]) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_lo_lo_hi = cat(big_banks_0_dina_lo_lo_lo_lo_hi_hi, big_banks_0_dina_lo_lo_lo_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_lo_lo = cat(big_banks_0_dina_lo_lo_lo_lo_hi, big_banks_0_dina_lo_lo_lo_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_lo_hi_hi = cat(big_banks_0_dina_lo_lo_lo_hi_hi_hi, big_banks_0_dina_lo_lo_lo_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_lo_hi = cat(big_banks_0_dina_lo_lo_lo_hi_hi, big_banks_0_dina_lo_lo_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_lo = cat(big_banks_0_dina_lo_lo_lo_hi, big_banks_0_dina_lo_lo_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_hi_lo_hi = cat(big_banks_0_dina_lo_lo_hi_lo_hi_hi, big_banks_0_dina_lo_lo_hi_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_hi_lo = cat(big_banks_0_dina_lo_lo_hi_lo_hi, big_banks_0_dina_lo_lo_hi_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_hi_hi_hi = cat(big_banks_0_dina_lo_lo_hi_hi_hi_hi, big_banks_0_dina_lo_lo_hi_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_hi_hi = cat(big_banks_0_dina_lo_lo_hi_hi_hi, big_banks_0_dina_lo_lo_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo_hi = cat(big_banks_0_dina_lo_lo_hi_hi, big_banks_0_dina_lo_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_lo = cat(big_banks_0_dina_lo_lo_hi, big_banks_0_dina_lo_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_lo_lo_hi = cat(big_banks_0_dina_lo_hi_lo_lo_hi_hi, big_banks_0_dina_lo_hi_lo_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_lo_lo = cat(big_banks_0_dina_lo_hi_lo_lo_hi, big_banks_0_dina_lo_hi_lo_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_lo_hi_hi = cat(big_banks_0_dina_lo_hi_lo_hi_hi_hi, big_banks_0_dina_lo_hi_lo_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_lo_hi = cat(big_banks_0_dina_lo_hi_lo_hi_hi, big_banks_0_dina_lo_hi_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_lo = cat(big_banks_0_dina_lo_hi_lo_hi, big_banks_0_dina_lo_hi_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_hi_lo_hi = cat(big_banks_0_dina_lo_hi_hi_lo_hi_hi, big_banks_0_dina_lo_hi_hi_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_hi_lo = cat(big_banks_0_dina_lo_hi_hi_lo_hi, big_banks_0_dina_lo_hi_hi_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_hi_hi_hi = cat(big_banks_0_dina_lo_hi_hi_hi_hi_hi, big_banks_0_dina_lo_hi_hi_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_hi_hi = cat(big_banks_0_dina_lo_hi_hi_hi_hi, big_banks_0_dina_lo_hi_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi_hi = cat(big_banks_0_dina_lo_hi_hi_hi, big_banks_0_dina_lo_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo_hi = cat(big_banks_0_dina_lo_hi_hi, big_banks_0_dina_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_lo = cat(big_banks_0_dina_lo_hi, big_banks_0_dina_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_lo_lo_hi = cat(big_banks_0_dina_hi_lo_lo_lo_hi_hi, big_banks_0_dina_hi_lo_lo_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_lo_lo = cat(big_banks_0_dina_hi_lo_lo_lo_hi, big_banks_0_dina_hi_lo_lo_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_lo_hi_hi = cat(big_banks_0_dina_hi_lo_lo_hi_hi_hi, big_banks_0_dina_hi_lo_lo_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_lo_hi = cat(big_banks_0_dina_hi_lo_lo_hi_hi, big_banks_0_dina_hi_lo_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_lo = cat(big_banks_0_dina_hi_lo_lo_hi, big_banks_0_dina_hi_lo_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_hi_lo_hi = cat(big_banks_0_dina_hi_lo_hi_lo_hi_hi, big_banks_0_dina_hi_lo_hi_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_hi_lo = cat(big_banks_0_dina_hi_lo_hi_lo_hi, big_banks_0_dina_hi_lo_hi_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_hi_hi_hi = cat(big_banks_0_dina_hi_lo_hi_hi_hi_hi, big_banks_0_dina_hi_lo_hi_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_hi_hi = cat(big_banks_0_dina_hi_lo_hi_hi_hi, big_banks_0_dina_hi_lo_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo_hi = cat(big_banks_0_dina_hi_lo_hi_hi, big_banks_0_dina_hi_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_lo = cat(big_banks_0_dina_hi_lo_hi, big_banks_0_dina_hi_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_lo_lo_hi = cat(big_banks_0_dina_hi_hi_lo_lo_hi_hi, big_banks_0_dina_hi_hi_lo_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_lo_lo = cat(big_banks_0_dina_hi_hi_lo_lo_hi, big_banks_0_dina_hi_hi_lo_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_lo_hi_hi = cat(big_banks_0_dina_hi_hi_lo_hi_hi_hi, big_banks_0_dina_hi_hi_lo_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_lo_hi = cat(big_banks_0_dina_hi_hi_lo_hi_hi, big_banks_0_dina_hi_hi_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_lo = cat(big_banks_0_dina_hi_hi_lo_hi, big_banks_0_dina_hi_hi_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_hi_lo_hi = cat(big_banks_0_dina_hi_hi_hi_lo_hi_hi, big_banks_0_dina_hi_hi_hi_lo_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_hi_lo = cat(big_banks_0_dina_hi_hi_hi_lo_hi, big_banks_0_dina_hi_hi_hi_lo_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_hi_hi_hi = cat(big_banks_0_dina_hi_hi_hi_hi_hi_hi, big_banks_0_dina_hi_hi_hi_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_hi_hi = cat(big_banks_0_dina_hi_hi_hi_hi_hi, big_banks_0_dina_hi_hi_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi_hi = cat(big_banks_0_dina_hi_hi_hi_hi, big_banks_0_dina_hi_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi_hi = cat(big_banks_0_dina_hi_hi_hi, big_banks_0_dina_hi_hi_lo) @[bram.scala 182:44]
      node big_banks_0_dina_hi = cat(big_banks_0_dina_hi_hi, big_banks_0_dina_hi_lo) @[bram.scala 182:44]
      node _big_banks_0_dina_T = cat(big_banks_0_dina_hi, big_banks_0_dina_lo) @[bram.scala 182:44]
      big_banks[0].dina <= _big_banks_0_dina_T @[bram.scala 182:27]
      big_banks[0].web <= UInt<1>("h01") @[bram.scala 183:26]
      skip @[bram.scala 180:44]
    else : @[bram.scala 184:16]
      big_banks[1].addrb <= io.wr_addr.addrs[0].addr @[bram.scala 185:28]
      node big_banks_1_dina_lo_lo_lo_lo_lo = asUInt(io.to_bigbank.data[0]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_lo_lo_hi_lo = asUInt(io.to_bigbank.data[1]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_lo_lo_hi_hi = asUInt(io.to_bigbank.data[2]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_lo_hi_lo = asUInt(io.to_bigbank.data[3]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_lo_hi_hi_lo = asUInt(io.to_bigbank.data[4]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_lo_hi_hi_hi = asUInt(io.to_bigbank.data[5]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_hi_lo_lo = asUInt(io.to_bigbank.data[6]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_hi_lo_hi_lo = asUInt(io.to_bigbank.data[7]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_hi_lo_hi_hi = asUInt(io.to_bigbank.data[8]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_hi_hi_lo = asUInt(io.to_bigbank.data[9]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_hi_hi_hi_lo = asUInt(io.to_bigbank.data[10]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_hi_hi_hi_hi = asUInt(io.to_bigbank.data[11]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_lo_lo_lo = asUInt(io.to_bigbank.data[12]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_lo_lo_hi_lo = asUInt(io.to_bigbank.data[13]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_lo_lo_hi_hi = asUInt(io.to_bigbank.data[14]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_lo_hi_lo = asUInt(io.to_bigbank.data[15]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_lo_hi_hi_lo = asUInt(io.to_bigbank.data[16]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_lo_hi_hi_hi = asUInt(io.to_bigbank.data[17]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_hi_lo_lo = asUInt(io.to_bigbank.data[18]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_hi_lo_hi_lo = asUInt(io.to_bigbank.data[19]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_hi_lo_hi_hi = asUInt(io.to_bigbank.data[20]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_hi_hi_lo = asUInt(io.to_bigbank.data[21]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_hi_hi_hi_lo = asUInt(io.to_bigbank.data[22]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_hi_hi_hi_hi = asUInt(io.to_bigbank.data[23]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_lo_lo_lo = asUInt(io.to_bigbank.data[24]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_lo_lo_hi_lo = asUInt(io.to_bigbank.data[25]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_lo_lo_hi_hi = asUInt(io.to_bigbank.data[26]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_lo_hi_lo = asUInt(io.to_bigbank.data[27]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_lo_hi_hi_lo = asUInt(io.to_bigbank.data[28]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_lo_hi_hi_hi = asUInt(io.to_bigbank.data[29]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_hi_lo_lo = asUInt(io.to_bigbank.data[30]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_hi_lo_hi_lo = asUInt(io.to_bigbank.data[31]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_hi_lo_hi_hi = asUInt(io.to_bigbank.data[32]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_hi_hi_lo = asUInt(io.to_bigbank.data[33]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_hi_hi_hi_lo = asUInt(io.to_bigbank.data[34]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_hi_hi_hi_hi = asUInt(io.to_bigbank.data[35]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_lo_lo_lo = asUInt(io.to_bigbank.data[36]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_lo_lo_hi_lo = asUInt(io.to_bigbank.data[37]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_lo_lo_hi_hi = asUInt(io.to_bigbank.data[38]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_lo_hi_lo = asUInt(io.to_bigbank.data[39]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_lo_hi_hi_lo = asUInt(io.to_bigbank.data[40]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_lo_hi_hi_hi = asUInt(io.to_bigbank.data[41]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_hi_lo_lo = asUInt(io.to_bigbank.data[42]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_hi_lo_hi_lo = asUInt(io.to_bigbank.data[43]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_hi_lo_hi_hi = asUInt(io.to_bigbank.data[44]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_hi_hi_lo = asUInt(io.to_bigbank.data[45]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_hi_hi_hi_lo = asUInt(io.to_bigbank.data[46]) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_hi_hi_hi_hi = asUInt(io.to_bigbank.data[47]) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_lo_lo_hi = cat(big_banks_1_dina_lo_lo_lo_lo_hi_hi, big_banks_1_dina_lo_lo_lo_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_lo_lo = cat(big_banks_1_dina_lo_lo_lo_lo_hi, big_banks_1_dina_lo_lo_lo_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_lo_hi_hi = cat(big_banks_1_dina_lo_lo_lo_hi_hi_hi, big_banks_1_dina_lo_lo_lo_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_lo_hi = cat(big_banks_1_dina_lo_lo_lo_hi_hi, big_banks_1_dina_lo_lo_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_lo = cat(big_banks_1_dina_lo_lo_lo_hi, big_banks_1_dina_lo_lo_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_hi_lo_hi = cat(big_banks_1_dina_lo_lo_hi_lo_hi_hi, big_banks_1_dina_lo_lo_hi_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_hi_lo = cat(big_banks_1_dina_lo_lo_hi_lo_hi, big_banks_1_dina_lo_lo_hi_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_hi_hi_hi = cat(big_banks_1_dina_lo_lo_hi_hi_hi_hi, big_banks_1_dina_lo_lo_hi_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_hi_hi = cat(big_banks_1_dina_lo_lo_hi_hi_hi, big_banks_1_dina_lo_lo_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo_hi = cat(big_banks_1_dina_lo_lo_hi_hi, big_banks_1_dina_lo_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_lo = cat(big_banks_1_dina_lo_lo_hi, big_banks_1_dina_lo_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_lo_lo_hi = cat(big_banks_1_dina_lo_hi_lo_lo_hi_hi, big_banks_1_dina_lo_hi_lo_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_lo_lo = cat(big_banks_1_dina_lo_hi_lo_lo_hi, big_banks_1_dina_lo_hi_lo_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_lo_hi_hi = cat(big_banks_1_dina_lo_hi_lo_hi_hi_hi, big_banks_1_dina_lo_hi_lo_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_lo_hi = cat(big_banks_1_dina_lo_hi_lo_hi_hi, big_banks_1_dina_lo_hi_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_lo = cat(big_banks_1_dina_lo_hi_lo_hi, big_banks_1_dina_lo_hi_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_hi_lo_hi = cat(big_banks_1_dina_lo_hi_hi_lo_hi_hi, big_banks_1_dina_lo_hi_hi_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_hi_lo = cat(big_banks_1_dina_lo_hi_hi_lo_hi, big_banks_1_dina_lo_hi_hi_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_hi_hi_hi = cat(big_banks_1_dina_lo_hi_hi_hi_hi_hi, big_banks_1_dina_lo_hi_hi_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_hi_hi = cat(big_banks_1_dina_lo_hi_hi_hi_hi, big_banks_1_dina_lo_hi_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi_hi = cat(big_banks_1_dina_lo_hi_hi_hi, big_banks_1_dina_lo_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo_hi = cat(big_banks_1_dina_lo_hi_hi, big_banks_1_dina_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_lo = cat(big_banks_1_dina_lo_hi, big_banks_1_dina_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_lo_lo_hi = cat(big_banks_1_dina_hi_lo_lo_lo_hi_hi, big_banks_1_dina_hi_lo_lo_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_lo_lo = cat(big_banks_1_dina_hi_lo_lo_lo_hi, big_banks_1_dina_hi_lo_lo_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_lo_hi_hi = cat(big_banks_1_dina_hi_lo_lo_hi_hi_hi, big_banks_1_dina_hi_lo_lo_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_lo_hi = cat(big_banks_1_dina_hi_lo_lo_hi_hi, big_banks_1_dina_hi_lo_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_lo = cat(big_banks_1_dina_hi_lo_lo_hi, big_banks_1_dina_hi_lo_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_hi_lo_hi = cat(big_banks_1_dina_hi_lo_hi_lo_hi_hi, big_banks_1_dina_hi_lo_hi_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_hi_lo = cat(big_banks_1_dina_hi_lo_hi_lo_hi, big_banks_1_dina_hi_lo_hi_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_hi_hi_hi = cat(big_banks_1_dina_hi_lo_hi_hi_hi_hi, big_banks_1_dina_hi_lo_hi_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_hi_hi = cat(big_banks_1_dina_hi_lo_hi_hi_hi, big_banks_1_dina_hi_lo_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo_hi = cat(big_banks_1_dina_hi_lo_hi_hi, big_banks_1_dina_hi_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_lo = cat(big_banks_1_dina_hi_lo_hi, big_banks_1_dina_hi_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_lo_lo_hi = cat(big_banks_1_dina_hi_hi_lo_lo_hi_hi, big_banks_1_dina_hi_hi_lo_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_lo_lo = cat(big_banks_1_dina_hi_hi_lo_lo_hi, big_banks_1_dina_hi_hi_lo_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_lo_hi_hi = cat(big_banks_1_dina_hi_hi_lo_hi_hi_hi, big_banks_1_dina_hi_hi_lo_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_lo_hi = cat(big_banks_1_dina_hi_hi_lo_hi_hi, big_banks_1_dina_hi_hi_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_lo = cat(big_banks_1_dina_hi_hi_lo_hi, big_banks_1_dina_hi_hi_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_hi_lo_hi = cat(big_banks_1_dina_hi_hi_hi_lo_hi_hi, big_banks_1_dina_hi_hi_hi_lo_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_hi_lo = cat(big_banks_1_dina_hi_hi_hi_lo_hi, big_banks_1_dina_hi_hi_hi_lo_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_hi_hi_hi = cat(big_banks_1_dina_hi_hi_hi_hi_hi_hi, big_banks_1_dina_hi_hi_hi_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_hi_hi = cat(big_banks_1_dina_hi_hi_hi_hi_hi, big_banks_1_dina_hi_hi_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi_hi = cat(big_banks_1_dina_hi_hi_hi_hi, big_banks_1_dina_hi_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi_hi = cat(big_banks_1_dina_hi_hi_hi, big_banks_1_dina_hi_hi_lo) @[bram.scala 186:44]
      node big_banks_1_dina_hi = cat(big_banks_1_dina_hi_hi, big_banks_1_dina_hi_lo) @[bram.scala 186:44]
      node _big_banks_1_dina_T = cat(big_banks_1_dina_hi, big_banks_1_dina_lo) @[bram.scala 186:44]
      big_banks[1].dina <= _big_banks_1_dina_T @[bram.scala 186:27]
      big_banks[1].web <= UInt<1>("h01") @[bram.scala 187:26]
      skip @[bram.scala 184:16]
    node _T_163 = eq(io.wr_addr.addrs[1].bank_id, UInt<1>("h00")) @[bram.scala 191:41]
    node _T_164 = and(_T_163, io.wr_valid_in) @[bram.scala 191:51]
    when _T_164 : @[bram.scala 191:68]
      small_banks[0].addrb <= io.wr_addr.addrs[1].addr @[bram.scala 192:36]
      node small_banks_0_dinb_lo_lo_lo = asUInt(io.to_smallbank[0].data[0]) @[bram.scala 193:57]
      node small_banks_0_dinb_lo_lo_hi = asUInt(io.to_smallbank[0].data[1]) @[bram.scala 193:57]
      node small_banks_0_dinb_lo_hi_lo = asUInt(io.to_smallbank[0].data[2]) @[bram.scala 193:57]
      node small_banks_0_dinb_lo_hi_hi = asUInt(io.to_smallbank[0].data[3]) @[bram.scala 193:57]
      node small_banks_0_dinb_hi_lo_lo = asUInt(io.to_smallbank[0].data[4]) @[bram.scala 193:57]
      node small_banks_0_dinb_hi_lo_hi = asUInt(io.to_smallbank[0].data[5]) @[bram.scala 193:57]
      node small_banks_0_dinb_hi_hi_lo = asUInt(io.to_smallbank[0].data[6]) @[bram.scala 193:57]
      node small_banks_0_dinb_hi_hi_hi = asUInt(io.to_smallbank[0].data[7]) @[bram.scala 193:57]
      node small_banks_0_dinb_lo_lo = cat(small_banks_0_dinb_lo_lo_hi, small_banks_0_dinb_lo_lo_lo) @[bram.scala 193:57]
      node small_banks_0_dinb_lo_hi = cat(small_banks_0_dinb_lo_hi_hi, small_banks_0_dinb_lo_hi_lo) @[bram.scala 193:57]
      node small_banks_0_dinb_lo = cat(small_banks_0_dinb_lo_hi, small_banks_0_dinb_lo_lo) @[bram.scala 193:57]
      node small_banks_0_dinb_hi_lo = cat(small_banks_0_dinb_hi_lo_hi, small_banks_0_dinb_hi_lo_lo) @[bram.scala 193:57]
      node small_banks_0_dinb_hi_hi = cat(small_banks_0_dinb_hi_hi_hi, small_banks_0_dinb_hi_hi_lo) @[bram.scala 193:57]
      node small_banks_0_dinb_hi = cat(small_banks_0_dinb_hi_hi, small_banks_0_dinb_hi_lo) @[bram.scala 193:57]
      node _small_banks_0_dinb_T = cat(small_banks_0_dinb_hi, small_banks_0_dinb_lo) @[bram.scala 193:57]
      small_banks[0].dinb <= _small_banks_0_dinb_T @[bram.scala 193:35]
      small_banks[1].addrb <= io.wr_addr.addrs[2].addr @[bram.scala 194:38]
      node small_banks_1_dinb_lo_lo_lo = asUInt(io.to_smallbank[1].data[0]) @[bram.scala 195:59]
      node small_banks_1_dinb_lo_lo_hi = asUInt(io.to_smallbank[1].data[1]) @[bram.scala 195:59]
      node small_banks_1_dinb_lo_hi_lo = asUInt(io.to_smallbank[1].data[2]) @[bram.scala 195:59]
      node small_banks_1_dinb_lo_hi_hi = asUInt(io.to_smallbank[1].data[3]) @[bram.scala 195:59]
      node small_banks_1_dinb_hi_lo_lo = asUInt(io.to_smallbank[1].data[4]) @[bram.scala 195:59]
      node small_banks_1_dinb_hi_lo_hi = asUInt(io.to_smallbank[1].data[5]) @[bram.scala 195:59]
      node small_banks_1_dinb_hi_hi_lo = asUInt(io.to_smallbank[1].data[6]) @[bram.scala 195:59]
      node small_banks_1_dinb_hi_hi_hi = asUInt(io.to_smallbank[1].data[7]) @[bram.scala 195:59]
      node small_banks_1_dinb_lo_lo = cat(small_banks_1_dinb_lo_lo_hi, small_banks_1_dinb_lo_lo_lo) @[bram.scala 195:59]
      node small_banks_1_dinb_lo_hi = cat(small_banks_1_dinb_lo_hi_hi, small_banks_1_dinb_lo_hi_lo) @[bram.scala 195:59]
      node small_banks_1_dinb_lo = cat(small_banks_1_dinb_lo_hi, small_banks_1_dinb_lo_lo) @[bram.scala 195:59]
      node small_banks_1_dinb_hi_lo = cat(small_banks_1_dinb_hi_lo_hi, small_banks_1_dinb_hi_lo_lo) @[bram.scala 195:59]
      node small_banks_1_dinb_hi_hi = cat(small_banks_1_dinb_hi_hi_hi, small_banks_1_dinb_hi_hi_lo) @[bram.scala 195:59]
      node small_banks_1_dinb_hi = cat(small_banks_1_dinb_hi_hi, small_banks_1_dinb_hi_lo) @[bram.scala 195:59]
      node _small_banks_1_dinb_T = cat(small_banks_1_dinb_hi, small_banks_1_dinb_lo) @[bram.scala 195:59]
      small_banks[1].dinb <= _small_banks_1_dinb_T @[bram.scala 195:37]
      small_banks[0].web <= UInt<1>("h01") @[bram.scala 196:34]
      small_banks[1].web <= UInt<1>("h01") @[bram.scala 197:36]
      skip @[bram.scala 191:68]
    node _T_165 = eq(io.wr_addr.addrs[1].bank_id, UInt<2>("h02")) @[bram.scala 191:41]
    node _T_166 = and(_T_165, io.wr_valid_in) @[bram.scala 191:51]
    when _T_166 : @[bram.scala 191:68]
      small_banks[2].addrb <= io.wr_addr.addrs[1].addr @[bram.scala 192:36]
      node small_banks_2_dinb_lo_lo_lo = asUInt(io.to_smallbank[0].data[0]) @[bram.scala 193:57]
      node small_banks_2_dinb_lo_lo_hi = asUInt(io.to_smallbank[0].data[1]) @[bram.scala 193:57]
      node small_banks_2_dinb_lo_hi_lo = asUInt(io.to_smallbank[0].data[2]) @[bram.scala 193:57]
      node small_banks_2_dinb_lo_hi_hi = asUInt(io.to_smallbank[0].data[3]) @[bram.scala 193:57]
      node small_banks_2_dinb_hi_lo_lo = asUInt(io.to_smallbank[0].data[4]) @[bram.scala 193:57]
      node small_banks_2_dinb_hi_lo_hi = asUInt(io.to_smallbank[0].data[5]) @[bram.scala 193:57]
      node small_banks_2_dinb_hi_hi_lo = asUInt(io.to_smallbank[0].data[6]) @[bram.scala 193:57]
      node small_banks_2_dinb_hi_hi_hi = asUInt(io.to_smallbank[0].data[7]) @[bram.scala 193:57]
      node small_banks_2_dinb_lo_lo = cat(small_banks_2_dinb_lo_lo_hi, small_banks_2_dinb_lo_lo_lo) @[bram.scala 193:57]
      node small_banks_2_dinb_lo_hi = cat(small_banks_2_dinb_lo_hi_hi, small_banks_2_dinb_lo_hi_lo) @[bram.scala 193:57]
      node small_banks_2_dinb_lo = cat(small_banks_2_dinb_lo_hi, small_banks_2_dinb_lo_lo) @[bram.scala 193:57]
      node small_banks_2_dinb_hi_lo = cat(small_banks_2_dinb_hi_lo_hi, small_banks_2_dinb_hi_lo_lo) @[bram.scala 193:57]
      node small_banks_2_dinb_hi_hi = cat(small_banks_2_dinb_hi_hi_hi, small_banks_2_dinb_hi_hi_lo) @[bram.scala 193:57]
      node small_banks_2_dinb_hi = cat(small_banks_2_dinb_hi_hi, small_banks_2_dinb_hi_lo) @[bram.scala 193:57]
      node _small_banks_2_dinb_T = cat(small_banks_2_dinb_hi, small_banks_2_dinb_lo) @[bram.scala 193:57]
      small_banks[2].dinb <= _small_banks_2_dinb_T @[bram.scala 193:35]
      small_banks[3].addrb <= io.wr_addr.addrs[2].addr @[bram.scala 194:38]
      node small_banks_3_dinb_lo_lo_lo = asUInt(io.to_smallbank[1].data[0]) @[bram.scala 195:59]
      node small_banks_3_dinb_lo_lo_hi = asUInt(io.to_smallbank[1].data[1]) @[bram.scala 195:59]
      node small_banks_3_dinb_lo_hi_lo = asUInt(io.to_smallbank[1].data[2]) @[bram.scala 195:59]
      node small_banks_3_dinb_lo_hi_hi = asUInt(io.to_smallbank[1].data[3]) @[bram.scala 195:59]
      node small_banks_3_dinb_hi_lo_lo = asUInt(io.to_smallbank[1].data[4]) @[bram.scala 195:59]
      node small_banks_3_dinb_hi_lo_hi = asUInt(io.to_smallbank[1].data[5]) @[bram.scala 195:59]
      node small_banks_3_dinb_hi_hi_lo = asUInt(io.to_smallbank[1].data[6]) @[bram.scala 195:59]
      node small_banks_3_dinb_hi_hi_hi = asUInt(io.to_smallbank[1].data[7]) @[bram.scala 195:59]
      node small_banks_3_dinb_lo_lo = cat(small_banks_3_dinb_lo_lo_hi, small_banks_3_dinb_lo_lo_lo) @[bram.scala 195:59]
      node small_banks_3_dinb_lo_hi = cat(small_banks_3_dinb_lo_hi_hi, small_banks_3_dinb_lo_hi_lo) @[bram.scala 195:59]
      node small_banks_3_dinb_lo = cat(small_banks_3_dinb_lo_hi, small_banks_3_dinb_lo_lo) @[bram.scala 195:59]
      node small_banks_3_dinb_hi_lo = cat(small_banks_3_dinb_hi_lo_hi, small_banks_3_dinb_hi_lo_lo) @[bram.scala 195:59]
      node small_banks_3_dinb_hi_hi = cat(small_banks_3_dinb_hi_hi_hi, small_banks_3_dinb_hi_hi_lo) @[bram.scala 195:59]
      node small_banks_3_dinb_hi = cat(small_banks_3_dinb_hi_hi, small_banks_3_dinb_hi_lo) @[bram.scala 195:59]
      node _small_banks_3_dinb_T = cat(small_banks_3_dinb_hi, small_banks_3_dinb_lo) @[bram.scala 195:59]
      small_banks[3].dinb <= _small_banks_3_dinb_T @[bram.scala 195:37]
      small_banks[2].web <= UInt<1>("h01") @[bram.scala 196:34]
      small_banks[3].web <= UInt<1>("h01") @[bram.scala 197:36]
      skip @[bram.scala 191:68]
    node _T_167 = eq(io.wr_addr.addrs[1].bank_id, UInt<3>("h04")) @[bram.scala 191:41]
    node _T_168 = and(_T_167, io.wr_valid_in) @[bram.scala 191:51]
    when _T_168 : @[bram.scala 191:68]
      small_banks[4].addrb <= io.wr_addr.addrs[1].addr @[bram.scala 192:36]
      node small_banks_4_dinb_lo_lo_lo = asUInt(io.to_smallbank[0].data[0]) @[bram.scala 193:57]
      node small_banks_4_dinb_lo_lo_hi = asUInt(io.to_smallbank[0].data[1]) @[bram.scala 193:57]
      node small_banks_4_dinb_lo_hi_lo = asUInt(io.to_smallbank[0].data[2]) @[bram.scala 193:57]
      node small_banks_4_dinb_lo_hi_hi = asUInt(io.to_smallbank[0].data[3]) @[bram.scala 193:57]
      node small_banks_4_dinb_hi_lo_lo = asUInt(io.to_smallbank[0].data[4]) @[bram.scala 193:57]
      node small_banks_4_dinb_hi_lo_hi = asUInt(io.to_smallbank[0].data[5]) @[bram.scala 193:57]
      node small_banks_4_dinb_hi_hi_lo = asUInt(io.to_smallbank[0].data[6]) @[bram.scala 193:57]
      node small_banks_4_dinb_hi_hi_hi = asUInt(io.to_smallbank[0].data[7]) @[bram.scala 193:57]
      node small_banks_4_dinb_lo_lo = cat(small_banks_4_dinb_lo_lo_hi, small_banks_4_dinb_lo_lo_lo) @[bram.scala 193:57]
      node small_banks_4_dinb_lo_hi = cat(small_banks_4_dinb_lo_hi_hi, small_banks_4_dinb_lo_hi_lo) @[bram.scala 193:57]
      node small_banks_4_dinb_lo = cat(small_banks_4_dinb_lo_hi, small_banks_4_dinb_lo_lo) @[bram.scala 193:57]
      node small_banks_4_dinb_hi_lo = cat(small_banks_4_dinb_hi_lo_hi, small_banks_4_dinb_hi_lo_lo) @[bram.scala 193:57]
      node small_banks_4_dinb_hi_hi = cat(small_banks_4_dinb_hi_hi_hi, small_banks_4_dinb_hi_hi_lo) @[bram.scala 193:57]
      node small_banks_4_dinb_hi = cat(small_banks_4_dinb_hi_hi, small_banks_4_dinb_hi_lo) @[bram.scala 193:57]
      node _small_banks_4_dinb_T = cat(small_banks_4_dinb_hi, small_banks_4_dinb_lo) @[bram.scala 193:57]
      small_banks[4].dinb <= _small_banks_4_dinb_T @[bram.scala 193:35]
      small_banks[5].addrb <= io.wr_addr.addrs[2].addr @[bram.scala 194:38]
      node small_banks_5_dinb_lo_lo_lo = asUInt(io.to_smallbank[1].data[0]) @[bram.scala 195:59]
      node small_banks_5_dinb_lo_lo_hi = asUInt(io.to_smallbank[1].data[1]) @[bram.scala 195:59]
      node small_banks_5_dinb_lo_hi_lo = asUInt(io.to_smallbank[1].data[2]) @[bram.scala 195:59]
      node small_banks_5_dinb_lo_hi_hi = asUInt(io.to_smallbank[1].data[3]) @[bram.scala 195:59]
      node small_banks_5_dinb_hi_lo_lo = asUInt(io.to_smallbank[1].data[4]) @[bram.scala 195:59]
      node small_banks_5_dinb_hi_lo_hi = asUInt(io.to_smallbank[1].data[5]) @[bram.scala 195:59]
      node small_banks_5_dinb_hi_hi_lo = asUInt(io.to_smallbank[1].data[6]) @[bram.scala 195:59]
      node small_banks_5_dinb_hi_hi_hi = asUInt(io.to_smallbank[1].data[7]) @[bram.scala 195:59]
      node small_banks_5_dinb_lo_lo = cat(small_banks_5_dinb_lo_lo_hi, small_banks_5_dinb_lo_lo_lo) @[bram.scala 195:59]
      node small_banks_5_dinb_lo_hi = cat(small_banks_5_dinb_lo_hi_hi, small_banks_5_dinb_lo_hi_lo) @[bram.scala 195:59]
      node small_banks_5_dinb_lo = cat(small_banks_5_dinb_lo_hi, small_banks_5_dinb_lo_lo) @[bram.scala 195:59]
      node small_banks_5_dinb_hi_lo = cat(small_banks_5_dinb_hi_lo_hi, small_banks_5_dinb_hi_lo_lo) @[bram.scala 195:59]
      node small_banks_5_dinb_hi_hi = cat(small_banks_5_dinb_hi_hi_hi, small_banks_5_dinb_hi_hi_lo) @[bram.scala 195:59]
      node small_banks_5_dinb_hi = cat(small_banks_5_dinb_hi_hi, small_banks_5_dinb_hi_lo) @[bram.scala 195:59]
      node _small_banks_5_dinb_T = cat(small_banks_5_dinb_hi, small_banks_5_dinb_lo) @[bram.scala 195:59]
      small_banks[5].dinb <= _small_banks_5_dinb_T @[bram.scala 195:37]
      small_banks[4].web <= UInt<1>("h01") @[bram.scala 196:34]
      small_banks[5].web <= UInt<1>("h01") @[bram.scala 197:36]
      skip @[bram.scala 191:68]
    node _T_169 = eq(io.wr_addr.addrs[1].bank_id, UInt<3>("h06")) @[bram.scala 191:41]
    node _T_170 = and(_T_169, io.wr_valid_in) @[bram.scala 191:51]
    when _T_170 : @[bram.scala 191:68]
      small_banks[6].addrb <= io.wr_addr.addrs[1].addr @[bram.scala 192:36]
      node small_banks_6_dinb_lo_lo_lo = asUInt(io.to_smallbank[0].data[0]) @[bram.scala 193:57]
      node small_banks_6_dinb_lo_lo_hi = asUInt(io.to_smallbank[0].data[1]) @[bram.scala 193:57]
      node small_banks_6_dinb_lo_hi_lo = asUInt(io.to_smallbank[0].data[2]) @[bram.scala 193:57]
      node small_banks_6_dinb_lo_hi_hi = asUInt(io.to_smallbank[0].data[3]) @[bram.scala 193:57]
      node small_banks_6_dinb_hi_lo_lo = asUInt(io.to_smallbank[0].data[4]) @[bram.scala 193:57]
      node small_banks_6_dinb_hi_lo_hi = asUInt(io.to_smallbank[0].data[5]) @[bram.scala 193:57]
      node small_banks_6_dinb_hi_hi_lo = asUInt(io.to_smallbank[0].data[6]) @[bram.scala 193:57]
      node small_banks_6_dinb_hi_hi_hi = asUInt(io.to_smallbank[0].data[7]) @[bram.scala 193:57]
      node small_banks_6_dinb_lo_lo = cat(small_banks_6_dinb_lo_lo_hi, small_banks_6_dinb_lo_lo_lo) @[bram.scala 193:57]
      node small_banks_6_dinb_lo_hi = cat(small_banks_6_dinb_lo_hi_hi, small_banks_6_dinb_lo_hi_lo) @[bram.scala 193:57]
      node small_banks_6_dinb_lo = cat(small_banks_6_dinb_lo_hi, small_banks_6_dinb_lo_lo) @[bram.scala 193:57]
      node small_banks_6_dinb_hi_lo = cat(small_banks_6_dinb_hi_lo_hi, small_banks_6_dinb_hi_lo_lo) @[bram.scala 193:57]
      node small_banks_6_dinb_hi_hi = cat(small_banks_6_dinb_hi_hi_hi, small_banks_6_dinb_hi_hi_lo) @[bram.scala 193:57]
      node small_banks_6_dinb_hi = cat(small_banks_6_dinb_hi_hi, small_banks_6_dinb_hi_lo) @[bram.scala 193:57]
      node _small_banks_6_dinb_T = cat(small_banks_6_dinb_hi, small_banks_6_dinb_lo) @[bram.scala 193:57]
      small_banks[6].dinb <= _small_banks_6_dinb_T @[bram.scala 193:35]
      small_banks[7].addrb <= io.wr_addr.addrs[2].addr @[bram.scala 194:38]
      node small_banks_7_dinb_lo_lo_lo = asUInt(io.to_smallbank[1].data[0]) @[bram.scala 195:59]
      node small_banks_7_dinb_lo_lo_hi = asUInt(io.to_smallbank[1].data[1]) @[bram.scala 195:59]
      node small_banks_7_dinb_lo_hi_lo = asUInt(io.to_smallbank[1].data[2]) @[bram.scala 195:59]
      node small_banks_7_dinb_lo_hi_hi = asUInt(io.to_smallbank[1].data[3]) @[bram.scala 195:59]
      node small_banks_7_dinb_hi_lo_lo = asUInt(io.to_smallbank[1].data[4]) @[bram.scala 195:59]
      node small_banks_7_dinb_hi_lo_hi = asUInt(io.to_smallbank[1].data[5]) @[bram.scala 195:59]
      node small_banks_7_dinb_hi_hi_lo = asUInt(io.to_smallbank[1].data[6]) @[bram.scala 195:59]
      node small_banks_7_dinb_hi_hi_hi = asUInt(io.to_smallbank[1].data[7]) @[bram.scala 195:59]
      node small_banks_7_dinb_lo_lo = cat(small_banks_7_dinb_lo_lo_hi, small_banks_7_dinb_lo_lo_lo) @[bram.scala 195:59]
      node small_banks_7_dinb_lo_hi = cat(small_banks_7_dinb_lo_hi_hi, small_banks_7_dinb_lo_hi_lo) @[bram.scala 195:59]
      node small_banks_7_dinb_lo = cat(small_banks_7_dinb_lo_hi, small_banks_7_dinb_lo_lo) @[bram.scala 195:59]
      node small_banks_7_dinb_hi_lo = cat(small_banks_7_dinb_hi_lo_hi, small_banks_7_dinb_hi_lo_lo) @[bram.scala 195:59]
      node small_banks_7_dinb_hi_hi = cat(small_banks_7_dinb_hi_hi_hi, small_banks_7_dinb_hi_hi_lo) @[bram.scala 195:59]
      node small_banks_7_dinb_hi = cat(small_banks_7_dinb_hi_hi, small_banks_7_dinb_hi_lo) @[bram.scala 195:59]
      node _small_banks_7_dinb_T = cat(small_banks_7_dinb_hi, small_banks_7_dinb_lo) @[bram.scala 195:59]
      small_banks[7].dinb <= _small_banks_7_dinb_T @[bram.scala 195:37]
      small_banks[6].web <= UInt<1>("h01") @[bram.scala 196:34]
      small_banks[7].web <= UInt<1>("h01") @[bram.scala 197:36]
      skip @[bram.scala 191:68]
    
  module Top : 
    input clock : Clock
    input reset : UInt<1>
    output io : {complete : UInt<1>}
    
    inst GraphReader of GraphReader @[top.scala 14:25]
    GraphReader.clock <= clock
    GraphReader.reset <= reset
    inst GraphReader_1 of GraphReader_1 @[top.scala 15:25]
    GraphReader_1.clock <= clock
    GraphReader_1.reset <= reset
    inst PackReadData of PackReadData @[top.scala 16:27]
    PackReadData.clock <= clock
    PackReadData.reset <= reset
    inst ReadSwitch of ReadSwitch @[top.scala 17:29]
    ReadSwitch.clock <= clock
    ReadSwitch.reset <= reset
    inst WeightReader of WeightReader @[top.scala 18:29]
    WeightReader.clock <= clock
    WeightReader.reset <= reset
    inst Calc8x8 of Calc8x8 @[top.scala 19:25]
    Calc8x8.clock <= clock
    Calc8x8.reset <= reset
    inst Accumu of Accumu @[top.scala 20:22]
    Accumu.clock <= clock
    Accumu.reset <= reset
    inst Quant of Quant @[top.scala 21:23]
    Quant.clock <= clock
    Quant.reset <= reset
    inst WriteSwitch of WriteSwitch @[top.scala 22:30]
    WriteSwitch.clock <= clock
    WriteSwitch.reset <= reset
    inst RealWriter of RealWriter @[top.scala 23:24]
    RealWriter.clock <= clock
    RealWriter.reset <= reset
    inst Maxpool of Maxpool @[top.scala 24:25]
    Maxpool.clock <= clock
    Maxpool.reset <= reset
    inst ROMWeight of ROMWeight @[top.scala 26:28]
    ROMWeight.clock <= clock
    ROMWeight.reset <= reset
    inst ROMBias of ROMBias @[top.scala 27:26]
    ROMBias.clock <= clock
    ROMBias.reset <= reset
    inst RAMGroup of RAMGroup @[top.scala 28:22]
    RAMGroup.clock <= clock
    RAMGroup.reset <= reset
    io.complete <= UInt<1>("h00") @[top.scala 30:17]
    RAMGroup.io.rd_addr1.addrs[0].bank_id <= GraphReader.io.to_banks.addrs[0].bank_id @[top.scala 31:19]
    RAMGroup.io.rd_addr1.addrs[0].addr <= GraphReader.io.to_banks.addrs[0].addr @[top.scala 31:19]
    RAMGroup.io.rd_addr1.addrs[1].bank_id <= GraphReader.io.to_banks.addrs[1].bank_id @[top.scala 31:19]
    RAMGroup.io.rd_addr1.addrs[1].addr <= GraphReader.io.to_banks.addrs[1].addr @[top.scala 31:19]
    RAMGroup.io.rd_addr1.addrs[2].bank_id <= GraphReader.io.to_banks.addrs[2].bank_id @[top.scala 31:19]
    RAMGroup.io.rd_addr1.addrs[2].addr <= GraphReader.io.to_banks.addrs[2].addr @[top.scala 31:19]
    RAMGroup.io.rd_addr1.addrs[3].bank_id <= GraphReader.io.to_banks.addrs[3].bank_id @[top.scala 31:19]
    RAMGroup.io.rd_addr1.addrs[3].addr <= GraphReader.io.to_banks.addrs[3].addr @[top.scala 31:19]
    RAMGroup.io.rd_addr1.addrs[4].bank_id <= GraphReader.io.to_banks.addrs[4].bank_id @[top.scala 31:19]
    RAMGroup.io.rd_addr1.addrs[4].addr <= GraphReader.io.to_banks.addrs[4].addr @[top.scala 31:19]
    GraphReader.io.flag_job <= UInt<1>("h00") @[top.scala 32:22]
    GraphReader.io.valid_in <= UInt<1>("h00") @[top.scala 33:22]
    wire _WIRE : {big : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_ups_end : UInt<1>}, small : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, ano_bank_id : UInt<3>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_invalid_end : UInt<10>, cnt_ups_end : UInt<1>}[4]} @[top.scala 34:32]
    _WIRE.small[0].cnt_ups_end <= UInt<1>("h00") @[top.scala 34:32]
    _WIRE.small[0].cnt_invalid_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[0].begin_loop <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[0].cnt_loop_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[0].ano_bank_id <= UInt<3>("h00") @[top.scala 34:32]
    _WIRE.small[0].cnt_ic_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[0].cnt_y_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[0].cnt_x_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[0].column_size <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[0].block_size <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[0].bank_id <= UInt<3>("h00") @[top.scala 34:32]
    _WIRE.small[0].min_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[0].max_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[0].begin_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[1].cnt_ups_end <= UInt<1>("h00") @[top.scala 34:32]
    _WIRE.small[1].cnt_invalid_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[1].begin_loop <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[1].cnt_loop_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[1].ano_bank_id <= UInt<3>("h00") @[top.scala 34:32]
    _WIRE.small[1].cnt_ic_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[1].cnt_y_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[1].cnt_x_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[1].column_size <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[1].block_size <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[1].bank_id <= UInt<3>("h00") @[top.scala 34:32]
    _WIRE.small[1].min_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[1].max_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[1].begin_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[2].cnt_ups_end <= UInt<1>("h00") @[top.scala 34:32]
    _WIRE.small[2].cnt_invalid_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[2].begin_loop <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[2].cnt_loop_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[2].ano_bank_id <= UInt<3>("h00") @[top.scala 34:32]
    _WIRE.small[2].cnt_ic_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[2].cnt_y_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[2].cnt_x_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[2].column_size <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[2].block_size <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[2].bank_id <= UInt<3>("h00") @[top.scala 34:32]
    _WIRE.small[2].min_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[2].max_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[2].begin_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[3].cnt_ups_end <= UInt<1>("h00") @[top.scala 34:32]
    _WIRE.small[3].cnt_invalid_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[3].begin_loop <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[3].cnt_loop_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[3].ano_bank_id <= UInt<3>("h00") @[top.scala 34:32]
    _WIRE.small[3].cnt_ic_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[3].cnt_y_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[3].cnt_x_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[3].column_size <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[3].block_size <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[3].bank_id <= UInt<3>("h00") @[top.scala 34:32]
    _WIRE.small[3].min_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[3].max_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.small[3].begin_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.big.cnt_ups_end <= UInt<1>("h00") @[top.scala 34:32]
    _WIRE.big.begin_loop <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.big.cnt_loop_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.big.cnt_ic_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.big.cnt_y_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.big.cnt_x_end <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.big.column_size <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.big.block_size <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.big.bank_id <= UInt<3>("h00") @[top.scala 34:32]
    _WIRE.big.min_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.big.max_addr <= UInt<10>("h00") @[top.scala 34:32]
    _WIRE.big.begin_addr <= UInt<10>("h00") @[top.scala 34:32]
    GraphReader.io.job.small[0].cnt_ups_end <= _WIRE.small[0].cnt_ups_end @[top.scala 34:17]
    GraphReader.io.job.small[0].cnt_invalid_end <= _WIRE.small[0].cnt_invalid_end @[top.scala 34:17]
    GraphReader.io.job.small[0].begin_loop <= _WIRE.small[0].begin_loop @[top.scala 34:17]
    GraphReader.io.job.small[0].cnt_loop_end <= _WIRE.small[0].cnt_loop_end @[top.scala 34:17]
    GraphReader.io.job.small[0].ano_bank_id <= _WIRE.small[0].ano_bank_id @[top.scala 34:17]
    GraphReader.io.job.small[0].cnt_ic_end <= _WIRE.small[0].cnt_ic_end @[top.scala 34:17]
    GraphReader.io.job.small[0].cnt_y_end <= _WIRE.small[0].cnt_y_end @[top.scala 34:17]
    GraphReader.io.job.small[0].cnt_x_end <= _WIRE.small[0].cnt_x_end @[top.scala 34:17]
    GraphReader.io.job.small[0].column_size <= _WIRE.small[0].column_size @[top.scala 34:17]
    GraphReader.io.job.small[0].block_size <= _WIRE.small[0].block_size @[top.scala 34:17]
    GraphReader.io.job.small[0].bank_id <= _WIRE.small[0].bank_id @[top.scala 34:17]
    GraphReader.io.job.small[0].min_addr <= _WIRE.small[0].min_addr @[top.scala 34:17]
    GraphReader.io.job.small[0].max_addr <= _WIRE.small[0].max_addr @[top.scala 34:17]
    GraphReader.io.job.small[0].begin_addr <= _WIRE.small[0].begin_addr @[top.scala 34:17]
    GraphReader.io.job.small[1].cnt_ups_end <= _WIRE.small[1].cnt_ups_end @[top.scala 34:17]
    GraphReader.io.job.small[1].cnt_invalid_end <= _WIRE.small[1].cnt_invalid_end @[top.scala 34:17]
    GraphReader.io.job.small[1].begin_loop <= _WIRE.small[1].begin_loop @[top.scala 34:17]
    GraphReader.io.job.small[1].cnt_loop_end <= _WIRE.small[1].cnt_loop_end @[top.scala 34:17]
    GraphReader.io.job.small[1].ano_bank_id <= _WIRE.small[1].ano_bank_id @[top.scala 34:17]
    GraphReader.io.job.small[1].cnt_ic_end <= _WIRE.small[1].cnt_ic_end @[top.scala 34:17]
    GraphReader.io.job.small[1].cnt_y_end <= _WIRE.small[1].cnt_y_end @[top.scala 34:17]
    GraphReader.io.job.small[1].cnt_x_end <= _WIRE.small[1].cnt_x_end @[top.scala 34:17]
    GraphReader.io.job.small[1].column_size <= _WIRE.small[1].column_size @[top.scala 34:17]
    GraphReader.io.job.small[1].block_size <= _WIRE.small[1].block_size @[top.scala 34:17]
    GraphReader.io.job.small[1].bank_id <= _WIRE.small[1].bank_id @[top.scala 34:17]
    GraphReader.io.job.small[1].min_addr <= _WIRE.small[1].min_addr @[top.scala 34:17]
    GraphReader.io.job.small[1].max_addr <= _WIRE.small[1].max_addr @[top.scala 34:17]
    GraphReader.io.job.small[1].begin_addr <= _WIRE.small[1].begin_addr @[top.scala 34:17]
    GraphReader.io.job.small[2].cnt_ups_end <= _WIRE.small[2].cnt_ups_end @[top.scala 34:17]
    GraphReader.io.job.small[2].cnt_invalid_end <= _WIRE.small[2].cnt_invalid_end @[top.scala 34:17]
    GraphReader.io.job.small[2].begin_loop <= _WIRE.small[2].begin_loop @[top.scala 34:17]
    GraphReader.io.job.small[2].cnt_loop_end <= _WIRE.small[2].cnt_loop_end @[top.scala 34:17]
    GraphReader.io.job.small[2].ano_bank_id <= _WIRE.small[2].ano_bank_id @[top.scala 34:17]
    GraphReader.io.job.small[2].cnt_ic_end <= _WIRE.small[2].cnt_ic_end @[top.scala 34:17]
    GraphReader.io.job.small[2].cnt_y_end <= _WIRE.small[2].cnt_y_end @[top.scala 34:17]
    GraphReader.io.job.small[2].cnt_x_end <= _WIRE.small[2].cnt_x_end @[top.scala 34:17]
    GraphReader.io.job.small[2].column_size <= _WIRE.small[2].column_size @[top.scala 34:17]
    GraphReader.io.job.small[2].block_size <= _WIRE.small[2].block_size @[top.scala 34:17]
    GraphReader.io.job.small[2].bank_id <= _WIRE.small[2].bank_id @[top.scala 34:17]
    GraphReader.io.job.small[2].min_addr <= _WIRE.small[2].min_addr @[top.scala 34:17]
    GraphReader.io.job.small[2].max_addr <= _WIRE.small[2].max_addr @[top.scala 34:17]
    GraphReader.io.job.small[2].begin_addr <= _WIRE.small[2].begin_addr @[top.scala 34:17]
    GraphReader.io.job.small[3].cnt_ups_end <= _WIRE.small[3].cnt_ups_end @[top.scala 34:17]
    GraphReader.io.job.small[3].cnt_invalid_end <= _WIRE.small[3].cnt_invalid_end @[top.scala 34:17]
    GraphReader.io.job.small[3].begin_loop <= _WIRE.small[3].begin_loop @[top.scala 34:17]
    GraphReader.io.job.small[3].cnt_loop_end <= _WIRE.small[3].cnt_loop_end @[top.scala 34:17]
    GraphReader.io.job.small[3].ano_bank_id <= _WIRE.small[3].ano_bank_id @[top.scala 34:17]
    GraphReader.io.job.small[3].cnt_ic_end <= _WIRE.small[3].cnt_ic_end @[top.scala 34:17]
    GraphReader.io.job.small[3].cnt_y_end <= _WIRE.small[3].cnt_y_end @[top.scala 34:17]
    GraphReader.io.job.small[3].cnt_x_end <= _WIRE.small[3].cnt_x_end @[top.scala 34:17]
    GraphReader.io.job.small[3].column_size <= _WIRE.small[3].column_size @[top.scala 34:17]
    GraphReader.io.job.small[3].block_size <= _WIRE.small[3].block_size @[top.scala 34:17]
    GraphReader.io.job.small[3].bank_id <= _WIRE.small[3].bank_id @[top.scala 34:17]
    GraphReader.io.job.small[3].min_addr <= _WIRE.small[3].min_addr @[top.scala 34:17]
    GraphReader.io.job.small[3].max_addr <= _WIRE.small[3].max_addr @[top.scala 34:17]
    GraphReader.io.job.small[3].begin_addr <= _WIRE.small[3].begin_addr @[top.scala 34:17]
    GraphReader.io.job.big.cnt_ups_end <= _WIRE.big.cnt_ups_end @[top.scala 34:17]
    GraphReader.io.job.big.begin_loop <= _WIRE.big.begin_loop @[top.scala 34:17]
    GraphReader.io.job.big.cnt_loop_end <= _WIRE.big.cnt_loop_end @[top.scala 34:17]
    GraphReader.io.job.big.cnt_ic_end <= _WIRE.big.cnt_ic_end @[top.scala 34:17]
    GraphReader.io.job.big.cnt_y_end <= _WIRE.big.cnt_y_end @[top.scala 34:17]
    GraphReader.io.job.big.cnt_x_end <= _WIRE.big.cnt_x_end @[top.scala 34:17]
    GraphReader.io.job.big.column_size <= _WIRE.big.column_size @[top.scala 34:17]
    GraphReader.io.job.big.block_size <= _WIRE.big.block_size @[top.scala 34:17]
    GraphReader.io.job.big.bank_id <= _WIRE.big.bank_id @[top.scala 34:17]
    GraphReader.io.job.big.min_addr <= _WIRE.big.min_addr @[top.scala 34:17]
    GraphReader.io.job.big.max_addr <= _WIRE.big.max_addr @[top.scala 34:17]
    GraphReader.io.job.big.begin_addr <= _WIRE.big.begin_addr @[top.scala 34:17]
    wire _WIRE_1 : UInt<1> @[top.scala 35:37]
    _WIRE_1 <= UInt<1>("h00") @[top.scala 35:37]
    GraphReader.io.job_type <= _WIRE_1 @[top.scala 35:22]
    RAMGroup.io.rd_valid_in <= GraphReader_1.io.valid_out @[top.scala 37:22]
    RAMGroup.io.rd_addr2.addrs[0].bank_id <= GraphReader_1.io.to_banks.addrs[0].bank_id @[top.scala 38:19]
    RAMGroup.io.rd_addr2.addrs[0].addr <= GraphReader_1.io.to_banks.addrs[0].addr @[top.scala 38:19]
    RAMGroup.io.rd_addr2.addrs[1].bank_id <= GraphReader_1.io.to_banks.addrs[1].bank_id @[top.scala 38:19]
    RAMGroup.io.rd_addr2.addrs[1].addr <= GraphReader_1.io.to_banks.addrs[1].addr @[top.scala 38:19]
    RAMGroup.io.rd_addr2.addrs[2].bank_id <= GraphReader_1.io.to_banks.addrs[2].bank_id @[top.scala 38:19]
    RAMGroup.io.rd_addr2.addrs[2].addr <= GraphReader_1.io.to_banks.addrs[2].addr @[top.scala 38:19]
    RAMGroup.io.rd_addr2.addrs[3].bank_id <= GraphReader_1.io.to_banks.addrs[3].bank_id @[top.scala 38:19]
    RAMGroup.io.rd_addr2.addrs[3].addr <= GraphReader_1.io.to_banks.addrs[3].addr @[top.scala 38:19]
    RAMGroup.io.rd_addr2.addrs[4].bank_id <= GraphReader_1.io.to_banks.addrs[4].bank_id @[top.scala 38:19]
    RAMGroup.io.rd_addr2.addrs[4].addr <= GraphReader_1.io.to_banks.addrs[4].addr @[top.scala 38:19]
    GraphReader_1.io.flag_job <= UInt<1>("h00") @[top.scala 39:22]
    GraphReader_1.io.valid_in <= UInt<1>("h00") @[top.scala 40:22]
    wire _WIRE_2 : {big : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_ups_end : UInt<1>}, small : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, ano_bank_id : UInt<3>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_invalid_end : UInt<10>, cnt_ups_end : UInt<1>}[4]} @[top.scala 41:32]
    _WIRE_2.small[0].cnt_ups_end <= UInt<1>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].cnt_invalid_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].begin_loop <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].cnt_loop_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].ano_bank_id <= UInt<3>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].cnt_ic_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].cnt_y_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].cnt_x_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].column_size <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].block_size <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].bank_id <= UInt<3>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].min_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].max_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[0].begin_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].cnt_ups_end <= UInt<1>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].cnt_invalid_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].begin_loop <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].cnt_loop_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].ano_bank_id <= UInt<3>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].cnt_ic_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].cnt_y_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].cnt_x_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].column_size <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].block_size <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].bank_id <= UInt<3>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].min_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].max_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[1].begin_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].cnt_ups_end <= UInt<1>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].cnt_invalid_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].begin_loop <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].cnt_loop_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].ano_bank_id <= UInt<3>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].cnt_ic_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].cnt_y_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].cnt_x_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].column_size <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].block_size <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].bank_id <= UInt<3>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].min_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].max_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[2].begin_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].cnt_ups_end <= UInt<1>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].cnt_invalid_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].begin_loop <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].cnt_loop_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].ano_bank_id <= UInt<3>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].cnt_ic_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].cnt_y_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].cnt_x_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].column_size <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].block_size <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].bank_id <= UInt<3>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].min_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].max_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.small[3].begin_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.big.cnt_ups_end <= UInt<1>("h00") @[top.scala 41:32]
    _WIRE_2.big.begin_loop <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.big.cnt_loop_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.big.cnt_ic_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.big.cnt_y_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.big.cnt_x_end <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.big.column_size <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.big.block_size <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.big.bank_id <= UInt<3>("h00") @[top.scala 41:32]
    _WIRE_2.big.min_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.big.max_addr <= UInt<10>("h00") @[top.scala 41:32]
    _WIRE_2.big.begin_addr <= UInt<10>("h00") @[top.scala 41:32]
    GraphReader_1.io.job.small[0].cnt_ups_end <= _WIRE_2.small[0].cnt_ups_end @[top.scala 41:17]
    GraphReader_1.io.job.small[0].cnt_invalid_end <= _WIRE_2.small[0].cnt_invalid_end @[top.scala 41:17]
    GraphReader_1.io.job.small[0].begin_loop <= _WIRE_2.small[0].begin_loop @[top.scala 41:17]
    GraphReader_1.io.job.small[0].cnt_loop_end <= _WIRE_2.small[0].cnt_loop_end @[top.scala 41:17]
    GraphReader_1.io.job.small[0].ano_bank_id <= _WIRE_2.small[0].ano_bank_id @[top.scala 41:17]
    GraphReader_1.io.job.small[0].cnt_ic_end <= _WIRE_2.small[0].cnt_ic_end @[top.scala 41:17]
    GraphReader_1.io.job.small[0].cnt_y_end <= _WIRE_2.small[0].cnt_y_end @[top.scala 41:17]
    GraphReader_1.io.job.small[0].cnt_x_end <= _WIRE_2.small[0].cnt_x_end @[top.scala 41:17]
    GraphReader_1.io.job.small[0].column_size <= _WIRE_2.small[0].column_size @[top.scala 41:17]
    GraphReader_1.io.job.small[0].block_size <= _WIRE_2.small[0].block_size @[top.scala 41:17]
    GraphReader_1.io.job.small[0].bank_id <= _WIRE_2.small[0].bank_id @[top.scala 41:17]
    GraphReader_1.io.job.small[0].min_addr <= _WIRE_2.small[0].min_addr @[top.scala 41:17]
    GraphReader_1.io.job.small[0].max_addr <= _WIRE_2.small[0].max_addr @[top.scala 41:17]
    GraphReader_1.io.job.small[0].begin_addr <= _WIRE_2.small[0].begin_addr @[top.scala 41:17]
    GraphReader_1.io.job.small[1].cnt_ups_end <= _WIRE_2.small[1].cnt_ups_end @[top.scala 41:17]
    GraphReader_1.io.job.small[1].cnt_invalid_end <= _WIRE_2.small[1].cnt_invalid_end @[top.scala 41:17]
    GraphReader_1.io.job.small[1].begin_loop <= _WIRE_2.small[1].begin_loop @[top.scala 41:17]
    GraphReader_1.io.job.small[1].cnt_loop_end <= _WIRE_2.small[1].cnt_loop_end @[top.scala 41:17]
    GraphReader_1.io.job.small[1].ano_bank_id <= _WIRE_2.small[1].ano_bank_id @[top.scala 41:17]
    GraphReader_1.io.job.small[1].cnt_ic_end <= _WIRE_2.small[1].cnt_ic_end @[top.scala 41:17]
    GraphReader_1.io.job.small[1].cnt_y_end <= _WIRE_2.small[1].cnt_y_end @[top.scala 41:17]
    GraphReader_1.io.job.small[1].cnt_x_end <= _WIRE_2.small[1].cnt_x_end @[top.scala 41:17]
    GraphReader_1.io.job.small[1].column_size <= _WIRE_2.small[1].column_size @[top.scala 41:17]
    GraphReader_1.io.job.small[1].block_size <= _WIRE_2.small[1].block_size @[top.scala 41:17]
    GraphReader_1.io.job.small[1].bank_id <= _WIRE_2.small[1].bank_id @[top.scala 41:17]
    GraphReader_1.io.job.small[1].min_addr <= _WIRE_2.small[1].min_addr @[top.scala 41:17]
    GraphReader_1.io.job.small[1].max_addr <= _WIRE_2.small[1].max_addr @[top.scala 41:17]
    GraphReader_1.io.job.small[1].begin_addr <= _WIRE_2.small[1].begin_addr @[top.scala 41:17]
    GraphReader_1.io.job.small[2].cnt_ups_end <= _WIRE_2.small[2].cnt_ups_end @[top.scala 41:17]
    GraphReader_1.io.job.small[2].cnt_invalid_end <= _WIRE_2.small[2].cnt_invalid_end @[top.scala 41:17]
    GraphReader_1.io.job.small[2].begin_loop <= _WIRE_2.small[2].begin_loop @[top.scala 41:17]
    GraphReader_1.io.job.small[2].cnt_loop_end <= _WIRE_2.small[2].cnt_loop_end @[top.scala 41:17]
    GraphReader_1.io.job.small[2].ano_bank_id <= _WIRE_2.small[2].ano_bank_id @[top.scala 41:17]
    GraphReader_1.io.job.small[2].cnt_ic_end <= _WIRE_2.small[2].cnt_ic_end @[top.scala 41:17]
    GraphReader_1.io.job.small[2].cnt_y_end <= _WIRE_2.small[2].cnt_y_end @[top.scala 41:17]
    GraphReader_1.io.job.small[2].cnt_x_end <= _WIRE_2.small[2].cnt_x_end @[top.scala 41:17]
    GraphReader_1.io.job.small[2].column_size <= _WIRE_2.small[2].column_size @[top.scala 41:17]
    GraphReader_1.io.job.small[2].block_size <= _WIRE_2.small[2].block_size @[top.scala 41:17]
    GraphReader_1.io.job.small[2].bank_id <= _WIRE_2.small[2].bank_id @[top.scala 41:17]
    GraphReader_1.io.job.small[2].min_addr <= _WIRE_2.small[2].min_addr @[top.scala 41:17]
    GraphReader_1.io.job.small[2].max_addr <= _WIRE_2.small[2].max_addr @[top.scala 41:17]
    GraphReader_1.io.job.small[2].begin_addr <= _WIRE_2.small[2].begin_addr @[top.scala 41:17]
    GraphReader_1.io.job.small[3].cnt_ups_end <= _WIRE_2.small[3].cnt_ups_end @[top.scala 41:17]
    GraphReader_1.io.job.small[3].cnt_invalid_end <= _WIRE_2.small[3].cnt_invalid_end @[top.scala 41:17]
    GraphReader_1.io.job.small[3].begin_loop <= _WIRE_2.small[3].begin_loop @[top.scala 41:17]
    GraphReader_1.io.job.small[3].cnt_loop_end <= _WIRE_2.small[3].cnt_loop_end @[top.scala 41:17]
    GraphReader_1.io.job.small[3].ano_bank_id <= _WIRE_2.small[3].ano_bank_id @[top.scala 41:17]
    GraphReader_1.io.job.small[3].cnt_ic_end <= _WIRE_2.small[3].cnt_ic_end @[top.scala 41:17]
    GraphReader_1.io.job.small[3].cnt_y_end <= _WIRE_2.small[3].cnt_y_end @[top.scala 41:17]
    GraphReader_1.io.job.small[3].cnt_x_end <= _WIRE_2.small[3].cnt_x_end @[top.scala 41:17]
    GraphReader_1.io.job.small[3].column_size <= _WIRE_2.small[3].column_size @[top.scala 41:17]
    GraphReader_1.io.job.small[3].block_size <= _WIRE_2.small[3].block_size @[top.scala 41:17]
    GraphReader_1.io.job.small[3].bank_id <= _WIRE_2.small[3].bank_id @[top.scala 41:17]
    GraphReader_1.io.job.small[3].min_addr <= _WIRE_2.small[3].min_addr @[top.scala 41:17]
    GraphReader_1.io.job.small[3].max_addr <= _WIRE_2.small[3].max_addr @[top.scala 41:17]
    GraphReader_1.io.job.small[3].begin_addr <= _WIRE_2.small[3].begin_addr @[top.scala 41:17]
    GraphReader_1.io.job.big.cnt_ups_end <= _WIRE_2.big.cnt_ups_end @[top.scala 41:17]
    GraphReader_1.io.job.big.begin_loop <= _WIRE_2.big.begin_loop @[top.scala 41:17]
    GraphReader_1.io.job.big.cnt_loop_end <= _WIRE_2.big.cnt_loop_end @[top.scala 41:17]
    GraphReader_1.io.job.big.cnt_ic_end <= _WIRE_2.big.cnt_ic_end @[top.scala 41:17]
    GraphReader_1.io.job.big.cnt_y_end <= _WIRE_2.big.cnt_y_end @[top.scala 41:17]
    GraphReader_1.io.job.big.cnt_x_end <= _WIRE_2.big.cnt_x_end @[top.scala 41:17]
    GraphReader_1.io.job.big.column_size <= _WIRE_2.big.column_size @[top.scala 41:17]
    GraphReader_1.io.job.big.block_size <= _WIRE_2.big.block_size @[top.scala 41:17]
    GraphReader_1.io.job.big.bank_id <= _WIRE_2.big.bank_id @[top.scala 41:17]
    GraphReader_1.io.job.big.min_addr <= _WIRE_2.big.min_addr @[top.scala 41:17]
    GraphReader_1.io.job.big.max_addr <= _WIRE_2.big.max_addr @[top.scala 41:17]
    GraphReader_1.io.job.big.begin_addr <= _WIRE_2.big.begin_addr @[top.scala 41:17]
    wire _WIRE_3 : UInt<1> @[top.scala 42:37]
    _WIRE_3 <= UInt<1>("h00") @[top.scala 42:37]
    GraphReader_1.io.job_type <= _WIRE_3 @[top.scala 42:22]
    WeightReader.io.valid_in <= UInt<1>("h00") @[top.scala 44:26]
    WeightReader.io.addr_end <= UInt<1>("h00") @[top.scala 45:26]
    WeightReader.io.begin_addr <= UInt<1>("h00") @[top.scala 46:28]
    ROMWeight.io.addr <= WeightReader.io.addr @[top.scala 47:21]
    WeightReader.io.flag_job <= UInt<1>("h00") @[top.scala 48:26]
    PackReadData.io.valid_in <= RAMGroup.io.rd_valid_out @[top.scala 51:24]
    PackReadData.io.flag_job <= UInt<1>("h00") @[top.scala 52:24]
    wire _WIRE_4 : {cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, in_chan : UInt<10>} @[top.scala 53:34]
    _WIRE_4.in_chan <= UInt<10>("h00") @[top.scala 53:34]
    _WIRE_4.cnt_y_end <= UInt<10>("h00") @[top.scala 53:34]
    _WIRE_4.cnt_x_end <= UInt<10>("h00") @[top.scala 53:34]
    PackReadData.io.job.in_chan <= _WIRE_4.in_chan @[top.scala 53:19]
    PackReadData.io.job.cnt_y_end <= _WIRE_4.cnt_y_end @[top.scala 53:19]
    PackReadData.io.job.cnt_x_end <= _WIRE_4.cnt_x_end @[top.scala 53:19]
    PackReadData.io.from_big[0].data[0] <= RAMGroup.io.rd_big[0].data[0] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[1] <= RAMGroup.io.rd_big[0].data[1] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[2] <= RAMGroup.io.rd_big[0].data[2] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[3] <= RAMGroup.io.rd_big[0].data[3] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[4] <= RAMGroup.io.rd_big[0].data[4] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[5] <= RAMGroup.io.rd_big[0].data[5] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[6] <= RAMGroup.io.rd_big[0].data[6] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[7] <= RAMGroup.io.rd_big[0].data[7] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[8] <= RAMGroup.io.rd_big[0].data[8] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[9] <= RAMGroup.io.rd_big[0].data[9] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[10] <= RAMGroup.io.rd_big[0].data[10] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[11] <= RAMGroup.io.rd_big[0].data[11] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[12] <= RAMGroup.io.rd_big[0].data[12] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[13] <= RAMGroup.io.rd_big[0].data[13] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[14] <= RAMGroup.io.rd_big[0].data[14] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[15] <= RAMGroup.io.rd_big[0].data[15] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[16] <= RAMGroup.io.rd_big[0].data[16] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[17] <= RAMGroup.io.rd_big[0].data[17] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[18] <= RAMGroup.io.rd_big[0].data[18] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[19] <= RAMGroup.io.rd_big[0].data[19] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[20] <= RAMGroup.io.rd_big[0].data[20] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[21] <= RAMGroup.io.rd_big[0].data[21] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[22] <= RAMGroup.io.rd_big[0].data[22] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[23] <= RAMGroup.io.rd_big[0].data[23] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[24] <= RAMGroup.io.rd_big[0].data[24] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[25] <= RAMGroup.io.rd_big[0].data[25] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[26] <= RAMGroup.io.rd_big[0].data[26] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[27] <= RAMGroup.io.rd_big[0].data[27] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[28] <= RAMGroup.io.rd_big[0].data[28] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[29] <= RAMGroup.io.rd_big[0].data[29] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[30] <= RAMGroup.io.rd_big[0].data[30] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[31] <= RAMGroup.io.rd_big[0].data[31] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[32] <= RAMGroup.io.rd_big[0].data[32] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[33] <= RAMGroup.io.rd_big[0].data[33] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[34] <= RAMGroup.io.rd_big[0].data[34] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[35] <= RAMGroup.io.rd_big[0].data[35] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[36] <= RAMGroup.io.rd_big[0].data[36] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[37] <= RAMGroup.io.rd_big[0].data[37] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[38] <= RAMGroup.io.rd_big[0].data[38] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[39] <= RAMGroup.io.rd_big[0].data[39] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[40] <= RAMGroup.io.rd_big[0].data[40] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[41] <= RAMGroup.io.rd_big[0].data[41] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[42] <= RAMGroup.io.rd_big[0].data[42] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[43] <= RAMGroup.io.rd_big[0].data[43] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[44] <= RAMGroup.io.rd_big[0].data[44] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[45] <= RAMGroup.io.rd_big[0].data[45] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[46] <= RAMGroup.io.rd_big[0].data[46] @[top.scala 54:24]
    PackReadData.io.from_big[0].data[47] <= RAMGroup.io.rd_big[0].data[47] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[0] <= RAMGroup.io.rd_big[1].data[0] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[1] <= RAMGroup.io.rd_big[1].data[1] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[2] <= RAMGroup.io.rd_big[1].data[2] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[3] <= RAMGroup.io.rd_big[1].data[3] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[4] <= RAMGroup.io.rd_big[1].data[4] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[5] <= RAMGroup.io.rd_big[1].data[5] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[6] <= RAMGroup.io.rd_big[1].data[6] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[7] <= RAMGroup.io.rd_big[1].data[7] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[8] <= RAMGroup.io.rd_big[1].data[8] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[9] <= RAMGroup.io.rd_big[1].data[9] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[10] <= RAMGroup.io.rd_big[1].data[10] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[11] <= RAMGroup.io.rd_big[1].data[11] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[12] <= RAMGroup.io.rd_big[1].data[12] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[13] <= RAMGroup.io.rd_big[1].data[13] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[14] <= RAMGroup.io.rd_big[1].data[14] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[15] <= RAMGroup.io.rd_big[1].data[15] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[16] <= RAMGroup.io.rd_big[1].data[16] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[17] <= RAMGroup.io.rd_big[1].data[17] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[18] <= RAMGroup.io.rd_big[1].data[18] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[19] <= RAMGroup.io.rd_big[1].data[19] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[20] <= RAMGroup.io.rd_big[1].data[20] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[21] <= RAMGroup.io.rd_big[1].data[21] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[22] <= RAMGroup.io.rd_big[1].data[22] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[23] <= RAMGroup.io.rd_big[1].data[23] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[24] <= RAMGroup.io.rd_big[1].data[24] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[25] <= RAMGroup.io.rd_big[1].data[25] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[26] <= RAMGroup.io.rd_big[1].data[26] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[27] <= RAMGroup.io.rd_big[1].data[27] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[28] <= RAMGroup.io.rd_big[1].data[28] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[29] <= RAMGroup.io.rd_big[1].data[29] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[30] <= RAMGroup.io.rd_big[1].data[30] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[31] <= RAMGroup.io.rd_big[1].data[31] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[32] <= RAMGroup.io.rd_big[1].data[32] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[33] <= RAMGroup.io.rd_big[1].data[33] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[34] <= RAMGroup.io.rd_big[1].data[34] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[35] <= RAMGroup.io.rd_big[1].data[35] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[36] <= RAMGroup.io.rd_big[1].data[36] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[37] <= RAMGroup.io.rd_big[1].data[37] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[38] <= RAMGroup.io.rd_big[1].data[38] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[39] <= RAMGroup.io.rd_big[1].data[39] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[40] <= RAMGroup.io.rd_big[1].data[40] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[41] <= RAMGroup.io.rd_big[1].data[41] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[42] <= RAMGroup.io.rd_big[1].data[42] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[43] <= RAMGroup.io.rd_big[1].data[43] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[44] <= RAMGroup.io.rd_big[1].data[44] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[45] <= RAMGroup.io.rd_big[1].data[45] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[46] <= RAMGroup.io.rd_big[1].data[46] @[top.scala 54:24]
    PackReadData.io.from_big[1].data[47] <= RAMGroup.io.rd_big[1].data[47] @[top.scala 54:24]
    PackReadData.io.from_small[0][0].data[0] <= RAMGroup.io.rd_small[0][0].data[0] @[top.scala 55:26]
    PackReadData.io.from_small[0][0].data[1] <= RAMGroup.io.rd_small[0][0].data[1] @[top.scala 55:26]
    PackReadData.io.from_small[0][0].data[2] <= RAMGroup.io.rd_small[0][0].data[2] @[top.scala 55:26]
    PackReadData.io.from_small[0][0].data[3] <= RAMGroup.io.rd_small[0][0].data[3] @[top.scala 55:26]
    PackReadData.io.from_small[0][0].data[4] <= RAMGroup.io.rd_small[0][0].data[4] @[top.scala 55:26]
    PackReadData.io.from_small[0][0].data[5] <= RAMGroup.io.rd_small[0][0].data[5] @[top.scala 55:26]
    PackReadData.io.from_small[0][0].data[6] <= RAMGroup.io.rd_small[0][0].data[6] @[top.scala 55:26]
    PackReadData.io.from_small[0][0].data[7] <= RAMGroup.io.rd_small[0][0].data[7] @[top.scala 55:26]
    PackReadData.io.from_small[0][1].data[0] <= RAMGroup.io.rd_small[0][1].data[0] @[top.scala 55:26]
    PackReadData.io.from_small[0][1].data[1] <= RAMGroup.io.rd_small[0][1].data[1] @[top.scala 55:26]
    PackReadData.io.from_small[0][1].data[2] <= RAMGroup.io.rd_small[0][1].data[2] @[top.scala 55:26]
    PackReadData.io.from_small[0][1].data[3] <= RAMGroup.io.rd_small[0][1].data[3] @[top.scala 55:26]
    PackReadData.io.from_small[0][1].data[4] <= RAMGroup.io.rd_small[0][1].data[4] @[top.scala 55:26]
    PackReadData.io.from_small[0][1].data[5] <= RAMGroup.io.rd_small[0][1].data[5] @[top.scala 55:26]
    PackReadData.io.from_small[0][1].data[6] <= RAMGroup.io.rd_small[0][1].data[6] @[top.scala 55:26]
    PackReadData.io.from_small[0][1].data[7] <= RAMGroup.io.rd_small[0][1].data[7] @[top.scala 55:26]
    PackReadData.io.from_small[0][2].data[0] <= RAMGroup.io.rd_small[0][2].data[0] @[top.scala 55:26]
    PackReadData.io.from_small[0][2].data[1] <= RAMGroup.io.rd_small[0][2].data[1] @[top.scala 55:26]
    PackReadData.io.from_small[0][2].data[2] <= RAMGroup.io.rd_small[0][2].data[2] @[top.scala 55:26]
    PackReadData.io.from_small[0][2].data[3] <= RAMGroup.io.rd_small[0][2].data[3] @[top.scala 55:26]
    PackReadData.io.from_small[0][2].data[4] <= RAMGroup.io.rd_small[0][2].data[4] @[top.scala 55:26]
    PackReadData.io.from_small[0][2].data[5] <= RAMGroup.io.rd_small[0][2].data[5] @[top.scala 55:26]
    PackReadData.io.from_small[0][2].data[6] <= RAMGroup.io.rd_small[0][2].data[6] @[top.scala 55:26]
    PackReadData.io.from_small[0][2].data[7] <= RAMGroup.io.rd_small[0][2].data[7] @[top.scala 55:26]
    PackReadData.io.from_small[0][3].data[0] <= RAMGroup.io.rd_small[0][3].data[0] @[top.scala 55:26]
    PackReadData.io.from_small[0][3].data[1] <= RAMGroup.io.rd_small[0][3].data[1] @[top.scala 55:26]
    PackReadData.io.from_small[0][3].data[2] <= RAMGroup.io.rd_small[0][3].data[2] @[top.scala 55:26]
    PackReadData.io.from_small[0][3].data[3] <= RAMGroup.io.rd_small[0][3].data[3] @[top.scala 55:26]
    PackReadData.io.from_small[0][3].data[4] <= RAMGroup.io.rd_small[0][3].data[4] @[top.scala 55:26]
    PackReadData.io.from_small[0][3].data[5] <= RAMGroup.io.rd_small[0][3].data[5] @[top.scala 55:26]
    PackReadData.io.from_small[0][3].data[6] <= RAMGroup.io.rd_small[0][3].data[6] @[top.scala 55:26]
    PackReadData.io.from_small[0][3].data[7] <= RAMGroup.io.rd_small[0][3].data[7] @[top.scala 55:26]
    PackReadData.io.from_small[1][0].data[0] <= RAMGroup.io.rd_small[1][0].data[0] @[top.scala 55:26]
    PackReadData.io.from_small[1][0].data[1] <= RAMGroup.io.rd_small[1][0].data[1] @[top.scala 55:26]
    PackReadData.io.from_small[1][0].data[2] <= RAMGroup.io.rd_small[1][0].data[2] @[top.scala 55:26]
    PackReadData.io.from_small[1][0].data[3] <= RAMGroup.io.rd_small[1][0].data[3] @[top.scala 55:26]
    PackReadData.io.from_small[1][0].data[4] <= RAMGroup.io.rd_small[1][0].data[4] @[top.scala 55:26]
    PackReadData.io.from_small[1][0].data[5] <= RAMGroup.io.rd_small[1][0].data[5] @[top.scala 55:26]
    PackReadData.io.from_small[1][0].data[6] <= RAMGroup.io.rd_small[1][0].data[6] @[top.scala 55:26]
    PackReadData.io.from_small[1][0].data[7] <= RAMGroup.io.rd_small[1][0].data[7] @[top.scala 55:26]
    PackReadData.io.from_small[1][1].data[0] <= RAMGroup.io.rd_small[1][1].data[0] @[top.scala 55:26]
    PackReadData.io.from_small[1][1].data[1] <= RAMGroup.io.rd_small[1][1].data[1] @[top.scala 55:26]
    PackReadData.io.from_small[1][1].data[2] <= RAMGroup.io.rd_small[1][1].data[2] @[top.scala 55:26]
    PackReadData.io.from_small[1][1].data[3] <= RAMGroup.io.rd_small[1][1].data[3] @[top.scala 55:26]
    PackReadData.io.from_small[1][1].data[4] <= RAMGroup.io.rd_small[1][1].data[4] @[top.scala 55:26]
    PackReadData.io.from_small[1][1].data[5] <= RAMGroup.io.rd_small[1][1].data[5] @[top.scala 55:26]
    PackReadData.io.from_small[1][1].data[6] <= RAMGroup.io.rd_small[1][1].data[6] @[top.scala 55:26]
    PackReadData.io.from_small[1][1].data[7] <= RAMGroup.io.rd_small[1][1].data[7] @[top.scala 55:26]
    PackReadData.io.from_small[1][2].data[0] <= RAMGroup.io.rd_small[1][2].data[0] @[top.scala 55:26]
    PackReadData.io.from_small[1][2].data[1] <= RAMGroup.io.rd_small[1][2].data[1] @[top.scala 55:26]
    PackReadData.io.from_small[1][2].data[2] <= RAMGroup.io.rd_small[1][2].data[2] @[top.scala 55:26]
    PackReadData.io.from_small[1][2].data[3] <= RAMGroup.io.rd_small[1][2].data[3] @[top.scala 55:26]
    PackReadData.io.from_small[1][2].data[4] <= RAMGroup.io.rd_small[1][2].data[4] @[top.scala 55:26]
    PackReadData.io.from_small[1][2].data[5] <= RAMGroup.io.rd_small[1][2].data[5] @[top.scala 55:26]
    PackReadData.io.from_small[1][2].data[6] <= RAMGroup.io.rd_small[1][2].data[6] @[top.scala 55:26]
    PackReadData.io.from_small[1][2].data[7] <= RAMGroup.io.rd_small[1][2].data[7] @[top.scala 55:26]
    PackReadData.io.from_small[1][3].data[0] <= RAMGroup.io.rd_small[1][3].data[0] @[top.scala 55:26]
    PackReadData.io.from_small[1][3].data[1] <= RAMGroup.io.rd_small[1][3].data[1] @[top.scala 55:26]
    PackReadData.io.from_small[1][3].data[2] <= RAMGroup.io.rd_small[1][3].data[2] @[top.scala 55:26]
    PackReadData.io.from_small[1][3].data[3] <= RAMGroup.io.rd_small[1][3].data[3] @[top.scala 55:26]
    PackReadData.io.from_small[1][3].data[4] <= RAMGroup.io.rd_small[1][3].data[4] @[top.scala 55:26]
    PackReadData.io.from_small[1][3].data[5] <= RAMGroup.io.rd_small[1][3].data[5] @[top.scala 55:26]
    PackReadData.io.from_small[1][3].data[6] <= RAMGroup.io.rd_small[1][3].data[6] @[top.scala 55:26]
    PackReadData.io.from_small[1][3].data[7] <= RAMGroup.io.rd_small[1][3].data[7] @[top.scala 55:26]
    ReadSwitch.io.flag_job <= UInt<1>("h00") @[top.scala 57:26]
    wire _WIRE_5 : UInt<2> @[top.scala 58:36]
    _WIRE_5 <= UInt<1>("h00") @[top.scala 58:36]
    ReadSwitch.io.job <= _WIRE_5 @[top.scala 58:21]
    ReadSwitch.io.valid_in <= PackReadData.io.valid_out @[top.scala 59:26]
    ReadSwitch.io.from.right[0] <= PackReadData.io.output.right[0] @[top.scala 60:22]
    ReadSwitch.io.from.right[1] <= PackReadData.io.output.right[1] @[top.scala 60:22]
    ReadSwitch.io.from.right[2] <= PackReadData.io.output.right[2] @[top.scala 60:22]
    ReadSwitch.io.from.right[3] <= PackReadData.io.output.right[3] @[top.scala 60:22]
    ReadSwitch.io.from.right[4] <= PackReadData.io.output.right[4] @[top.scala 60:22]
    ReadSwitch.io.from.right[5] <= PackReadData.io.output.right[5] @[top.scala 60:22]
    ReadSwitch.io.from.right[6] <= PackReadData.io.output.right[6] @[top.scala 60:22]
    ReadSwitch.io.from.right[7] <= PackReadData.io.output.right[7] @[top.scala 60:22]
    ReadSwitch.io.from.left[0] <= PackReadData.io.output.left[0] @[top.scala 60:22]
    ReadSwitch.io.from.left[1] <= PackReadData.io.output.left[1] @[top.scala 60:22]
    ReadSwitch.io.from.left[2] <= PackReadData.io.output.left[2] @[top.scala 60:22]
    ReadSwitch.io.from.left[3] <= PackReadData.io.output.left[3] @[top.scala 60:22]
    ReadSwitch.io.from.left[4] <= PackReadData.io.output.left[4] @[top.scala 60:22]
    ReadSwitch.io.from.left[5] <= PackReadData.io.output.left[5] @[top.scala 60:22]
    ReadSwitch.io.from.left[6] <= PackReadData.io.output.left[6] @[top.scala 60:22]
    ReadSwitch.io.from.left[7] <= PackReadData.io.output.left[7] @[top.scala 60:22]
    ReadSwitch.io.from.down[0] <= PackReadData.io.output.down[0] @[top.scala 60:22]
    ReadSwitch.io.from.down[1] <= PackReadData.io.output.down[1] @[top.scala 60:22]
    ReadSwitch.io.from.down[2] <= PackReadData.io.output.down[2] @[top.scala 60:22]
    ReadSwitch.io.from.down[3] <= PackReadData.io.output.down[3] @[top.scala 60:22]
    ReadSwitch.io.from.down[4] <= PackReadData.io.output.down[4] @[top.scala 60:22]
    ReadSwitch.io.from.down[5] <= PackReadData.io.output.down[5] @[top.scala 60:22]
    ReadSwitch.io.from.down[6] <= PackReadData.io.output.down[6] @[top.scala 60:22]
    ReadSwitch.io.from.down[7] <= PackReadData.io.output.down[7] @[top.scala 60:22]
    ReadSwitch.io.from.down[8] <= PackReadData.io.output.down[8] @[top.scala 60:22]
    ReadSwitch.io.from.down[9] <= PackReadData.io.output.down[9] @[top.scala 60:22]
    ReadSwitch.io.from.up[0] <= PackReadData.io.output.up[0] @[top.scala 60:22]
    ReadSwitch.io.from.up[1] <= PackReadData.io.output.up[1] @[top.scala 60:22]
    ReadSwitch.io.from.up[2] <= PackReadData.io.output.up[2] @[top.scala 60:22]
    ReadSwitch.io.from.up[3] <= PackReadData.io.output.up[3] @[top.scala 60:22]
    ReadSwitch.io.from.up[4] <= PackReadData.io.output.up[4] @[top.scala 60:22]
    ReadSwitch.io.from.up[5] <= PackReadData.io.output.up[5] @[top.scala 60:22]
    ReadSwitch.io.from.up[6] <= PackReadData.io.output.up[6] @[top.scala 60:22]
    ReadSwitch.io.from.up[7] <= PackReadData.io.output.up[7] @[top.scala 60:22]
    ReadSwitch.io.from.up[8] <= PackReadData.io.output.up[8] @[top.scala 60:22]
    ReadSwitch.io.from.up[9] <= PackReadData.io.output.up[9] @[top.scala 60:22]
    ReadSwitch.io.from.mat[0] <= PackReadData.io.output.mat[0] @[top.scala 60:22]
    ReadSwitch.io.from.mat[1] <= PackReadData.io.output.mat[1] @[top.scala 60:22]
    ReadSwitch.io.from.mat[2] <= PackReadData.io.output.mat[2] @[top.scala 60:22]
    ReadSwitch.io.from.mat[3] <= PackReadData.io.output.mat[3] @[top.scala 60:22]
    ReadSwitch.io.from.mat[4] <= PackReadData.io.output.mat[4] @[top.scala 60:22]
    ReadSwitch.io.from.mat[5] <= PackReadData.io.output.mat[5] @[top.scala 60:22]
    ReadSwitch.io.from.mat[6] <= PackReadData.io.output.mat[6] @[top.scala 60:22]
    ReadSwitch.io.from.mat[7] <= PackReadData.io.output.mat[7] @[top.scala 60:22]
    ReadSwitch.io.from.mat[8] <= PackReadData.io.output.mat[8] @[top.scala 60:22]
    ReadSwitch.io.from.mat[9] <= PackReadData.io.output.mat[9] @[top.scala 60:22]
    ReadSwitch.io.from.mat[10] <= PackReadData.io.output.mat[10] @[top.scala 60:22]
    ReadSwitch.io.from.mat[11] <= PackReadData.io.output.mat[11] @[top.scala 60:22]
    ReadSwitch.io.from.mat[12] <= PackReadData.io.output.mat[12] @[top.scala 60:22]
    ReadSwitch.io.from.mat[13] <= PackReadData.io.output.mat[13] @[top.scala 60:22]
    ReadSwitch.io.from.mat[14] <= PackReadData.io.output.mat[14] @[top.scala 60:22]
    ReadSwitch.io.from.mat[15] <= PackReadData.io.output.mat[15] @[top.scala 60:22]
    ReadSwitch.io.from.mat[16] <= PackReadData.io.output.mat[16] @[top.scala 60:22]
    ReadSwitch.io.from.mat[17] <= PackReadData.io.output.mat[17] @[top.scala 60:22]
    ReadSwitch.io.from.mat[18] <= PackReadData.io.output.mat[18] @[top.scala 60:22]
    ReadSwitch.io.from.mat[19] <= PackReadData.io.output.mat[19] @[top.scala 60:22]
    ReadSwitch.io.from.mat[20] <= PackReadData.io.output.mat[20] @[top.scala 60:22]
    ReadSwitch.io.from.mat[21] <= PackReadData.io.output.mat[21] @[top.scala 60:22]
    ReadSwitch.io.from.mat[22] <= PackReadData.io.output.mat[22] @[top.scala 60:22]
    ReadSwitch.io.from.mat[23] <= PackReadData.io.output.mat[23] @[top.scala 60:22]
    ReadSwitch.io.from.mat[24] <= PackReadData.io.output.mat[24] @[top.scala 60:22]
    ReadSwitch.io.from.mat[25] <= PackReadData.io.output.mat[25] @[top.scala 60:22]
    ReadSwitch.io.from.mat[26] <= PackReadData.io.output.mat[26] @[top.scala 60:22]
    ReadSwitch.io.from.mat[27] <= PackReadData.io.output.mat[27] @[top.scala 60:22]
    ReadSwitch.io.from.mat[28] <= PackReadData.io.output.mat[28] @[top.scala 60:22]
    ReadSwitch.io.from.mat[29] <= PackReadData.io.output.mat[29] @[top.scala 60:22]
    ReadSwitch.io.from.mat[30] <= PackReadData.io.output.mat[30] @[top.scala 60:22]
    ReadSwitch.io.from.mat[31] <= PackReadData.io.output.mat[31] @[top.scala 60:22]
    ReadSwitch.io.from.mat[32] <= PackReadData.io.output.mat[32] @[top.scala 60:22]
    ReadSwitch.io.from.mat[33] <= PackReadData.io.output.mat[33] @[top.scala 60:22]
    ReadSwitch.io.from.mat[34] <= PackReadData.io.output.mat[34] @[top.scala 60:22]
    ReadSwitch.io.from.mat[35] <= PackReadData.io.output.mat[35] @[top.scala 60:22]
    ReadSwitch.io.from.mat[36] <= PackReadData.io.output.mat[36] @[top.scala 60:22]
    ReadSwitch.io.from.mat[37] <= PackReadData.io.output.mat[37] @[top.scala 60:22]
    ReadSwitch.io.from.mat[38] <= PackReadData.io.output.mat[38] @[top.scala 60:22]
    ReadSwitch.io.from.mat[39] <= PackReadData.io.output.mat[39] @[top.scala 60:22]
    ReadSwitch.io.from.mat[40] <= PackReadData.io.output.mat[40] @[top.scala 60:22]
    ReadSwitch.io.from.mat[41] <= PackReadData.io.output.mat[41] @[top.scala 60:22]
    ReadSwitch.io.from.mat[42] <= PackReadData.io.output.mat[42] @[top.scala 60:22]
    ReadSwitch.io.from.mat[43] <= PackReadData.io.output.mat[43] @[top.scala 60:22]
    ReadSwitch.io.from.mat[44] <= PackReadData.io.output.mat[44] @[top.scala 60:22]
    ReadSwitch.io.from.mat[45] <= PackReadData.io.output.mat[45] @[top.scala 60:22]
    ReadSwitch.io.from.mat[46] <= PackReadData.io.output.mat[46] @[top.scala 60:22]
    ReadSwitch.io.from.mat[47] <= PackReadData.io.output.mat[47] @[top.scala 60:22]
    ReadSwitch.io.from.mat[48] <= PackReadData.io.output.mat[48] @[top.scala 60:22]
    ReadSwitch.io.from.mat[49] <= PackReadData.io.output.mat[49] @[top.scala 60:22]
    ReadSwitch.io.from.mat[50] <= PackReadData.io.output.mat[50] @[top.scala 60:22]
    ReadSwitch.io.from.mat[51] <= PackReadData.io.output.mat[51] @[top.scala 60:22]
    ReadSwitch.io.from.mat[52] <= PackReadData.io.output.mat[52] @[top.scala 60:22]
    ReadSwitch.io.from.mat[53] <= PackReadData.io.output.mat[53] @[top.scala 60:22]
    ReadSwitch.io.from.mat[54] <= PackReadData.io.output.mat[54] @[top.scala 60:22]
    ReadSwitch.io.from.mat[55] <= PackReadData.io.output.mat[55] @[top.scala 60:22]
    ReadSwitch.io.from.mat[56] <= PackReadData.io.output.mat[56] @[top.scala 60:22]
    ReadSwitch.io.from.mat[57] <= PackReadData.io.output.mat[57] @[top.scala 60:22]
    ReadSwitch.io.from.mat[58] <= PackReadData.io.output.mat[58] @[top.scala 60:22]
    ReadSwitch.io.from.mat[59] <= PackReadData.io.output.mat[59] @[top.scala 60:22]
    ReadSwitch.io.from.mat[60] <= PackReadData.io.output.mat[60] @[top.scala 60:22]
    ReadSwitch.io.from.mat[61] <= PackReadData.io.output.mat[61] @[top.scala 60:22]
    ReadSwitch.io.from.mat[62] <= PackReadData.io.output.mat[62] @[top.scala 60:22]
    ReadSwitch.io.from.mat[63] <= PackReadData.io.output.mat[63] @[top.scala 60:22]
    ReadSwitch.io.from_weight[0] <= ROMWeight.io.out[0] @[top.scala 61:29]
    ReadSwitch.io.from_weight[1] <= ROMWeight.io.out[1] @[top.scala 61:29]
    ReadSwitch.io.from_weight[2] <= ROMWeight.io.out[2] @[top.scala 61:29]
    ReadSwitch.io.from_weight[3] <= ROMWeight.io.out[3] @[top.scala 61:29]
    ReadSwitch.io.from_weight[4] <= ROMWeight.io.out[4] @[top.scala 61:29]
    ReadSwitch.io.from_weight[5] <= ROMWeight.io.out[5] @[top.scala 61:29]
    ReadSwitch.io.from_weight[6] <= ROMWeight.io.out[6] @[top.scala 61:29]
    ReadSwitch.io.from_weight[7] <= ROMWeight.io.out[7] @[top.scala 61:29]
    ReadSwitch.io.from_weight[8] <= ROMWeight.io.out[8] @[top.scala 61:29]
    Calc8x8.io.input.right[0] <= ReadSwitch.io.to_calc8x8.right[0] @[top.scala 63:19]
    Calc8x8.io.input.right[1] <= ReadSwitch.io.to_calc8x8.right[1] @[top.scala 63:19]
    Calc8x8.io.input.right[2] <= ReadSwitch.io.to_calc8x8.right[2] @[top.scala 63:19]
    Calc8x8.io.input.right[3] <= ReadSwitch.io.to_calc8x8.right[3] @[top.scala 63:19]
    Calc8x8.io.input.right[4] <= ReadSwitch.io.to_calc8x8.right[4] @[top.scala 63:19]
    Calc8x8.io.input.right[5] <= ReadSwitch.io.to_calc8x8.right[5] @[top.scala 63:19]
    Calc8x8.io.input.right[6] <= ReadSwitch.io.to_calc8x8.right[6] @[top.scala 63:19]
    Calc8x8.io.input.right[7] <= ReadSwitch.io.to_calc8x8.right[7] @[top.scala 63:19]
    Calc8x8.io.input.left[0] <= ReadSwitch.io.to_calc8x8.left[0] @[top.scala 63:19]
    Calc8x8.io.input.left[1] <= ReadSwitch.io.to_calc8x8.left[1] @[top.scala 63:19]
    Calc8x8.io.input.left[2] <= ReadSwitch.io.to_calc8x8.left[2] @[top.scala 63:19]
    Calc8x8.io.input.left[3] <= ReadSwitch.io.to_calc8x8.left[3] @[top.scala 63:19]
    Calc8x8.io.input.left[4] <= ReadSwitch.io.to_calc8x8.left[4] @[top.scala 63:19]
    Calc8x8.io.input.left[5] <= ReadSwitch.io.to_calc8x8.left[5] @[top.scala 63:19]
    Calc8x8.io.input.left[6] <= ReadSwitch.io.to_calc8x8.left[6] @[top.scala 63:19]
    Calc8x8.io.input.left[7] <= ReadSwitch.io.to_calc8x8.left[7] @[top.scala 63:19]
    Calc8x8.io.input.down[0] <= ReadSwitch.io.to_calc8x8.down[0] @[top.scala 63:19]
    Calc8x8.io.input.down[1] <= ReadSwitch.io.to_calc8x8.down[1] @[top.scala 63:19]
    Calc8x8.io.input.down[2] <= ReadSwitch.io.to_calc8x8.down[2] @[top.scala 63:19]
    Calc8x8.io.input.down[3] <= ReadSwitch.io.to_calc8x8.down[3] @[top.scala 63:19]
    Calc8x8.io.input.down[4] <= ReadSwitch.io.to_calc8x8.down[4] @[top.scala 63:19]
    Calc8x8.io.input.down[5] <= ReadSwitch.io.to_calc8x8.down[5] @[top.scala 63:19]
    Calc8x8.io.input.down[6] <= ReadSwitch.io.to_calc8x8.down[6] @[top.scala 63:19]
    Calc8x8.io.input.down[7] <= ReadSwitch.io.to_calc8x8.down[7] @[top.scala 63:19]
    Calc8x8.io.input.down[8] <= ReadSwitch.io.to_calc8x8.down[8] @[top.scala 63:19]
    Calc8x8.io.input.down[9] <= ReadSwitch.io.to_calc8x8.down[9] @[top.scala 63:19]
    Calc8x8.io.input.up[0] <= ReadSwitch.io.to_calc8x8.up[0] @[top.scala 63:19]
    Calc8x8.io.input.up[1] <= ReadSwitch.io.to_calc8x8.up[1] @[top.scala 63:19]
    Calc8x8.io.input.up[2] <= ReadSwitch.io.to_calc8x8.up[2] @[top.scala 63:19]
    Calc8x8.io.input.up[3] <= ReadSwitch.io.to_calc8x8.up[3] @[top.scala 63:19]
    Calc8x8.io.input.up[4] <= ReadSwitch.io.to_calc8x8.up[4] @[top.scala 63:19]
    Calc8x8.io.input.up[5] <= ReadSwitch.io.to_calc8x8.up[5] @[top.scala 63:19]
    Calc8x8.io.input.up[6] <= ReadSwitch.io.to_calc8x8.up[6] @[top.scala 63:19]
    Calc8x8.io.input.up[7] <= ReadSwitch.io.to_calc8x8.up[7] @[top.scala 63:19]
    Calc8x8.io.input.up[8] <= ReadSwitch.io.to_calc8x8.up[8] @[top.scala 63:19]
    Calc8x8.io.input.up[9] <= ReadSwitch.io.to_calc8x8.up[9] @[top.scala 63:19]
    Calc8x8.io.input.mat[0] <= ReadSwitch.io.to_calc8x8.mat[0] @[top.scala 63:19]
    Calc8x8.io.input.mat[1] <= ReadSwitch.io.to_calc8x8.mat[1] @[top.scala 63:19]
    Calc8x8.io.input.mat[2] <= ReadSwitch.io.to_calc8x8.mat[2] @[top.scala 63:19]
    Calc8x8.io.input.mat[3] <= ReadSwitch.io.to_calc8x8.mat[3] @[top.scala 63:19]
    Calc8x8.io.input.mat[4] <= ReadSwitch.io.to_calc8x8.mat[4] @[top.scala 63:19]
    Calc8x8.io.input.mat[5] <= ReadSwitch.io.to_calc8x8.mat[5] @[top.scala 63:19]
    Calc8x8.io.input.mat[6] <= ReadSwitch.io.to_calc8x8.mat[6] @[top.scala 63:19]
    Calc8x8.io.input.mat[7] <= ReadSwitch.io.to_calc8x8.mat[7] @[top.scala 63:19]
    Calc8x8.io.input.mat[8] <= ReadSwitch.io.to_calc8x8.mat[8] @[top.scala 63:19]
    Calc8x8.io.input.mat[9] <= ReadSwitch.io.to_calc8x8.mat[9] @[top.scala 63:19]
    Calc8x8.io.input.mat[10] <= ReadSwitch.io.to_calc8x8.mat[10] @[top.scala 63:19]
    Calc8x8.io.input.mat[11] <= ReadSwitch.io.to_calc8x8.mat[11] @[top.scala 63:19]
    Calc8x8.io.input.mat[12] <= ReadSwitch.io.to_calc8x8.mat[12] @[top.scala 63:19]
    Calc8x8.io.input.mat[13] <= ReadSwitch.io.to_calc8x8.mat[13] @[top.scala 63:19]
    Calc8x8.io.input.mat[14] <= ReadSwitch.io.to_calc8x8.mat[14] @[top.scala 63:19]
    Calc8x8.io.input.mat[15] <= ReadSwitch.io.to_calc8x8.mat[15] @[top.scala 63:19]
    Calc8x8.io.input.mat[16] <= ReadSwitch.io.to_calc8x8.mat[16] @[top.scala 63:19]
    Calc8x8.io.input.mat[17] <= ReadSwitch.io.to_calc8x8.mat[17] @[top.scala 63:19]
    Calc8x8.io.input.mat[18] <= ReadSwitch.io.to_calc8x8.mat[18] @[top.scala 63:19]
    Calc8x8.io.input.mat[19] <= ReadSwitch.io.to_calc8x8.mat[19] @[top.scala 63:19]
    Calc8x8.io.input.mat[20] <= ReadSwitch.io.to_calc8x8.mat[20] @[top.scala 63:19]
    Calc8x8.io.input.mat[21] <= ReadSwitch.io.to_calc8x8.mat[21] @[top.scala 63:19]
    Calc8x8.io.input.mat[22] <= ReadSwitch.io.to_calc8x8.mat[22] @[top.scala 63:19]
    Calc8x8.io.input.mat[23] <= ReadSwitch.io.to_calc8x8.mat[23] @[top.scala 63:19]
    Calc8x8.io.input.mat[24] <= ReadSwitch.io.to_calc8x8.mat[24] @[top.scala 63:19]
    Calc8x8.io.input.mat[25] <= ReadSwitch.io.to_calc8x8.mat[25] @[top.scala 63:19]
    Calc8x8.io.input.mat[26] <= ReadSwitch.io.to_calc8x8.mat[26] @[top.scala 63:19]
    Calc8x8.io.input.mat[27] <= ReadSwitch.io.to_calc8x8.mat[27] @[top.scala 63:19]
    Calc8x8.io.input.mat[28] <= ReadSwitch.io.to_calc8x8.mat[28] @[top.scala 63:19]
    Calc8x8.io.input.mat[29] <= ReadSwitch.io.to_calc8x8.mat[29] @[top.scala 63:19]
    Calc8x8.io.input.mat[30] <= ReadSwitch.io.to_calc8x8.mat[30] @[top.scala 63:19]
    Calc8x8.io.input.mat[31] <= ReadSwitch.io.to_calc8x8.mat[31] @[top.scala 63:19]
    Calc8x8.io.input.mat[32] <= ReadSwitch.io.to_calc8x8.mat[32] @[top.scala 63:19]
    Calc8x8.io.input.mat[33] <= ReadSwitch.io.to_calc8x8.mat[33] @[top.scala 63:19]
    Calc8x8.io.input.mat[34] <= ReadSwitch.io.to_calc8x8.mat[34] @[top.scala 63:19]
    Calc8x8.io.input.mat[35] <= ReadSwitch.io.to_calc8x8.mat[35] @[top.scala 63:19]
    Calc8x8.io.input.mat[36] <= ReadSwitch.io.to_calc8x8.mat[36] @[top.scala 63:19]
    Calc8x8.io.input.mat[37] <= ReadSwitch.io.to_calc8x8.mat[37] @[top.scala 63:19]
    Calc8x8.io.input.mat[38] <= ReadSwitch.io.to_calc8x8.mat[38] @[top.scala 63:19]
    Calc8x8.io.input.mat[39] <= ReadSwitch.io.to_calc8x8.mat[39] @[top.scala 63:19]
    Calc8x8.io.input.mat[40] <= ReadSwitch.io.to_calc8x8.mat[40] @[top.scala 63:19]
    Calc8x8.io.input.mat[41] <= ReadSwitch.io.to_calc8x8.mat[41] @[top.scala 63:19]
    Calc8x8.io.input.mat[42] <= ReadSwitch.io.to_calc8x8.mat[42] @[top.scala 63:19]
    Calc8x8.io.input.mat[43] <= ReadSwitch.io.to_calc8x8.mat[43] @[top.scala 63:19]
    Calc8x8.io.input.mat[44] <= ReadSwitch.io.to_calc8x8.mat[44] @[top.scala 63:19]
    Calc8x8.io.input.mat[45] <= ReadSwitch.io.to_calc8x8.mat[45] @[top.scala 63:19]
    Calc8x8.io.input.mat[46] <= ReadSwitch.io.to_calc8x8.mat[46] @[top.scala 63:19]
    Calc8x8.io.input.mat[47] <= ReadSwitch.io.to_calc8x8.mat[47] @[top.scala 63:19]
    Calc8x8.io.input.mat[48] <= ReadSwitch.io.to_calc8x8.mat[48] @[top.scala 63:19]
    Calc8x8.io.input.mat[49] <= ReadSwitch.io.to_calc8x8.mat[49] @[top.scala 63:19]
    Calc8x8.io.input.mat[50] <= ReadSwitch.io.to_calc8x8.mat[50] @[top.scala 63:19]
    Calc8x8.io.input.mat[51] <= ReadSwitch.io.to_calc8x8.mat[51] @[top.scala 63:19]
    Calc8x8.io.input.mat[52] <= ReadSwitch.io.to_calc8x8.mat[52] @[top.scala 63:19]
    Calc8x8.io.input.mat[53] <= ReadSwitch.io.to_calc8x8.mat[53] @[top.scala 63:19]
    Calc8x8.io.input.mat[54] <= ReadSwitch.io.to_calc8x8.mat[54] @[top.scala 63:19]
    Calc8x8.io.input.mat[55] <= ReadSwitch.io.to_calc8x8.mat[55] @[top.scala 63:19]
    Calc8x8.io.input.mat[56] <= ReadSwitch.io.to_calc8x8.mat[56] @[top.scala 63:19]
    Calc8x8.io.input.mat[57] <= ReadSwitch.io.to_calc8x8.mat[57] @[top.scala 63:19]
    Calc8x8.io.input.mat[58] <= ReadSwitch.io.to_calc8x8.mat[58] @[top.scala 63:19]
    Calc8x8.io.input.mat[59] <= ReadSwitch.io.to_calc8x8.mat[59] @[top.scala 63:19]
    Calc8x8.io.input.mat[60] <= ReadSwitch.io.to_calc8x8.mat[60] @[top.scala 63:19]
    Calc8x8.io.input.mat[61] <= ReadSwitch.io.to_calc8x8.mat[61] @[top.scala 63:19]
    Calc8x8.io.input.mat[62] <= ReadSwitch.io.to_calc8x8.mat[62] @[top.scala 63:19]
    Calc8x8.io.input.mat[63] <= ReadSwitch.io.to_calc8x8.mat[63] @[top.scala 63:19]
    wire _WIRE_6 : UInt<2> @[top.scala 64:33]
    _WIRE_6 <= UInt<1>("h00") @[top.scala 64:33]
    Calc8x8.io.flag <= _WIRE_6 @[top.scala 64:18]
    Calc8x8.io.weight[0].real[0] <= ReadSwitch.io.to_weight[0].real[0] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[1] <= ReadSwitch.io.to_weight[0].real[1] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[2] <= ReadSwitch.io.to_weight[0].real[2] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[3] <= ReadSwitch.io.to_weight[0].real[3] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[4] <= ReadSwitch.io.to_weight[0].real[4] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[5] <= ReadSwitch.io.to_weight[0].real[5] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[6] <= ReadSwitch.io.to_weight[0].real[6] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[7] <= ReadSwitch.io.to_weight[0].real[7] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[8] <= ReadSwitch.io.to_weight[0].real[8] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[9] <= ReadSwitch.io.to_weight[0].real[9] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[10] <= ReadSwitch.io.to_weight[0].real[10] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[11] <= ReadSwitch.io.to_weight[0].real[11] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[12] <= ReadSwitch.io.to_weight[0].real[12] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[13] <= ReadSwitch.io.to_weight[0].real[13] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[14] <= ReadSwitch.io.to_weight[0].real[14] @[top.scala 65:20]
    Calc8x8.io.weight[0].real[15] <= ReadSwitch.io.to_weight[0].real[15] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[0] <= ReadSwitch.io.to_weight[1].real[0] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[1] <= ReadSwitch.io.to_weight[1].real[1] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[2] <= ReadSwitch.io.to_weight[1].real[2] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[3] <= ReadSwitch.io.to_weight[1].real[3] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[4] <= ReadSwitch.io.to_weight[1].real[4] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[5] <= ReadSwitch.io.to_weight[1].real[5] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[6] <= ReadSwitch.io.to_weight[1].real[6] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[7] <= ReadSwitch.io.to_weight[1].real[7] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[8] <= ReadSwitch.io.to_weight[1].real[8] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[9] <= ReadSwitch.io.to_weight[1].real[9] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[10] <= ReadSwitch.io.to_weight[1].real[10] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[11] <= ReadSwitch.io.to_weight[1].real[11] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[12] <= ReadSwitch.io.to_weight[1].real[12] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[13] <= ReadSwitch.io.to_weight[1].real[13] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[14] <= ReadSwitch.io.to_weight[1].real[14] @[top.scala 65:20]
    Calc8x8.io.weight[1].real[15] <= ReadSwitch.io.to_weight[1].real[15] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[0] <= ReadSwitch.io.to_weight[2].real[0] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[1] <= ReadSwitch.io.to_weight[2].real[1] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[2] <= ReadSwitch.io.to_weight[2].real[2] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[3] <= ReadSwitch.io.to_weight[2].real[3] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[4] <= ReadSwitch.io.to_weight[2].real[4] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[5] <= ReadSwitch.io.to_weight[2].real[5] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[6] <= ReadSwitch.io.to_weight[2].real[6] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[7] <= ReadSwitch.io.to_weight[2].real[7] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[8] <= ReadSwitch.io.to_weight[2].real[8] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[9] <= ReadSwitch.io.to_weight[2].real[9] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[10] <= ReadSwitch.io.to_weight[2].real[10] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[11] <= ReadSwitch.io.to_weight[2].real[11] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[12] <= ReadSwitch.io.to_weight[2].real[12] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[13] <= ReadSwitch.io.to_weight[2].real[13] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[14] <= ReadSwitch.io.to_weight[2].real[14] @[top.scala 65:20]
    Calc8x8.io.weight[2].real[15] <= ReadSwitch.io.to_weight[2].real[15] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[0] <= ReadSwitch.io.to_weight[3].real[0] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[1] <= ReadSwitch.io.to_weight[3].real[1] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[2] <= ReadSwitch.io.to_weight[3].real[2] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[3] <= ReadSwitch.io.to_weight[3].real[3] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[4] <= ReadSwitch.io.to_weight[3].real[4] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[5] <= ReadSwitch.io.to_weight[3].real[5] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[6] <= ReadSwitch.io.to_weight[3].real[6] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[7] <= ReadSwitch.io.to_weight[3].real[7] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[8] <= ReadSwitch.io.to_weight[3].real[8] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[9] <= ReadSwitch.io.to_weight[3].real[9] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[10] <= ReadSwitch.io.to_weight[3].real[10] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[11] <= ReadSwitch.io.to_weight[3].real[11] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[12] <= ReadSwitch.io.to_weight[3].real[12] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[13] <= ReadSwitch.io.to_weight[3].real[13] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[14] <= ReadSwitch.io.to_weight[3].real[14] @[top.scala 65:20]
    Calc8x8.io.weight[3].real[15] <= ReadSwitch.io.to_weight[3].real[15] @[top.scala 65:20]
    Calc8x8.io.valid_in <= ReadSwitch.io.valid_out_calc8x8 @[top.scala 66:22]
    Accumu.io.in_from_calc8x8.mat[0] <= Calc8x8.io.output.mat[0] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[1] <= Calc8x8.io.output.mat[1] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[2] <= Calc8x8.io.output.mat[2] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[3] <= Calc8x8.io.output.mat[3] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[4] <= Calc8x8.io.output.mat[4] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[5] <= Calc8x8.io.output.mat[5] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[6] <= Calc8x8.io.output.mat[6] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[7] <= Calc8x8.io.output.mat[7] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[8] <= Calc8x8.io.output.mat[8] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[9] <= Calc8x8.io.output.mat[9] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[10] <= Calc8x8.io.output.mat[10] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[11] <= Calc8x8.io.output.mat[11] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[12] <= Calc8x8.io.output.mat[12] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[13] <= Calc8x8.io.output.mat[13] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[14] <= Calc8x8.io.output.mat[14] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[15] <= Calc8x8.io.output.mat[15] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[16] <= Calc8x8.io.output.mat[16] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[17] <= Calc8x8.io.output.mat[17] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[18] <= Calc8x8.io.output.mat[18] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[19] <= Calc8x8.io.output.mat[19] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[20] <= Calc8x8.io.output.mat[20] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[21] <= Calc8x8.io.output.mat[21] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[22] <= Calc8x8.io.output.mat[22] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[23] <= Calc8x8.io.output.mat[23] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[24] <= Calc8x8.io.output.mat[24] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[25] <= Calc8x8.io.output.mat[25] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[26] <= Calc8x8.io.output.mat[26] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[27] <= Calc8x8.io.output.mat[27] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[28] <= Calc8x8.io.output.mat[28] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[29] <= Calc8x8.io.output.mat[29] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[30] <= Calc8x8.io.output.mat[30] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[31] <= Calc8x8.io.output.mat[31] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[32] <= Calc8x8.io.output.mat[32] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[33] <= Calc8x8.io.output.mat[33] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[34] <= Calc8x8.io.output.mat[34] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[35] <= Calc8x8.io.output.mat[35] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[36] <= Calc8x8.io.output.mat[36] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[37] <= Calc8x8.io.output.mat[37] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[38] <= Calc8x8.io.output.mat[38] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[39] <= Calc8x8.io.output.mat[39] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[40] <= Calc8x8.io.output.mat[40] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[41] <= Calc8x8.io.output.mat[41] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[42] <= Calc8x8.io.output.mat[42] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[43] <= Calc8x8.io.output.mat[43] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[44] <= Calc8x8.io.output.mat[44] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[45] <= Calc8x8.io.output.mat[45] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[46] <= Calc8x8.io.output.mat[46] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[47] <= Calc8x8.io.output.mat[47] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[48] <= Calc8x8.io.output.mat[48] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[49] <= Calc8x8.io.output.mat[49] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[50] <= Calc8x8.io.output.mat[50] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[51] <= Calc8x8.io.output.mat[51] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[52] <= Calc8x8.io.output.mat[52] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[53] <= Calc8x8.io.output.mat[53] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[54] <= Calc8x8.io.output.mat[54] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[55] <= Calc8x8.io.output.mat[55] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[56] <= Calc8x8.io.output.mat[56] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[57] <= Calc8x8.io.output.mat[57] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[58] <= Calc8x8.io.output.mat[58] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[59] <= Calc8x8.io.output.mat[59] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[60] <= Calc8x8.io.output.mat[60] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[61] <= Calc8x8.io.output.mat[61] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[62] <= Calc8x8.io.output.mat[62] @[top.scala 69:26]
    Accumu.io.in_from_calc8x8.mat[63] <= Calc8x8.io.output.mat[63] @[top.scala 69:26]
    Accumu.io.valid_in <= Calc8x8.io.valid_out @[top.scala 70:19]
    Accumu.io.flag_job <= UInt<1>("h00") @[top.scala 71:19]
    Accumu.io.csum <= UInt<1>("h00") @[top.scala 72:15]
    Accumu.io.bias_begin_addr <= UInt<1>("h00") @[top.scala 73:26]
    Accumu.io.bias_end_addr <= UInt<1>("h00") @[top.scala 74:24]
    ROMBias.io.addr <= Accumu.io.bias_addr @[top.scala 75:19]
    Accumu.io.bias_in <= ROMBias.io.out @[top.scala 76:18]
    Accumu.io.is_in_use <= UInt<1>("h00") @[top.scala 77:20]
    Quant.io.in_from_accumu.mat[0] <= Accumu.io.result.mat[0] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[1] <= Accumu.io.result.mat[1] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[2] <= Accumu.io.result.mat[2] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[3] <= Accumu.io.result.mat[3] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[4] <= Accumu.io.result.mat[4] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[5] <= Accumu.io.result.mat[5] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[6] <= Accumu.io.result.mat[6] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[7] <= Accumu.io.result.mat[7] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[8] <= Accumu.io.result.mat[8] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[9] <= Accumu.io.result.mat[9] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[10] <= Accumu.io.result.mat[10] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[11] <= Accumu.io.result.mat[11] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[12] <= Accumu.io.result.mat[12] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[13] <= Accumu.io.result.mat[13] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[14] <= Accumu.io.result.mat[14] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[15] <= Accumu.io.result.mat[15] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[16] <= Accumu.io.result.mat[16] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[17] <= Accumu.io.result.mat[17] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[18] <= Accumu.io.result.mat[18] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[19] <= Accumu.io.result.mat[19] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[20] <= Accumu.io.result.mat[20] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[21] <= Accumu.io.result.mat[21] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[22] <= Accumu.io.result.mat[22] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[23] <= Accumu.io.result.mat[23] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[24] <= Accumu.io.result.mat[24] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[25] <= Accumu.io.result.mat[25] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[26] <= Accumu.io.result.mat[26] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[27] <= Accumu.io.result.mat[27] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[28] <= Accumu.io.result.mat[28] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[29] <= Accumu.io.result.mat[29] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[30] <= Accumu.io.result.mat[30] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[31] <= Accumu.io.result.mat[31] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[32] <= Accumu.io.result.mat[32] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[33] <= Accumu.io.result.mat[33] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[34] <= Accumu.io.result.mat[34] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[35] <= Accumu.io.result.mat[35] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[36] <= Accumu.io.result.mat[36] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[37] <= Accumu.io.result.mat[37] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[38] <= Accumu.io.result.mat[38] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[39] <= Accumu.io.result.mat[39] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[40] <= Accumu.io.result.mat[40] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[41] <= Accumu.io.result.mat[41] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[42] <= Accumu.io.result.mat[42] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[43] <= Accumu.io.result.mat[43] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[44] <= Accumu.io.result.mat[44] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[45] <= Accumu.io.result.mat[45] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[46] <= Accumu.io.result.mat[46] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[47] <= Accumu.io.result.mat[47] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[48] <= Accumu.io.result.mat[48] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[49] <= Accumu.io.result.mat[49] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[50] <= Accumu.io.result.mat[50] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[51] <= Accumu.io.result.mat[51] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[52] <= Accumu.io.result.mat[52] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[53] <= Accumu.io.result.mat[53] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[54] <= Accumu.io.result.mat[54] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[55] <= Accumu.io.result.mat[55] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[56] <= Accumu.io.result.mat[56] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[57] <= Accumu.io.result.mat[57] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[58] <= Accumu.io.result.mat[58] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[59] <= Accumu.io.result.mat[59] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[60] <= Accumu.io.result.mat[60] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[61] <= Accumu.io.result.mat[61] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[62] <= Accumu.io.result.mat[62] @[top.scala 80:26]
    Quant.io.in_from_accumu.mat[63] <= Accumu.io.result.mat[63] @[top.scala 80:26]
    Quant.io.valid_in <= Accumu.io.valid_out @[top.scala 81:20]
    Quant.io.flag_job <= UInt<1>("h00") @[top.scala 82:20]
    wire _WIRE_7 : {in_q : UInt<6>, out_q : UInt<6>} @[top.scala 83:35]
    _WIRE_7.out_q <= UInt<6>("h00") @[top.scala 83:35]
    _WIRE_7.in_q <= UInt<6>("h00") @[top.scala 83:35]
    Quant.io.quant_in.out_q <= _WIRE_7.out_q @[top.scala 83:20]
    Quant.io.quant_in.in_q <= _WIRE_7.in_q @[top.scala 83:20]
    Maxpool.io.from_big[0].data[0] <= RAMGroup.io.rd_big[0].data[0] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[1] <= RAMGroup.io.rd_big[0].data[1] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[2] <= RAMGroup.io.rd_big[0].data[2] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[3] <= RAMGroup.io.rd_big[0].data[3] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[4] <= RAMGroup.io.rd_big[0].data[4] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[5] <= RAMGroup.io.rd_big[0].data[5] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[6] <= RAMGroup.io.rd_big[0].data[6] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[7] <= RAMGroup.io.rd_big[0].data[7] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[8] <= RAMGroup.io.rd_big[0].data[8] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[9] <= RAMGroup.io.rd_big[0].data[9] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[10] <= RAMGroup.io.rd_big[0].data[10] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[11] <= RAMGroup.io.rd_big[0].data[11] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[12] <= RAMGroup.io.rd_big[0].data[12] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[13] <= RAMGroup.io.rd_big[0].data[13] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[14] <= RAMGroup.io.rd_big[0].data[14] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[15] <= RAMGroup.io.rd_big[0].data[15] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[16] <= RAMGroup.io.rd_big[0].data[16] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[17] <= RAMGroup.io.rd_big[0].data[17] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[18] <= RAMGroup.io.rd_big[0].data[18] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[19] <= RAMGroup.io.rd_big[0].data[19] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[20] <= RAMGroup.io.rd_big[0].data[20] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[21] <= RAMGroup.io.rd_big[0].data[21] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[22] <= RAMGroup.io.rd_big[0].data[22] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[23] <= RAMGroup.io.rd_big[0].data[23] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[24] <= RAMGroup.io.rd_big[0].data[24] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[25] <= RAMGroup.io.rd_big[0].data[25] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[26] <= RAMGroup.io.rd_big[0].data[26] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[27] <= RAMGroup.io.rd_big[0].data[27] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[28] <= RAMGroup.io.rd_big[0].data[28] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[29] <= RAMGroup.io.rd_big[0].data[29] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[30] <= RAMGroup.io.rd_big[0].data[30] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[31] <= RAMGroup.io.rd_big[0].data[31] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[32] <= RAMGroup.io.rd_big[0].data[32] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[33] <= RAMGroup.io.rd_big[0].data[33] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[34] <= RAMGroup.io.rd_big[0].data[34] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[35] <= RAMGroup.io.rd_big[0].data[35] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[36] <= RAMGroup.io.rd_big[0].data[36] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[37] <= RAMGroup.io.rd_big[0].data[37] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[38] <= RAMGroup.io.rd_big[0].data[38] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[39] <= RAMGroup.io.rd_big[0].data[39] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[40] <= RAMGroup.io.rd_big[0].data[40] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[41] <= RAMGroup.io.rd_big[0].data[41] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[42] <= RAMGroup.io.rd_big[0].data[42] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[43] <= RAMGroup.io.rd_big[0].data[43] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[44] <= RAMGroup.io.rd_big[0].data[44] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[45] <= RAMGroup.io.rd_big[0].data[45] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[46] <= RAMGroup.io.rd_big[0].data[46] @[top.scala 86:22]
    Maxpool.io.from_big[0].data[47] <= RAMGroup.io.rd_big[0].data[47] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[0] <= RAMGroup.io.rd_big[1].data[0] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[1] <= RAMGroup.io.rd_big[1].data[1] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[2] <= RAMGroup.io.rd_big[1].data[2] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[3] <= RAMGroup.io.rd_big[1].data[3] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[4] <= RAMGroup.io.rd_big[1].data[4] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[5] <= RAMGroup.io.rd_big[1].data[5] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[6] <= RAMGroup.io.rd_big[1].data[6] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[7] <= RAMGroup.io.rd_big[1].data[7] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[8] <= RAMGroup.io.rd_big[1].data[8] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[9] <= RAMGroup.io.rd_big[1].data[9] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[10] <= RAMGroup.io.rd_big[1].data[10] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[11] <= RAMGroup.io.rd_big[1].data[11] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[12] <= RAMGroup.io.rd_big[1].data[12] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[13] <= RAMGroup.io.rd_big[1].data[13] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[14] <= RAMGroup.io.rd_big[1].data[14] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[15] <= RAMGroup.io.rd_big[1].data[15] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[16] <= RAMGroup.io.rd_big[1].data[16] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[17] <= RAMGroup.io.rd_big[1].data[17] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[18] <= RAMGroup.io.rd_big[1].data[18] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[19] <= RAMGroup.io.rd_big[1].data[19] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[20] <= RAMGroup.io.rd_big[1].data[20] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[21] <= RAMGroup.io.rd_big[1].data[21] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[22] <= RAMGroup.io.rd_big[1].data[22] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[23] <= RAMGroup.io.rd_big[1].data[23] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[24] <= RAMGroup.io.rd_big[1].data[24] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[25] <= RAMGroup.io.rd_big[1].data[25] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[26] <= RAMGroup.io.rd_big[1].data[26] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[27] <= RAMGroup.io.rd_big[1].data[27] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[28] <= RAMGroup.io.rd_big[1].data[28] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[29] <= RAMGroup.io.rd_big[1].data[29] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[30] <= RAMGroup.io.rd_big[1].data[30] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[31] <= RAMGroup.io.rd_big[1].data[31] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[32] <= RAMGroup.io.rd_big[1].data[32] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[33] <= RAMGroup.io.rd_big[1].data[33] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[34] <= RAMGroup.io.rd_big[1].data[34] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[35] <= RAMGroup.io.rd_big[1].data[35] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[36] <= RAMGroup.io.rd_big[1].data[36] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[37] <= RAMGroup.io.rd_big[1].data[37] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[38] <= RAMGroup.io.rd_big[1].data[38] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[39] <= RAMGroup.io.rd_big[1].data[39] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[40] <= RAMGroup.io.rd_big[1].data[40] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[41] <= RAMGroup.io.rd_big[1].data[41] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[42] <= RAMGroup.io.rd_big[1].data[42] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[43] <= RAMGroup.io.rd_big[1].data[43] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[44] <= RAMGroup.io.rd_big[1].data[44] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[45] <= RAMGroup.io.rd_big[1].data[45] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[46] <= RAMGroup.io.rd_big[1].data[46] @[top.scala 86:22]
    Maxpool.io.from_big[1].data[47] <= RAMGroup.io.rd_big[1].data[47] @[top.scala 86:22]
    Maxpool.io.from_small[0][0].data[0] <= RAMGroup.io.rd_small[0][1].data[0] @[top.scala 88:34]
    Maxpool.io.from_small[0][0].data[1] <= RAMGroup.io.rd_small[0][1].data[1] @[top.scala 88:34]
    Maxpool.io.from_small[0][0].data[2] <= RAMGroup.io.rd_small[0][1].data[2] @[top.scala 88:34]
    Maxpool.io.from_small[0][0].data[3] <= RAMGroup.io.rd_small[0][1].data[3] @[top.scala 88:34]
    Maxpool.io.from_small[0][0].data[4] <= RAMGroup.io.rd_small[0][1].data[4] @[top.scala 88:34]
    Maxpool.io.from_small[0][0].data[5] <= RAMGroup.io.rd_small[0][1].data[5] @[top.scala 88:34]
    Maxpool.io.from_small[0][0].data[6] <= RAMGroup.io.rd_small[0][1].data[6] @[top.scala 88:34]
    Maxpool.io.from_small[0][0].data[7] <= RAMGroup.io.rd_small[0][1].data[7] @[top.scala 88:34]
    Maxpool.io.from_small[0][1].data[0] <= RAMGroup.io.rd_small[0][2].data[0] @[top.scala 89:34]
    Maxpool.io.from_small[0][1].data[1] <= RAMGroup.io.rd_small[0][2].data[1] @[top.scala 89:34]
    Maxpool.io.from_small[0][1].data[2] <= RAMGroup.io.rd_small[0][2].data[2] @[top.scala 89:34]
    Maxpool.io.from_small[0][1].data[3] <= RAMGroup.io.rd_small[0][2].data[3] @[top.scala 89:34]
    Maxpool.io.from_small[0][1].data[4] <= RAMGroup.io.rd_small[0][2].data[4] @[top.scala 89:34]
    Maxpool.io.from_small[0][1].data[5] <= RAMGroup.io.rd_small[0][2].data[5] @[top.scala 89:34]
    Maxpool.io.from_small[0][1].data[6] <= RAMGroup.io.rd_small[0][2].data[6] @[top.scala 89:34]
    Maxpool.io.from_small[0][1].data[7] <= RAMGroup.io.rd_small[0][2].data[7] @[top.scala 89:34]
    Maxpool.io.from_small[1][0].data[0] <= RAMGroup.io.rd_small[1][1].data[0] @[top.scala 88:34]
    Maxpool.io.from_small[1][0].data[1] <= RAMGroup.io.rd_small[1][1].data[1] @[top.scala 88:34]
    Maxpool.io.from_small[1][0].data[2] <= RAMGroup.io.rd_small[1][1].data[2] @[top.scala 88:34]
    Maxpool.io.from_small[1][0].data[3] <= RAMGroup.io.rd_small[1][1].data[3] @[top.scala 88:34]
    Maxpool.io.from_small[1][0].data[4] <= RAMGroup.io.rd_small[1][1].data[4] @[top.scala 88:34]
    Maxpool.io.from_small[1][0].data[5] <= RAMGroup.io.rd_small[1][1].data[5] @[top.scala 88:34]
    Maxpool.io.from_small[1][0].data[6] <= RAMGroup.io.rd_small[1][1].data[6] @[top.scala 88:34]
    Maxpool.io.from_small[1][0].data[7] <= RAMGroup.io.rd_small[1][1].data[7] @[top.scala 88:34]
    Maxpool.io.from_small[1][1].data[0] <= RAMGroup.io.rd_small[1][2].data[0] @[top.scala 89:34]
    Maxpool.io.from_small[1][1].data[1] <= RAMGroup.io.rd_small[1][2].data[1] @[top.scala 89:34]
    Maxpool.io.from_small[1][1].data[2] <= RAMGroup.io.rd_small[1][2].data[2] @[top.scala 89:34]
    Maxpool.io.from_small[1][1].data[3] <= RAMGroup.io.rd_small[1][2].data[3] @[top.scala 89:34]
    Maxpool.io.from_small[1][1].data[4] <= RAMGroup.io.rd_small[1][2].data[4] @[top.scala 89:34]
    Maxpool.io.from_small[1][1].data[5] <= RAMGroup.io.rd_small[1][2].data[5] @[top.scala 89:34]
    Maxpool.io.from_small[1][1].data[6] <= RAMGroup.io.rd_small[1][2].data[6] @[top.scala 89:34]
    Maxpool.io.from_small[1][1].data[7] <= RAMGroup.io.rd_small[1][2].data[7] @[top.scala 89:34]
    Maxpool.io.valid_in <= RAMGroup.io.rd_valid_out @[top.scala 92:22]
    WriteSwitch.io.valid_in[0] <= Quant.io.valid_out @[top.scala 97:30]
    WriteSwitch.io.valid_in[1] <= Maxpool.io.valid_out @[top.scala 98:30]
    WriteSwitch.io.valid_in[2] <= ReadSwitch.io.valid_out_copy @[top.scala 99:30]
    WriteSwitch.io.valid_in[1] <= UInt<1>("h00") @[top.scala 101:30]
    WriteSwitch.io.valid_in[2] <= UInt<1>("h00") @[top.scala 102:30]
    WriteSwitch.io.input[0].mat[0] <= Quant.io.result.mat[0] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[1] <= Quant.io.result.mat[1] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[2] <= Quant.io.result.mat[2] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[3] <= Quant.io.result.mat[3] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[4] <= Quant.io.result.mat[4] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[5] <= Quant.io.result.mat[5] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[6] <= Quant.io.result.mat[6] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[7] <= Quant.io.result.mat[7] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[8] <= Quant.io.result.mat[8] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[9] <= Quant.io.result.mat[9] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[10] <= Quant.io.result.mat[10] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[11] <= Quant.io.result.mat[11] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[12] <= Quant.io.result.mat[12] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[13] <= Quant.io.result.mat[13] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[14] <= Quant.io.result.mat[14] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[15] <= Quant.io.result.mat[15] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[16] <= Quant.io.result.mat[16] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[17] <= Quant.io.result.mat[17] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[18] <= Quant.io.result.mat[18] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[19] <= Quant.io.result.mat[19] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[20] <= Quant.io.result.mat[20] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[21] <= Quant.io.result.mat[21] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[22] <= Quant.io.result.mat[22] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[23] <= Quant.io.result.mat[23] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[24] <= Quant.io.result.mat[24] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[25] <= Quant.io.result.mat[25] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[26] <= Quant.io.result.mat[26] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[27] <= Quant.io.result.mat[27] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[28] <= Quant.io.result.mat[28] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[29] <= Quant.io.result.mat[29] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[30] <= Quant.io.result.mat[30] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[31] <= Quant.io.result.mat[31] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[32] <= Quant.io.result.mat[32] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[33] <= Quant.io.result.mat[33] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[34] <= Quant.io.result.mat[34] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[35] <= Quant.io.result.mat[35] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[36] <= Quant.io.result.mat[36] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[37] <= Quant.io.result.mat[37] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[38] <= Quant.io.result.mat[38] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[39] <= Quant.io.result.mat[39] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[40] <= Quant.io.result.mat[40] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[41] <= Quant.io.result.mat[41] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[42] <= Quant.io.result.mat[42] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[43] <= Quant.io.result.mat[43] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[44] <= Quant.io.result.mat[44] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[45] <= Quant.io.result.mat[45] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[46] <= Quant.io.result.mat[46] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[47] <= Quant.io.result.mat[47] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[48] <= Quant.io.result.mat[48] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[49] <= Quant.io.result.mat[49] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[50] <= Quant.io.result.mat[50] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[51] <= Quant.io.result.mat[51] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[52] <= Quant.io.result.mat[52] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[53] <= Quant.io.result.mat[53] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[54] <= Quant.io.result.mat[54] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[55] <= Quant.io.result.mat[55] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[56] <= Quant.io.result.mat[56] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[57] <= Quant.io.result.mat[57] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[58] <= Quant.io.result.mat[58] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[59] <= Quant.io.result.mat[59] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[60] <= Quant.io.result.mat[60] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[61] <= Quant.io.result.mat[61] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[62] <= Quant.io.result.mat[62] @[top.scala 104:27]
    WriteSwitch.io.input[0].mat[63] <= Quant.io.result.mat[63] @[top.scala 104:27]
    WriteSwitch.io.input[1].mat[0] <= Maxpool.io.result.mat[0] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[1] <= Maxpool.io.result.mat[1] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[2] <= Maxpool.io.result.mat[2] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[3] <= Maxpool.io.result.mat[3] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[4] <= Maxpool.io.result.mat[4] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[5] <= Maxpool.io.result.mat[5] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[6] <= Maxpool.io.result.mat[6] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[7] <= Maxpool.io.result.mat[7] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[8] <= Maxpool.io.result.mat[8] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[9] <= Maxpool.io.result.mat[9] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[10] <= Maxpool.io.result.mat[10] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[11] <= Maxpool.io.result.mat[11] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[12] <= Maxpool.io.result.mat[12] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[13] <= Maxpool.io.result.mat[13] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[14] <= Maxpool.io.result.mat[14] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[15] <= Maxpool.io.result.mat[15] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[16] <= Maxpool.io.result.mat[16] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[17] <= Maxpool.io.result.mat[17] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[18] <= Maxpool.io.result.mat[18] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[19] <= Maxpool.io.result.mat[19] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[20] <= Maxpool.io.result.mat[20] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[21] <= Maxpool.io.result.mat[21] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[22] <= Maxpool.io.result.mat[22] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[23] <= Maxpool.io.result.mat[23] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[24] <= Maxpool.io.result.mat[24] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[25] <= Maxpool.io.result.mat[25] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[26] <= Maxpool.io.result.mat[26] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[27] <= Maxpool.io.result.mat[27] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[28] <= Maxpool.io.result.mat[28] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[29] <= Maxpool.io.result.mat[29] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[30] <= Maxpool.io.result.mat[30] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[31] <= Maxpool.io.result.mat[31] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[32] <= Maxpool.io.result.mat[32] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[33] <= Maxpool.io.result.mat[33] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[34] <= Maxpool.io.result.mat[34] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[35] <= Maxpool.io.result.mat[35] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[36] <= Maxpool.io.result.mat[36] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[37] <= Maxpool.io.result.mat[37] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[38] <= Maxpool.io.result.mat[38] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[39] <= Maxpool.io.result.mat[39] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[40] <= Maxpool.io.result.mat[40] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[41] <= Maxpool.io.result.mat[41] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[42] <= Maxpool.io.result.mat[42] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[43] <= Maxpool.io.result.mat[43] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[44] <= Maxpool.io.result.mat[44] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[45] <= Maxpool.io.result.mat[45] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[46] <= Maxpool.io.result.mat[46] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[47] <= Maxpool.io.result.mat[47] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[48] <= Maxpool.io.result.mat[48] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[49] <= Maxpool.io.result.mat[49] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[50] <= Maxpool.io.result.mat[50] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[51] <= Maxpool.io.result.mat[51] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[52] <= Maxpool.io.result.mat[52] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[53] <= Maxpool.io.result.mat[53] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[54] <= Maxpool.io.result.mat[54] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[55] <= Maxpool.io.result.mat[55] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[56] <= Maxpool.io.result.mat[56] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[57] <= Maxpool.io.result.mat[57] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[58] <= Maxpool.io.result.mat[58] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[59] <= Maxpool.io.result.mat[59] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[60] <= Maxpool.io.result.mat[60] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[61] <= Maxpool.io.result.mat[61] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[62] <= Maxpool.io.result.mat[62] @[top.scala 105:27]
    WriteSwitch.io.input[1].mat[63] <= Maxpool.io.result.mat[63] @[top.scala 105:27]
    WriteSwitch.io.input[2].mat[0] <= ReadSwitch.io.to_copy.mat[0] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[1] <= ReadSwitch.io.to_copy.mat[1] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[2] <= ReadSwitch.io.to_copy.mat[2] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[3] <= ReadSwitch.io.to_copy.mat[3] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[4] <= ReadSwitch.io.to_copy.mat[4] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[5] <= ReadSwitch.io.to_copy.mat[5] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[6] <= ReadSwitch.io.to_copy.mat[6] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[7] <= ReadSwitch.io.to_copy.mat[7] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[8] <= ReadSwitch.io.to_copy.mat[8] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[9] <= ReadSwitch.io.to_copy.mat[9] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[10] <= ReadSwitch.io.to_copy.mat[10] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[11] <= ReadSwitch.io.to_copy.mat[11] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[12] <= ReadSwitch.io.to_copy.mat[12] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[13] <= ReadSwitch.io.to_copy.mat[13] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[14] <= ReadSwitch.io.to_copy.mat[14] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[15] <= ReadSwitch.io.to_copy.mat[15] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[16] <= ReadSwitch.io.to_copy.mat[16] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[17] <= ReadSwitch.io.to_copy.mat[17] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[18] <= ReadSwitch.io.to_copy.mat[18] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[19] <= ReadSwitch.io.to_copy.mat[19] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[20] <= ReadSwitch.io.to_copy.mat[20] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[21] <= ReadSwitch.io.to_copy.mat[21] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[22] <= ReadSwitch.io.to_copy.mat[22] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[23] <= ReadSwitch.io.to_copy.mat[23] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[24] <= ReadSwitch.io.to_copy.mat[24] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[25] <= ReadSwitch.io.to_copy.mat[25] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[26] <= ReadSwitch.io.to_copy.mat[26] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[27] <= ReadSwitch.io.to_copy.mat[27] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[28] <= ReadSwitch.io.to_copy.mat[28] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[29] <= ReadSwitch.io.to_copy.mat[29] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[30] <= ReadSwitch.io.to_copy.mat[30] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[31] <= ReadSwitch.io.to_copy.mat[31] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[32] <= ReadSwitch.io.to_copy.mat[32] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[33] <= ReadSwitch.io.to_copy.mat[33] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[34] <= ReadSwitch.io.to_copy.mat[34] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[35] <= ReadSwitch.io.to_copy.mat[35] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[36] <= ReadSwitch.io.to_copy.mat[36] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[37] <= ReadSwitch.io.to_copy.mat[37] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[38] <= ReadSwitch.io.to_copy.mat[38] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[39] <= ReadSwitch.io.to_copy.mat[39] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[40] <= ReadSwitch.io.to_copy.mat[40] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[41] <= ReadSwitch.io.to_copy.mat[41] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[42] <= ReadSwitch.io.to_copy.mat[42] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[43] <= ReadSwitch.io.to_copy.mat[43] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[44] <= ReadSwitch.io.to_copy.mat[44] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[45] <= ReadSwitch.io.to_copy.mat[45] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[46] <= ReadSwitch.io.to_copy.mat[46] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[47] <= ReadSwitch.io.to_copy.mat[47] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[48] <= ReadSwitch.io.to_copy.mat[48] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[49] <= ReadSwitch.io.to_copy.mat[49] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[50] <= ReadSwitch.io.to_copy.mat[50] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[51] <= ReadSwitch.io.to_copy.mat[51] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[52] <= ReadSwitch.io.to_copy.mat[52] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[53] <= ReadSwitch.io.to_copy.mat[53] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[54] <= ReadSwitch.io.to_copy.mat[54] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[55] <= ReadSwitch.io.to_copy.mat[55] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[56] <= ReadSwitch.io.to_copy.mat[56] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[57] <= ReadSwitch.io.to_copy.mat[57] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[58] <= ReadSwitch.io.to_copy.mat[58] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[59] <= ReadSwitch.io.to_copy.mat[59] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[60] <= ReadSwitch.io.to_copy.mat[60] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[61] <= ReadSwitch.io.to_copy.mat[61] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[62] <= ReadSwitch.io.to_copy.mat[62] @[top.scala 106:27]
    WriteSwitch.io.input[2].mat[63] <= ReadSwitch.io.to_copy.mat[63] @[top.scala 106:27]
    RealWriter.io.in_from_quant.mat[0] <= WriteSwitch.io.output.mat[0] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[1] <= WriteSwitch.io.output.mat[1] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[2] <= WriteSwitch.io.output.mat[2] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[3] <= WriteSwitch.io.output.mat[3] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[4] <= WriteSwitch.io.output.mat[4] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[5] <= WriteSwitch.io.output.mat[5] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[6] <= WriteSwitch.io.output.mat[6] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[7] <= WriteSwitch.io.output.mat[7] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[8] <= WriteSwitch.io.output.mat[8] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[9] <= WriteSwitch.io.output.mat[9] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[10] <= WriteSwitch.io.output.mat[10] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[11] <= WriteSwitch.io.output.mat[11] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[12] <= WriteSwitch.io.output.mat[12] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[13] <= WriteSwitch.io.output.mat[13] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[14] <= WriteSwitch.io.output.mat[14] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[15] <= WriteSwitch.io.output.mat[15] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[16] <= WriteSwitch.io.output.mat[16] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[17] <= WriteSwitch.io.output.mat[17] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[18] <= WriteSwitch.io.output.mat[18] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[19] <= WriteSwitch.io.output.mat[19] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[20] <= WriteSwitch.io.output.mat[20] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[21] <= WriteSwitch.io.output.mat[21] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[22] <= WriteSwitch.io.output.mat[22] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[23] <= WriteSwitch.io.output.mat[23] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[24] <= WriteSwitch.io.output.mat[24] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[25] <= WriteSwitch.io.output.mat[25] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[26] <= WriteSwitch.io.output.mat[26] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[27] <= WriteSwitch.io.output.mat[27] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[28] <= WriteSwitch.io.output.mat[28] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[29] <= WriteSwitch.io.output.mat[29] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[30] <= WriteSwitch.io.output.mat[30] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[31] <= WriteSwitch.io.output.mat[31] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[32] <= WriteSwitch.io.output.mat[32] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[33] <= WriteSwitch.io.output.mat[33] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[34] <= WriteSwitch.io.output.mat[34] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[35] <= WriteSwitch.io.output.mat[35] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[36] <= WriteSwitch.io.output.mat[36] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[37] <= WriteSwitch.io.output.mat[37] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[38] <= WriteSwitch.io.output.mat[38] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[39] <= WriteSwitch.io.output.mat[39] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[40] <= WriteSwitch.io.output.mat[40] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[41] <= WriteSwitch.io.output.mat[41] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[42] <= WriteSwitch.io.output.mat[42] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[43] <= WriteSwitch.io.output.mat[43] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[44] <= WriteSwitch.io.output.mat[44] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[45] <= WriteSwitch.io.output.mat[45] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[46] <= WriteSwitch.io.output.mat[46] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[47] <= WriteSwitch.io.output.mat[47] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[48] <= WriteSwitch.io.output.mat[48] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[49] <= WriteSwitch.io.output.mat[49] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[50] <= WriteSwitch.io.output.mat[50] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[51] <= WriteSwitch.io.output.mat[51] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[52] <= WriteSwitch.io.output.mat[52] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[53] <= WriteSwitch.io.output.mat[53] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[54] <= WriteSwitch.io.output.mat[54] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[55] <= WriteSwitch.io.output.mat[55] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[56] <= WriteSwitch.io.output.mat[56] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[57] <= WriteSwitch.io.output.mat[57] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[58] <= WriteSwitch.io.output.mat[58] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[59] <= WriteSwitch.io.output.mat[59] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[60] <= WriteSwitch.io.output.mat[60] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[61] <= WriteSwitch.io.output.mat[61] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[62] <= WriteSwitch.io.output.mat[62] @[top.scala 108:26]
    RealWriter.io.in_from_quant.mat[63] <= WriteSwitch.io.output.mat[63] @[top.scala 108:26]
    RealWriter.io.valid_in <= WriteSwitch.io.valid_out @[top.scala 109:21]
    RealWriter.io.flag_job <= UInt<1>("h00") @[top.scala 110:21]
    wire _WIRE_8 : {job : {big : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, a : UInt<10>}, small : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, a : UInt<10>, ano_bank_id : UInt<3>}[2]}[2], out_chan : UInt<10>} @[top.scala 111:31]
    _WIRE_8.out_chan <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[0].ano_bank_id <= UInt<3>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[0].a <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[0].cnt_ic_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[0].cnt_y_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[0].cnt_x_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[0].column_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[0].block_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[0].bank_id <= UInt<3>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[0].min_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[0].max_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[0].begin_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[1].ano_bank_id <= UInt<3>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[1].a <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[1].cnt_ic_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[1].cnt_y_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[1].cnt_x_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[1].column_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[1].block_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[1].bank_id <= UInt<3>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[1].min_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[1].max_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].small[1].begin_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].big.a <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].big.cnt_ic_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].big.cnt_y_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].big.cnt_x_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].big.column_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].big.block_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].big.bank_id <= UInt<3>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].big.min_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].big.max_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[0].big.begin_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[0].ano_bank_id <= UInt<3>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[0].a <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[0].cnt_ic_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[0].cnt_y_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[0].cnt_x_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[0].column_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[0].block_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[0].bank_id <= UInt<3>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[0].min_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[0].max_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[0].begin_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[1].ano_bank_id <= UInt<3>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[1].a <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[1].cnt_ic_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[1].cnt_y_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[1].cnt_x_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[1].column_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[1].block_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[1].bank_id <= UInt<3>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[1].min_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[1].max_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].small[1].begin_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].big.a <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].big.cnt_ic_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].big.cnt_y_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].big.cnt_x_end <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].big.column_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].big.block_size <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].big.bank_id <= UInt<3>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].big.min_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].big.max_addr <= UInt<10>("h00") @[top.scala 111:31]
    _WIRE_8.job[1].big.begin_addr <= UInt<10>("h00") @[top.scala 111:31]
    RealWriter.io.job.out_chan <= _WIRE_8.out_chan @[top.scala 111:16]
    RealWriter.io.job.job[0].small[0].ano_bank_id <= _WIRE_8.job[0].small[0].ano_bank_id @[top.scala 111:16]
    RealWriter.io.job.job[0].small[0].a <= _WIRE_8.job[0].small[0].a @[top.scala 111:16]
    RealWriter.io.job.job[0].small[0].cnt_ic_end <= _WIRE_8.job[0].small[0].cnt_ic_end @[top.scala 111:16]
    RealWriter.io.job.job[0].small[0].cnt_y_end <= _WIRE_8.job[0].small[0].cnt_y_end @[top.scala 111:16]
    RealWriter.io.job.job[0].small[0].cnt_x_end <= _WIRE_8.job[0].small[0].cnt_x_end @[top.scala 111:16]
    RealWriter.io.job.job[0].small[0].column_size <= _WIRE_8.job[0].small[0].column_size @[top.scala 111:16]
    RealWriter.io.job.job[0].small[0].block_size <= _WIRE_8.job[0].small[0].block_size @[top.scala 111:16]
    RealWriter.io.job.job[0].small[0].bank_id <= _WIRE_8.job[0].small[0].bank_id @[top.scala 111:16]
    RealWriter.io.job.job[0].small[0].min_addr <= _WIRE_8.job[0].small[0].min_addr @[top.scala 111:16]
    RealWriter.io.job.job[0].small[0].max_addr <= _WIRE_8.job[0].small[0].max_addr @[top.scala 111:16]
    RealWriter.io.job.job[0].small[0].begin_addr <= _WIRE_8.job[0].small[0].begin_addr @[top.scala 111:16]
    RealWriter.io.job.job[0].small[1].ano_bank_id <= _WIRE_8.job[0].small[1].ano_bank_id @[top.scala 111:16]
    RealWriter.io.job.job[0].small[1].a <= _WIRE_8.job[0].small[1].a @[top.scala 111:16]
    RealWriter.io.job.job[0].small[1].cnt_ic_end <= _WIRE_8.job[0].small[1].cnt_ic_end @[top.scala 111:16]
    RealWriter.io.job.job[0].small[1].cnt_y_end <= _WIRE_8.job[0].small[1].cnt_y_end @[top.scala 111:16]
    RealWriter.io.job.job[0].small[1].cnt_x_end <= _WIRE_8.job[0].small[1].cnt_x_end @[top.scala 111:16]
    RealWriter.io.job.job[0].small[1].column_size <= _WIRE_8.job[0].small[1].column_size @[top.scala 111:16]
    RealWriter.io.job.job[0].small[1].block_size <= _WIRE_8.job[0].small[1].block_size @[top.scala 111:16]
    RealWriter.io.job.job[0].small[1].bank_id <= _WIRE_8.job[0].small[1].bank_id @[top.scala 111:16]
    RealWriter.io.job.job[0].small[1].min_addr <= _WIRE_8.job[0].small[1].min_addr @[top.scala 111:16]
    RealWriter.io.job.job[0].small[1].max_addr <= _WIRE_8.job[0].small[1].max_addr @[top.scala 111:16]
    RealWriter.io.job.job[0].small[1].begin_addr <= _WIRE_8.job[0].small[1].begin_addr @[top.scala 111:16]
    RealWriter.io.job.job[0].big.a <= _WIRE_8.job[0].big.a @[top.scala 111:16]
    RealWriter.io.job.job[0].big.cnt_ic_end <= _WIRE_8.job[0].big.cnt_ic_end @[top.scala 111:16]
    RealWriter.io.job.job[0].big.cnt_y_end <= _WIRE_8.job[0].big.cnt_y_end @[top.scala 111:16]
    RealWriter.io.job.job[0].big.cnt_x_end <= _WIRE_8.job[0].big.cnt_x_end @[top.scala 111:16]
    RealWriter.io.job.job[0].big.column_size <= _WIRE_8.job[0].big.column_size @[top.scala 111:16]
    RealWriter.io.job.job[0].big.block_size <= _WIRE_8.job[0].big.block_size @[top.scala 111:16]
    RealWriter.io.job.job[0].big.bank_id <= _WIRE_8.job[0].big.bank_id @[top.scala 111:16]
    RealWriter.io.job.job[0].big.min_addr <= _WIRE_8.job[0].big.min_addr @[top.scala 111:16]
    RealWriter.io.job.job[0].big.max_addr <= _WIRE_8.job[0].big.max_addr @[top.scala 111:16]
    RealWriter.io.job.job[0].big.begin_addr <= _WIRE_8.job[0].big.begin_addr @[top.scala 111:16]
    RealWriter.io.job.job[1].small[0].ano_bank_id <= _WIRE_8.job[1].small[0].ano_bank_id @[top.scala 111:16]
    RealWriter.io.job.job[1].small[0].a <= _WIRE_8.job[1].small[0].a @[top.scala 111:16]
    RealWriter.io.job.job[1].small[0].cnt_ic_end <= _WIRE_8.job[1].small[0].cnt_ic_end @[top.scala 111:16]
    RealWriter.io.job.job[1].small[0].cnt_y_end <= _WIRE_8.job[1].small[0].cnt_y_end @[top.scala 111:16]
    RealWriter.io.job.job[1].small[0].cnt_x_end <= _WIRE_8.job[1].small[0].cnt_x_end @[top.scala 111:16]
    RealWriter.io.job.job[1].small[0].column_size <= _WIRE_8.job[1].small[0].column_size @[top.scala 111:16]
    RealWriter.io.job.job[1].small[0].block_size <= _WIRE_8.job[1].small[0].block_size @[top.scala 111:16]
    RealWriter.io.job.job[1].small[0].bank_id <= _WIRE_8.job[1].small[0].bank_id @[top.scala 111:16]
    RealWriter.io.job.job[1].small[0].min_addr <= _WIRE_8.job[1].small[0].min_addr @[top.scala 111:16]
    RealWriter.io.job.job[1].small[0].max_addr <= _WIRE_8.job[1].small[0].max_addr @[top.scala 111:16]
    RealWriter.io.job.job[1].small[0].begin_addr <= _WIRE_8.job[1].small[0].begin_addr @[top.scala 111:16]
    RealWriter.io.job.job[1].small[1].ano_bank_id <= _WIRE_8.job[1].small[1].ano_bank_id @[top.scala 111:16]
    RealWriter.io.job.job[1].small[1].a <= _WIRE_8.job[1].small[1].a @[top.scala 111:16]
    RealWriter.io.job.job[1].small[1].cnt_ic_end <= _WIRE_8.job[1].small[1].cnt_ic_end @[top.scala 111:16]
    RealWriter.io.job.job[1].small[1].cnt_y_end <= _WIRE_8.job[1].small[1].cnt_y_end @[top.scala 111:16]
    RealWriter.io.job.job[1].small[1].cnt_x_end <= _WIRE_8.job[1].small[1].cnt_x_end @[top.scala 111:16]
    RealWriter.io.job.job[1].small[1].column_size <= _WIRE_8.job[1].small[1].column_size @[top.scala 111:16]
    RealWriter.io.job.job[1].small[1].block_size <= _WIRE_8.job[1].small[1].block_size @[top.scala 111:16]
    RealWriter.io.job.job[1].small[1].bank_id <= _WIRE_8.job[1].small[1].bank_id @[top.scala 111:16]
    RealWriter.io.job.job[1].small[1].min_addr <= _WIRE_8.job[1].small[1].min_addr @[top.scala 111:16]
    RealWriter.io.job.job[1].small[1].max_addr <= _WIRE_8.job[1].small[1].max_addr @[top.scala 111:16]
    RealWriter.io.job.job[1].small[1].begin_addr <= _WIRE_8.job[1].small[1].begin_addr @[top.scala 111:16]
    RealWriter.io.job.job[1].big.a <= _WIRE_8.job[1].big.a @[top.scala 111:16]
    RealWriter.io.job.job[1].big.cnt_ic_end <= _WIRE_8.job[1].big.cnt_ic_end @[top.scala 111:16]
    RealWriter.io.job.job[1].big.cnt_y_end <= _WIRE_8.job[1].big.cnt_y_end @[top.scala 111:16]
    RealWriter.io.job.job[1].big.cnt_x_end <= _WIRE_8.job[1].big.cnt_x_end @[top.scala 111:16]
    RealWriter.io.job.job[1].big.column_size <= _WIRE_8.job[1].big.column_size @[top.scala 111:16]
    RealWriter.io.job.job[1].big.block_size <= _WIRE_8.job[1].big.block_size @[top.scala 111:16]
    RealWriter.io.job.job[1].big.bank_id <= _WIRE_8.job[1].big.bank_id @[top.scala 111:16]
    RealWriter.io.job.job[1].big.min_addr <= _WIRE_8.job[1].big.min_addr @[top.scala 111:16]
    RealWriter.io.job.job[1].big.max_addr <= _WIRE_8.job[1].big.max_addr @[top.scala 111:16]
    RealWriter.io.job.job[1].big.begin_addr <= _WIRE_8.job[1].big.begin_addr @[top.scala 111:16]
    RAMGroup.io.wr_addr.addrs[0].bank_id <= RealWriter.io.to_banks.addrs[0].bank_id @[top.scala 117:18]
    RAMGroup.io.wr_addr.addrs[0].addr <= RealWriter.io.to_banks.addrs[0].addr @[top.scala 117:18]
    RAMGroup.io.wr_addr.addrs[1].bank_id <= RealWriter.io.to_banks.addrs[1].bank_id @[top.scala 117:18]
    RAMGroup.io.wr_addr.addrs[1].addr <= RealWriter.io.to_banks.addrs[1].addr @[top.scala 117:18]
    RAMGroup.io.wr_addr.addrs[2].bank_id <= RealWriter.io.to_banks.addrs[2].bank_id @[top.scala 117:18]
    RAMGroup.io.wr_addr.addrs[2].addr <= RealWriter.io.to_banks.addrs[2].addr @[top.scala 117:18]
    RAMGroup.io.to_bigbank.data[0] <= RealWriter.io.to_bigbank.data[0] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[1] <= RealWriter.io.to_bigbank.data[1] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[2] <= RealWriter.io.to_bigbank.data[2] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[3] <= RealWriter.io.to_bigbank.data[3] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[4] <= RealWriter.io.to_bigbank.data[4] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[5] <= RealWriter.io.to_bigbank.data[5] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[6] <= RealWriter.io.to_bigbank.data[6] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[7] <= RealWriter.io.to_bigbank.data[7] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[8] <= RealWriter.io.to_bigbank.data[8] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[9] <= RealWriter.io.to_bigbank.data[9] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[10] <= RealWriter.io.to_bigbank.data[10] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[11] <= RealWriter.io.to_bigbank.data[11] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[12] <= RealWriter.io.to_bigbank.data[12] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[13] <= RealWriter.io.to_bigbank.data[13] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[14] <= RealWriter.io.to_bigbank.data[14] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[15] <= RealWriter.io.to_bigbank.data[15] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[16] <= RealWriter.io.to_bigbank.data[16] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[17] <= RealWriter.io.to_bigbank.data[17] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[18] <= RealWriter.io.to_bigbank.data[18] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[19] <= RealWriter.io.to_bigbank.data[19] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[20] <= RealWriter.io.to_bigbank.data[20] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[21] <= RealWriter.io.to_bigbank.data[21] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[22] <= RealWriter.io.to_bigbank.data[22] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[23] <= RealWriter.io.to_bigbank.data[23] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[24] <= RealWriter.io.to_bigbank.data[24] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[25] <= RealWriter.io.to_bigbank.data[25] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[26] <= RealWriter.io.to_bigbank.data[26] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[27] <= RealWriter.io.to_bigbank.data[27] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[28] <= RealWriter.io.to_bigbank.data[28] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[29] <= RealWriter.io.to_bigbank.data[29] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[30] <= RealWriter.io.to_bigbank.data[30] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[31] <= RealWriter.io.to_bigbank.data[31] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[32] <= RealWriter.io.to_bigbank.data[32] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[33] <= RealWriter.io.to_bigbank.data[33] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[34] <= RealWriter.io.to_bigbank.data[34] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[35] <= RealWriter.io.to_bigbank.data[35] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[36] <= RealWriter.io.to_bigbank.data[36] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[37] <= RealWriter.io.to_bigbank.data[37] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[38] <= RealWriter.io.to_bigbank.data[38] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[39] <= RealWriter.io.to_bigbank.data[39] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[40] <= RealWriter.io.to_bigbank.data[40] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[41] <= RealWriter.io.to_bigbank.data[41] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[42] <= RealWriter.io.to_bigbank.data[42] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[43] <= RealWriter.io.to_bigbank.data[43] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[44] <= RealWriter.io.to_bigbank.data[44] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[45] <= RealWriter.io.to_bigbank.data[45] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[46] <= RealWriter.io.to_bigbank.data[46] @[top.scala 118:21]
    RAMGroup.io.to_bigbank.data[47] <= RealWriter.io.to_bigbank.data[47] @[top.scala 118:21]
    RAMGroup.io.to_smallbank[0].data[0] <= RealWriter.io.to_smallbank[0].data[0] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[0].data[1] <= RealWriter.io.to_smallbank[0].data[1] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[0].data[2] <= RealWriter.io.to_smallbank[0].data[2] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[0].data[3] <= RealWriter.io.to_smallbank[0].data[3] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[0].data[4] <= RealWriter.io.to_smallbank[0].data[4] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[0].data[5] <= RealWriter.io.to_smallbank[0].data[5] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[0].data[6] <= RealWriter.io.to_smallbank[0].data[6] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[0].data[7] <= RealWriter.io.to_smallbank[0].data[7] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[1].data[0] <= RealWriter.io.to_smallbank[1].data[0] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[1].data[1] <= RealWriter.io.to_smallbank[1].data[1] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[1].data[2] <= RealWriter.io.to_smallbank[1].data[2] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[1].data[3] <= RealWriter.io.to_smallbank[1].data[3] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[1].data[4] <= RealWriter.io.to_smallbank[1].data[4] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[1].data[5] <= RealWriter.io.to_smallbank[1].data[5] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[1].data[6] <= RealWriter.io.to_smallbank[1].data[6] @[top.scala 119:23]
    RAMGroup.io.to_smallbank[1].data[7] <= RealWriter.io.to_smallbank[1].data[7] @[top.scala 119:23]
    RAMGroup.io.wr_valid_in <= RealWriter.io.valid_out @[top.scala 120:22]
    wire _counter_WIRE : {ccnt : UInt<10>, cend : UInt<10>} @[top.scala 134:39]
    _counter_WIRE.cend <= UInt<10>("h00") @[top.scala 134:39]
    _counter_WIRE.ccnt <= UInt<10>("h00") @[top.scala 134:39]
    reg counter : {ccnt : UInt<10>, cend : UInt<10>}, clock with : (reset => (reset, _counter_WIRE)) @[top.scala 134:26]
    reg state : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[top.scala 135:24]
    node _T = eq(UInt<1>("h00"), state) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      GraphReader.io.flag_job <= UInt<1>("h01") @[para.scala 36:26]
      GraphReader.io.job_type <= UInt<1>("h00") @[para.scala 37:26]
      wire ret : {big : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_ups_end : UInt<1>}, small : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, ano_bank_id : UInt<3>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_invalid_end : UInt<10>, cnt_ups_end : UInt<1>}[4]} @[wrjob.scala 61:23]
      ret.big.begin_addr <= UInt<1>("h00") @[wrjob.scala 62:28]
      ret.big.min_addr <= UInt<1>("h00") @[wrjob.scala 63:26]
      ret.big.max_addr <= UInt<10>("h0383") @[wrjob.scala 64:26]
      ret.big.bank_id <= UInt<1>("h00") @[wrjob.scala 65:25]
      ret.big.block_size <= UInt<3>("h04") @[wrjob.scala 66:28]
      ret.big.column_size <= UInt<4>("h08") @[wrjob.scala 67:29]
      ret.big.cnt_x_end <= UInt<2>("h03") @[wrjob.scala 68:27]
      ret.big.cnt_y_end <= UInt<1>("h01") @[wrjob.scala 69:27]
      ret.big.cnt_ic_end <= UInt<2>("h03") @[wrjob.scala 70:28]
      ret.big.cnt_loop_end <= UInt<5>("h01f") @[wrjob.scala 71:30]
      ret.big.cnt_ups_end <= UInt<1>("h00") @[wrjob.scala 72:29]
      ret.big.begin_loop <= UInt<5>("h010") @[wrjob.scala 73:28]
      ret.small[0].begin_addr <= UInt<1>("h00") @[wrjob.scala 75:37]
      ret.small[0].min_addr <= UInt<1>("h00") @[wrjob.scala 76:35]
      ret.small[0].max_addr <= UInt<9>("h01c1") @[wrjob.scala 77:35]
      ret.small[0].block_size <= UInt<3>("h04") @[wrjob.scala 78:37]
      ret.small[0].column_size <= UInt<4>("h08") @[wrjob.scala 79:38]
      ret.small[0].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 80:36]
      ret.small[0].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 81:36]
      ret.small[0].cnt_ic_end <= UInt<2>("h03") @[wrjob.scala 82:37]
      ret.small[0].cnt_loop_end <= UInt<5>("h01f") @[wrjob.scala 83:39]
      ret.small[0].cnt_invalid_end <= UInt<9>("h0100") @[wrjob.scala 84:42]
      ret.small[0].cnt_ups_end <= UInt<1>("h00") @[wrjob.scala 85:38]
      ret.small[0].begin_loop <= UInt<5>("h010") @[wrjob.scala 86:37]
      ret.small[0].bank_id <= UInt<1>("h01") @[wrjob.scala 88:38]
      ret.small[0].ano_bank_id <= UInt<2>("h03") @[wrjob.scala 89:42]
      ret.small[1].begin_addr <= UInt<1>("h00") @[wrjob.scala 75:37]
      ret.small[1].min_addr <= UInt<1>("h00") @[wrjob.scala 76:35]
      ret.small[1].max_addr <= UInt<9>("h01c1") @[wrjob.scala 77:35]
      ret.small[1].block_size <= UInt<3>("h04") @[wrjob.scala 78:37]
      ret.small[1].column_size <= UInt<4>("h08") @[wrjob.scala 79:38]
      ret.small[1].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 80:36]
      ret.small[1].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 81:36]
      ret.small[1].cnt_ic_end <= UInt<2>("h03") @[wrjob.scala 82:37]
      ret.small[1].cnt_loop_end <= UInt<5>("h01f") @[wrjob.scala 83:39]
      ret.small[1].cnt_invalid_end <= UInt<1>("h00") @[wrjob.scala 84:42]
      ret.small[1].cnt_ups_end <= UInt<1>("h00") @[wrjob.scala 85:38]
      ret.small[1].begin_loop <= UInt<5>("h010") @[wrjob.scala 86:37]
      ret.small[1].bank_id <= UInt<1>("h00") @[wrjob.scala 91:38]
      ret.small[1].ano_bank_id <= UInt<2>("h02") @[wrjob.scala 92:42]
      ret.small[2].begin_addr <= UInt<1>("h00") @[wrjob.scala 75:37]
      ret.small[2].min_addr <= UInt<1>("h00") @[wrjob.scala 76:35]
      ret.small[2].max_addr <= UInt<9>("h01c1") @[wrjob.scala 77:35]
      ret.small[2].block_size <= UInt<3>("h04") @[wrjob.scala 78:37]
      ret.small[2].column_size <= UInt<4>("h08") @[wrjob.scala 79:38]
      ret.small[2].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 80:36]
      ret.small[2].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 81:36]
      ret.small[2].cnt_ic_end <= UInt<2>("h03") @[wrjob.scala 82:37]
      ret.small[2].cnt_loop_end <= UInt<5>("h01f") @[wrjob.scala 83:39]
      ret.small[2].cnt_invalid_end <= UInt<1>("h00") @[wrjob.scala 84:42]
      ret.small[2].cnt_ups_end <= UInt<1>("h00") @[wrjob.scala 85:38]
      ret.small[2].begin_loop <= UInt<5>("h010") @[wrjob.scala 86:37]
      ret.small[2].bank_id <= UInt<1>("h01") @[wrjob.scala 91:38]
      ret.small[2].ano_bank_id <= UInt<2>("h03") @[wrjob.scala 92:42]
      ret.small[3].begin_addr <= UInt<1>("h00") @[wrjob.scala 75:37]
      ret.small[3].min_addr <= UInt<1>("h00") @[wrjob.scala 76:35]
      ret.small[3].max_addr <= UInt<9>("h01c1") @[wrjob.scala 77:35]
      ret.small[3].block_size <= UInt<3>("h04") @[wrjob.scala 78:37]
      ret.small[3].column_size <= UInt<4>("h08") @[wrjob.scala 79:38]
      ret.small[3].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 80:36]
      ret.small[3].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 81:36]
      ret.small[3].cnt_ic_end <= UInt<2>("h03") @[wrjob.scala 82:37]
      ret.small[3].cnt_loop_end <= UInt<5>("h01f") @[wrjob.scala 83:39]
      ret.small[3].cnt_invalid_end <= UInt<1>("h00") @[wrjob.scala 84:42]
      ret.small[3].cnt_ups_end <= UInt<1>("h00") @[wrjob.scala 85:38]
      ret.small[3].begin_loop <= UInt<5>("h010") @[wrjob.scala 86:37]
      ret.small[3].bank_id <= UInt<2>("h02") @[wrjob.scala 91:38]
      ret.small[3].ano_bank_id <= UInt<1>("h00") @[wrjob.scala 92:42]
      GraphReader.io.job.small[0].cnt_ups_end <= ret.small[0].cnt_ups_end @[para.scala 39:21]
      GraphReader.io.job.small[0].cnt_invalid_end <= ret.small[0].cnt_invalid_end @[para.scala 39:21]
      GraphReader.io.job.small[0].begin_loop <= ret.small[0].begin_loop @[para.scala 39:21]
      GraphReader.io.job.small[0].cnt_loop_end <= ret.small[0].cnt_loop_end @[para.scala 39:21]
      GraphReader.io.job.small[0].ano_bank_id <= ret.small[0].ano_bank_id @[para.scala 39:21]
      GraphReader.io.job.small[0].cnt_ic_end <= ret.small[0].cnt_ic_end @[para.scala 39:21]
      GraphReader.io.job.small[0].cnt_y_end <= ret.small[0].cnt_y_end @[para.scala 39:21]
      GraphReader.io.job.small[0].cnt_x_end <= ret.small[0].cnt_x_end @[para.scala 39:21]
      GraphReader.io.job.small[0].column_size <= ret.small[0].column_size @[para.scala 39:21]
      GraphReader.io.job.small[0].block_size <= ret.small[0].block_size @[para.scala 39:21]
      GraphReader.io.job.small[0].bank_id <= ret.small[0].bank_id @[para.scala 39:21]
      GraphReader.io.job.small[0].min_addr <= ret.small[0].min_addr @[para.scala 39:21]
      GraphReader.io.job.small[0].max_addr <= ret.small[0].max_addr @[para.scala 39:21]
      GraphReader.io.job.small[0].begin_addr <= ret.small[0].begin_addr @[para.scala 39:21]
      GraphReader.io.job.small[1].cnt_ups_end <= ret.small[1].cnt_ups_end @[para.scala 39:21]
      GraphReader.io.job.small[1].cnt_invalid_end <= ret.small[1].cnt_invalid_end @[para.scala 39:21]
      GraphReader.io.job.small[1].begin_loop <= ret.small[1].begin_loop @[para.scala 39:21]
      GraphReader.io.job.small[1].cnt_loop_end <= ret.small[1].cnt_loop_end @[para.scala 39:21]
      GraphReader.io.job.small[1].ano_bank_id <= ret.small[1].ano_bank_id @[para.scala 39:21]
      GraphReader.io.job.small[1].cnt_ic_end <= ret.small[1].cnt_ic_end @[para.scala 39:21]
      GraphReader.io.job.small[1].cnt_y_end <= ret.small[1].cnt_y_end @[para.scala 39:21]
      GraphReader.io.job.small[1].cnt_x_end <= ret.small[1].cnt_x_end @[para.scala 39:21]
      GraphReader.io.job.small[1].column_size <= ret.small[1].column_size @[para.scala 39:21]
      GraphReader.io.job.small[1].block_size <= ret.small[1].block_size @[para.scala 39:21]
      GraphReader.io.job.small[1].bank_id <= ret.small[1].bank_id @[para.scala 39:21]
      GraphReader.io.job.small[1].min_addr <= ret.small[1].min_addr @[para.scala 39:21]
      GraphReader.io.job.small[1].max_addr <= ret.small[1].max_addr @[para.scala 39:21]
      GraphReader.io.job.small[1].begin_addr <= ret.small[1].begin_addr @[para.scala 39:21]
      GraphReader.io.job.small[2].cnt_ups_end <= ret.small[2].cnt_ups_end @[para.scala 39:21]
      GraphReader.io.job.small[2].cnt_invalid_end <= ret.small[2].cnt_invalid_end @[para.scala 39:21]
      GraphReader.io.job.small[2].begin_loop <= ret.small[2].begin_loop @[para.scala 39:21]
      GraphReader.io.job.small[2].cnt_loop_end <= ret.small[2].cnt_loop_end @[para.scala 39:21]
      GraphReader.io.job.small[2].ano_bank_id <= ret.small[2].ano_bank_id @[para.scala 39:21]
      GraphReader.io.job.small[2].cnt_ic_end <= ret.small[2].cnt_ic_end @[para.scala 39:21]
      GraphReader.io.job.small[2].cnt_y_end <= ret.small[2].cnt_y_end @[para.scala 39:21]
      GraphReader.io.job.small[2].cnt_x_end <= ret.small[2].cnt_x_end @[para.scala 39:21]
      GraphReader.io.job.small[2].column_size <= ret.small[2].column_size @[para.scala 39:21]
      GraphReader.io.job.small[2].block_size <= ret.small[2].block_size @[para.scala 39:21]
      GraphReader.io.job.small[2].bank_id <= ret.small[2].bank_id @[para.scala 39:21]
      GraphReader.io.job.small[2].min_addr <= ret.small[2].min_addr @[para.scala 39:21]
      GraphReader.io.job.small[2].max_addr <= ret.small[2].max_addr @[para.scala 39:21]
      GraphReader.io.job.small[2].begin_addr <= ret.small[2].begin_addr @[para.scala 39:21]
      GraphReader.io.job.small[3].cnt_ups_end <= ret.small[3].cnt_ups_end @[para.scala 39:21]
      GraphReader.io.job.small[3].cnt_invalid_end <= ret.small[3].cnt_invalid_end @[para.scala 39:21]
      GraphReader.io.job.small[3].begin_loop <= ret.small[3].begin_loop @[para.scala 39:21]
      GraphReader.io.job.small[3].cnt_loop_end <= ret.small[3].cnt_loop_end @[para.scala 39:21]
      GraphReader.io.job.small[3].ano_bank_id <= ret.small[3].ano_bank_id @[para.scala 39:21]
      GraphReader.io.job.small[3].cnt_ic_end <= ret.small[3].cnt_ic_end @[para.scala 39:21]
      GraphReader.io.job.small[3].cnt_y_end <= ret.small[3].cnt_y_end @[para.scala 39:21]
      GraphReader.io.job.small[3].cnt_x_end <= ret.small[3].cnt_x_end @[para.scala 39:21]
      GraphReader.io.job.small[3].column_size <= ret.small[3].column_size @[para.scala 39:21]
      GraphReader.io.job.small[3].block_size <= ret.small[3].block_size @[para.scala 39:21]
      GraphReader.io.job.small[3].bank_id <= ret.small[3].bank_id @[para.scala 39:21]
      GraphReader.io.job.small[3].min_addr <= ret.small[3].min_addr @[para.scala 39:21]
      GraphReader.io.job.small[3].max_addr <= ret.small[3].max_addr @[para.scala 39:21]
      GraphReader.io.job.small[3].begin_addr <= ret.small[3].begin_addr @[para.scala 39:21]
      GraphReader.io.job.big.cnt_ups_end <= ret.big.cnt_ups_end @[para.scala 39:21]
      GraphReader.io.job.big.begin_loop <= ret.big.begin_loop @[para.scala 39:21]
      GraphReader.io.job.big.cnt_loop_end <= ret.big.cnt_loop_end @[para.scala 39:21]
      GraphReader.io.job.big.cnt_ic_end <= ret.big.cnt_ic_end @[para.scala 39:21]
      GraphReader.io.job.big.cnt_y_end <= ret.big.cnt_y_end @[para.scala 39:21]
      GraphReader.io.job.big.cnt_x_end <= ret.big.cnt_x_end @[para.scala 39:21]
      GraphReader.io.job.big.column_size <= ret.big.column_size @[para.scala 39:21]
      GraphReader.io.job.big.block_size <= ret.big.block_size @[para.scala 39:21]
      GraphReader.io.job.big.bank_id <= ret.big.bank_id @[para.scala 39:21]
      GraphReader.io.job.big.min_addr <= ret.big.min_addr @[para.scala 39:21]
      GraphReader.io.job.big.max_addr <= ret.big.max_addr @[para.scala 39:21]
      GraphReader.io.job.big.begin_addr <= ret.big.begin_addr @[para.scala 39:21]
      GraphReader_1.io.flag_job <= UInt<1>("h01") @[para.scala 55:26]
      GraphReader_1.io.job_type <= UInt<1>("h00") @[para.scala 56:26]
      wire ret_1 : {big : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_ups_end : UInt<1>}, small : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, ano_bank_id : UInt<3>, cnt_loop_end : UInt<10>, begin_loop : UInt<10>, cnt_invalid_end : UInt<10>, cnt_ups_end : UInt<1>}[4]} @[wrjob.scala 61:23]
      ret_1.big.begin_addr <= UInt<1>("h00") @[wrjob.scala 62:28]
      ret_1.big.min_addr <= UInt<1>("h00") @[wrjob.scala 63:26]
      ret_1.big.max_addr <= UInt<10>("h0383") @[wrjob.scala 64:26]
      ret_1.big.bank_id <= UInt<1>("h01") @[wrjob.scala 65:25]
      ret_1.big.block_size <= UInt<3>("h04") @[wrjob.scala 66:28]
      ret_1.big.column_size <= UInt<4>("h08") @[wrjob.scala 67:29]
      ret_1.big.cnt_x_end <= UInt<2>("h03") @[wrjob.scala 68:27]
      ret_1.big.cnt_y_end <= UInt<1>("h01") @[wrjob.scala 69:27]
      ret_1.big.cnt_ic_end <= UInt<2>("h03") @[wrjob.scala 70:28]
      ret_1.big.cnt_loop_end <= UInt<5>("h01f") @[wrjob.scala 71:30]
      ret_1.big.cnt_ups_end <= UInt<1>("h00") @[wrjob.scala 72:29]
      ret_1.big.begin_loop <= UInt<1>("h00") @[wrjob.scala 73:28]
      ret_1.small[0].begin_addr <= UInt<1>("h00") @[wrjob.scala 75:37]
      ret_1.small[0].min_addr <= UInt<1>("h00") @[wrjob.scala 76:35]
      ret_1.small[0].max_addr <= UInt<9>("h01c1") @[wrjob.scala 77:35]
      ret_1.small[0].block_size <= UInt<3>("h04") @[wrjob.scala 78:37]
      ret_1.small[0].column_size <= UInt<4>("h08") @[wrjob.scala 79:38]
      ret_1.small[0].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 80:36]
      ret_1.small[0].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 81:36]
      ret_1.small[0].cnt_ic_end <= UInt<2>("h03") @[wrjob.scala 82:37]
      ret_1.small[0].cnt_loop_end <= UInt<5>("h01f") @[wrjob.scala 83:39]
      ret_1.small[0].cnt_invalid_end <= UInt<9>("h0100") @[wrjob.scala 84:42]
      ret_1.small[0].cnt_ups_end <= UInt<1>("h00") @[wrjob.scala 85:38]
      ret_1.small[0].begin_loop <= UInt<1>("h00") @[wrjob.scala 86:37]
      ret_1.small[0].bank_id <= UInt<3>("h05") @[wrjob.scala 88:38]
      ret_1.small[0].ano_bank_id <= UInt<3>("h07") @[wrjob.scala 89:42]
      ret_1.small[1].begin_addr <= UInt<1>("h00") @[wrjob.scala 75:37]
      ret_1.small[1].min_addr <= UInt<1>("h00") @[wrjob.scala 76:35]
      ret_1.small[1].max_addr <= UInt<9>("h01c1") @[wrjob.scala 77:35]
      ret_1.small[1].block_size <= UInt<3>("h04") @[wrjob.scala 78:37]
      ret_1.small[1].column_size <= UInt<4>("h08") @[wrjob.scala 79:38]
      ret_1.small[1].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 80:36]
      ret_1.small[1].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 81:36]
      ret_1.small[1].cnt_ic_end <= UInt<2>("h03") @[wrjob.scala 82:37]
      ret_1.small[1].cnt_loop_end <= UInt<5>("h01f") @[wrjob.scala 83:39]
      ret_1.small[1].cnt_invalid_end <= UInt<1>("h00") @[wrjob.scala 84:42]
      ret_1.small[1].cnt_ups_end <= UInt<1>("h00") @[wrjob.scala 85:38]
      ret_1.small[1].begin_loop <= UInt<1>("h00") @[wrjob.scala 86:37]
      ret_1.small[1].bank_id <= UInt<3>("h04") @[wrjob.scala 91:38]
      ret_1.small[1].ano_bank_id <= UInt<3>("h06") @[wrjob.scala 92:42]
      ret_1.small[2].begin_addr <= UInt<1>("h00") @[wrjob.scala 75:37]
      ret_1.small[2].min_addr <= UInt<1>("h00") @[wrjob.scala 76:35]
      ret_1.small[2].max_addr <= UInt<9>("h01c1") @[wrjob.scala 77:35]
      ret_1.small[2].block_size <= UInt<3>("h04") @[wrjob.scala 78:37]
      ret_1.small[2].column_size <= UInt<4>("h08") @[wrjob.scala 79:38]
      ret_1.small[2].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 80:36]
      ret_1.small[2].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 81:36]
      ret_1.small[2].cnt_ic_end <= UInt<2>("h03") @[wrjob.scala 82:37]
      ret_1.small[2].cnt_loop_end <= UInt<5>("h01f") @[wrjob.scala 83:39]
      ret_1.small[2].cnt_invalid_end <= UInt<1>("h00") @[wrjob.scala 84:42]
      ret_1.small[2].cnt_ups_end <= UInt<1>("h00") @[wrjob.scala 85:38]
      ret_1.small[2].begin_loop <= UInt<1>("h00") @[wrjob.scala 86:37]
      ret_1.small[2].bank_id <= UInt<3>("h05") @[wrjob.scala 91:38]
      ret_1.small[2].ano_bank_id <= UInt<3>("h07") @[wrjob.scala 92:42]
      ret_1.small[3].begin_addr <= UInt<1>("h00") @[wrjob.scala 75:37]
      ret_1.small[3].min_addr <= UInt<1>("h00") @[wrjob.scala 76:35]
      ret_1.small[3].max_addr <= UInt<9>("h01c1") @[wrjob.scala 77:35]
      ret_1.small[3].block_size <= UInt<3>("h04") @[wrjob.scala 78:37]
      ret_1.small[3].column_size <= UInt<4>("h08") @[wrjob.scala 79:38]
      ret_1.small[3].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 80:36]
      ret_1.small[3].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 81:36]
      ret_1.small[3].cnt_ic_end <= UInt<2>("h03") @[wrjob.scala 82:37]
      ret_1.small[3].cnt_loop_end <= UInt<5>("h01f") @[wrjob.scala 83:39]
      ret_1.small[3].cnt_invalid_end <= UInt<1>("h00") @[wrjob.scala 84:42]
      ret_1.small[3].cnt_ups_end <= UInt<1>("h00") @[wrjob.scala 85:38]
      ret_1.small[3].begin_loop <= UInt<1>("h00") @[wrjob.scala 86:37]
      ret_1.small[3].bank_id <= UInt<3>("h06") @[wrjob.scala 91:38]
      ret_1.small[3].ano_bank_id <= UInt<3>("h04") @[wrjob.scala 92:42]
      GraphReader_1.io.job.small[0].cnt_ups_end <= ret_1.small[0].cnt_ups_end @[para.scala 58:21]
      GraphReader_1.io.job.small[0].cnt_invalid_end <= ret_1.small[0].cnt_invalid_end @[para.scala 58:21]
      GraphReader_1.io.job.small[0].begin_loop <= ret_1.small[0].begin_loop @[para.scala 58:21]
      GraphReader_1.io.job.small[0].cnt_loop_end <= ret_1.small[0].cnt_loop_end @[para.scala 58:21]
      GraphReader_1.io.job.small[0].ano_bank_id <= ret_1.small[0].ano_bank_id @[para.scala 58:21]
      GraphReader_1.io.job.small[0].cnt_ic_end <= ret_1.small[0].cnt_ic_end @[para.scala 58:21]
      GraphReader_1.io.job.small[0].cnt_y_end <= ret_1.small[0].cnt_y_end @[para.scala 58:21]
      GraphReader_1.io.job.small[0].cnt_x_end <= ret_1.small[0].cnt_x_end @[para.scala 58:21]
      GraphReader_1.io.job.small[0].column_size <= ret_1.small[0].column_size @[para.scala 58:21]
      GraphReader_1.io.job.small[0].block_size <= ret_1.small[0].block_size @[para.scala 58:21]
      GraphReader_1.io.job.small[0].bank_id <= ret_1.small[0].bank_id @[para.scala 58:21]
      GraphReader_1.io.job.small[0].min_addr <= ret_1.small[0].min_addr @[para.scala 58:21]
      GraphReader_1.io.job.small[0].max_addr <= ret_1.small[0].max_addr @[para.scala 58:21]
      GraphReader_1.io.job.small[0].begin_addr <= ret_1.small[0].begin_addr @[para.scala 58:21]
      GraphReader_1.io.job.small[1].cnt_ups_end <= ret_1.small[1].cnt_ups_end @[para.scala 58:21]
      GraphReader_1.io.job.small[1].cnt_invalid_end <= ret_1.small[1].cnt_invalid_end @[para.scala 58:21]
      GraphReader_1.io.job.small[1].begin_loop <= ret_1.small[1].begin_loop @[para.scala 58:21]
      GraphReader_1.io.job.small[1].cnt_loop_end <= ret_1.small[1].cnt_loop_end @[para.scala 58:21]
      GraphReader_1.io.job.small[1].ano_bank_id <= ret_1.small[1].ano_bank_id @[para.scala 58:21]
      GraphReader_1.io.job.small[1].cnt_ic_end <= ret_1.small[1].cnt_ic_end @[para.scala 58:21]
      GraphReader_1.io.job.small[1].cnt_y_end <= ret_1.small[1].cnt_y_end @[para.scala 58:21]
      GraphReader_1.io.job.small[1].cnt_x_end <= ret_1.small[1].cnt_x_end @[para.scala 58:21]
      GraphReader_1.io.job.small[1].column_size <= ret_1.small[1].column_size @[para.scala 58:21]
      GraphReader_1.io.job.small[1].block_size <= ret_1.small[1].block_size @[para.scala 58:21]
      GraphReader_1.io.job.small[1].bank_id <= ret_1.small[1].bank_id @[para.scala 58:21]
      GraphReader_1.io.job.small[1].min_addr <= ret_1.small[1].min_addr @[para.scala 58:21]
      GraphReader_1.io.job.small[1].max_addr <= ret_1.small[1].max_addr @[para.scala 58:21]
      GraphReader_1.io.job.small[1].begin_addr <= ret_1.small[1].begin_addr @[para.scala 58:21]
      GraphReader_1.io.job.small[2].cnt_ups_end <= ret_1.small[2].cnt_ups_end @[para.scala 58:21]
      GraphReader_1.io.job.small[2].cnt_invalid_end <= ret_1.small[2].cnt_invalid_end @[para.scala 58:21]
      GraphReader_1.io.job.small[2].begin_loop <= ret_1.small[2].begin_loop @[para.scala 58:21]
      GraphReader_1.io.job.small[2].cnt_loop_end <= ret_1.small[2].cnt_loop_end @[para.scala 58:21]
      GraphReader_1.io.job.small[2].ano_bank_id <= ret_1.small[2].ano_bank_id @[para.scala 58:21]
      GraphReader_1.io.job.small[2].cnt_ic_end <= ret_1.small[2].cnt_ic_end @[para.scala 58:21]
      GraphReader_1.io.job.small[2].cnt_y_end <= ret_1.small[2].cnt_y_end @[para.scala 58:21]
      GraphReader_1.io.job.small[2].cnt_x_end <= ret_1.small[2].cnt_x_end @[para.scala 58:21]
      GraphReader_1.io.job.small[2].column_size <= ret_1.small[2].column_size @[para.scala 58:21]
      GraphReader_1.io.job.small[2].block_size <= ret_1.small[2].block_size @[para.scala 58:21]
      GraphReader_1.io.job.small[2].bank_id <= ret_1.small[2].bank_id @[para.scala 58:21]
      GraphReader_1.io.job.small[2].min_addr <= ret_1.small[2].min_addr @[para.scala 58:21]
      GraphReader_1.io.job.small[2].max_addr <= ret_1.small[2].max_addr @[para.scala 58:21]
      GraphReader_1.io.job.small[2].begin_addr <= ret_1.small[2].begin_addr @[para.scala 58:21]
      GraphReader_1.io.job.small[3].cnt_ups_end <= ret_1.small[3].cnt_ups_end @[para.scala 58:21]
      GraphReader_1.io.job.small[3].cnt_invalid_end <= ret_1.small[3].cnt_invalid_end @[para.scala 58:21]
      GraphReader_1.io.job.small[3].begin_loop <= ret_1.small[3].begin_loop @[para.scala 58:21]
      GraphReader_1.io.job.small[3].cnt_loop_end <= ret_1.small[3].cnt_loop_end @[para.scala 58:21]
      GraphReader_1.io.job.small[3].ano_bank_id <= ret_1.small[3].ano_bank_id @[para.scala 58:21]
      GraphReader_1.io.job.small[3].cnt_ic_end <= ret_1.small[3].cnt_ic_end @[para.scala 58:21]
      GraphReader_1.io.job.small[3].cnt_y_end <= ret_1.small[3].cnt_y_end @[para.scala 58:21]
      GraphReader_1.io.job.small[3].cnt_x_end <= ret_1.small[3].cnt_x_end @[para.scala 58:21]
      GraphReader_1.io.job.small[3].column_size <= ret_1.small[3].column_size @[para.scala 58:21]
      GraphReader_1.io.job.small[3].block_size <= ret_1.small[3].block_size @[para.scala 58:21]
      GraphReader_1.io.job.small[3].bank_id <= ret_1.small[3].bank_id @[para.scala 58:21]
      GraphReader_1.io.job.small[3].min_addr <= ret_1.small[3].min_addr @[para.scala 58:21]
      GraphReader_1.io.job.small[3].max_addr <= ret_1.small[3].max_addr @[para.scala 58:21]
      GraphReader_1.io.job.small[3].begin_addr <= ret_1.small[3].begin_addr @[para.scala 58:21]
      GraphReader_1.io.job.big.cnt_ups_end <= ret_1.big.cnt_ups_end @[para.scala 58:21]
      GraphReader_1.io.job.big.begin_loop <= ret_1.big.begin_loop @[para.scala 58:21]
      GraphReader_1.io.job.big.cnt_loop_end <= ret_1.big.cnt_loop_end @[para.scala 58:21]
      GraphReader_1.io.job.big.cnt_ic_end <= ret_1.big.cnt_ic_end @[para.scala 58:21]
      GraphReader_1.io.job.big.cnt_y_end <= ret_1.big.cnt_y_end @[para.scala 58:21]
      GraphReader_1.io.job.big.cnt_x_end <= ret_1.big.cnt_x_end @[para.scala 58:21]
      GraphReader_1.io.job.big.column_size <= ret_1.big.column_size @[para.scala 58:21]
      GraphReader_1.io.job.big.block_size <= ret_1.big.block_size @[para.scala 58:21]
      GraphReader_1.io.job.big.bank_id <= ret_1.big.bank_id @[para.scala 58:21]
      GraphReader_1.io.job.big.min_addr <= ret_1.big.min_addr @[para.scala 58:21]
      GraphReader_1.io.job.big.max_addr <= ret_1.big.max_addr @[para.scala 58:21]
      GraphReader_1.io.job.big.begin_addr <= ret_1.big.begin_addr @[para.scala 58:21]
      WeightReader.io.flag_job <= UInt<1>("h01") @[para.scala 71:21]
      WeightReader.io.begin_addr <= UInt<1>("h00") @[para.scala 73:23]
      WeightReader.io.addr_end <= UInt<6>("h03f") @[para.scala 74:21]
      PackReadData.io.flag_job <= UInt<1>("h01") @[para.scala 79:21]
      wire ret_2 : {cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, in_chan : UInt<10>} @[wrjob.scala 143:23]
      ret_2.cnt_x_end <= UInt<2>("h03") @[wrjob.scala 144:23]
      ret_2.cnt_y_end <= UInt<2>("h03") @[wrjob.scala 145:23]
      ret_2.in_chan <= UInt<6>("h03f") @[wrjob.scala 146:21]
      PackReadData.io.job.in_chan <= ret_2.in_chan @[para.scala 80:16]
      PackReadData.io.job.cnt_y_end <= ret_2.cnt_y_end @[para.scala 80:16]
      PackReadData.io.job.cnt_x_end <= ret_2.cnt_x_end @[para.scala 80:16]
      Accumu.io.flag_job <= UInt<1>("h01") @[para.scala 91:21]
      Accumu.io.csum <= UInt<4>("h0f") @[para.scala 92:17]
      Accumu.io.is_in_use <= UInt<1>("h01") @[para.scala 93:22]
      Accumu.io.bias_begin_addr <= UInt<1>("h00") @[para.scala 95:28]
      Accumu.io.bias_end_addr <= UInt<4>("h0f") @[para.scala 96:26]
      Quant.io.flag_job <= UInt<1>("h01") @[para.scala 101:20]
      Quant.io.quant_in.in_q <= UInt<5>("h010") @[para.scala 102:25]
      Quant.io.quant_in.out_q <= UInt<5>("h010") @[para.scala 103:26]
      RealWriter.io.flag_job <= UInt<1>("h01") @[para.scala 108:21]
      wire ret_3 : {big : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, a : UInt<10>}, small : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, a : UInt<10>, ano_bank_id : UInt<3>}[2]} @[wrjob.scala 106:23]
      ret_3.big.begin_addr <= UInt<7>("h040") @[wrjob.scala 107:28]
      ret_3.big.min_addr <= UInt<1>("h00") @[wrjob.scala 108:26]
      ret_3.big.max_addr <= UInt<10>("h0383") @[wrjob.scala 109:26]
      ret_3.big.bank_id <= UInt<1>("h00") @[wrjob.scala 110:25]
      ret_3.big.block_size <= UInt<5>("h010") @[wrjob.scala 111:28]
      ret_3.big.column_size <= UInt<6>("h020") @[wrjob.scala 112:29]
      ret_3.big.cnt_x_end <= UInt<2>("h03") @[wrjob.scala 113:27]
      ret_3.big.cnt_y_end <= UInt<1>("h01") @[wrjob.scala 114:27]
      ret_3.big.cnt_ic_end <= UInt<4>("h0f") @[wrjob.scala 115:28]
      ret_3.big.a <= UInt<1>("h01") @[wrjob.scala 116:19]
      ret_3.small[0].begin_addr <= UInt<6>("h020") @[wrjob.scala 118:37]
      ret_3.small[0].min_addr <= UInt<1>("h00") @[wrjob.scala 119:35]
      ret_3.small[0].max_addr <= UInt<9>("h01c1") @[wrjob.scala 120:35]
      ret_3.small[0].block_size <= UInt<5>("h010") @[wrjob.scala 121:37]
      ret_3.small[0].column_size <= UInt<6>("h020") @[wrjob.scala 122:38]
      ret_3.small[0].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 123:36]
      ret_3.small[0].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 124:36]
      ret_3.small[0].cnt_ic_end <= UInt<4>("h0f") @[wrjob.scala 125:37]
      ret_3.small[0].a <= UInt<1>("h01") @[wrjob.scala 126:28]
      ret_3.small[0].bank_id <= UInt<1>("h00") @[wrjob.scala 127:34]
      ret_3.small[0].ano_bank_id <= UInt<2>("h02") @[wrjob.scala 128:38]
      ret_3.small[1].begin_addr <= UInt<6>("h020") @[wrjob.scala 118:37]
      ret_3.small[1].min_addr <= UInt<1>("h00") @[wrjob.scala 119:35]
      ret_3.small[1].max_addr <= UInt<9>("h01c1") @[wrjob.scala 120:35]
      ret_3.small[1].block_size <= UInt<5>("h010") @[wrjob.scala 121:37]
      ret_3.small[1].column_size <= UInt<6>("h020") @[wrjob.scala 122:38]
      ret_3.small[1].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 123:36]
      ret_3.small[1].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 124:36]
      ret_3.small[1].cnt_ic_end <= UInt<4>("h0f") @[wrjob.scala 125:37]
      ret_3.small[1].a <= UInt<1>("h01") @[wrjob.scala 126:28]
      ret_3.small[1].bank_id <= UInt<1>("h01") @[wrjob.scala 127:34]
      ret_3.small[1].ano_bank_id <= UInt<2>("h03") @[wrjob.scala 128:38]
      RealWriter.io.job.job[0].small[0].ano_bank_id <= ret_3.small[0].ano_bank_id @[para.scala 114:23]
      RealWriter.io.job.job[0].small[0].a <= ret_3.small[0].a @[para.scala 114:23]
      RealWriter.io.job.job[0].small[0].cnt_ic_end <= ret_3.small[0].cnt_ic_end @[para.scala 114:23]
      RealWriter.io.job.job[0].small[0].cnt_y_end <= ret_3.small[0].cnt_y_end @[para.scala 114:23]
      RealWriter.io.job.job[0].small[0].cnt_x_end <= ret_3.small[0].cnt_x_end @[para.scala 114:23]
      RealWriter.io.job.job[0].small[0].column_size <= ret_3.small[0].column_size @[para.scala 114:23]
      RealWriter.io.job.job[0].small[0].block_size <= ret_3.small[0].block_size @[para.scala 114:23]
      RealWriter.io.job.job[0].small[0].bank_id <= ret_3.small[0].bank_id @[para.scala 114:23]
      RealWriter.io.job.job[0].small[0].min_addr <= ret_3.small[0].min_addr @[para.scala 114:23]
      RealWriter.io.job.job[0].small[0].max_addr <= ret_3.small[0].max_addr @[para.scala 114:23]
      RealWriter.io.job.job[0].small[0].begin_addr <= ret_3.small[0].begin_addr @[para.scala 114:23]
      RealWriter.io.job.job[0].small[1].ano_bank_id <= ret_3.small[1].ano_bank_id @[para.scala 114:23]
      RealWriter.io.job.job[0].small[1].a <= ret_3.small[1].a @[para.scala 114:23]
      RealWriter.io.job.job[0].small[1].cnt_ic_end <= ret_3.small[1].cnt_ic_end @[para.scala 114:23]
      RealWriter.io.job.job[0].small[1].cnt_y_end <= ret_3.small[1].cnt_y_end @[para.scala 114:23]
      RealWriter.io.job.job[0].small[1].cnt_x_end <= ret_3.small[1].cnt_x_end @[para.scala 114:23]
      RealWriter.io.job.job[0].small[1].column_size <= ret_3.small[1].column_size @[para.scala 114:23]
      RealWriter.io.job.job[0].small[1].block_size <= ret_3.small[1].block_size @[para.scala 114:23]
      RealWriter.io.job.job[0].small[1].bank_id <= ret_3.small[1].bank_id @[para.scala 114:23]
      RealWriter.io.job.job[0].small[1].min_addr <= ret_3.small[1].min_addr @[para.scala 114:23]
      RealWriter.io.job.job[0].small[1].max_addr <= ret_3.small[1].max_addr @[para.scala 114:23]
      RealWriter.io.job.job[0].small[1].begin_addr <= ret_3.small[1].begin_addr @[para.scala 114:23]
      RealWriter.io.job.job[0].big.a <= ret_3.big.a @[para.scala 114:23]
      RealWriter.io.job.job[0].big.cnt_ic_end <= ret_3.big.cnt_ic_end @[para.scala 114:23]
      RealWriter.io.job.job[0].big.cnt_y_end <= ret_3.big.cnt_y_end @[para.scala 114:23]
      RealWriter.io.job.job[0].big.cnt_x_end <= ret_3.big.cnt_x_end @[para.scala 114:23]
      RealWriter.io.job.job[0].big.column_size <= ret_3.big.column_size @[para.scala 114:23]
      RealWriter.io.job.job[0].big.block_size <= ret_3.big.block_size @[para.scala 114:23]
      RealWriter.io.job.job[0].big.bank_id <= ret_3.big.bank_id @[para.scala 114:23]
      RealWriter.io.job.job[0].big.min_addr <= ret_3.big.min_addr @[para.scala 114:23]
      RealWriter.io.job.job[0].big.max_addr <= ret_3.big.max_addr @[para.scala 114:23]
      RealWriter.io.job.job[0].big.begin_addr <= ret_3.big.begin_addr @[para.scala 114:23]
      wire ret_4 : {big : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, a : UInt<10>}, small : {begin_addr : UInt<10>, max_addr : UInt<10>, min_addr : UInt<10>, bank_id : UInt<3>, block_size : UInt<10>, column_size : UInt<10>, cnt_x_end : UInt<10>, cnt_y_end : UInt<10>, cnt_ic_end : UInt<10>, a : UInt<10>, ano_bank_id : UInt<3>}[2]} @[wrjob.scala 106:23]
      ret_4.big.begin_addr <= UInt<7>("h040") @[wrjob.scala 107:28]
      ret_4.big.min_addr <= UInt<1>("h00") @[wrjob.scala 108:26]
      ret_4.big.max_addr <= UInt<10>("h0383") @[wrjob.scala 109:26]
      ret_4.big.bank_id <= UInt<1>("h01") @[wrjob.scala 110:25]
      ret_4.big.block_size <= UInt<5>("h010") @[wrjob.scala 111:28]
      ret_4.big.column_size <= UInt<6>("h020") @[wrjob.scala 112:29]
      ret_4.big.cnt_x_end <= UInt<2>("h03") @[wrjob.scala 113:27]
      ret_4.big.cnt_y_end <= UInt<1>("h01") @[wrjob.scala 114:27]
      ret_4.big.cnt_ic_end <= UInt<4>("h0f") @[wrjob.scala 115:28]
      ret_4.big.a <= UInt<1>("h01") @[wrjob.scala 116:19]
      ret_4.small[0].begin_addr <= UInt<6>("h020") @[wrjob.scala 118:37]
      ret_4.small[0].min_addr <= UInt<1>("h00") @[wrjob.scala 119:35]
      ret_4.small[0].max_addr <= UInt<9>("h01c1") @[wrjob.scala 120:35]
      ret_4.small[0].block_size <= UInt<5>("h010") @[wrjob.scala 121:37]
      ret_4.small[0].column_size <= UInt<6>("h020") @[wrjob.scala 122:38]
      ret_4.small[0].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 123:36]
      ret_4.small[0].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 124:36]
      ret_4.small[0].cnt_ic_end <= UInt<4>("h0f") @[wrjob.scala 125:37]
      ret_4.small[0].a <= UInt<1>("h01") @[wrjob.scala 126:28]
      ret_4.small[0].bank_id <= UInt<3>("h04") @[wrjob.scala 127:34]
      ret_4.small[0].ano_bank_id <= UInt<3>("h06") @[wrjob.scala 128:38]
      ret_4.small[1].begin_addr <= UInt<6>("h020") @[wrjob.scala 118:37]
      ret_4.small[1].min_addr <= UInt<1>("h00") @[wrjob.scala 119:35]
      ret_4.small[1].max_addr <= UInt<9>("h01c1") @[wrjob.scala 120:35]
      ret_4.small[1].block_size <= UInt<5>("h010") @[wrjob.scala 121:37]
      ret_4.small[1].column_size <= UInt<6>("h020") @[wrjob.scala 122:38]
      ret_4.small[1].cnt_x_end <= UInt<1>("h01") @[wrjob.scala 123:36]
      ret_4.small[1].cnt_y_end <= UInt<1>("h01") @[wrjob.scala 124:36]
      ret_4.small[1].cnt_ic_end <= UInt<4>("h0f") @[wrjob.scala 125:37]
      ret_4.small[1].a <= UInt<1>("h01") @[wrjob.scala 126:28]
      ret_4.small[1].bank_id <= UInt<3>("h05") @[wrjob.scala 127:34]
      ret_4.small[1].ano_bank_id <= UInt<3>("h07") @[wrjob.scala 128:38]
      RealWriter.io.job.job[1].small[0].ano_bank_id <= ret_4.small[0].ano_bank_id @[para.scala 121:23]
      RealWriter.io.job.job[1].small[0].a <= ret_4.small[0].a @[para.scala 121:23]
      RealWriter.io.job.job[1].small[0].cnt_ic_end <= ret_4.small[0].cnt_ic_end @[para.scala 121:23]
      RealWriter.io.job.job[1].small[0].cnt_y_end <= ret_4.small[0].cnt_y_end @[para.scala 121:23]
      RealWriter.io.job.job[1].small[0].cnt_x_end <= ret_4.small[0].cnt_x_end @[para.scala 121:23]
      RealWriter.io.job.job[1].small[0].column_size <= ret_4.small[0].column_size @[para.scala 121:23]
      RealWriter.io.job.job[1].small[0].block_size <= ret_4.small[0].block_size @[para.scala 121:23]
      RealWriter.io.job.job[1].small[0].bank_id <= ret_4.small[0].bank_id @[para.scala 121:23]
      RealWriter.io.job.job[1].small[0].min_addr <= ret_4.small[0].min_addr @[para.scala 121:23]
      RealWriter.io.job.job[1].small[0].max_addr <= ret_4.small[0].max_addr @[para.scala 121:23]
      RealWriter.io.job.job[1].small[0].begin_addr <= ret_4.small[0].begin_addr @[para.scala 121:23]
      RealWriter.io.job.job[1].small[1].ano_bank_id <= ret_4.small[1].ano_bank_id @[para.scala 121:23]
      RealWriter.io.job.job[1].small[1].a <= ret_4.small[1].a @[para.scala 121:23]
      RealWriter.io.job.job[1].small[1].cnt_ic_end <= ret_4.small[1].cnt_ic_end @[para.scala 121:23]
      RealWriter.io.job.job[1].small[1].cnt_y_end <= ret_4.small[1].cnt_y_end @[para.scala 121:23]
      RealWriter.io.job.job[1].small[1].cnt_x_end <= ret_4.small[1].cnt_x_end @[para.scala 121:23]
      RealWriter.io.job.job[1].small[1].column_size <= ret_4.small[1].column_size @[para.scala 121:23]
      RealWriter.io.job.job[1].small[1].block_size <= ret_4.small[1].block_size @[para.scala 121:23]
      RealWriter.io.job.job[1].small[1].bank_id <= ret_4.small[1].bank_id @[para.scala 121:23]
      RealWriter.io.job.job[1].small[1].min_addr <= ret_4.small[1].min_addr @[para.scala 121:23]
      RealWriter.io.job.job[1].small[1].max_addr <= ret_4.small[1].max_addr @[para.scala 121:23]
      RealWriter.io.job.job[1].small[1].begin_addr <= ret_4.small[1].begin_addr @[para.scala 121:23]
      RealWriter.io.job.job[1].big.a <= ret_4.big.a @[para.scala 121:23]
      RealWriter.io.job.job[1].big.cnt_ic_end <= ret_4.big.cnt_ic_end @[para.scala 121:23]
      RealWriter.io.job.job[1].big.cnt_y_end <= ret_4.big.cnt_y_end @[para.scala 121:23]
      RealWriter.io.job.job[1].big.cnt_x_end <= ret_4.big.cnt_x_end @[para.scala 121:23]
      RealWriter.io.job.job[1].big.column_size <= ret_4.big.column_size @[para.scala 121:23]
      RealWriter.io.job.job[1].big.block_size <= ret_4.big.block_size @[para.scala 121:23]
      RealWriter.io.job.job[1].big.bank_id <= ret_4.big.bank_id @[para.scala 121:23]
      RealWriter.io.job.job[1].big.min_addr <= ret_4.big.min_addr @[para.scala 121:23]
      RealWriter.io.job.job[1].big.max_addr <= ret_4.big.max_addr @[para.scala 121:23]
      RealWriter.io.job.job[1].big.begin_addr <= ret_4.big.begin_addr @[para.scala 121:23]
      RealWriter.io.job.out_chan <= UInt<5>("h010") @[para.scala 128:25]
      ReadSwitch.io.flag_job <= UInt<1>("h01") @[para.scala 85:21]
      ReadSwitch.io.job <= UInt<1>("h01") @[para.scala 86:16]
      Calc8x8.io.flag <= UInt<2>("h02") @[top.scala 147:26]
      counter.cend <= UInt<6>("h03f") @[utils.scala 22:14]
      counter.ccnt <= UInt<1>("h00") @[utils.scala 23:14]
      state <= UInt<1>("h01") @[top.scala 149:19]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<1>("h01"), state) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        when RealWriter.io.valid_out : @[top.scala 152:35]
          wire nxt : UInt<1> @[utils.scala 16:23]
          node _nxt_T = eq(counter.ccnt, counter.cend) @[utils.scala 17:20]
          nxt <= _nxt_T @[utils.scala 17:13]
          node _counter_ccnt_T = add(counter.ccnt, UInt<1>("h01")) @[utils.scala 18:35]
          node _counter_ccnt_T_1 = tail(_counter_ccnt_T, 1) @[utils.scala 18:35]
          node _counter_ccnt_T_2 = mux(nxt, UInt<1>("h00"), _counter_ccnt_T_1) @[utils.scala 18:20]
          counter.ccnt <= _counter_ccnt_T_2 @[utils.scala 18:14]
          when nxt : @[top.scala 153:36]
            state <= UInt<2>("h02") @[top.scala 155:27]
            skip @[top.scala 153:36]
          skip @[top.scala 152:35]
        GraphReader.io.valid_in <= UInt<1>("h01") @[top.scala 158:30]
        GraphReader_1.io.valid_in <= UInt<1>("h01") @[top.scala 159:30]
        WeightReader.io.valid_in <= UInt<1>("h01") @[top.scala 160:34]
        Calc8x8.io.flag <= UInt<2>("h02") @[top.scala 161:26]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<2>("h02"), state) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          state <= UInt<2>("h02") @[top.scala 164:19]
          skip @[Conditional.scala 39:67]
    
